define(['dart_sdk', 'packages/flutter/src/painting/edge_insets.dart', 'packages/flutter/src/painting/alignment.dart', 'packages/flutter/src/rendering/layer.dart', 'packages/flutter/src/widgets/widget_span.dart', 'packages/flutter/src/widgets/icon_theme.dart', 'packages/flutter/src/widgets/icon_theme_data.dart', 'packages/flutter/src/foundation/debug.dart', 'packages/flutter/src/painting/colors.dart', 'packages/flutter/src/material/icons.dart', 'packages/flutter/src/foundation/_platform_web.dart', 'packages/flutter/src/widgets/icon.dart', 'packages/flutter/src/widgets/icon_data.dart', 'packages/flutter/src/animation/animation_controller.dart', 'packages/flutter/src/animation/listener_helpers.dart', 'packages/flutter/src/foundation/key.dart', 'packages/flutter/src/painting/borders.dart', 'packages/flutter/src/animation/curves.dart', 'packages/flutter/src/rendering/flex.dart', 'packages/flutter/src/widgets/safe_area.dart', 'packages/flutter/src/painting/rounded_rectangle_border.dart', 'packages/flutter/src/painting/border_radius.dart', 'packages/flutter/src/widgets/dismissible.dart', 'packages/flutter/src/foundation/object.dart', 'packages/flutter/src/painting/decoration.dart', 'packages/flutter/src/painting/strut_style.dart', 'packages/flutter/src/gestures/binding.dart', 'packages/flutter/src/semantics/semantics_service.dart', 'packages/flutter/src/gestures/events.dart', 'packages/flutter/src/material/colors.dart', 'packages/flutter/src/painting/box_decoration.dart', 'packages/flutter/src/rendering/proxy_box.dart', 'packages/flutter/src/painting/geometry.dart', 'packages/flutter/src/rendering/shifted_box.dart', 'packages/flutter/src/foundation/print.dart', 'packages/flutter/src/painting/circle_border.dart', 'packages/flutter/src/painting/stadium_border.dart', 'packages/flutter/src/widgets/layout_builder.dart', 'packages/vector_math/vector_math_64.dart', 'packages/flutter/src/painting/box_border.dart', 'packages/flutter/src/widgets/implicit_animations.dart', 'packages/flutter/src/material/constants.dart', 'packages/flutter/src/material/material_state.dart', 'packages/flutter/src/gestures/recognizer.dart', 'packages/flutter/src/gestures/drag_details.dart', 'packages/flutter/src/widgets/single_child_scroll_view.dart', 'packages/flutter/src/painting/basic_types.dart', 'packages/flutter/src/painting/matrix_utils.dart', 'packages/flutter/src/rendering/paragraph.dart', 'packages/flutter/src/painting/_network_image_web.dart', 'packages/flutter/src/rendering/custom_paint.dart', 'packages/flutter/src/material/tab_controller.dart', 'packages/flutter/src/widgets/preferred_size.dart', 'packages/flutter/src/material/tab_indicator.dart', 'packages/flutter/src/widgets/page_view.dart', 'packages/flutter/src/painting/placeholder_span.dart', 'packages/flutter/src/widgets/dual_transition_builder.dart', 'packages/flutter/src/animation/tween_sequence.dart', 'packages/flutter/src/cupertino/route.dart', 'packages/flutter/src/foundation/collections.dart', 'packages/flutter/src/foundation/change_notifier.dart', 'packages/flutter/src/material/input_border.dart', 'packages/flutter/src/semantics/semantics_event.dart', 'packages/flutter/src/services/system_sound.dart', 'packages/flutter/src/services/haptic_feedback.dart', 'packages/flutter/src/gestures/tap.dart', 'packages/flutter/src/foundation/observer_list.dart', 'packages/flutter/src/widgets/bottom_navigation_bar_item.dart', 'packages/flutter/src/painting/notched_shapes.dart', 'packages/flutter/src/material/typography.dart', 'packages/flutter/src/material/floating_action_button_theme.dart', 'packages/flutter/src/material/bottom_sheet_theme.dart', 'packages/flutter/src/cupertino/text_theme.dart', 'packages/flutter/src/widgets/draggable_scrollable_sheet.dart', 'packages/flutter/src/rendering/custom_layout.dart', 'packages/flutter/src/widgets/primary_scroll_controller.dart', 'packages/flutter/src/scheduler/ticker.dart', 'packages/flutter/src/rendering/sliver.dart', 'packages/flutter/src/semantics/semantics.dart', 'packages/flutter/src/widgets/drag_target.dart', 'packages/flutter/src/gestures/velocity_tracker.dart', 'packages/flutter/src/foundation/synchronous_future.dart', 'packages/flutter/src/widgets/navigation_toolbar.dart', 'packages/flutter/src/rendering/stack.dart', 'packages/flutter/src/services/system_chrome.dart', 'packages/flutter/src/widgets/annotated_region.dart', 'packages/flutter/src/rendering/sliver_persistent_header.dart', 'packages/flutter/src/widgets/sliver_persistent_header.dart'], (function load__packages__flutter__src__material__icon_button_dart(dart_sdk, packages__flutter__src__painting__edge_insets$46dart, packages__flutter__src__painting__alignment$46dart, packages__flutter__src__rendering__layer$46dart, packages__flutter__src__widgets__widget_span$46dart, packages__flutter__src__widgets__icon_theme$46dart, packages__flutter__src__widgets__icon_theme_data$46dart, packages__flutter__src__foundation__debug$46dart, packages__flutter__src__painting__colors$46dart, packages__flutter__src__material__icons$46dart, packages__flutter__src__foundation___platform_web$46dart, packages__flutter__src__widgets__icon$46dart, packages__flutter__src__widgets__icon_data$46dart, packages__flutter__src__animation__animation_controller$46dart, packages__flutter__src__animation__listener_helpers$46dart, packages__flutter__src__foundation__key$46dart, packages__flutter__src__painting__borders$46dart, packages__flutter__src__animation__curves$46dart, packages__flutter__src__rendering__flex$46dart, packages__flutter__src__widgets__safe_area$46dart, packages__flutter__src__painting__rounded_rectangle_border$46dart, packages__flutter__src__painting__border_radius$46dart, packages__flutter__src__widgets__dismissible$46dart, packages__flutter__src__foundation__object$46dart, packages__flutter__src__painting__decoration$46dart, packages__flutter__src__painting__strut_style$46dart, packages__flutter__src__gestures__binding$46dart, packages__flutter__src__semantics__semantics_service$46dart, packages__flutter__src__gestures__events$46dart, packages__flutter__src__material__colors$46dart, packages__flutter__src__painting__box_decoration$46dart, packages__flutter__src__rendering__proxy_box$46dart, packages__flutter__src__painting__geometry$46dart, packages__flutter__src__rendering__shifted_box$46dart, packages__flutter__src__foundation__print$46dart, packages__flutter__src__painting__circle_border$46dart, packages__flutter__src__painting__stadium_border$46dart, packages__flutter__src__widgets__layout_builder$46dart, packages__vector_math__vector_math_64$46dart, packages__flutter__src__painting__box_border$46dart, packages__flutter__src__widgets__implicit_animations$46dart, packages__flutter__src__material__constants$46dart, packages__flutter__src__material__material_state$46dart, packages__flutter__src__gestures__recognizer$46dart, packages__flutter__src__gestures__drag_details$46dart, packages__flutter__src__widgets__single_child_scroll_view$46dart, packages__flutter__src__painting__basic_types$46dart, packages__flutter__src__painting__matrix_utils$46dart, packages__flutter__src__rendering__paragraph$46dart, packages__flutter__src__painting___network_image_web$46dart, packages__flutter__src__rendering__custom_paint$46dart, packages__flutter__src__material__tab_controller$46dart, packages__flutter__src__widgets__preferred_size$46dart, packages__flutter__src__material__tab_indicator$46dart, packages__flutter__src__widgets__page_view$46dart, packages__flutter__src__painting__placeholder_span$46dart, packages__flutter__src__widgets__dual_transition_builder$46dart, packages__flutter__src__animation__tween_sequence$46dart, packages__flutter__src__cupertino__route$46dart, packages__flutter__src__foundation__collections$46dart, packages__flutter__src__foundation__change_notifier$46dart, packages__flutter__src__material__input_border$46dart, packages__flutter__src__semantics__semantics_event$46dart, packages__flutter__src__services__system_sound$46dart, packages__flutter__src__services__haptic_feedback$46dart, packages__flutter__src__gestures__tap$46dart, packages__flutter__src__foundation__observer_list$46dart, packages__flutter__src__widgets__bottom_navigation_bar_item$46dart, packages__flutter__src__painting__notched_shapes$46dart, packages__flutter__src__material__typography$46dart, packages__flutter__src__material__floating_action_button_theme$46dart, packages__flutter__src__material__bottom_sheet_theme$46dart, packages__flutter__src__cupertino__text_theme$46dart, packages__flutter__src__widgets__draggable_scrollable_sheet$46dart, packages__flutter__src__rendering__custom_layout$46dart, packages__flutter__src__widgets__primary_scroll_controller$46dart, packages__flutter__src__scheduler__ticker$46dart, packages__flutter__src__rendering__sliver$46dart, packages__flutter__src__semantics__semantics$46dart, packages__flutter__src__widgets__drag_target$46dart, packages__flutter__src__gestures__velocity_tracker$46dart, packages__flutter__src__foundation__synchronous_future$46dart, packages__flutter__src__widgets__navigation_toolbar$46dart, packages__flutter__src__rendering__stack$46dart, packages__flutter__src__services__system_chrome$46dart, packages__flutter__src__widgets__annotated_region$46dart, packages__flutter__src__rendering__sliver_persistent_header$46dart, packages__flutter__src__widgets__sliver_persistent_header$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const math = dart_sdk.math;
  const ui = dart_sdk.ui;
  const _interceptors = dart_sdk._interceptors;
  const async = dart_sdk.async;
  const _js_helper = dart_sdk._js_helper;
  const collection = dart_sdk.collection;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const edge_insets = packages__flutter__src__painting__edge_insets$46dart.src__painting__edge_insets;
  const alignment = packages__flutter__src__painting__alignment$46dart.src__painting__alignment;
  const mouse_cursor = packages__flutter__src__rendering__layer$46dart.src__rendering__mouse_cursor;
  const box = packages__flutter__src__rendering__layer$46dart.src__rendering__box;
  const binding = packages__flutter__src__rendering__layer$46dart.src__rendering__binding;
  const object = packages__flutter__src__rendering__layer$46dart.src__rendering__object;
  const basic = packages__flutter__src__widgets__widget_span$46dart.src__widgets__basic;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const focus_manager = packages__flutter__src__widgets__widget_span$46dart.src__widgets__focus_manager;
  const navigator = packages__flutter__src__widgets__widget_span$46dart.src__widgets__navigator;
  const debug = packages__flutter__src__widgets__widget_span$46dart.src__widgets__debug;
  const media_query = packages__flutter__src__widgets__widget_span$46dart.src__widgets__media_query;
  const text$ = packages__flutter__src__widgets__widget_span$46dart.src__widgets__text;
  const container = packages__flutter__src__widgets__widget_span$46dart.src__widgets__container;
  const transitions = packages__flutter__src__widgets__widget_span$46dart.src__widgets__transitions;
  const overlay$ = packages__flutter__src__widgets__widget_span$46dart.src__widgets__overlay;
  const gesture_detector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__gesture_detector;
  const ticker_provider = packages__flutter__src__widgets__widget_span$46dart.src__widgets__ticker_provider;
  const heroes = packages__flutter__src__widgets__widget_span$46dart.src__widgets__heroes;
  const inherited_theme = packages__flutter__src__widgets__widget_span$46dart.src__widgets__inherited_theme;
  const routes = packages__flutter__src__widgets__widget_span$46dart.src__widgets__routes;
  const focus_scope = packages__flutter__src__widgets__widget_span$46dart.src__widgets__focus_scope;
  const scroll_position_with_single_context = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scroll_position_with_single_context;
  const scroll_controller = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scroll_controller;
  const scroll_physics = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scroll_physics;
  const scroll_notification = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scroll_notification;
  const notification_listener = packages__flutter__src__widgets__widget_span$46dart.src__widgets__notification_listener;
  const pages = packages__flutter__src__widgets__widget_span$46dart.src__widgets__pages;
  const actions = packages__flutter__src__widgets__widget_span$46dart.src__widgets__actions;
  const automatic_keep_alive = packages__flutter__src__widgets__widget_span$46dart.src__widgets__automatic_keep_alive;
  const modal_barrier = packages__flutter__src__widgets__widget_span$46dart.src__widgets__modal_barrier;
  const localizations = packages__flutter__src__widgets__widget_span$46dart.src__widgets__localizations;
  const scrollable = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scrollable;
  const scroll_position = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scroll_position;
  const icon_theme = packages__flutter__src__widgets__icon_theme$46dart.src__widgets__icon_theme;
  const icon_theme_data = packages__flutter__src__widgets__icon_theme_data$46dart.src__widgets__icon_theme_data;
  const diagnostics = packages__flutter__src__foundation__debug$46dart.src__foundation__diagnostics;
  const assertions = packages__flutter__src__foundation__debug$46dart.src__foundation__assertions;
  const debug$ = packages__flutter__src__foundation__debug$46dart.src__foundation__debug;
  const colors = packages__flutter__src__painting__colors$46dart.src__painting__colors;
  const icons = packages__flutter__src__material__icons$46dart.src__material__icons;
  const platform$ = packages__flutter__src__foundation___platform_web$46dart.src__foundation__platform;
  const icon = packages__flutter__src__widgets__icon$46dart.src__widgets__icon;
  const icon_data = packages__flutter__src__widgets__icon_data$46dart.src__widgets__icon_data;
  const animation_controller = packages__flutter__src__animation__animation_controller$46dart.src__animation__animation_controller;
  const animation = packages__flutter__src__animation__listener_helpers$46dart.src__animation__animation;
  const animations = packages__flutter__src__animation__listener_helpers$46dart.src__animation__animations;
  const tween = packages__flutter__src__animation__listener_helpers$46dart.src__animation__tween;
  const key = packages__flutter__src__foundation__key$46dart.src__foundation__key;
  const borders = packages__flutter__src__painting__borders$46dart.src__painting__borders;
  const curves = packages__flutter__src__animation__curves$46dart.src__animation__curves;
  const flex = packages__flutter__src__rendering__flex$46dart.src__rendering__flex;
  const safe_area = packages__flutter__src__widgets__safe_area$46dart.src__widgets__safe_area;
  const rounded_rectangle_border = packages__flutter__src__painting__rounded_rectangle_border$46dart.src__painting__rounded_rectangle_border;
  const border_radius = packages__flutter__src__painting__border_radius$46dart.src__painting__border_radius;
  const dismissible = packages__flutter__src__widgets__dismissible$46dart.src__widgets__dismissible;
  const object$ = packages__flutter__src__foundation__object$46dart.src__foundation__object;
  const decoration = packages__flutter__src__painting__decoration$46dart.src__painting__decoration;
  const text_style = packages__flutter__src__painting__strut_style$46dart.src__painting__text_style;
  const binding$ = packages__flutter__src__gestures__binding$46dart.src__gestures__binding;
  const semantics_service = packages__flutter__src__semantics__semantics_service$46dart.src__semantics__semantics_service;
  const events = packages__flutter__src__gestures__events$46dart.src__gestures__events;
  const colors$ = packages__flutter__src__material__colors$46dart.src__material__colors;
  const box_decoration = packages__flutter__src__painting__box_decoration$46dart.src__painting__box_decoration;
  const proxy_box = packages__flutter__src__rendering__proxy_box$46dart.src__rendering__proxy_box;
  const geometry = packages__flutter__src__painting__geometry$46dart.src__painting__geometry;
  const shifted_box = packages__flutter__src__rendering__shifted_box$46dart.src__rendering__shifted_box;
  const print = packages__flutter__src__foundation__print$46dart.src__foundation__print;
  const circle_border = packages__flutter__src__painting__circle_border$46dart.src__painting__circle_border;
  const stadium_border = packages__flutter__src__painting__stadium_border$46dart.src__painting__stadium_border;
  const layout_builder = packages__flutter__src__widgets__layout_builder$46dart.src__widgets__layout_builder;
  const vector_math_64 = packages__vector_math__vector_math_64$46dart.vector_math_64;
  const box_border = packages__flutter__src__painting__box_border$46dart.src__painting__box_border;
  const implicit_animations = packages__flutter__src__widgets__implicit_animations$46dart.src__widgets__implicit_animations;
  const constants = packages__flutter__src__material__constants$46dart.src__material__constants;
  const material_state = packages__flutter__src__material__material_state$46dart.src__material__material_state;
  const recognizer = packages__flutter__src__gestures__recognizer$46dart.src__gestures__recognizer;
  const drag_details = packages__flutter__src__gestures__drag_details$46dart.src__gestures__drag_details;
  const single_child_scroll_view = packages__flutter__src__widgets__single_child_scroll_view$46dart.src__widgets__single_child_scroll_view;
  const basic_types = packages__flutter__src__painting__basic_types$46dart.src__painting__basic_types;
  const matrix_utils = packages__flutter__src__painting__matrix_utils$46dart.src__painting__matrix_utils;
  const paragraph = packages__flutter__src__rendering__paragraph$46dart.src__rendering__paragraph;
  const image_provider = packages__flutter__src__painting___network_image_web$46dart.src__painting__image_provider;
  const custom_paint = packages__flutter__src__rendering__custom_paint$46dart.src__rendering__custom_paint;
  const tab_controller = packages__flutter__src__material__tab_controller$46dart.src__material__tab_controller;
  const preferred_size = packages__flutter__src__widgets__preferred_size$46dart.src__widgets__preferred_size;
  const tab_indicator = packages__flutter__src__material__tab_indicator$46dart.src__material__tab_indicator;
  const page_view = packages__flutter__src__widgets__page_view$46dart.src__widgets__page_view;
  const text_painter = packages__flutter__src__painting__placeholder_span$46dart.src__painting__text_painter;
  const dual_transition_builder = packages__flutter__src__widgets__dual_transition_builder$46dart.src__widgets__dual_transition_builder;
  const tween_sequence = packages__flutter__src__animation__tween_sequence$46dart.src__animation__tween_sequence;
  const route$ = packages__flutter__src__cupertino__route$46dart.src__cupertino__route;
  const collections = packages__flutter__src__foundation__collections$46dart.src__foundation__collections;
  const change_notifier = packages__flutter__src__foundation__change_notifier$46dart.src__foundation__change_notifier;
  const input_border = packages__flutter__src__material__input_border$46dart.src__material__input_border;
  const semantics_event = packages__flutter__src__semantics__semantics_event$46dart.src__semantics__semantics_event;
  const system_sound = packages__flutter__src__services__system_sound$46dart.src__services__system_sound;
  const haptic_feedback = packages__flutter__src__services__haptic_feedback$46dart.src__services__haptic_feedback;
  const tap = packages__flutter__src__gestures__tap$46dart.src__gestures__tap;
  const observer_list = packages__flutter__src__foundation__observer_list$46dart.src__foundation__observer_list;
  const bottom_navigation_bar_item = packages__flutter__src__widgets__bottom_navigation_bar_item$46dart.src__widgets__bottom_navigation_bar_item;
  const notched_shapes = packages__flutter__src__painting__notched_shapes$46dart.src__painting__notched_shapes;
  const typography$ = packages__flutter__src__material__typography$46dart.src__material__typography;
  const text_theme = packages__flutter__src__material__typography$46dart.src__material__text_theme;
  const floating_action_button_theme = packages__flutter__src__material__floating_action_button_theme$46dart.src__material__floating_action_button_theme;
  const bottom_sheet_theme = packages__flutter__src__material__bottom_sheet_theme$46dart.src__material__bottom_sheet_theme;
  const theme = packages__flutter__src__cupertino__text_theme$46dart.src__cupertino__theme;
  const colors$0 = packages__flutter__src__cupertino__text_theme$46dart.src__cupertino__colors;
  const text_theme$ = packages__flutter__src__cupertino__text_theme$46dart.src__cupertino__text_theme;
  const draggable_scrollable_sheet = packages__flutter__src__widgets__draggable_scrollable_sheet$46dart.src__widgets__draggable_scrollable_sheet;
  const custom_layout = packages__flutter__src__rendering__custom_layout$46dart.src__rendering__custom_layout;
  const primary_scroll_controller = packages__flutter__src__widgets__primary_scroll_controller$46dart.src__widgets__primary_scroll_controller;
  const ticker = packages__flutter__src__scheduler__ticker$46dart.src__scheduler__ticker;
  const viewport$ = packages__flutter__src__rendering__sliver$46dart.src__rendering__viewport;
  const semantics = packages__flutter__src__semantics__semantics$46dart.src__semantics__semantics;
  const drag_target = packages__flutter__src__widgets__drag_target$46dart.src__widgets__drag_target;
  const velocity_tracker = packages__flutter__src__gestures__velocity_tracker$46dart.src__gestures__velocity_tracker;
  const synchronous_future = packages__flutter__src__foundation__synchronous_future$46dart.src__foundation__synchronous_future;
  const navigation_toolbar = packages__flutter__src__widgets__navigation_toolbar$46dart.src__widgets__navigation_toolbar;
  const stack = packages__flutter__src__rendering__stack$46dart.src__rendering__stack;
  const system_chrome = packages__flutter__src__services__system_chrome$46dart.src__services__system_chrome;
  const annotated_region = packages__flutter__src__widgets__annotated_region$46dart.src__widgets__annotated_region;
  const sliver_persistent_header = packages__flutter__src__rendering__sliver_persistent_header$46dart.src__rendering__sliver_persistent_header;
  const sliver_persistent_header$ = packages__flutter__src__widgets__sliver_persistent_header$46dart.src__widgets__sliver_persistent_header;
  var icon_button = Object.create(dart.library);
  var back_button = Object.create(dart.library);
  var time = Object.create(dart.library);
  var snack_bar = Object.create(dart.library);
  var floating_action_button_location = Object.create(dart.library);
  var tooltip = Object.create(dart.library);
  var floating_action_button = Object.create(dart.library);
  var flexible_space_bar = Object.create(dart.library);
  var list_tile = Object.create(dart.library);
  var drawer = Object.create(dart.library);
  var divider = Object.create(dart.library);
  var dialog = Object.create(dart.library);
  var raised_button = Object.create(dart.library);
  var outline_button = Object.create(dart.library);
  var material_button = Object.create(dart.library);
  var button = Object.create(dart.library);
  var flat_button = Object.create(dart.library);
  var tooltip_theme = Object.create(dart.library);
  var toggle_buttons_theme = Object.create(dart.library);
  var time_picker_theme = Object.create(dart.library);
  var text_button_theme = Object.create(dart.library);
  var tabs$ = Object.create(dart.library);
  var tab_bar_theme = Object.create(dart.library);
  var snack_bar_theme = Object.create(dart.library);
  var slider_theme = Object.create(dart.library);
  var popup_menu_theme = Object.create(dart.library);
  var page_transitions_theme = Object.create(dart.library);
  var outlined_button_theme = Object.create(dart.library);
  var navigation_rail = Object.create(dart.library);
  var navigation_rail_theme = Object.create(dart.library);
  var input_decorator = Object.create(dart.library);
  var ink_splash = Object.create(dart.library);
  var button_style = Object.create(dart.library);
  var elevated_button_theme = Object.create(dart.library);
  var divider_theme = Object.create(dart.library);
  var dialog_theme = Object.create(dart.library);
  var chip_theme = Object.create(dart.library);
  var card_theme = Object.create(dart.library);
  var ink_highlight = Object.create(dart.library);
  var feedback = Object.create(dart.library);
  var ink_well = Object.create(dart.library);
  var bottom_navigation_bar = Object.create(dart.library);
  var bottom_navigation_bar_theme = Object.create(dart.library);
  var bottom_app_bar_theme = Object.create(dart.library);
  var banner_theme = Object.create(dart.library);
  var theme_data = Object.create(dart.library);
  var color_scheme = Object.create(dart.library);
  var button_theme = Object.create(dart.library);
  var button_bar_theme = Object.create(dart.library);
  var button_bar = Object.create(dart.library);
  var bottom_sheet = Object.create(dart.library);
  var scaffold$ = Object.create(dart.library);
  var elevation_overlay = Object.create(dart.library);
  var material = Object.create(dart.library);
  var debug$0 = Object.create(dart.library);
  var reorderable_list = Object.create(dart.library);
  var material_localizations = Object.create(dart.library);
  var theme$ = Object.create(dart.library);
  var app_bar_theme = Object.create(dart.library);
  var app_bar = Object.create(dart.library);
  var $toString = dartx.toString;
  var $_equals = dartx._equals;
  var $hashCode = dartx.hashCode;
  var $add = dartx.add;
  var $clamp = dartx.clamp;
  var $contains = dartx.contains;
  var $iterator = dartx.iterator;
  var $values = dartx.values;
  var $forEach = dartx.forEach;
  var $keys = dartx.keys;
  var $_get = dartx._get;
  var $remove = dartx.remove;
  var $_set = dartx._set;
  var $abs = dartx.abs;
  var $toDouble = dartx.toDouble;
  var $runtimeType = dartx.runtimeType;
  var $insert = dartx.insert;
  var $length = dartx.length;
  var $isNotEmpty = dartx.isNotEmpty;
  var $map = dartx.map;
  var $toList = dartx.toList;
  var $addAll = dartx.addAll;
  var $removeRange = dartx.removeRange;
  var $floor = dartx.floor;
  var $round = dartx.round;
  var $join = dartx.join;
  var $ceilToDouble = dartx.ceilToDouble;
  var $where = dartx.where;
  var $every = dartx.every;
  var $fold = dartx.fold;
  var $sublist = dartx.sublist;
  var $first = dartx.first;
  var $isEmpty = dartx.isEmpty;
  var $isFinite = dartx.isFinite;
  var $modulo = dartx['%'];
  var $padLeft = dartx.padLeft;
  var $split = dartx.split;
  var $toStringAsFixed = dartx.toStringAsFixed;
  var _LocationL = () => (_LocationL = dart.constFn(dart.legacy(widget_inspector._Location)))();
  var doubleL = () => (doubleL = dart.constFn(dart.legacy(core.double)))();
  var numL = () => (numL = dart.constFn(dart.legacy(core.num)))();
  var WidgetL = () => (WidgetL = dart.constFn(dart.legacy(framework.Widget)))();
  var DiagnosticsPropertyOfWidgetL = () => (DiagnosticsPropertyOfWidgetL = dart.constFn(diagnostics.DiagnosticsProperty$(WidgetL())))();
  var VoidTovoid = () => (VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))();
  var VoidToLvoid = () => (VoidToLvoid = dart.constFn(dart.legacy(VoidTovoid())))();
  var ObjectFlagPropertyOfVoidToLvoid = () => (ObjectFlagPropertyOfVoidToLvoid = dart.constFn(diagnostics.ObjectFlagProperty$(VoidToLvoid())))();
  var EdgeInsetsGeometryL = () => (EdgeInsetsGeometryL = dart.constFn(dart.legacy(edge_insets.EdgeInsetsGeometry)))();
  var DiagnosticsPropertyOfEdgeInsetsGeometryL = () => (DiagnosticsPropertyOfEdgeInsetsGeometryL = dart.constFn(diagnostics.DiagnosticsProperty$(EdgeInsetsGeometryL())))();
  var FocusNodeL = () => (FocusNodeL = dart.constFn(dart.legacy(focus_manager.FocusNode)))();
  var DiagnosticsPropertyOfFocusNodeL = () => (DiagnosticsPropertyOfFocusNodeL = dart.constFn(diagnostics.DiagnosticsProperty$(FocusNodeL())))();
  var ObjectL = () => (ObjectL = dart.constFn(dart.legacy(core.Object)))();
  var VoidToNullN = () => (VoidToNullN = dart.constFn(dart.fnType(core.Null, [])))();
  var DayPeriodL = () => (DayPeriodL = dart.constFn(dart.legacy(time.DayPeriod)))();
  var TimeOfDayL = () => (TimeOfDayL = dart.constFn(dart.legacy(time.TimeOfDay)))();
  var StringL = () => (StringL = dart.constFn(dart.legacy(core.String)))();
  var intL = () => (intL = dart.constFn(dart.legacy(core.int)))();
  var intLToStringL = () => (intLToStringL = dart.constFn(dart.fnType(StringL(), [intL()])))();
  var TimeOfDayFormatL = () => (TimeOfDayFormatL = dart.constFn(dart.legacy(time.TimeOfDayFormat)))();
  var HourFormatL = () => (HourFormatL = dart.constFn(dart.legacy(time.HourFormat)))();
  var SnackBarClosedReasonL = () => (SnackBarClosedReasonL = dart.constFn(dart.legacy(snack_bar.SnackBarClosedReason)))();
  var SnackBarL = () => (SnackBarL = dart.constFn(dart.legacy(snack_bar.SnackBar)))();
  var JSArrayOfWidgetL = () => (JSArrayOfWidgetL = dart.constFn(_interceptors.JSArray$(WidgetL())))();
  var ValueKeyOfStringL = () => (ValueKeyOfStringL = dart.constFn(key.ValueKey$(StringL())))();
  var DismissDirectionL = () => (DismissDirectionL = dart.constFn(dart.legacy(dismissible.DismissDirection)))();
  var DismissDirectionLToNullN = () => (DismissDirectionLToNullN = dart.constFn(dart.fnType(core.Null, [DismissDirectionL()])))();
  var AlignL = () => (AlignL = dart.constFn(dart.legacy(basic.Align)))();
  var BuildContextL = () => (BuildContextL = dart.constFn(dart.legacy(framework.BuildContext)))();
  var BuildContextLAndWidgetLToAlignL = () => (BuildContextLAndWidgetLToAlignL = dart.constFn(dart.fnType(AlignL(), [BuildContextL(), WidgetL()])))();
  var _AnimationSwapOfdoubleL = () => (_AnimationSwapOfdoubleL = dart.constFn(floating_action_button_location._AnimationSwap$(doubleL())))();
  var TweenOfdoubleL = () => (TweenOfdoubleL = dart.constFn(tween.Tween$(doubleL())))();
  var DurationL = () => (DurationL = dart.constFn(dart.legacy(core.Duration)))();
  var DiagnosticsPropertyOfDurationL = () => (DiagnosticsPropertyOfDurationL = dart.constFn(diagnostics.DiagnosticsProperty$(DurationL())))();
  var RenderBoxL = () => (RenderBoxL = dart.constFn(dart.legacy(box.RenderBox)))();
  var BuildContextLToWidgetL = () => (BuildContextLToWidgetL = dart.constFn(dart.fnType(WidgetL(), [BuildContextL()])))();
  var PointerUpEventL = () => (PointerUpEventL = dart.constFn(dart.legacy(events.PointerUpEvent)))();
  var PointerCancelEventL = () => (PointerCancelEventL = dart.constFn(dart.legacy(events.PointerCancelEvent)))();
  var PointerDownEventL = () => (PointerDownEventL = dart.constFn(dart.legacy(events.PointerDownEvent)))();
  var PointerEnterEventL = () => (PointerEnterEventL = dart.constFn(dart.legacy(events.PointerEnterEvent)))();
  var PointerEnterEventLTovoid = () => (PointerEnterEventLTovoid = dart.constFn(dart.fnType(dart.void, [PointerEnterEventL()])))();
  var PointerExitEventL = () => (PointerExitEventL = dart.constFn(dart.legacy(events.PointerExitEvent)))();
  var PointerExitEventLTovoid = () => (PointerExitEventLTovoid = dart.constFn(dart.fnType(dart.void, [PointerExitEventL()])))();
  var _TooltipPositionDelegateL = () => (_TooltipPositionDelegateL = dart.constFn(dart.legacy(tooltip._TooltipPositionDelegate)))();
  var ObjectFlagPropertyOfObjectL = () => (ObjectFlagPropertyOfObjectL = dart.constFn(diagnostics.ObjectFlagProperty$(ObjectL())))();
  var ShapeBorderL = () => (ShapeBorderL = dart.constFn(dart.legacy(borders.ShapeBorder)))();
  var DiagnosticsPropertyOfShapeBorderL = () => (DiagnosticsPropertyOfShapeBorderL = dart.constFn(diagnostics.DiagnosticsProperty$(ShapeBorderL())))();
  var MaterialTapTargetSizeL = () => (MaterialTapTargetSizeL = dart.constFn(dart.legacy(theme_data.MaterialTapTargetSize)))();
  var DiagnosticsPropertyOfMaterialTapTargetSizeL = () => (DiagnosticsPropertyOfMaterialTapTargetSizeL = dart.constFn(diagnostics.DiagnosticsProperty$(MaterialTapTargetSizeL())))();
  var _RenderChildOverflowBoxL = () => (_RenderChildOverflowBoxL = dart.constFn(dart.legacy(floating_action_button._RenderChildOverflowBox)))();
  var CollapseModeL = () => (CollapseModeL = dart.constFn(dart.legacy(flexible_space_bar.CollapseMode)))();
  var StretchModeL = () => (StretchModeL = dart.constFn(dart.legacy(flexible_space_bar.StretchMode)))();
  var FlexibleSpaceBarSettingsL = () => (FlexibleSpaceBarSettingsL = dart.constFn(dart.legacy(flexible_space_bar.FlexibleSpaceBarSettings)))();
  var ContainerL = () => (ContainerL = dart.constFn(dart.legacy(container.Container)))();
  var BoxConstraintsL = () => (BoxConstraintsL = dart.constFn(dart.legacy(box.BoxConstraints)))();
  var BuildContextLAndBoxConstraintsLToContainerL = () => (BuildContextLAndBoxConstraintsLToContainerL = dart.constFn(dart.fnType(ContainerL(), [BuildContextL(), BoxConstraintsL()])))();
  var ClipRectL = () => (ClipRectL = dart.constFn(dart.legacy(basic.ClipRect)))();
  var BuildContextLAndBoxConstraintsLToClipRectL = () => (BuildContextLAndBoxConstraintsLToClipRectL = dart.constFn(dart.fnType(ClipRectL(), [BuildContextL(), BoxConstraintsL()])))();
  var ListTileStyleL = () => (ListTileStyleL = dart.constFn(dart.legacy(list_tile.ListTileStyle)))();
  var ListTileThemeL = () => (ListTileThemeL = dart.constFn(dart.legacy(list_tile.ListTileTheme)))();
  var BuildContextLToListTileThemeL = () => (BuildContextLToListTileThemeL = dart.constFn(dart.fnType(ListTileThemeL(), [BuildContextL()])))();
  var ListTileControlAffinityL = () => (ListTileControlAffinityL = dart.constFn(dart.legacy(list_tile.ListTileControlAffinity)))();
  var SyncIterableOfWidgetL = () => (SyncIterableOfWidgetL = dart.constFn(_js_helper.SyncIterable$(WidgetL())))();
  var MouseCursorL = () => (MouseCursorL = dart.constFn(dart.legacy(mouse_cursor.MouseCursor)))();
  var MaterialStateL = () => (MaterialStateL = dart.constFn(dart.legacy(material_state.MaterialState)))();
  var _HashSetOfMaterialStateL = () => (_HashSetOfMaterialStateL = dart.constFn(collection._HashSet$(MaterialStateL())))();
  var _ListTileSlotL = () => (_ListTileSlotL = dart.constFn(dart.legacy(list_tile._ListTileSlot)))();
  var _RenderListTileL = () => (_RenderListTileL = dart.constFn(dart.legacy(list_tile._RenderListTile)))();
  var ElementL = () => (ElementL = dart.constFn(dart.legacy(framework.Element)))();
  var LinkedMapOf_ListTileSlotL$ElementL = () => (LinkedMapOf_ListTileSlotL$ElementL = dart.constFn(_js_helper.LinkedMap$(_ListTileSlotL(), ElementL())))();
  var LinkedMapOfElementL$_ListTileSlotL = () => (LinkedMapOfElementL$_ListTileSlotL = dart.constFn(_js_helper.LinkedMap$(ElementL(), _ListTileSlotL())))();
  var _ListTileL = () => (_ListTileL = dart.constFn(dart.legacy(list_tile._ListTile)))();
  var RenderObjectL = () => (RenderObjectL = dart.constFn(dart.legacy(object.RenderObject)))();
  var LinkedMapOf_ListTileSlotL$RenderBoxL = () => (LinkedMapOf_ListTileSlotL$RenderBoxL = dart.constFn(_js_helper.LinkedMap$(_ListTileSlotL(), RenderBoxL())))();
  var LinkedMapOfRenderBoxL$_ListTileSlotL = () => (LinkedMapOfRenderBoxL$_ListTileSlotL = dart.constFn(_js_helper.LinkedMap$(RenderBoxL(), _ListTileSlotL())))();
  var SyncIterableOfRenderBoxL = () => (SyncIterableOfRenderBoxL = dart.constFn(_js_helper.SyncIterable$(RenderBoxL())))();
  var PipelineOwnerL = () => (PipelineOwnerL = dart.constFn(dart.legacy(object.PipelineOwner)))();
  var DiagnosticsNodeL = () => (DiagnosticsNodeL = dart.constFn(dart.legacy(diagnostics.DiagnosticsNode)))();
  var JSArrayOfDiagnosticsNodeL = () => (JSArrayOfDiagnosticsNodeL = dart.constFn(_interceptors.JSArray$(DiagnosticsNodeL())))();
  var RenderBoxLAndStringLTovoid = () => (RenderBoxLAndStringLTovoid = dart.constFn(dart.fnType(dart.void, [RenderBoxL(), StringL()])))();
  var BoxParentDataL = () => (BoxParentDataL = dart.constFn(dart.legacy(box.BoxParentData)))();
  var RenderBoxLTovoid = () => (RenderBoxLTovoid = dart.constFn(dart.fnType(dart.void, [RenderBoxL()])))();
  var boolL = () => (boolL = dart.constFn(dart.legacy(core.bool)))();
  var BoxHitTestResultL = () => (BoxHitTestResultL = dart.constFn(dart.legacy(box.BoxHitTestResult)))();
  var OffsetL = () => (OffsetL = dart.constFn(dart.legacy(ui.Offset)))();
  var BoxHitTestResultLAndOffsetLToboolL = () => (BoxHitTestResultLAndOffsetLToboolL = dart.constFn(dart.fnType(boolL(), [BoxHitTestResultL(), OffsetL()])))();
  var DrawerAlignmentL = () => (DrawerAlignmentL = dart.constFn(dart.legacy(drawer.DrawerAlignment)))();
  var StatefulWidgetL = () => (StatefulWidgetL = dart.constFn(dart.legacy(framework.StatefulWidget)))();
  var StateOfStatefulWidgetL = () => (StateOfStatefulWidgetL = dart.constFn(framework.State$(StatefulWidgetL())))();
  var StateLOfStatefulWidgetL = () => (StateLOfStatefulWidgetL = dart.constFn(dart.legacy(StateOfStatefulWidgetL())))();
  var GlobalKeyOfStateLOfStatefulWidgetL = () => (GlobalKeyOfStateLOfStatefulWidgetL = dart.constFn(framework.GlobalKey$(StateLOfStatefulWidgetL())))();
  var DrawerControllerL = () => (DrawerControllerL = dart.constFn(dart.legacy(drawer.DrawerController)))();
  var AnimationOfdoubleL = () => (AnimationOfdoubleL = dart.constFn(animation.Animation$(doubleL())))();
  var AnimationLOfdoubleL = () => (AnimationLOfdoubleL = dart.constFn(dart.legacy(AnimationOfdoubleL())))();
  var BuildContextLAndAnimationLOfdoubleLAndAnimationLOfdoubleLToWidgetL = () => (BuildContextLAndAnimationLOfdoubleLAndAnimationLOfdoubleLToWidgetL = dart.constFn(dart.fnType(WidgetL(), [BuildContextL(), AnimationLOfdoubleL(), AnimationLOfdoubleL()])))();
  var BuildContextLAndAnimationLOfdoubleLAndAnimationLOfdoubleL__ToWidgetL = () => (BuildContextLAndAnimationLOfdoubleLAndAnimationLOfdoubleL__ToWidgetL = dart.constFn(dart.fnType(WidgetL(), [BuildContextL(), AnimationLOfdoubleL(), AnimationLOfdoubleL(), WidgetL()])))();
  var DiagnosticsPropertyOfdoubleL = () => (DiagnosticsPropertyOfdoubleL = dart.constFn(diagnostics.DiagnosticsProperty$(doubleL())))();
  var ButtonTextThemeL = () => (ButtonTextThemeL = dart.constFn(dart.legacy(button_theme.ButtonTextTheme)))();
  var DiagnosticsPropertyOfButtonTextThemeL = () => (DiagnosticsPropertyOfButtonTextThemeL = dart.constFn(diagnostics.DiagnosticsProperty$(ButtonTextThemeL())))();
  var BrightnessL = () => (BrightnessL = dart.constFn(dart.legacy(ui.Brightness)))();
  var DiagnosticsPropertyOfBrightnessL = () => (DiagnosticsPropertyOfBrightnessL = dart.constFn(diagnostics.DiagnosticsProperty$(BrightnessL())))();
  var VisualDensityL = () => (VisualDensityL = dart.constFn(dart.legacy(theme_data.VisualDensity)))();
  var DiagnosticsPropertyOfVisualDensityL = () => (DiagnosticsPropertyOfVisualDensityL = dart.constFn(diagnostics.DiagnosticsProperty$(VisualDensityL())))();
  var BorderSideL = () => (BorderSideL = dart.constFn(dart.legacy(borders.BorderSide)))();
  var DiagnosticsPropertyOfBorderSideL = () => (DiagnosticsPropertyOfBorderSideL = dart.constFn(diagnostics.DiagnosticsProperty$(BorderSideL())))();
  var _OutlineButtonL = () => (_OutlineButtonL = dart.constFn(dart.legacy(outline_button._OutlineButton)))();
  var ColorL = () => (ColorL = dart.constFn(dart.legacy(ui.Color)))();
  var MaterialStatePropertyOfColorL = () => (MaterialStatePropertyOfColorL = dart.constFn(material_state.MaterialStateProperty$(ColorL())))();
  var MaterialStatePropertyLOfColorL = () => (MaterialStatePropertyLOfColorL = dart.constFn(dart.legacy(MaterialStatePropertyOfColorL())))();
  var RaisedButtonL = () => (RaisedButtonL = dart.constFn(dart.legacy(raised_button.RaisedButton)))();
  var BuildContextLAndWidgetLToRaisedButtonL = () => (BuildContextLAndWidgetLToRaisedButtonL = dart.constFn(dart.fnType(RaisedButtonL(), [BuildContextL(), WidgetL()])))();
  var _OutlineBorderL = () => (_OutlineBorderL = dart.constFn(dart.legacy(outline_button._OutlineBorder)))();
  var LinkedHashSetOfMaterialStateL = () => (LinkedHashSetOfMaterialStateL = dart.constFn(collection.LinkedHashSet$(MaterialStateL())))();
  var RawMaterialButtonL = () => (RawMaterialButtonL = dart.constFn(dart.legacy(button.RawMaterialButton)))();
  var _RenderInputPaddingL = () => (_RenderInputPaddingL = dart.constFn(dart.legacy(button._RenderInputPadding)))();
  var TooltipThemeDataL = () => (TooltipThemeDataL = dart.constFn(dart.legacy(tooltip_theme.TooltipThemeData)))();
  var DecorationL = () => (DecorationL = dart.constFn(dart.legacy(decoration.Decoration)))();
  var DiagnosticsPropertyOfDecorationL = () => (DiagnosticsPropertyOfDecorationL = dart.constFn(diagnostics.DiagnosticsProperty$(DecorationL())))();
  var TextStyleL = () => (TextStyleL = dart.constFn(dart.legacy(text_style.TextStyle)))();
  var DiagnosticsPropertyOfTextStyleL = () => (DiagnosticsPropertyOfTextStyleL = dart.constFn(diagnostics.DiagnosticsProperty$(TextStyleL())))();
  var TooltipThemeL = () => (TooltipThemeL = dart.constFn(dart.legacy(tooltip_theme.TooltipTheme)))();
  var ToggleButtonsThemeDataL = () => (ToggleButtonsThemeDataL = dart.constFn(dart.legacy(toggle_buttons_theme.ToggleButtonsThemeData)))();
  var DiagnosticsPropertyOfBoxConstraintsL = () => (DiagnosticsPropertyOfBoxConstraintsL = dart.constFn(diagnostics.DiagnosticsProperty$(BoxConstraintsL())))();
  var BorderRadiusL = () => (BorderRadiusL = dart.constFn(dart.legacy(border_radius.BorderRadius)))();
  var DiagnosticsPropertyOfBorderRadiusL = () => (DiagnosticsPropertyOfBorderRadiusL = dart.constFn(diagnostics.DiagnosticsProperty$(BorderRadiusL())))();
  var ToggleButtonsThemeL = () => (ToggleButtonsThemeL = dart.constFn(dart.legacy(toggle_buttons_theme.ToggleButtonsTheme)))();
  var OutlinedBorderL = () => (OutlinedBorderL = dart.constFn(dart.legacy(borders.OutlinedBorder)))();
  var TimePickerThemeDataL = () => (TimePickerThemeDataL = dart.constFn(dart.legacy(time_picker_theme.TimePickerThemeData)))();
  var InputDecorationThemeL = () => (InputDecorationThemeL = dart.constFn(dart.legacy(input_decorator.InputDecorationTheme)))();
  var DiagnosticsPropertyOfInputDecorationThemeL = () => (DiagnosticsPropertyOfInputDecorationThemeL = dart.constFn(diagnostics.DiagnosticsProperty$(InputDecorationThemeL())))();
  var TimePickerThemeL = () => (TimePickerThemeL = dart.constFn(dart.legacy(time_picker_theme.TimePickerTheme)))();
  var TextButtonThemeDataL = () => (TextButtonThemeDataL = dart.constFn(dart.legacy(text_button_theme.TextButtonThemeData)))();
  var ButtonStyleL = () => (ButtonStyleL = dart.constFn(dart.legacy(button_style.ButtonStyle)))();
  var DiagnosticsPropertyOfButtonStyleL = () => (DiagnosticsPropertyOfButtonStyleL = dart.constFn(diagnostics.DiagnosticsProperty$(ButtonStyleL())))();
  var TextButtonThemeL = () => (TextButtonThemeL = dart.constFn(dart.legacy(text_button_theme.TextButtonTheme)))();
  var TabBarIndicatorSizeL = () => (TabBarIndicatorSizeL = dart.constFn(dart.legacy(tabs$.TabBarIndicatorSize)))();
  var JSArrayOfdoubleL = () => (JSArrayOfdoubleL = dart.constFn(_interceptors.JSArray$(doubleL())))();
  var FlexParentDataL = () => (FlexParentDataL = dart.constFn(dart.legacy(flex.FlexParentData)))();
  var _TabLabelBarRendererL = () => (_TabLabelBarRendererL = dart.constFn(dart.legacy(tabs$._TabLabelBarRenderer)))();
  var _IndicatorPainterL = () => (_IndicatorPainterL = dart.constFn(dart.legacy(tabs$._IndicatorPainter)))();
  var TabL = () => (TabL = dart.constFn(dart.legacy(tabs$.Tab)))();
  var GlobalKeyLOfStateLOfStatefulWidgetL = () => (GlobalKeyLOfStateLOfStatefulWidgetL = dart.constFn(dart.legacy(GlobalKeyOfStateLOfStatefulWidgetL())))();
  var WidgetLToGlobalKeyLOfStateLOfStatefulWidgetL = () => (WidgetLToGlobalKeyLOfStateLOfStatefulWidgetL = dart.constFn(dart.fnType(GlobalKeyLOfStateLOfStatefulWidgetL(), [WidgetL()])))();
  var VoidToboolL = () => (VoidToboolL = dart.constFn(dart.fnType(boolL(), [])))();
  var TabBarL = () => (TabBarL = dart.constFn(dart.legacy(tabs$.TabBar)))();
  var ListOfGlobalKeyLOfStateLOfStatefulWidgetL = () => (ListOfGlobalKeyLOfStateLOfStatefulWidgetL = dart.constFn(core.List$(GlobalKeyLOfStateLOfStatefulWidgetL())))();
  var intLToGlobalKeyLOfStateLOfStatefulWidgetL = () => (intLToGlobalKeyLOfStateLOfStatefulWidgetL = dart.constFn(dart.fnType(GlobalKeyLOfStateLOfStatefulWidgetL(), [intL()])))();
  var ListOfWidgetL = () => (ListOfWidgetL = dart.constFn(core.List$(WidgetL())))();
  var TabBarViewL = () => (TabBarViewL = dart.constFn(dart.legacy(tabs$.TabBarView)))();
  var FutureOfvoid = () => (FutureOfvoid = dart.constFn(async.Future$(dart.void)))();
  var ScrollUpdateNotificationL = () => (ScrollUpdateNotificationL = dart.constFn(dart.legacy(scroll_notification.ScrollUpdateNotification)))();
  var ScrollEndNotificationL = () => (ScrollEndNotificationL = dart.constFn(dart.legacy(scroll_notification.ScrollEndNotification)))();
  var ScrollNotificationL = () => (ScrollNotificationL = dart.constFn(dart.legacy(scroll_notification.ScrollNotification)))();
  var NotificationListenerOfScrollNotificationL = () => (NotificationListenerOfScrollNotificationL = dart.constFn(notification_listener.NotificationListener$(ScrollNotificationL())))();
  var intLToWidgetL = () => (intLToWidgetL = dart.constFn(dart.fnType(WidgetL(), [intL()])))();
  var SemanticsL = () => (SemanticsL = dart.constFn(dart.legacy(basic.Semantics)))();
  var BuildContextLAndWidgetLToSemanticsL = () => (BuildContextLAndWidgetLToSemanticsL = dart.constFn(dart.fnType(SemanticsL(), [BuildContextL(), WidgetL()])))();
  var TabBarThemeL = () => (TabBarThemeL = dart.constFn(dart.legacy(tab_bar_theme.TabBarTheme)))();
  var SnackBarBehaviorL = () => (SnackBarBehaviorL = dart.constFn(dart.legacy(snack_bar_theme.SnackBarBehavior)))();
  var SnackBarThemeDataL = () => (SnackBarThemeDataL = dart.constFn(dart.legacy(snack_bar_theme.SnackBarThemeData)))();
  var DiagnosticsPropertyOfSnackBarBehaviorL = () => (DiagnosticsPropertyOfSnackBarBehaviorL = dart.constFn(diagnostics.DiagnosticsProperty$(SnackBarBehaviorL())))();
  var SliderThemeL = () => (SliderThemeL = dart.constFn(dart.legacy(slider_theme.SliderTheme)))();
  var ShowValueIndicatorL = () => (ShowValueIndicatorL = dart.constFn(dart.legacy(slider_theme.ShowValueIndicator)))();
  var ThumbL = () => (ThumbL = dart.constFn(dart.legacy(slider_theme.Thumb)))();
  var JSArrayOfObjectL = () => (JSArrayOfObjectL = dart.constFn(_interceptors.JSArray$(ObjectL())))();
  var SliderThemeDataL = () => (SliderThemeDataL = dart.constFn(dart.legacy(slider_theme.SliderThemeData)))();
  var SliderComponentShapeL = () => (SliderComponentShapeL = dart.constFn(dart.legacy(slider_theme.SliderComponentShape)))();
  var DiagnosticsPropertyOfSliderComponentShapeL = () => (DiagnosticsPropertyOfSliderComponentShapeL = dart.constFn(diagnostics.DiagnosticsProperty$(SliderComponentShapeL())))();
  var SliderTickMarkShapeL = () => (SliderTickMarkShapeL = dart.constFn(dart.legacy(slider_theme.SliderTickMarkShape)))();
  var DiagnosticsPropertyOfSliderTickMarkShapeL = () => (DiagnosticsPropertyOfSliderTickMarkShapeL = dart.constFn(diagnostics.DiagnosticsProperty$(SliderTickMarkShapeL())))();
  var SliderTrackShapeL = () => (SliderTrackShapeL = dart.constFn(dart.legacy(slider_theme.SliderTrackShape)))();
  var DiagnosticsPropertyOfSliderTrackShapeL = () => (DiagnosticsPropertyOfSliderTrackShapeL = dart.constFn(diagnostics.DiagnosticsProperty$(SliderTrackShapeL())))();
  var RangeSliderTickMarkShapeL = () => (RangeSliderTickMarkShapeL = dart.constFn(dart.legacy(slider_theme.RangeSliderTickMarkShape)))();
  var DiagnosticsPropertyOfRangeSliderTickMarkShapeL = () => (DiagnosticsPropertyOfRangeSliderTickMarkShapeL = dart.constFn(diagnostics.DiagnosticsProperty$(RangeSliderTickMarkShapeL())))();
  var RangeSliderThumbShapeL = () => (RangeSliderThumbShapeL = dart.constFn(dart.legacy(slider_theme.RangeSliderThumbShape)))();
  var DiagnosticsPropertyOfRangeSliderThumbShapeL = () => (DiagnosticsPropertyOfRangeSliderThumbShapeL = dart.constFn(diagnostics.DiagnosticsProperty$(RangeSliderThumbShapeL())))();
  var RangeSliderTrackShapeL = () => (RangeSliderTrackShapeL = dart.constFn(dart.legacy(slider_theme.RangeSliderTrackShape)))();
  var DiagnosticsPropertyOfRangeSliderTrackShapeL = () => (DiagnosticsPropertyOfRangeSliderTrackShapeL = dart.constFn(diagnostics.DiagnosticsProperty$(RangeSliderTrackShapeL())))();
  var RangeSliderValueIndicatorShapeL = () => (RangeSliderValueIndicatorShapeL = dart.constFn(dart.legacy(slider_theme.RangeSliderValueIndicatorShape)))();
  var DiagnosticsPropertyOfRangeSliderValueIndicatorShapeL = () => (DiagnosticsPropertyOfRangeSliderValueIndicatorShapeL = dart.constFn(diagnostics.DiagnosticsProperty$(RangeSliderValueIndicatorShapeL())))();
  var EnumPropertyOfShowValueIndicatorL = () => (EnumPropertyOfShowValueIndicatorL = dart.constFn(diagnostics.EnumProperty$(ShowValueIndicatorL())))();
  var TextDirectionL = () => (TextDirectionL = dart.constFn(dart.legacy(ui.TextDirection)))();
  var RangeValuesL = () => (RangeValuesL = dart.constFn(dart.legacy(slider_theme.RangeValues)))();
  var SizeL = () => (SizeL = dart.constFn(dart.legacy(ui.Size)))();
  var TextDirectionLAndRangeValuesLAnddoubleL__ToThumbL = () => (TextDirectionLAndRangeValuesLAnddoubleL__ToThumbL = dart.constFn(dart.fnType(ThumbL(), [TextDirectionL(), RangeValuesL(), doubleL(), SizeL(), SizeL(), doubleL()])))();
  var TextDirectionLAndRangeValuesLAnddoubleL__ToLThumbL = () => (TextDirectionLAndRangeValuesLAnddoubleL__ToLThumbL = dart.constFn(dart.legacy(TextDirectionLAndRangeValuesLAnddoubleL__ToThumbL())))();
  var DiagnosticsPropertyOfTextDirectionLAndRangeValuesLAnddoubleL__ToLThumbL = () => (DiagnosticsPropertyOfTextDirectionLAndRangeValuesLAnddoubleL__ToLThumbL = dart.constFn(diagnostics.DiagnosticsProperty$(TextDirectionLAndRangeValuesLAnddoubleL__ToLThumbL())))();
  var RangeLabelsL = () => (RangeLabelsL = dart.constFn(dart.legacy(slider_theme.RangeLabels)))();
  var PopupMenuThemeDataL = () => (PopupMenuThemeDataL = dart.constFn(dart.legacy(popup_menu_theme.PopupMenuThemeData)))();
  var PopupMenuThemeL = () => (PopupMenuThemeL = dart.constFn(dart.legacy(popup_menu_theme.PopupMenuTheme)))();
  var TweenOfOffsetL = () => (TweenOfOffsetL = dart.constFn(tween.Tween$(OffsetL())))();
  var BuildContextLAndWidgetLToContainerL = () => (BuildContextLAndWidgetLToContainerL = dart.constFn(dart.fnType(ContainerL(), [BuildContextL(), WidgetL()])))();
  var FractionalTranslationL = () => (FractionalTranslationL = dart.constFn(dart.legacy(basic.FractionalTranslation)))();
  var BuildContextLAndWidgetLToFractionalTranslationL = () => (BuildContextLAndWidgetLToFractionalTranslationL = dart.constFn(dart.fnType(FractionalTranslationL(), [BuildContextL(), WidgetL()])))();
  var AnimatedBuilderL = () => (AnimatedBuilderL = dart.constFn(dart.legacy(transitions.AnimatedBuilder)))();
  var BuildContextLAndBoxConstraintsLToAnimatedBuilderL = () => (BuildContextLAndBoxConstraintsLToAnimatedBuilderL = dart.constFn(dart.fnType(AnimatedBuilderL(), [BuildContextL(), BoxConstraintsL()])))();
  var _ZoomEnterTransitionL = () => (_ZoomEnterTransitionL = dart.constFn(dart.legacy(page_transitions_theme._ZoomEnterTransition)))();
  var BuildContextLAndAnimationLOfdoubleLAndWidgetLTo_ZoomEnterTransitionL = () => (BuildContextLAndAnimationLOfdoubleLAndWidgetLTo_ZoomEnterTransitionL = dart.constFn(dart.fnType(_ZoomEnterTransitionL(), [BuildContextL(), AnimationLOfdoubleL(), WidgetL()])))();
  var _ZoomExitTransitionL = () => (_ZoomExitTransitionL = dart.constFn(dart.legacy(page_transitions_theme._ZoomExitTransition)))();
  var BuildContextLAndAnimationLOfdoubleLAndWidgetLTo_ZoomExitTransitionL = () => (BuildContextLAndAnimationLOfdoubleLAndWidgetLTo_ZoomExitTransitionL = dart.constFn(dart.fnType(_ZoomExitTransitionL(), [BuildContextL(), AnimationLOfdoubleL(), WidgetL()])))();
  var TweenSequenceItemOfdoubleL = () => (TweenSequenceItemOfdoubleL = dart.constFn(tween_sequence.TweenSequenceItem$(doubleL())))();
  var TweenSequenceItemLOfdoubleL = () => (TweenSequenceItemLOfdoubleL = dart.constFn(dart.legacy(TweenSequenceItemOfdoubleL())))();
  var JSArrayOfTweenSequenceItemLOfdoubleL = () => (JSArrayOfTweenSequenceItemLOfdoubleL = dart.constFn(_interceptors.JSArray$(TweenSequenceItemLOfdoubleL())))();
  var TweenSequenceOfdoubleL = () => (TweenSequenceOfdoubleL = dart.constFn(tween_sequence.TweenSequence$(doubleL())))();
  var PageTransitionsBuilderL = () => (PageTransitionsBuilderL = dart.constFn(dart.legacy(page_transitions_theme.PageTransitionsBuilder)))();
  var TargetPlatformL = () => (TargetPlatformL = dart.constFn(dart.legacy(platform$.TargetPlatform)))();
  var TargetPlatformLToPageTransitionsBuilderL = () => (TargetPlatformLToPageTransitionsBuilderL = dart.constFn(dart.fnType(PageTransitionsBuilderL(), [TargetPlatformL()])))();
  var PageTransitionsThemeL = () => (PageTransitionsThemeL = dart.constFn(dart.legacy(page_transitions_theme.PageTransitionsTheme)))();
  var MapOfTargetPlatformL$PageTransitionsBuilderL = () => (MapOfTargetPlatformL$PageTransitionsBuilderL = dart.constFn(core.Map$(TargetPlatformL(), PageTransitionsBuilderL())))();
  var MapLOfTargetPlatformL$PageTransitionsBuilderL = () => (MapLOfTargetPlatformL$PageTransitionsBuilderL = dart.constFn(dart.legacy(MapOfTargetPlatformL$PageTransitionsBuilderL())))();
  var DiagnosticsPropertyOfMapLOfTargetPlatformL$PageTransitionsBuilderL = () => (DiagnosticsPropertyOfMapLOfTargetPlatformL$PageTransitionsBuilderL = dart.constFn(diagnostics.DiagnosticsProperty$(MapLOfTargetPlatformL$PageTransitionsBuilderL())))();
  var OutlinedButtonThemeDataL = () => (OutlinedButtonThemeDataL = dart.constFn(dart.legacy(outlined_button_theme.OutlinedButtonThemeData)))();
  var OutlinedButtonThemeL = () => (OutlinedButtonThemeL = dart.constFn(dart.legacy(outlined_button_theme.OutlinedButtonTheme)))();
  var _ExtendedNavigationRailAnimationL = () => (_ExtendedNavigationRailAnimationL = dart.constFn(dart.legacy(navigation_rail._ExtendedNavigationRailAnimation)))();
  var AnimationControllerL = () => (AnimationControllerL = dart.constFn(dart.legacy(animation_controller.AnimationController)))();
  var JSArrayOfAnimationControllerL = () => (JSArrayOfAnimationControllerL = dart.constFn(_interceptors.JSArray$(AnimationControllerL())))();
  var NavigationRailL = () => (NavigationRailL = dart.constFn(dart.legacy(navigation_rail.NavigationRail)))();
  var ListOfAnimationControllerL = () => (ListOfAnimationControllerL = dart.constFn(core.List$(AnimationControllerL())))();
  var intLToAnimationControllerL = () => (intLToAnimationControllerL = dart.constFn(dart.fnType(AnimationControllerL(), [intL()])))();
  var AnimationControllerLToAnimationLOfdoubleL = () => (AnimationControllerLToAnimationLOfdoubleL = dart.constFn(dart.fnType(AnimationLOfdoubleL(), [AnimationControllerL()])))();
  var boolLToNullN = () => (boolLToNullN = dart.constFn(dart.fnType(core.Null, [boolL()])))();
  var NavigationRailLabelTypeL = () => (NavigationRailLabelTypeL = dart.constFn(dart.legacy(navigation_rail.NavigationRailLabelType)))();
  var NavigationRailThemeDataL = () => (NavigationRailThemeDataL = dart.constFn(dart.legacy(navigation_rail_theme.NavigationRailThemeData)))();
  var IconThemeDataL = () => (IconThemeDataL = dart.constFn(dart.legacy(icon_theme_data.IconThemeData)))();
  var DiagnosticsPropertyOfIconThemeDataL = () => (DiagnosticsPropertyOfIconThemeDataL = dart.constFn(diagnostics.DiagnosticsProperty$(IconThemeDataL())))();
  var DiagnosticsPropertyOfNavigationRailLabelTypeL = () => (DiagnosticsPropertyOfNavigationRailLabelTypeL = dart.constFn(diagnostics.DiagnosticsProperty$(NavigationRailLabelTypeL())))();
  var NavigationRailThemeL = () => (NavigationRailThemeL = dart.constFn(dart.legacy(navigation_rail_theme.NavigationRailTheme)))();
  var _InputBorderGapL = () => (_InputBorderGapL = dart.constFn(dart.legacy(input_decorator._InputBorderGap)))();
  var InputBorderL = () => (InputBorderL = dart.constFn(dart.legacy(input_border.InputBorder)))();
  var _InputBorderPainterL = () => (_InputBorderPainterL = dart.constFn(dart.legacy(input_decorator._InputBorderPainter)))();
  var _BorderContainerL = () => (_BorderContainerL = dart.constFn(dart.legacy(input_decorator._BorderContainer)))();
  var ListenableL = () => (ListenableL = dart.constFn(dart.legacy(change_notifier.Listenable)))();
  var JSArrayOfListenableL = () => (JSArrayOfListenableL = dart.constFn(_interceptors.JSArray$(ListenableL())))();
  var _HelperErrorL = () => (_HelperErrorL = dart.constFn(dart.legacy(input_decorator._HelperError)))();
  var FloatingLabelBehaviorL = () => (FloatingLabelBehaviorL = dart.constFn(dart.legacy(input_decorator.FloatingLabelBehavior)))();
  var _DecorationSlotL = () => (_DecorationSlotL = dart.constFn(dart.legacy(input_decorator._DecorationSlot)))();
  var _DecorationL = () => (_DecorationL = dart.constFn(dart.legacy(input_decorator._Decoration)))();
  var LinkedMapOf_DecorationSlotL$RenderBoxL = () => (LinkedMapOf_DecorationSlotL$RenderBoxL = dart.constFn(_js_helper.LinkedMap$(_DecorationSlotL(), RenderBoxL())))();
  var LinkedMapOfRenderBoxL$_DecorationSlotL = () => (LinkedMapOfRenderBoxL$_DecorationSlotL = dart.constFn(_js_helper.LinkedMap$(RenderBoxL(), _DecorationSlotL())))();
  var EdgeInsetsL = () => (EdgeInsetsL = dart.constFn(dart.legacy(edge_insets.EdgeInsets)))();
  var LinkedMapOfRenderBoxL$doubleL = () => (LinkedMapOfRenderBoxL$doubleL = dart.constFn(_js_helper.LinkedMap$(RenderBoxL(), doubleL())))();
  var JSArrayOfRenderBoxL = () => (JSArrayOfRenderBoxL = dart.constFn(_interceptors.JSArray$(RenderBoxL())))();
  var RenderBoxLAnddoubleLTodoubleL = () => (RenderBoxLAnddoubleLTodoubleL = dart.constFn(dart.fnType(doubleL(), [RenderBoxL(), doubleL()])))();
  var LinkedMapOf_DecorationSlotL$ElementL = () => (LinkedMapOf_DecorationSlotL$ElementL = dart.constFn(_js_helper.LinkedMap$(_DecorationSlotL(), ElementL())))();
  var LinkedMapOfElementL$_DecorationSlotL = () => (LinkedMapOfElementL$_DecorationSlotL = dart.constFn(_js_helper.LinkedMap$(ElementL(), _DecorationSlotL())))();
  var _DecoratorL = () => (_DecoratorL = dart.constFn(dart.legacy(input_decorator._Decorator)))();
  var _RenderDecorationL = () => (_RenderDecorationL = dart.constFn(dart.legacy(input_decorator._RenderDecoration)))();
  var InputDecorationL = () => (InputDecorationL = dart.constFn(dart.legacy(input_decorator.InputDecoration)))();
  var DiagnosticsPropertyOfInputDecorationL = () => (DiagnosticsPropertyOfInputDecorationL = dart.constFn(diagnostics.DiagnosticsProperty$(InputDecorationL())))();
  var DiagnosticsPropertyOfboolL = () => (DiagnosticsPropertyOfboolL = dart.constFn(diagnostics.DiagnosticsProperty$(boolL())))();
  var InputDecoratorL = () => (InputDecoratorL = dart.constFn(dart.legacy(input_decorator.InputDecorator)))();
  var JSArrayOfStringL = () => (JSArrayOfStringL = dart.constFn(_interceptors.JSArray$(StringL())))();
  var DiagnosticsPropertyOfFloatingLabelBehaviorL = () => (DiagnosticsPropertyOfFloatingLabelBehaviorL = dart.constFn(diagnostics.DiagnosticsProperty$(FloatingLabelBehaviorL())))();
  var DiagnosticsPropertyOfInputBorderL = () => (DiagnosticsPropertyOfInputBorderL = dart.constFn(diagnostics.DiagnosticsProperty$(InputBorderL())))();
  var _RenderInkFeaturesL = () => (_RenderInkFeaturesL = dart.constFn(dart.legacy(material._RenderInkFeatures)))();
  var JSArrayOfRenderObjectL = () => (JSArrayOfRenderObjectL = dart.constFn(_interceptors.JSArray$(RenderObjectL())))();
  var RectL = () => (RectL = dart.constFn(dart.legacy(ui.Rect)))();
  var VoidToRectL = () => (VoidToRectL = dart.constFn(dart.fnType(RectL(), [])))();
  var MaterialStatePropertyOfTextStyleL = () => (MaterialStatePropertyOfTextStyleL = dart.constFn(material_state.MaterialStateProperty$(TextStyleL())))();
  var MaterialStatePropertyLOfTextStyleL = () => (MaterialStatePropertyLOfTextStyleL = dart.constFn(dart.legacy(MaterialStatePropertyOfTextStyleL())))();
  var DiagnosticsPropertyOfMaterialStatePropertyLOfTextStyleL = () => (DiagnosticsPropertyOfMaterialStatePropertyLOfTextStyleL = dart.constFn(diagnostics.DiagnosticsProperty$(MaterialStatePropertyLOfTextStyleL())))();
  var DiagnosticsPropertyOfMaterialStatePropertyLOfColorL = () => (DiagnosticsPropertyOfMaterialStatePropertyLOfColorL = dart.constFn(diagnostics.DiagnosticsProperty$(MaterialStatePropertyLOfColorL())))();
  var MaterialStatePropertyOfdoubleL = () => (MaterialStatePropertyOfdoubleL = dart.constFn(material_state.MaterialStateProperty$(doubleL())))();
  var MaterialStatePropertyLOfdoubleL = () => (MaterialStatePropertyLOfdoubleL = dart.constFn(dart.legacy(MaterialStatePropertyOfdoubleL())))();
  var DiagnosticsPropertyOfMaterialStatePropertyLOfdoubleL = () => (DiagnosticsPropertyOfMaterialStatePropertyLOfdoubleL = dart.constFn(diagnostics.DiagnosticsProperty$(MaterialStatePropertyLOfdoubleL())))();
  var MaterialStatePropertyOfEdgeInsetsGeometryL = () => (MaterialStatePropertyOfEdgeInsetsGeometryL = dart.constFn(material_state.MaterialStateProperty$(EdgeInsetsGeometryL())))();
  var MaterialStatePropertyLOfEdgeInsetsGeometryL = () => (MaterialStatePropertyLOfEdgeInsetsGeometryL = dart.constFn(dart.legacy(MaterialStatePropertyOfEdgeInsetsGeometryL())))();
  var DiagnosticsPropertyOfMaterialStatePropertyLOfEdgeInsetsGeometryL = () => (DiagnosticsPropertyOfMaterialStatePropertyLOfEdgeInsetsGeometryL = dart.constFn(diagnostics.DiagnosticsProperty$(MaterialStatePropertyLOfEdgeInsetsGeometryL())))();
  var MaterialStatePropertyOfSizeL = () => (MaterialStatePropertyOfSizeL = dart.constFn(material_state.MaterialStateProperty$(SizeL())))();
  var MaterialStatePropertyLOfSizeL = () => (MaterialStatePropertyLOfSizeL = dart.constFn(dart.legacy(MaterialStatePropertyOfSizeL())))();
  var DiagnosticsPropertyOfMaterialStatePropertyLOfSizeL = () => (DiagnosticsPropertyOfMaterialStatePropertyLOfSizeL = dart.constFn(diagnostics.DiagnosticsProperty$(MaterialStatePropertyLOfSizeL())))();
  var MaterialStatePropertyOfBorderSideL = () => (MaterialStatePropertyOfBorderSideL = dart.constFn(material_state.MaterialStateProperty$(BorderSideL())))();
  var MaterialStatePropertyLOfBorderSideL = () => (MaterialStatePropertyLOfBorderSideL = dart.constFn(dart.legacy(MaterialStatePropertyOfBorderSideL())))();
  var DiagnosticsPropertyOfMaterialStatePropertyLOfBorderSideL = () => (DiagnosticsPropertyOfMaterialStatePropertyLOfBorderSideL = dart.constFn(diagnostics.DiagnosticsProperty$(MaterialStatePropertyLOfBorderSideL())))();
  var MaterialStatePropertyOfOutlinedBorderL = () => (MaterialStatePropertyOfOutlinedBorderL = dart.constFn(material_state.MaterialStateProperty$(OutlinedBorderL())))();
  var MaterialStatePropertyLOfOutlinedBorderL = () => (MaterialStatePropertyLOfOutlinedBorderL = dart.constFn(dart.legacy(MaterialStatePropertyOfOutlinedBorderL())))();
  var DiagnosticsPropertyOfMaterialStatePropertyLOfOutlinedBorderL = () => (DiagnosticsPropertyOfMaterialStatePropertyLOfOutlinedBorderL = dart.constFn(diagnostics.DiagnosticsProperty$(MaterialStatePropertyLOfOutlinedBorderL())))();
  var MaterialStatePropertyOfMouseCursorL = () => (MaterialStatePropertyOfMouseCursorL = dart.constFn(material_state.MaterialStateProperty$(MouseCursorL())))();
  var MaterialStatePropertyLOfMouseCursorL = () => (MaterialStatePropertyLOfMouseCursorL = dart.constFn(dart.legacy(MaterialStatePropertyOfMouseCursorL())))();
  var DiagnosticsPropertyOfMaterialStatePropertyLOfMouseCursorL = () => (DiagnosticsPropertyOfMaterialStatePropertyLOfMouseCursorL = dart.constFn(diagnostics.DiagnosticsProperty$(MaterialStatePropertyLOfMouseCursorL())))();
  var EnumPropertyOfMaterialTapTargetSizeL = () => (EnumPropertyOfMaterialTapTargetSizeL = dart.constFn(diagnostics.EnumProperty$(MaterialTapTargetSizeL())))();
  var TextStyleLAndTextStyleLAnddoubleLToTextStyleL = () => (TextStyleLAndTextStyleLAnddoubleLToTextStyleL = dart.constFn(dart.fnType(TextStyleL(), [TextStyleL(), TextStyleL(), doubleL()])))();
  var ColorN = () => (ColorN = dart.constFn(dart.nullable(ui.Color)))();
  var ColorNAndColorNAnddoubleToColorN = () => (ColorNAndColorNAnddoubleToColorN = dart.constFn(dart.fnType(ColorN(), [ColorN(), ColorN(), core.double])))();
  var doubleN = () => (doubleN = dart.constFn(dart.nullable(core.double)))();
  var numN = () => (numN = dart.constFn(dart.nullable(core.num)))();
  var numNAndnumNAnddoubleTodoubleN = () => (numNAndnumNAnddoubleTodoubleN = dart.constFn(dart.fnType(doubleN(), [numN(), numN(), core.double])))();
  var EdgeInsetsGeometryLAndEdgeInsetsGeometryLAnddoubleLToEdgeInsetsGeometryL = () => (EdgeInsetsGeometryLAndEdgeInsetsGeometryLAnddoubleLToEdgeInsetsGeometryL = dart.constFn(dart.fnType(EdgeInsetsGeometryL(), [EdgeInsetsGeometryL(), EdgeInsetsGeometryL(), doubleL()])))();
  var SizeN = () => (SizeN = dart.constFn(dart.nullable(ui.Size)))();
  var SizeNAndSizeNAnddoubleToSizeN = () => (SizeNAndSizeNAnddoubleToSizeN = dart.constFn(dart.fnType(SizeN(), [SizeN(), SizeN(), core.double])))();
  var ElevatedButtonThemeDataL = () => (ElevatedButtonThemeDataL = dart.constFn(dart.legacy(elevated_button_theme.ElevatedButtonThemeData)))();
  var ElevatedButtonThemeL = () => (ElevatedButtonThemeL = dart.constFn(dart.legacy(elevated_button_theme.ElevatedButtonTheme)))();
  var ContainedButtonThemeDataL = () => (ContainedButtonThemeDataL = dart.constFn(dart.legacy(elevated_button_theme.ContainedButtonThemeData)))();
  var DividerThemeDataL = () => (DividerThemeDataL = dart.constFn(dart.legacy(divider_theme.DividerThemeData)))();
  var DividerThemeL = () => (DividerThemeL = dart.constFn(dart.legacy(divider_theme.DividerTheme)))();
  var DialogThemeL = () => (DialogThemeL = dart.constFn(dart.legacy(dialog_theme.DialogTheme)))();
  var ChipThemeL = () => (ChipThemeL = dart.constFn(dart.legacy(chip_theme.ChipTheme)))();
  var ChipThemeDataL = () => (ChipThemeDataL = dart.constFn(dart.legacy(chip_theme.ChipThemeData)))();
  var EnumPropertyOfBrightnessL = () => (EnumPropertyOfBrightnessL = dart.constFn(diagnostics.EnumProperty$(BrightnessL())))();
  var CardThemeL = () => (CardThemeL = dart.constFn(dart.legacy(card_theme.CardTheme)))();
  var ClipL = () => (ClipL = dart.constFn(dart.legacy(ui.Clip)))();
  var DiagnosticsPropertyOfClipL = () => (DiagnosticsPropertyOfClipL = dart.constFn(diagnostics.DiagnosticsProperty$(ClipL())))();
  var _ParentInkResponseProviderL = () => (_ParentInkResponseProviderL = dart.constFn(dart.legacy(ink_well._ParentInkResponseProvider)))();
  var IterablePropertyOfStringL = () => (IterablePropertyOfStringL = dart.constFn(diagnostics.IterableProperty$(StringL())))();
  var DiagnosticsPropertyOfMouseCursorL = () => (DiagnosticsPropertyOfMouseCursorL = dart.constFn(diagnostics.DiagnosticsProperty$(MouseCursorL())))();
  var BoxShapeL = () => (BoxShapeL = dart.constFn(dart.legacy(box_border.BoxShape)))();
  var DiagnosticsPropertyOfBoxShapeL = () => (DiagnosticsPropertyOfBoxShapeL = dart.constFn(diagnostics.DiagnosticsProperty$(BoxShapeL())))();
  var _HighlightTypeL = () => (_HighlightTypeL = dart.constFn(dart.legacy(ink_well._HighlightType)))();
  var InkHighlightL = () => (InkHighlightL = dart.constFn(dart.legacy(ink_highlight.InkHighlight)))();
  var LinkedMapOf_HighlightTypeL$InkHighlightL = () => (LinkedMapOf_HighlightTypeL$InkHighlightL = dart.constFn(_js_helper.LinkedMap$(_HighlightTypeL(), InkHighlightL())))();
  var _ParentInkResponseStateL = () => (_ParentInkResponseStateL = dart.constFn(dart.legacy(ink_well._ParentInkResponseState)))();
  var ObserverListOf_ParentInkResponseStateL = () => (ObserverListOf_ParentInkResponseStateL = dart.constFn(observer_list.ObserverList$(_ParentInkResponseStateL())))();
  var InkHighlightLToboolL = () => (InkHighlightLToboolL = dart.constFn(dart.fnType(boolL(), [InkHighlightL()])))();
  var ActivateIntentL = () => (ActivateIntentL = dart.constFn(dart.legacy(actions.ActivateIntent)))();
  var CallbackActionOfActivateIntentL = () => (CallbackActionOfActivateIntentL = dart.constFn(actions.CallbackAction$(ActivateIntentL())))();
  var TypeL = () => (TypeL = dart.constFn(dart.legacy(core.Type)))();
  var IntentL = () => (IntentL = dart.constFn(dart.legacy(actions.Intent)))();
  var ActionOfIntentL = () => (ActionOfIntentL = dart.constFn(actions.Action$(IntentL())))();
  var ActionLOfIntentL = () => (ActionLOfIntentL = dart.constFn(dart.legacy(ActionOfIntentL())))();
  var LinkedMapOfTypeL$ActionLOfIntentL = () => (LinkedMapOfTypeL$ActionLOfIntentL = dart.constFn(_js_helper.LinkedMap$(TypeL(), ActionLOfIntentL())))();
  var _InkResponseStateWidgetL = () => (_InkResponseStateWidgetL = dart.constFn(dart.legacy(ink_well._InkResponseStateWidget)))();
  var InteractiveInkFeatureL = () => (InteractiveInkFeatureL = dart.constFn(dart.legacy(ink_well.InteractiveInkFeature)))();
  var _HashSetOfInteractiveInkFeatureL = () => (_HashSetOfInteractiveInkFeatureL = dart.constFn(collection._HashSet$(InteractiveInkFeatureL())))();
  var BottomNavigationBarTypeL = () => (BottomNavigationBarTypeL = dart.constFn(dart.legacy(bottom_navigation_bar.BottomNavigationBarType)))();
  var BottomNavigationBarItemL = () => (BottomNavigationBarItemL = dart.constFn(dart.legacy(bottom_navigation_bar_item.BottomNavigationBarItem)))();
  var BottomNavigationBarItemLToboolL = () => (BottomNavigationBarItemLToboolL = dart.constFn(dart.fnType(boolL(), [BottomNavigationBarItemL()])))();
  var _CircleL = () => (_CircleL = dart.constFn(dart.legacy(bottom_navigation_bar._Circle)))();
  var ListQueueOf_CircleL = () => (ListQueueOf_CircleL = dart.constFn(collection.ListQueue$(_CircleL())))();
  var CurvedAnimationL = () => (CurvedAnimationL = dart.constFn(dart.legacy(animations.CurvedAnimation)))();
  var ListOfCurvedAnimationL = () => (ListOfCurvedAnimationL = dart.constFn(core.List$(CurvedAnimationL())))();
  var intLToCurvedAnimationL = () => (intLToCurvedAnimationL = dart.constFn(dart.fnType(CurvedAnimationL(), [intL()])))();
  var AnimationStatusL = () => (AnimationStatusL = dart.constFn(dart.legacy(animation.AnimationStatus)))();
  var AnimationStatusLToNullN = () => (AnimationStatusLToNullN = dart.constFn(dart.fnType(core.Null, [AnimationStatusL()])))();
  var BottomNavigationBarL = () => (BottomNavigationBarL = dart.constFn(dart.legacy(bottom_navigation_bar.BottomNavigationBar)))();
  var doubleLAnddoubleLTodoubleL = () => (doubleLAnddoubleLTodoubleL = dart.constFn(dart.fnType(doubleL(), [doubleL(), doubleL()])))();
  var IterableOfAnimationLOfdoubleL = () => (IterableOfAnimationLOfdoubleL = dart.constFn(core.Iterable$(AnimationLOfdoubleL())))();
  var IterableLOfAnimationLOfdoubleL = () => (IterableLOfAnimationLOfdoubleL = dart.constFn(dart.legacy(IterableOfAnimationLOfdoubleL())))();
  var IterableLOfAnimationLOfdoubleLTodoubleL = () => (IterableLOfAnimationLOfdoubleLTodoubleL = dart.constFn(dart.fnType(doubleL(), [IterableLOfAnimationLOfdoubleL()])))();
  var _RadialPainterL = () => (_RadialPainterL = dart.constFn(dart.legacy(bottom_navigation_bar._RadialPainter)))();
  var BottomNavigationBarThemeDataL = () => (BottomNavigationBarThemeDataL = dart.constFn(dart.legacy(bottom_navigation_bar_theme.BottomNavigationBarThemeData)))();
  var DiagnosticsPropertyOfBottomNavigationBarTypeL = () => (DiagnosticsPropertyOfBottomNavigationBarTypeL = dart.constFn(diagnostics.DiagnosticsProperty$(BottomNavigationBarTypeL())))();
  var BottomNavigationBarThemeL = () => (BottomNavigationBarThemeL = dart.constFn(dart.legacy(bottom_navigation_bar_theme.BottomNavigationBarTheme)))();
  var BottomAppBarThemeL = () => (BottomAppBarThemeL = dart.constFn(dart.legacy(bottom_app_bar_theme.BottomAppBarTheme)))();
  var NotchedShapeL = () => (NotchedShapeL = dart.constFn(dart.legacy(notched_shapes.NotchedShape)))();
  var DiagnosticsPropertyOfNotchedShapeL = () => (DiagnosticsPropertyOfNotchedShapeL = dart.constFn(diagnostics.DiagnosticsProperty$(NotchedShapeL())))();
  var MaterialBannerThemeDataL = () => (MaterialBannerThemeDataL = dart.constFn(dart.legacy(banner_theme.MaterialBannerThemeData)))();
  var MaterialBannerThemeL = () => (MaterialBannerThemeL = dart.constFn(dart.legacy(banner_theme.MaterialBannerTheme)))();
  var ThemeDataL = () => (ThemeDataL = dart.constFn(dart.legacy(theme_data.ThemeData)))();
  var VoidToThemeDataL = () => (VoidToThemeDataL = dart.constFn(dart.fnType(ThemeDataL(), [])))();
  var EnumPropertyOfTargetPlatformL = () => (EnumPropertyOfTargetPlatformL = dart.constFn(diagnostics.EnumProperty$(TargetPlatformL())))();
  var ButtonThemeDataL = () => (ButtonThemeDataL = dart.constFn(dart.legacy(button_theme.ButtonThemeData)))();
  var DiagnosticsPropertyOfButtonThemeDataL = () => (DiagnosticsPropertyOfButtonThemeDataL = dart.constFn(diagnostics.DiagnosticsProperty$(ButtonThemeDataL())))();
  var DiagnosticsPropertyOfToggleButtonsThemeDataL = () => (DiagnosticsPropertyOfToggleButtonsThemeDataL = dart.constFn(diagnostics.DiagnosticsProperty$(ToggleButtonsThemeDataL())))();
  var TextThemeL = () => (TextThemeL = dart.constFn(dart.legacy(text_theme.TextTheme)))();
  var DiagnosticsPropertyOfTextThemeL = () => (DiagnosticsPropertyOfTextThemeL = dart.constFn(diagnostics.DiagnosticsProperty$(TextThemeL())))();
  var DiagnosticsPropertyOfSliderThemeDataL = () => (DiagnosticsPropertyOfSliderThemeDataL = dart.constFn(diagnostics.DiagnosticsProperty$(SliderThemeDataL())))();
  var DiagnosticsPropertyOfTabBarThemeL = () => (DiagnosticsPropertyOfTabBarThemeL = dart.constFn(diagnostics.DiagnosticsProperty$(TabBarThemeL())))();
  var DiagnosticsPropertyOfTooltipThemeDataL = () => (DiagnosticsPropertyOfTooltipThemeDataL = dart.constFn(diagnostics.DiagnosticsProperty$(TooltipThemeDataL())))();
  var DiagnosticsPropertyOfCardThemeL = () => (DiagnosticsPropertyOfCardThemeL = dart.constFn(diagnostics.DiagnosticsProperty$(CardThemeL())))();
  var DiagnosticsPropertyOfChipThemeDataL = () => (DiagnosticsPropertyOfChipThemeDataL = dart.constFn(diagnostics.DiagnosticsProperty$(ChipThemeDataL())))();
  var DiagnosticsPropertyOfPageTransitionsThemeL = () => (DiagnosticsPropertyOfPageTransitionsThemeL = dart.constFn(diagnostics.DiagnosticsProperty$(PageTransitionsThemeL())))();
  var AppBarThemeL = () => (AppBarThemeL = dart.constFn(dart.legacy(app_bar_theme.AppBarTheme)))();
  var DiagnosticsPropertyOfAppBarThemeL = () => (DiagnosticsPropertyOfAppBarThemeL = dart.constFn(diagnostics.DiagnosticsProperty$(AppBarThemeL())))();
  var DiagnosticsPropertyOfBottomAppBarThemeL = () => (DiagnosticsPropertyOfBottomAppBarThemeL = dart.constFn(diagnostics.DiagnosticsProperty$(BottomAppBarThemeL())))();
  var ColorSchemeL = () => (ColorSchemeL = dart.constFn(dart.legacy(color_scheme.ColorScheme)))();
  var DiagnosticsPropertyOfColorSchemeL = () => (DiagnosticsPropertyOfColorSchemeL = dart.constFn(diagnostics.DiagnosticsProperty$(ColorSchemeL())))();
  var DiagnosticsPropertyOfDialogThemeL = () => (DiagnosticsPropertyOfDialogThemeL = dart.constFn(diagnostics.DiagnosticsProperty$(DialogThemeL())))();
  var FloatingActionButtonThemeDataL = () => (FloatingActionButtonThemeDataL = dart.constFn(dart.legacy(floating_action_button_theme.FloatingActionButtonThemeData)))();
  var DiagnosticsPropertyOfFloatingActionButtonThemeDataL = () => (DiagnosticsPropertyOfFloatingActionButtonThemeDataL = dart.constFn(diagnostics.DiagnosticsProperty$(FloatingActionButtonThemeDataL())))();
  var DiagnosticsPropertyOfNavigationRailThemeDataL = () => (DiagnosticsPropertyOfNavigationRailThemeDataL = dart.constFn(diagnostics.DiagnosticsProperty$(NavigationRailThemeDataL())))();
  var TypographyL = () => (TypographyL = dart.constFn(dart.legacy(typography$.Typography)))();
  var DiagnosticsPropertyOfTypographyL = () => (DiagnosticsPropertyOfTypographyL = dart.constFn(diagnostics.DiagnosticsProperty$(TypographyL())))();
  var CupertinoThemeDataL = () => (CupertinoThemeDataL = dart.constFn(dart.legacy(theme.CupertinoThemeData)))();
  var DiagnosticsPropertyOfCupertinoThemeDataL = () => (DiagnosticsPropertyOfCupertinoThemeDataL = dart.constFn(diagnostics.DiagnosticsProperty$(CupertinoThemeDataL())))();
  var DiagnosticsPropertyOfSnackBarThemeDataL = () => (DiagnosticsPropertyOfSnackBarThemeDataL = dart.constFn(diagnostics.DiagnosticsProperty$(SnackBarThemeDataL())))();
  var BottomSheetThemeDataL = () => (BottomSheetThemeDataL = dart.constFn(dart.legacy(bottom_sheet_theme.BottomSheetThemeData)))();
  var DiagnosticsPropertyOfBottomSheetThemeDataL = () => (DiagnosticsPropertyOfBottomSheetThemeDataL = dart.constFn(diagnostics.DiagnosticsProperty$(BottomSheetThemeDataL())))();
  var DiagnosticsPropertyOfPopupMenuThemeDataL = () => (DiagnosticsPropertyOfPopupMenuThemeDataL = dart.constFn(diagnostics.DiagnosticsProperty$(PopupMenuThemeDataL())))();
  var DiagnosticsPropertyOfMaterialBannerThemeDataL = () => (DiagnosticsPropertyOfMaterialBannerThemeDataL = dart.constFn(diagnostics.DiagnosticsProperty$(MaterialBannerThemeDataL())))();
  var DiagnosticsPropertyOfDividerThemeDataL = () => (DiagnosticsPropertyOfDividerThemeDataL = dart.constFn(diagnostics.DiagnosticsProperty$(DividerThemeDataL())))();
  var ButtonBarThemeDataL = () => (ButtonBarThemeDataL = dart.constFn(dart.legacy(button_bar_theme.ButtonBarThemeData)))();
  var DiagnosticsPropertyOfButtonBarThemeDataL = () => (DiagnosticsPropertyOfButtonBarThemeDataL = dart.constFn(diagnostics.DiagnosticsProperty$(ButtonBarThemeDataL())))();
  var DiagnosticsPropertyOfTimePickerThemeDataL = () => (DiagnosticsPropertyOfTimePickerThemeDataL = dart.constFn(diagnostics.DiagnosticsProperty$(TimePickerThemeDataL())))();
  var DiagnosticsPropertyOfBottomNavigationBarThemeDataL = () => (DiagnosticsPropertyOfBottomNavigationBarThemeDataL = dart.constFn(diagnostics.DiagnosticsProperty$(BottomNavigationBarThemeDataL())))();
  var DiagnosticsPropertyOfTextButtonThemeDataL = () => (DiagnosticsPropertyOfTextButtonThemeDataL = dart.constFn(diagnostics.DiagnosticsProperty$(TextButtonThemeDataL())))();
  var DiagnosticsPropertyOfElevatedButtonThemeDataL = () => (DiagnosticsPropertyOfElevatedButtonThemeDataL = dart.constFn(diagnostics.DiagnosticsProperty$(ElevatedButtonThemeDataL())))();
  var DiagnosticsPropertyOfOutlinedButtonThemeDataL = () => (DiagnosticsPropertyOfOutlinedButtonThemeDataL = dart.constFn(diagnostics.DiagnosticsProperty$(OutlinedButtonThemeDataL())))();
  var _IdentityThemeDataCacheKeyL = () => (_IdentityThemeDataCacheKeyL = dart.constFn(dart.legacy(theme_data._IdentityThemeDataCacheKey)))();
  var _FifoCacheOf_IdentityThemeDataCacheKeyL$ThemeDataL = () => (_FifoCacheOf_IdentityThemeDataCacheKeyL$ThemeDataL = dart.constFn(theme_data._FifoCache$(_IdentityThemeDataCacheKeyL(), ThemeDataL())))();
  var ButtonBarLayoutBehaviorL = () => (ButtonBarLayoutBehaviorL = dart.constFn(dart.legacy(button_theme.ButtonBarLayoutBehavior)))();
  var ButtonThemeL = () => (ButtonThemeL = dart.constFn(dart.legacy(button_theme.ButtonTheme)))();
  var FlatButtonL = () => (FlatButtonL = dart.constFn(dart.legacy(flat_button.FlatButton)))();
  var OutlineButtonL = () => (OutlineButtonL = dart.constFn(dart.legacy(outline_button.OutlineButton)))();
  var MaterialButtonL = () => (MaterialButtonL = dart.constFn(dart.legacy(material_button.MaterialButton)))();
  var MaterialButtonWithIconMixinL = () => (MaterialButtonWithIconMixinL = dart.constFn(dart.legacy(material_button.MaterialButtonWithIconMixin)))();
  var EnumPropertyOfButtonTextThemeL = () => (EnumPropertyOfButtonTextThemeL = dart.constFn(diagnostics.EnumProperty$(ButtonTextThemeL())))();
  var MainAxisAlignmentL = () => (MainAxisAlignmentL = dart.constFn(dart.legacy(flex.MainAxisAlignment)))();
  var DiagnosticsPropertyOfMainAxisAlignmentL = () => (DiagnosticsPropertyOfMainAxisAlignmentL = dart.constFn(diagnostics.DiagnosticsProperty$(MainAxisAlignmentL())))();
  var MainAxisSizeL = () => (MainAxisSizeL = dart.constFn(dart.legacy(flex.MainAxisSize)))();
  var DiagnosticsPropertyOfMainAxisSizeL = () => (DiagnosticsPropertyOfMainAxisSizeL = dart.constFn(diagnostics.DiagnosticsProperty$(MainAxisSizeL())))();
  var DiagnosticsPropertyOfButtonBarLayoutBehaviorL = () => (DiagnosticsPropertyOfButtonBarLayoutBehaviorL = dart.constFn(diagnostics.DiagnosticsProperty$(ButtonBarLayoutBehaviorL())))();
  var VerticalDirectionL = () => (VerticalDirectionL = dart.constFn(dart.legacy(basic_types.VerticalDirection)))();
  var DiagnosticsPropertyOfVerticalDirectionL = () => (DiagnosticsPropertyOfVerticalDirectionL = dart.constFn(diagnostics.DiagnosticsProperty$(VerticalDirectionL())))();
  var ButtonBarThemeL = () => (ButtonBarThemeL = dart.constFn(dart.legacy(button_bar_theme.ButtonBarTheme)))();
  var PaddingL = () => (PaddingL = dart.constFn(dart.legacy(basic.Padding)))();
  var WidgetLToPaddingL = () => (WidgetLToPaddingL = dart.constFn(dart.fnType(PaddingL(), [WidgetL()])))();
  var _RenderButtonBarRowL = () => (_RenderButtonBarRowL = dart.constFn(dart.legacy(button_bar._RenderButtonBarRow)))();
  var DraggableScrollableNotificationL = () => (DraggableScrollableNotificationL = dart.constFn(dart.legacy(draggable_scrollable_sheet.DraggableScrollableNotification)))();
  var NotificationListenerOfDraggableScrollableNotificationL = () => (NotificationListenerOfDraggableScrollableNotificationL = dart.constFn(notification_listener.NotificationListener$(DraggableScrollableNotificationL())))();
  var _ModalBottomSheetLayoutL = () => (_ModalBottomSheetLayoutL = dart.constFn(dart.legacy(bottom_sheet._ModalBottomSheetLayout)))();
  var _ScaffoldSlotL = () => (_ScaffoldSlotL = dart.constFn(dart.legacy(scaffold$._ScaffoldSlot)))();
  var _BodyBoxConstraintsL = () => (_BodyBoxConstraintsL = dart.constFn(dart.legacy(scaffold$._BodyBoxConstraints)))();
  var MediaQueryL = () => (MediaQueryL = dart.constFn(dart.legacy(media_query.MediaQuery)))();
  var BuildContextLAndBoxConstraintsLToMediaQueryL = () => (BuildContextLAndBoxConstraintsLToMediaQueryL = dart.constFn(dart.fnType(MediaQueryL(), [BuildContextL(), BoxConstraintsL()])))();
  var _ScaffoldLayoutL = () => (_ScaffoldLayoutL = dart.constFn(dart.legacy(scaffold$._ScaffoldLayout)))();
  var _FloatingActionButtonTransitionL = () => (_FloatingActionButtonTransitionL = dart.constFn(dart.legacy(scaffold$._FloatingActionButtonTransition)))();
  var AnimationMinOfdoubleL = () => (AnimationMinOfdoubleL = dart.constFn(animations.AnimationMin$(doubleL())))();
  var FloatingActionButtonL = () => (FloatingActionButtonL = dart.constFn(dart.legacy(floating_action_button.FloatingActionButton)))();
  var ScaffoldStateL = () => (ScaffoldStateL = dart.constFn(dart.legacy(scaffold$.ScaffoldState)))();
  var _ScaffoldScopeL = () => (_ScaffoldScopeL = dart.constFn(dart.legacy(scaffold$._ScaffoldScope)))();
  var DrawerControllerStateL = () => (DrawerControllerStateL = dart.constFn(dart.legacy(drawer.DrawerControllerState)))();
  var GlobalKeyOfDrawerControllerStateL = () => (GlobalKeyOfDrawerControllerStateL = dart.constFn(framework.GlobalKey$(DrawerControllerStateL())))();
  var ScaffoldFeatureControllerOfSnackBarL$SnackBarClosedReasonL = () => (ScaffoldFeatureControllerOfSnackBarL$SnackBarClosedReasonL = dart.constFn(scaffold$.ScaffoldFeatureController$(SnackBarL(), SnackBarClosedReasonL())))();
  var ScaffoldFeatureControllerLOfSnackBarL$SnackBarClosedReasonL = () => (ScaffoldFeatureControllerLOfSnackBarL$SnackBarClosedReasonL = dart.constFn(dart.legacy(ScaffoldFeatureControllerOfSnackBarL$SnackBarClosedReasonL())))();
  var ListQueueOfScaffoldFeatureControllerLOfSnackBarL$SnackBarClosedReasonL = () => (ListQueueOfScaffoldFeatureControllerLOfSnackBarL$SnackBarClosedReasonL = dart.constFn(collection.ListQueue$(ScaffoldFeatureControllerLOfSnackBarL$SnackBarClosedReasonL())))();
  var _StandardBottomSheetL = () => (_StandardBottomSheetL = dart.constFn(dart.legacy(scaffold$._StandardBottomSheet)))();
  var JSArrayOf_StandardBottomSheetL = () => (JSArrayOf_StandardBottomSheetL = dart.constFn(_interceptors.JSArray$(_StandardBottomSheetL())))();
  var CompleterOfSnackBarClosedReasonL = () => (CompleterOfSnackBarClosedReasonL = dart.constFn(async.Completer$(SnackBarClosedReasonL())))();
  var voidToNullN = () => (voidToNullN = dart.constFn(dart.fnType(core.Null, [dart.void])))();
  var DraggableScrollableNotificationLToboolL = () => (DraggableScrollableNotificationLToboolL = dart.constFn(dart.fnType(boolL(), [DraggableScrollableNotificationL()])))();
  var NotificationListenerLOfDraggableScrollableNotificationL = () => (NotificationListenerLOfDraggableScrollableNotificationL = dart.constFn(dart.legacy(NotificationListenerOfDraggableScrollableNotificationL())))();
  var BuildContextLToNotificationListenerLOfDraggableScrollableNotificationL = () => (BuildContextLToNotificationListenerLOfDraggableScrollableNotificationL = dart.constFn(dart.fnType(NotificationListenerLOfDraggableScrollableNotificationL(), [BuildContextL()])))();
  var _StandardBottomSheetStateL = () => (_StandardBottomSheetStateL = dart.constFn(dart.legacy(scaffold$._StandardBottomSheetState)))();
  var GlobalKeyOf_StandardBottomSheetStateL = () => (GlobalKeyOf_StandardBottomSheetStateL = dart.constFn(framework.GlobalKey$(_StandardBottomSheetStateL())))();
  var voidTovoid = () => (voidTovoid = dart.constFn(dart.fnType(dart.void, [dart.void])))();
  var FnToNullN = () => (FnToNullN = dart.constFn(dart.fnType(core.Null, [VoidToLvoid()])))();
  var ScaffoldL = () => (ScaffoldL = dart.constFn(dart.legacy(scaffold$.Scaffold)))();
  var LayoutIdL = () => (LayoutIdL = dart.constFn(dart.legacy(basic.LayoutId)))();
  var JSArrayOfLayoutIdL = () => (JSArrayOfLayoutIdL = dart.constFn(_interceptors.JSArray$(LayoutIdL())))();
  var CustomMultiChildLayoutL = () => (CustomMultiChildLayoutL = dart.constFn(dart.legacy(basic.CustomMultiChildLayout)))();
  var BuildContextLAndWidgetLToCustomMultiChildLayoutL = () => (BuildContextLAndWidgetLToCustomMultiChildLayoutL = dart.constFn(dart.fnType(CustomMultiChildLayoutL(), [BuildContextL(), WidgetL()])))();
  var MaterialTypeL = () => (MaterialTypeL = dart.constFn(dart.legacy(material.MaterialType)))();
  var EnumPropertyOfMaterialTypeL = () => (EnumPropertyOfMaterialTypeL = dart.constFn(diagnostics.EnumProperty$(MaterialTypeL())))();
  var BorderRadiusGeometryL = () => (BorderRadiusGeometryL = dart.constFn(dart.legacy(border_radius.BorderRadiusGeometry)))();
  var DiagnosticsPropertyOfBorderRadiusGeometryL = () => (DiagnosticsPropertyOfBorderRadiusGeometryL = dart.constFn(diagnostics.DiagnosticsProperty$(BorderRadiusGeometryL())))();
  var LayoutChangedNotificationL = () => (LayoutChangedNotificationL = dart.constFn(dart.legacy(notification_listener.LayoutChangedNotification)))();
  var NotificationListenerOfLayoutChangedNotificationL = () => (NotificationListenerOfLayoutChangedNotificationL = dart.constFn(notification_listener.NotificationListener$(LayoutChangedNotificationL())))();
  var LayoutChangedNotificationLToboolL = () => (LayoutChangedNotificationLToboolL = dart.constFn(dart.fnType(boolL(), [LayoutChangedNotificationL()])))();
  var InkFeatureL = () => (InkFeatureL = dart.constFn(dart.legacy(material.InkFeature)))();
  var JSArrayOfInkFeatureL = () => (JSArrayOfInkFeatureL = dart.constFn(_interceptors.JSArray$(InkFeatureL())))();
  var TweenLOfdoubleL = () => (TweenLOfdoubleL = dart.constFn(dart.legacy(TweenOfdoubleL())))();
  var dynamicToTweenLOfdoubleL = () => (dynamicToTweenLOfdoubleL = dart.constFn(dart.fnType(TweenLOfdoubleL(), [dart.dynamic])))();
  var ColorTweenL = () => (ColorTweenL = dart.constFn(dart.legacy(tween.ColorTween)))();
  var dynamicToColorTweenL = () => (dynamicToColorTweenL = dart.constFn(dart.fnType(ColorTweenL(), [dart.dynamic])))();
  var ShapeBorderTweenL = () => (ShapeBorderTweenL = dart.constFn(dart.legacy(material.ShapeBorderTween)))();
  var dynamicToShapeBorderTweenL = () => (dynamicToShapeBorderTweenL = dart.constFn(dart.fnType(ShapeBorderTweenL(), [dart.dynamic])))();
  var _ShapeBorderPainterL = () => (_ShapeBorderPainterL = dart.constFn(dart.legacy(material._ShapeBorderPainter)))();
  var LinkedMapOfMaterialTypeL$BorderRadiusL = () => (LinkedMapOfMaterialTypeL$BorderRadiusL = dart.constFn(_js_helper.LinkedMap$(MaterialTypeL(), BorderRadiusL())))();
  var MaterialL = () => (MaterialL = dart.constFn(dart.legacy(material.Material)))();
  var MaterialLocalizationsL = () => (MaterialLocalizationsL = dart.constFn(dart.legacy(material_localizations.MaterialLocalizations)))();
  var WidgetLToboolL = () => (WidgetLToboolL = dart.constFn(dart.fnType(boolL(), [WidgetL()])))();
  var ReorderableListViewL = () => (ReorderableListViewL = dart.constFn(dart.legacy(reorderable_list.ReorderableListView)))();
  var _ReorderableListContentL = () => (_ReorderableListContentL = dart.constFn(dart.legacy(reorderable_list._ReorderableListContent)))();
  var BuildContextLTo_ReorderableListContentL = () => (BuildContextLTo_ReorderableListContentL = dart.constFn(dart.fnType(_ReorderableListContentL(), [BuildContextL()])))();
  var OverlayEntryL = () => (OverlayEntryL = dart.constFn(dart.legacy(overlay$.OverlayEntry)))();
  var JSArrayOfOverlayEntryL = () => (JSArrayOfOverlayEntryL = dart.constFn(_interceptors.JSArray$(OverlayEntryL())))();
  var GlobalObjectKeyOfStateLOfStatefulWidgetL = () => (GlobalObjectKeyOfStateLOfStatefulWidgetL = dart.constFn(framework.GlobalObjectKey$(StateLOfStatefulWidgetL())))();
  var intLAndintLTovoid = () => (intLAndintLTovoid = dart.constFn(dart.fnType(dart.void, [intL(), intL()])))();
  var CustomSemanticsActionL = () => (CustomSemanticsActionL = dart.constFn(dart.legacy(semantics.CustomSemanticsAction)))();
  var LinkedMapOfCustomSemanticsActionL$VoidToLvoid = () => (LinkedMapOfCustomSemanticsActionL$VoidToLvoid = dart.constFn(_js_helper.LinkedMap$(CustomSemanticsActionL(), VoidToLvoid())))();
  var VoidToWidgetL = () => (VoidToWidgetL = dart.constFn(dart.fnType(WidgetL(), [])))();
  var KeyL = () => (KeyL = dart.constFn(dart.legacy(key.Key)))();
  var LongPressDraggableOfKeyL = () => (LongPressDraggableOfKeyL = dart.constFn(drag_target.LongPressDraggable$(KeyL())))();
  var VelocityL = () => (VelocityL = dart.constFn(dart.legacy(velocity_tracker.Velocity)))();
  var VelocityLAndOffsetLToNullN = () => (VelocityLAndOffsetLToNullN = dart.constFn(dart.fnType(core.Null, [VelocityL(), OffsetL()])))();
  var ListOfKeyL = () => (ListOfKeyL = dart.constFn(core.List$(KeyL())))();
  var ListLOfKeyL = () => (ListLOfKeyL = dart.constFn(dart.legacy(ListOfKeyL())))();
  var ListL = () => (ListL = dart.constFn(dart.legacy(core.List)))();
  var BuildContextLAndListLOfKeyLAndListLToWidgetL = () => (BuildContextLAndListLOfKeyLAndListLToWidgetL = dart.constFn(dart.fnType(WidgetL(), [BuildContextL(), ListLOfKeyL(), ListL()])))();
  var DragTargetOfKeyL = () => (DragTargetOfKeyL = dart.constFn(drag_target.DragTarget$(KeyL())))();
  var KeyLToboolL = () => (KeyLToboolL = dart.constFn(dart.fnType(boolL(), [KeyL()])))();
  var KeyLToNullN = () => (KeyLToNullN = dart.constFn(dart.fnType(core.Null, [KeyL()])))();
  var ObjectLToNullN = () => (ObjectLToNullN = dart.constFn(dart.fnType(core.Null, [ObjectL()])))();
  var DragTargetLOfKeyL = () => (DragTargetLOfKeyL = dart.constFn(dart.legacy(DragTargetOfKeyL())))();
  var BuildContextLToDragTargetLOfKeyL = () => (BuildContextLToDragTargetLOfKeyL = dart.constFn(dart.fnType(DragTargetLOfKeyL(), [BuildContextL()])))();
  var SingleChildScrollViewL = () => (SingleChildScrollViewL = dart.constFn(dart.legacy(single_child_scroll_view.SingleChildScrollView)))();
  var BuildContextLAndBoxConstraintsLToSingleChildScrollViewL = () => (BuildContextLAndBoxConstraintsLToSingleChildScrollViewL = dart.constFn(dart.fnType(SingleChildScrollViewL(), [BuildContextL(), BoxConstraintsL()])))();
  var _MaterialLocalizationsDelegateL = () => (_MaterialLocalizationsDelegateL = dart.constFn(dart.legacy(material_localizations._MaterialLocalizationsDelegate)))();
  var SynchronousFutureOfMaterialLocalizationsL = () => (SynchronousFutureOfMaterialLocalizationsL = dart.constFn(synchronous_future.SynchronousFuture$(MaterialLocalizationsL())))();
  var _InheritedThemeL = () => (_InheritedThemeL = dart.constFn(dart.legacy(theme$._InheritedTheme)))();
  var DiagnosticsPropertyOfThemeDataL = () => (DiagnosticsPropertyOfThemeDataL = dart.constFn(diagnostics.DiagnosticsProperty$(ThemeDataL())))();
  var ThemeDataTweenL = () => (ThemeDataTweenL = dart.constFn(dart.legacy(theme$.ThemeDataTween)))();
  var dynamicToThemeDataTweenL = () => (dynamicToThemeDataTweenL = dart.constFn(dart.fnType(ThemeDataTweenL(), [dart.dynamic])))();
  var DiagnosticsPropertyOfThemeDataTweenL = () => (DiagnosticsPropertyOfThemeDataTweenL = dart.constFn(diagnostics.DiagnosticsProperty$(ThemeDataTweenL())))();
  var _ToolbarContainerLayoutL = () => (_ToolbarContainerLayoutL = dart.constFn(dart.legacy(app_bar._ToolbarContainerLayout)))();
  var PageRouteL = () => (PageRouteL = dart.constFn(dart.legacy(pages.PageRoute)))();
  var SystemUiOverlayStyleL = () => (SystemUiOverlayStyleL = dart.constFn(dart.legacy(system_chrome.SystemUiOverlayStyle)))();
  var AnnotatedRegionOfSystemUiOverlayStyleL = () => (AnnotatedRegionOfSystemUiOverlayStyleL = dart.constFn(annotated_region.AnnotatedRegion$(SystemUiOverlayStyleL())))();
  var RenderSliverFloatingPersistentHeaderL = () => (RenderSliverFloatingPersistentHeaderL = dart.constFn(dart.legacy(sliver_persistent_header.RenderSliverFloatingPersistentHeader)))();
  var _SliverAppBarDelegateL = () => (_SliverAppBarDelegateL = dart.constFn(dart.legacy(app_bar._SliverAppBarDelegate)))();
  var SliverAppBarL = () => (SliverAppBarL = dart.constFn(dart.legacy(app_bar.SliverAppBar)))();
  var _RenderAppBarTitleBoxL = () => (_RenderAppBarTitleBoxL = dart.constFn(dart.legacy(app_bar._RenderAppBarTitleBox)))();
  const CT = Object.create(null);
  var L46 = "package:flutter/src/material/snack_bar_theme.dart";
  var L92 = "package:flutter/src/material/theme_data.dart";
  var L35 = "package:flutter/src/material/tooltip_theme.dart";
  var L7 = "file:///C:/flutter/packages/flutter/lib/src/material/snack_bar.dart";
  var L115 = "package:flutter/src/material/app_bar_theme.dart";
  var L29 = "package:flutter/src/material/outline_button.dart";
  var L24 = "file:///C:/flutter/packages/flutter/lib/src/material/raised_button.dart";
  var L31 = "package:flutter/src/material/button.dart";
  var L49 = "package:flutter/src/material/slider_theme.dart";
  var L39 = "package:flutter/src/material/time_picker_theme.dart";
  var L56 = "file:///C:/flutter/packages/flutter/lib/src/material/navigation_rail.dart";
  var L109 = "package:flutter/src/material/reorderable_list.dart";
  var L12 = "package:flutter/src/material/floating_action_button.dart";
  var L113 = "package:flutter/src/material/theme.dart";
  var L116 = "package:flutter/src/material/app_bar.dart";
  var L73 = "package:flutter/src/material/divider_theme.dart";
  var L54 = "file:///C:/flutter/packages/flutter/lib/src/material/outlined_button_theme.dart";
  var L9 = "file:///C:/flutter/packages/flutter/lib/src/material/floating_action_button_location.dart";
  var L117 = "file:///C:/flutter/packages/flutter/lib/src/material/app_bar.dart";
  var L4 = "package:flutter/src/material/time.dart";
  var L78 = "file:///C:/flutter/packages/flutter/lib/src/material/card_theme.dart";
  var L38 = "file:///C:/flutter/packages/flutter/lib/src/material/time_picker_theme.dart";
  var L1 = "package:flutter/src/material/icon_button.dart";
  var L62 = "package:flutter/src/material/ink_well.dart";
  var L89 = "package:flutter/src/material/bottom_app_bar_theme.dart";
  var L42 = "package:flutter/src/material/tabs.dart";
  var L68 = "file:///C:/flutter/packages/flutter/lib/src/material/button_style.dart";
  var L94 = "file:///C:/flutter/packages/flutter/lib/src/material/color_scheme.dart";
  var L63 = "package:flutter/src/material/ink_splash.dart";
  var L57 = "package:flutter/src/material/navigation_rail.dart";
  var L112 = "file:///C:/flutter/packages/flutter/lib/src/material/theme.dart";
  var L61 = "file:///C:/flutter/packages/flutter/lib/src/material/input_decorator.dart";
  var L102 = "file:///C:/flutter/packages/flutter/lib/src/material/bottom_sheet.dart";
  var L81 = "package:flutter/src/material/ink_highlight.dart";
  var L17 = "file:///C:/flutter/packages/flutter/lib/src/material/list_tile.dart";
  var L8 = "package:flutter/src/material/floating_action_button_location.dart";
  var L58 = "file:///C:/flutter/packages/flutter/lib/src/material/navigation_rail_theme.dart";
  var L23 = "package:flutter/src/material/dialog.dart";
  var L87 = "package:flutter/src/material/bottom_navigation_bar_theme.dart";
  var L96 = "package:flutter/src/material/button_theme.dart";
  var L33 = "package:flutter/src/material/flat_button.dart";
  var L77 = "package:flutter/src/material/chip_theme.dart";
  var L11 = "package:flutter/src/material/tooltip.dart";
  var L16 = "package:flutter/src/material/list_tile.dart";
  var L111 = "file:///C:/flutter/packages/flutter/lib/src/material/material_localizations.dart";
  var L37 = "package:flutter/src/material/toggle_buttons_theme.dart";
  var L99 = "package:flutter/src/material/button_bar_theme.dart";
  var L88 = "file:///C:/flutter/packages/flutter/lib/src/material/bottom_app_bar_theme.dart";
  var L26 = "package:flutter/src/material/material_button.dart";
  var L84 = "package:flutter/src/material/bottom_navigation_bar.dart";
  var L75 = "package:flutter/src/material/dialog_theme.dart";
  var L25 = "file:///C:/flutter/packages/flutter/lib/src/material/material_button.dart";
  var L93 = "file:///C:/flutter/packages/flutter/lib/src/material/theme_data.dart";
  var L40 = "file:///C:/flutter/packages/flutter/lib/src/material/text_button_theme.dart";
  var L47 = "file:///C:/flutter/packages/flutter/lib/src/material/snack_bar_theme.dart";
  var L13 = "file:///C:/flutter/packages/flutter/lib/src/material/floating_action_button.dart";
  var L0 = "file:///C:/flutter/packages/flutter/lib/src/material/icon_button.dart";
  var L53 = "file:///C:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart";
  var L86 = "file:///C:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar_theme.dart";
  var L104 = "package:flutter/src/material/scaffold.dart";
  var L22 = "file:///C:/flutter/packages/flutter/lib/src/material/dialog.dart";
  var L60 = "package:flutter/src/material/input_decorator.dart";
  var L85 = "file:///C:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart";
  var L108 = "file:///C:/flutter/packages/flutter/lib/src/material/reorderable_list.dart";
  var L3 = "package:flutter/src/material/back_button.dart";
  var L28 = "file:///C:/flutter/packages/flutter/lib/src/material/outline_button.dart";
  var L114 = "file:///C:/flutter/packages/flutter/lib/src/material/app_bar_theme.dart";
  var L20 = "file:///C:/flutter/packages/flutter/lib/src/material/divider.dart";
  var L69 = "package:flutter/src/material/button_style.dart";
  var L79 = "package:flutter/src/material/card_theme.dart";
  var L15 = "file:///C:/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart";
  var L67 = "package:flutter/src/material/material.dart";
  var L98 = "file:///C:/flutter/packages/flutter/lib/src/material/button_bar_theme.dart";
  var L52 = "package:flutter/src/material/page_transitions_theme.dart";
  var L48 = "file:///C:/flutter/packages/flutter/lib/src/material/slider_theme.dart";
  var L10 = "file:///C:/flutter/packages/flutter/lib/src/material/tooltip.dart";
  var L27 = "package:flutter/src/material/raised_button.dart";
  var L76 = "file:///C:/flutter/packages/flutter/lib/src/material/chip_theme.dart";
  var L103 = "package:flutter/src/material/bottom_sheet.dart";
  var L21 = "package:flutter/src/material/divider.dart";
  var L2 = "file:///C:/flutter/packages/flutter/lib/src/material/back_button.dart";
  var L72 = "file:///C:/flutter/packages/flutter/lib/src/material/divider_theme.dart";
  var L6 = "package:flutter/src/material/snack_bar.dart";
  var L30 = "file:///C:/flutter/packages/flutter/lib/src/material/button.dart";
  var L97 = "file:///C:/flutter/packages/flutter/lib/src/material/button_theme.dart";
  var L100 = "file:///C:/flutter/packages/flutter/lib/src/material/button_bar.dart";
  var L71 = "package:flutter/src/material/elevated_button_theme.dart";
  var L51 = "package:flutter/src/material/popup_menu_theme.dart";
  var L95 = "package:flutter/src/material/color_scheme.dart";
  var L50 = "file:///C:/flutter/packages/flutter/lib/src/material/popup_menu_theme.dart";
  var L64 = "file:///C:/flutter/packages/flutter/lib/src/material/ink_splash.dart";
  var L45 = "package:flutter/src/material/tab_bar_theme.dart";
  var L43 = "file:///C:/flutter/packages/flutter/lib/src/material/tabs.dart";
  var L59 = "package:flutter/src/material/navigation_rail_theme.dart";
  var L55 = "package:flutter/src/material/outlined_button_theme.dart";
  var L44 = "file:///C:/flutter/packages/flutter/lib/src/material/tab_bar_theme.dart";
  var L83 = "package:flutter/src/material/feedback.dart";
  var L105 = "file:///C:/flutter/packages/flutter/lib/src/material/scaffold.dart";
  var L91 = "package:flutter/src/material/banner_theme.dart";
  var L34 = "file:///C:/flutter/packages/flutter/lib/src/material/tooltip_theme.dart";
  var L80 = "file:///C:/flutter/packages/flutter/lib/src/material/ink_highlight.dart";
  var L18 = "package:flutter/src/material/drawer.dart";
  var L36 = "file:///C:/flutter/packages/flutter/lib/src/material/toggle_buttons_theme.dart";
  var L19 = "file:///C:/flutter/packages/flutter/lib/src/material/drawer.dart";
  var L14 = "package:flutter/src/material/flexible_space_bar.dart";
  var L74 = "file:///C:/flutter/packages/flutter/lib/src/material/dialog_theme.dart";
  var L5 = "file:///C:/flutter/packages/flutter/lib/src/material/time.dart";
  var L41 = "package:flutter/src/material/text_button_theme.dart";
  var L110 = "package:flutter/src/material/material_localizations.dart";
  var L101 = "package:flutter/src/material/button_bar.dart";
  var L82 = "file:///C:/flutter/packages/flutter/lib/src/material/feedback.dart";
  var L66 = "file:///C:/flutter/packages/flutter/lib/src/material/material.dart";
  var L65 = "file:///C:/flutter/packages/flutter/lib/src/material/ink_well.dart";
  var L32 = "file:///C:/flutter/packages/flutter/lib/src/material/flat_button.dart";
  var L107 = "file:///C:/flutter/packages/flutter/lib/src/material/debug.dart";
  var L106 = "package:flutter/src/material/elevation_overlay.dart";
  var L70 = "file:///C:/flutter/packages/flutter/lib/src/material/elevated_button_theme.dart";
  var L90 = "file:///C:/flutter/packages/flutter/lib/src/material/banner_theme.dart";
  dart.defineLazy(CT, {
    get C0() {
      return C0 = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 8,
        [EdgeInsets_right]: 8,
        [EdgeInsets_top]: 8,
        [EdgeInsets_left]: 8
      });
    },
    get C1() {
      return C1 = dart.const({
        __proto__: alignment.Alignment.prototype,
        [Alignment_y]: 0,
        [Alignment_x]: 0
      });
    },
    get C2() {
      return C2 = dart.const({
        __proto__: mouse_cursor.SystemMouseCursor.prototype,
        [SystemMouseCursor_kind]: "click"
      });
    },
    get C3() {
      return C3 = dart.const({
        __proto__: box.BoxConstraints.prototype,
        [BoxConstraints_maxHeight]: 1 / 0,
        [BoxConstraints_minHeight]: 48,
        [BoxConstraints_maxWidth]: 1 / 0,
        [BoxConstraints_minWidth]: 48
      });
    },
    get C6() {
      return C6 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 13,
        [_Location_line]: 354,
        [_Location_file]: null
      });
    },
    get C7() {
      return C7 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 355,
        [_Location_file]: null
      });
    },
    get C5() {
      return C5 = dart.constList([C6 || CT.C6, C7 || CT.C7], _LocationL());
    },
    get C4() {
      return C4 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C5 || CT.C5,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 353,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/icon_button.dart"
      });
    },
    get C10() {
      return C10 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 11,
        [_Location_line]: 351,
        [_Location_file]: null
      });
    },
    get C11() {
      return C11 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 11,
        [_Location_line]: 352,
        [_Location_file]: null
      });
    },
    get C12() {
      return C12 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 353,
        [_Location_file]: null
      });
    },
    get C9() {
      return C9 = dart.constList([C10 || CT.C10, C11 || CT.C11, C12 || CT.C12], _LocationL());
    },
    get C8() {
      return C8 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C9 || CT.C9,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 350,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/icon_button.dart"
      });
    },
    get C15() {
      return C15 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 9,
        [_Location_line]: 349,
        [_Location_file]: null
      });
    },
    get C16() {
      return C16 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 350,
        [_Location_file]: null
      });
    },
    get C14() {
      return C14 = dart.constList([C15 || CT.C15, C16 || CT.C16], _LocationL());
    },
    get C13() {
      return C13 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C14 || CT.C14,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 348,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/icon_button.dart"
      });
    },
    get C19() {
      return C19 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 7,
        [_Location_line]: 347,
        [_Location_file]: null
      });
    },
    get C20() {
      return C20 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 348,
        [_Location_file]: null
      });
    },
    get C18() {
      return C18 = dart.constList([C19 || CT.C19, C20 || CT.C20], _LocationL());
    },
    get C17() {
      return C17 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C18 || CT.C18,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 346,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/icon_button.dart"
      });
    },
    get C23() {
      return C23 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "message",
        [_Location_column]: 9,
        [_Location_line]: 369,
        [_Location_file]: null
      });
    },
    get C24() {
      return C24 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 370,
        [_Location_file]: null
      });
    },
    get C22() {
      return C22 = dart.constList([C23 || CT.C23, C24 || CT.C24], _LocationL());
    },
    get C21() {
      return C21 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C22 || CT.C22,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 368,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/icon_button.dart"
      });
    },
    get C27() {
      return C27 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusNode",
        [_Location_column]: 9,
        [_Location_line]: 378,
        [_Location_file]: null
      });
    },
    get C28() {
      return C28 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "autofocus",
        [_Location_column]: 9,
        [_Location_line]: 379,
        [_Location_file]: null
      });
    },
    get C29() {
      return C29 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "canRequestFocus",
        [_Location_column]: 9,
        [_Location_line]: 380,
        [_Location_file]: null
      });
    },
    get C30() {
      return C30 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTap",
        [_Location_column]: 9,
        [_Location_line]: 381,
        [_Location_file]: null
      });
    },
    get C31() {
      return C31 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mouseCursor",
        [_Location_column]: 9,
        [_Location_line]: 382,
        [_Location_file]: null
      });
    },
    get C32() {
      return C32 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enableFeedback",
        [_Location_column]: 9,
        [_Location_line]: 383,
        [_Location_file]: null
      });
    },
    get C33() {
      return C33 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 384,
        [_Location_file]: null
      });
    },
    get C34() {
      return C34 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusColor",
        [_Location_column]: 9,
        [_Location_line]: 385,
        [_Location_file]: null
      });
    },
    get C35() {
      return C35 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "hoverColor",
        [_Location_column]: 9,
        [_Location_line]: 386,
        [_Location_file]: null
      });
    },
    get C36() {
      return C36 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "highlightColor",
        [_Location_column]: 9,
        [_Location_line]: 387,
        [_Location_file]: null
      });
    },
    get C37() {
      return C37 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "splashColor",
        [_Location_column]: 9,
        [_Location_line]: 388,
        [_Location_file]: null
      });
    },
    get C38() {
      return C38 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "radius",
        [_Location_column]: 9,
        [_Location_line]: 389,
        [_Location_file]: null
      });
    },
    get C26() {
      return C26 = dart.constList([C27 || CT.C27, C28 || CT.C28, C29 || CT.C29, C30 || CT.C30, C31 || CT.C31, C32 || CT.C32, C33 || CT.C33, C34 || CT.C34, C35 || CT.C35, C36 || CT.C36, C37 || CT.C37, C38 || CT.C38], _LocationL());
    },
    get C25() {
      return C25 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C26 || CT.C26,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 377,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/icon_button.dart"
      });
    },
    get C41() {
      return C41 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "button",
        [_Location_column]: 7,
        [_Location_line]: 375,
        [_Location_file]: null
      });
    },
    get C42() {
      return C42 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enabled",
        [_Location_column]: 7,
        [_Location_line]: 376,
        [_Location_file]: null
      });
    },
    get C43() {
      return C43 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 377,
        [_Location_file]: null
      });
    },
    get C40() {
      return C40 = dart.constList([C41 || CT.C41, C42 || CT.C42, C43 || CT.C43], _LocationL());
    },
    get C39() {
      return C39 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C40 || CT.C40,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 374,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/icon_button.dart"
      });
    },
    get C44() {
      return C44 = dart.const({
        __proto__: platform$.TargetPlatform.prototype,
        [_name]: "TargetPlatform.android",
        index: 0
      });
    },
    get C45() {
      return C45 = dart.const({
        __proto__: platform$.TargetPlatform.prototype,
        [_name]: "TargetPlatform.fuchsia",
        index: 1
      });
    },
    get C46() {
      return C46 = dart.const({
        __proto__: platform$.TargetPlatform.prototype,
        [_name]: "TargetPlatform.linux",
        index: 3
      });
    },
    get C47() {
      return C47 = dart.const({
        __proto__: platform$.TargetPlatform.prototype,
        [_name]: "TargetPlatform.windows",
        index: 5
      });
    },
    get C48() {
      return C48 = dart.const({
        __proto__: platform$.TargetPlatform.prototype,
        [_name]: "TargetPlatform.iOS",
        index: 2
      });
    },
    get C49() {
      return C49 = dart.const({
        __proto__: platform$.TargetPlatform.prototype,
        [_name]: "TargetPlatform.macOS",
        index: 4
      });
    },
    get C52() {
      return C52 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "icon",
        [_Location_column]: 46,
        [_Location_line]: 49,
        [_Location_file]: null
      });
    },
    get C51() {
      return C51 = dart.constList([C52 || CT.C52], _LocationL());
    },
    get C50() {
      return C50 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C51 || CT.C51,
        [_Location_name]: null,
        [_Location_column]: 41,
        [_Location_line]: 49,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/back_button.dart"
      });
    },
    get C55() {
      return C55 = dart.constList([], _LocationL());
    },
    get C54() {
      return C54 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C55 || CT.C55,
        [_Location_name]: null,
        [_Location_column]: 19,
        [_Location_line]: 103,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/back_button.dart"
      });
    },
    get C53() {
      return C53 = dart.const({
        __proto__: back_button.BackButtonIcon.prototype,
        [Widget__location]: C54 || CT.C54,
        [Widget_key]: null
      });
    },
    get C58() {
      return C58 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "icon",
        [_Location_column]: 7,
        [_Location_line]: 103,
        [_Location_file]: null
      });
    },
    get C59() {
      return C59 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 7,
        [_Location_line]: 104,
        [_Location_file]: null
      });
    },
    get C60() {
      return C60 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "tooltip",
        [_Location_column]: 7,
        [_Location_line]: 105,
        [_Location_file]: null
      });
    },
    get C61() {
      return C61 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPressed",
        [_Location_column]: 7,
        [_Location_line]: 106,
        [_Location_file]: null
      });
    },
    get C57() {
      return C57 = dart.constList([C58 || CT.C58, C59 || CT.C59, C60 || CT.C60, C61 || CT.C61], _LocationL());
    },
    get C56() {
      return C56 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C57 || CT.C57,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 102,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/back_button.dart"
      });
    },
    get C65() {
      return C65 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "icon",
        [_Location_column]: 30,
        [_Location_line]: 157,
        [_Location_file]: null
      });
    },
    get C64() {
      return C64 = dart.constList([C65 || CT.C65], _LocationL());
    },
    get C63() {
      return C63 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C64 || CT.C64,
        [_Location_name]: null,
        [_Location_column]: 19,
        [_Location_line]: 157,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/back_button.dart"
      });
    },
    get C66() {
      return C66 = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 58829
      });
    },
    get C62() {
      return C62 = dart.const({
        __proto__: icon.Icon.prototype,
        [Widget__location]: C63 || CT.C63,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_color]: null,
        [Icon_size]: null,
        [Icon_icon]: C66 || CT.C66
      });
    },
    get C69() {
      return C69 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "icon",
        [_Location_column]: 7,
        [_Location_line]: 157,
        [_Location_file]: null
      });
    },
    get C70() {
      return C70 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 7,
        [_Location_line]: 158,
        [_Location_file]: null
      });
    },
    get C71() {
      return C71 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "tooltip",
        [_Location_column]: 7,
        [_Location_line]: 159,
        [_Location_file]: null
      });
    },
    get C72() {
      return C72 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPressed",
        [_Location_column]: 7,
        [_Location_line]: 160,
        [_Location_file]: null
      });
    },
    get C68() {
      return C68 = dart.constList([C69 || CT.C69, C70 || CT.C70, C71 || CT.C71, C72 || CT.C72], _LocationL());
    },
    get C67() {
      return C67 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C68 || CT.C68,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 156,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/back_button.dart"
      });
    },
    get C73() {
      return C73 = dart.const({
        __proto__: time.DayPeriod.prototype,
        [_name$]: "DayPeriod.am",
        index: 0
      });
    },
    get C74() {
      return C74 = dart.const({
        __proto__: time.DayPeriod.prototype,
        [_name$]: "DayPeriod.pm",
        index: 1
      });
    },
    get C75() {
      return C75 = dart.constList([C73 || CT.C73, C74 || CT.C74], DayPeriodL());
    },
    get C76() {
      return C76 = dart.const({
        __proto__: time.TimeOfDayFormat.prototype,
        [_name$]: "TimeOfDayFormat.HH_colon_mm",
        index: 0
      });
    },
    get C77() {
      return C77 = dart.const({
        __proto__: time.TimeOfDayFormat.prototype,
        [_name$]: "TimeOfDayFormat.HH_dot_mm",
        index: 1
      });
    },
    get C78() {
      return C78 = dart.const({
        __proto__: time.TimeOfDayFormat.prototype,
        [_name$]: "TimeOfDayFormat.frenchCanadian",
        index: 2
      });
    },
    get C79() {
      return C79 = dart.const({
        __proto__: time.TimeOfDayFormat.prototype,
        [_name$]: "TimeOfDayFormat.H_colon_mm",
        index: 3
      });
    },
    get C80() {
      return C80 = dart.const({
        __proto__: time.TimeOfDayFormat.prototype,
        [_name$]: "TimeOfDayFormat.h_colon_mm_space_a",
        index: 4
      });
    },
    get C81() {
      return C81 = dart.const({
        __proto__: time.TimeOfDayFormat.prototype,
        [_name$]: "TimeOfDayFormat.a_space_h_colon_mm",
        index: 5
      });
    },
    get C82() {
      return C82 = dart.constList([C76 || CT.C76, C77 || CT.C77, C78 || CT.C78, C79 || CT.C79, C80 || CT.C80, C81 || CT.C81], TimeOfDayFormatL());
    },
    get C83() {
      return C83 = dart.const({
        __proto__: time.HourFormat.prototype,
        [_name$]: "HourFormat.HH",
        index: 0
      });
    },
    get C84() {
      return C84 = dart.const({
        __proto__: time.HourFormat.prototype,
        [_name$]: "HourFormat.H",
        index: 1
      });
    },
    get C85() {
      return C85 = dart.const({
        __proto__: time.HourFormat.prototype,
        [_name$]: "HourFormat.h",
        index: 2
      });
    },
    get C86() {
      return C86 = dart.constList([C83 || CT.C83, C84 || CT.C84, C85 || CT.C85], HourFormatL());
    },
    get C87() {
      return C87 = dart.const({
        __proto__: snack_bar.SnackBarClosedReason.prototype,
        [_name$0]: "SnackBarClosedReason.action",
        index: 0
      });
    },
    get C88() {
      return C88 = dart.const({
        __proto__: snack_bar.SnackBarClosedReason.prototype,
        [_name$0]: "SnackBarClosedReason.dismiss",
        index: 1
      });
    },
    get C89() {
      return C89 = dart.const({
        __proto__: snack_bar.SnackBarClosedReason.prototype,
        [_name$0]: "SnackBarClosedReason.swipe",
        index: 2
      });
    },
    get C90() {
      return C90 = dart.const({
        __proto__: snack_bar.SnackBarClosedReason.prototype,
        [_name$0]: "SnackBarClosedReason.hide",
        index: 3
      });
    },
    get C91() {
      return C91 = dart.const({
        __proto__: snack_bar.SnackBarClosedReason.prototype,
        [_name$0]: "SnackBarClosedReason.remove",
        index: 4
      });
    },
    get C92() {
      return C92 = dart.const({
        __proto__: snack_bar.SnackBarClosedReason.prototype,
        [_name$0]: "SnackBarClosedReason.timeout",
        index: 5
      });
    },
    get C93() {
      return C93 = dart.constList([C87 || CT.C87, C88 || CT.C88, C89 || CT.C89, C90 || CT.C90, C91 || CT.C91, C92 || CT.C92], SnackBarClosedReasonL());
    },
    get C96() {
      return C96 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 26,
        [_Location_line]: 136,
        [_Location_file]: null
      });
    },
    get C95() {
      return C95 = dart.constList([C96 || CT.C96], _LocationL());
    },
    get C94() {
      return C94 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C95 || CT.C95,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 136,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C99() {
      return C99 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPressed",
        [_Location_column]: 7,
        [_Location_line]: 135,
        [_Location_file]: null
      });
    },
    get C100() {
      return C100 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 136,
        [_Location_file]: null
      });
    },
    get C101() {
      return C101 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textColor",
        [_Location_column]: 7,
        [_Location_line]: 137,
        [_Location_file]: null
      });
    },
    get C102() {
      return C102 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "disabledTextColor",
        [_Location_column]: 7,
        [_Location_line]: 138,
        [_Location_file]: null
      });
    },
    get C98() {
      return C98 = dart.constList([C99 || CT.C99, C100 || CT.C100, C101 || CT.C101, C102 || CT.C102], _LocationL());
    },
    get C97() {
      return C97 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C98 || CT.C98,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 134,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C103() {
      return C103 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 4000000
      });
    },
    get C106() {
      return C106 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 7,
        [_Location_line]: 316,
        [_Location_file]: null
      });
    },
    get C107() {
      return C107 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "content",
        [_Location_column]: 7,
        [_Location_line]: 317,
        [_Location_file]: null
      });
    },
    get C108() {
      return C108 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundColor",
        [_Location_column]: 7,
        [_Location_line]: 318,
        [_Location_file]: null
      });
    },
    get C109() {
      return C109 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "elevation",
        [_Location_column]: 7,
        [_Location_line]: 319,
        [_Location_file]: null
      });
    },
    get C110() {
      return C110 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "margin",
        [_Location_column]: 7,
        [_Location_line]: 320,
        [_Location_file]: null
      });
    },
    get C111() {
      return C111 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 7,
        [_Location_line]: 321,
        [_Location_file]: null
      });
    },
    get C112() {
      return C112 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 7,
        [_Location_line]: 322,
        [_Location_file]: null
      });
    },
    get C113() {
      return C113 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shape",
        [_Location_column]: 7,
        [_Location_line]: 323,
        [_Location_file]: null
      });
    },
    get C114() {
      return C114 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 7,
        [_Location_line]: 324,
        [_Location_file]: null
      });
    },
    get C115() {
      return C115 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "action",
        [_Location_column]: 7,
        [_Location_line]: 325,
        [_Location_file]: null
      });
    },
    get C116() {
      return C116 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "duration",
        [_Location_column]: 7,
        [_Location_line]: 326,
        [_Location_file]: null
      });
    },
    get C117() {
      return C117 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animation",
        [_Location_column]: 7,
        [_Location_line]: 327,
        [_Location_file]: null
      });
    },
    get C118() {
      return C118 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onVisible",
        [_Location_column]: 7,
        [_Location_line]: 328,
        [_Location_file]: null
      });
    },
    get C105() {
      return C105 = dart.constList([C106 || CT.C106, C107 || CT.C107, C108 || CT.C108, C109 || CT.C109, C110 || CT.C110, C111 || CT.C111, C112 || CT.C112, C113 || CT.C113, C114 || CT.C114, C115 || CT.C115, C116 || CT.C116, C117 || CT.C117, C118 || CT.C118], _LocationL());
    },
    get C104() {
      return C104 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C105 || CT.C105,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 315,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C119() {
      return C119 = dart.const({
        __proto__: animation.AnimationStatus.prototype,
        [_name$1]: "AnimationStatus.dismissed",
        index: 0
      });
    },
    get C120() {
      return C120 = dart.const({
        __proto__: animation.AnimationStatus.prototype,
        [_name$1]: "AnimationStatus.forward",
        index: 1
      });
    },
    get C121() {
      return C121 = dart.const({
        __proto__: animation.AnimationStatus.prototype,
        [_name$1]: "AnimationStatus.reverse",
        index: 2
      });
    },
    get C122() {
      return C122 = dart.const({
        __proto__: animation.AnimationStatus.prototype,
        [_name$1]: "AnimationStatus.completed",
        index: 3
      });
    },
    get C123() {
      return C123 = dart.const({
        __proto__: curves.Threshold.prototype,
        [Threshold_threshold]: 0
      });
    },
    get C124() {
      return C124 = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 14,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 14,
        [EdgeInsets_left]: 0
      });
    },
    get C127() {
      return C127 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 17,
        [_Location_line]: 437,
        [_Location_file]: null
      });
    },
    get C128() {
      return C128 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 438,
        [_Location_file]: null
      });
    },
    get C126() {
      return C126 = dart.constList([C127 || CT.C127, C128 || CT.C128], _LocationL());
    },
    get C125() {
      return C125 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C126 || CT.C126,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 436,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C131() {
      return C131 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 15,
        [_Location_line]: 435,
        [_Location_file]: null
      });
    },
    get C132() {
      return C132 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 436,
        [_Location_file]: null
      });
    },
    get C130() {
      return C130 = dart.constList([C131 || CT.C131, C132 || CT.C132], _LocationL());
    },
    get C129() {
      return C129 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C130 || CT.C130,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 434,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C135() {
      return C135 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 434,
        [_Location_file]: null
      });
    },
    get C134() {
      return C134 = dart.constList([C135 || CT.C135], _LocationL());
    },
    get C133() {
      return C133 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C134 || CT.C134,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 433,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C138() {
      return C138 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textTheme",
        [_Location_column]: 15,
        [_Location_line]: 444,
        [_Location_file]: null
      });
    },
    get C139() {
      return C139 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "minWidth",
        [_Location_column]: 15,
        [_Location_line]: 445,
        [_Location_file]: null
      });
    },
    get C140() {
      return C140 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 15,
        [_Location_line]: 446,
        [_Location_file]: null
      });
    },
    get C141() {
      return C141 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 447,
        [_Location_file]: null
      });
    },
    get C137() {
      return C137 = dart.constList([C138 || CT.C138, C139 || CT.C139, C140 || CT.C140, C141 || CT.C141], _LocationL());
    },
    get C136() {
      return C136 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C137 || CT.C137,
        [_Location_name]: null,
        [_Location_column]: 13,
        [_Location_line]: 443,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C144() {
      return C144 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "crossAxisAlignment",
        [_Location_column]: 9,
        [_Location_line]: 431,
        [_Location_file]: null
      });
    },
    get C145() {
      return C145 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 9,
        [_Location_line]: 432,
        [_Location_file]: null
      });
    },
    get C143() {
      return C143 = dart.constList([C144 || CT.C144, C145 || CT.C145], _LocationL());
    },
    get C142() {
      return C142 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C143 || CT.C143,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 430,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C148() {
      return C148 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 7,
        [_Location_line]: 429,
        [_Location_file]: null
      });
    },
    get C149() {
      return C149 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 430,
        [_Location_file]: null
      });
    },
    get C147() {
      return C147 = dart.constList([C148 || CT.C148, C149 || CT.C149], _LocationL());
    },
    get C146() {
      return C146 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C147 || CT.C147,
        [_Location_name]: null,
        [_Location_column]: 23,
        [_Location_line]: 428,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C152() {
      return C152 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "top",
        [_Location_column]: 9,
        [_Location_line]: 455,
        [_Location_file]: null
      });
    },
    get C153() {
      return C153 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 456,
        [_Location_file]: null
      });
    },
    get C151() {
      return C151 = dart.constList([C152 || CT.C152, C153 || CT.C153], _LocationL());
    },
    get C150() {
      return C150 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C151 || CT.C151,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 454,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C156() {
      return C156 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 17,
        [_Location_line]: 475,
        [_Location_file]: null
      });
    },
    get C157() {
      return C157 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 476,
        [_Location_file]: null
      });
    },
    get C155() {
      return C155 = dart.constList([C156 || CT.C156, C157 || CT.C157], _LocationL());
    },
    get C154() {
      return C154 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C155 || CT.C155,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 474,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C160() {
      return C160 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 9,
        [_Location_line]: 471,
        [_Location_file]: null
      });
    },
    get C161() {
      return C161 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 472,
        [_Location_file]: null
      });
    },
    get C159() {
      return C159 = dart.constList([C160 || CT.C160, C161 || CT.C161], _LocationL());
    },
    get C158() {
      return C158 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C159 || CT.C159,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 470,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C164() {
      return C164 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shape",
        [_Location_column]: 7,
        [_Location_line]: 467,
        [_Location_file]: null
      });
    },
    get C165() {
      return C165 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "elevation",
        [_Location_column]: 7,
        [_Location_line]: 468,
        [_Location_file]: null
      });
    },
    get C166() {
      return C166 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 7,
        [_Location_line]: 469,
        [_Location_file]: null
      });
    },
    get C167() {
      return C167 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 470,
        [_Location_file]: null
      });
    },
    get C163() {
      return C163 = dart.constList([C164 || CT.C164, C165 || CT.C165, C166 || CT.C166, C167 || CT.C167], _LocationL());
    },
    get C162() {
      return C162 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C163 || CT.C163,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 466,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C168() {
      return C168 = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 10,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 5,
        [EdgeInsets_left]: 0
      });
    },
    get C171() {
      return C171 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "margin",
        [_Location_column]: 11,
        [_Location_line]: 487,
        [_Location_file]: null
      });
    },
    get C172() {
      return C172 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 11,
        [_Location_line]: 488,
        [_Location_file]: null
      });
    },
    get C173() {
      return C173 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 489,
        [_Location_file]: null
      });
    },
    get C170() {
      return C170 = dart.constList([C171 || CT.C171, C172 || CT.C172, C173 || CT.C173], _LocationL());
    },
    get C169() {
      return C169 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C170 || CT.C170,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 486,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C174() {
      return C174 = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 10,
        [EdgeInsets_right]: 15,
        [EdgeInsets_top]: 5,
        [EdgeInsets_left]: 15
      });
    },
    get C177() {
      return C177 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 11,
        [_Location_line]: 494,
        [_Location_file]: null
      });
    },
    get C178() {
      return C178 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 500,
        [_Location_file]: null
      });
    },
    get C176() {
      return C176 = dart.constList([C177 || CT.C177, C178 || CT.C178], _LocationL());
    },
    get C175() {
      return C175 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C176 || CT.C176,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 493,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C181() {
      return C181 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "top",
        [_Location_column]: 9,
        [_Location_line]: 504,
        [_Location_file]: null
      });
    },
    get C182() {
      return C182 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "bottom",
        [_Location_column]: 9,
        [_Location_line]: 505,
        [_Location_file]: null
      });
    },
    get C183() {
      return C183 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 506,
        [_Location_file]: null
      });
    },
    get C180() {
      return C180 = dart.constList([C181 || CT.C181, C182 || CT.C182, C183 || CT.C183], _LocationL());
    },
    get C179() {
      return C179 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C180 || CT.C180,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 503,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C184() {
      return C184 = dart.const({
        __proto__: ValueKeyOfStringL().prototype,
        [ValueKey_value]: "dismissible"
      });
    },
    get C187() {
      return C187 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 9,
        [_Location_line]: 517,
        [_Location_file]: null
      });
    },
    get C188() {
      return C188 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "direction",
        [_Location_column]: 9,
        [_Location_line]: 518,
        [_Location_file]: null
      });
    },
    get C189() {
      return C189 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "resizeDuration",
        [_Location_column]: 9,
        [_Location_line]: 519,
        [_Location_file]: null
      });
    },
    get C190() {
      return C190 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onDismissed",
        [_Location_column]: 9,
        [_Location_line]: 520,
        [_Location_file]: null
      });
    },
    get C191() {
      return C191 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 523,
        [_Location_file]: null
      });
    },
    get C186() {
      return C186 = dart.constList([C187 || CT.C187, C188 || CT.C188, C189 || CT.C189, C190 || CT.C190, C191 || CT.C191], _LocationL());
    },
    get C185() {
      return C185 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C186 || CT.C186,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 516,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C194() {
      return C194 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "container",
        [_Location_column]: 7,
        [_Location_line]: 511,
        [_Location_file]: null
      });
    },
    get C195() {
      return C195 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "liveRegion",
        [_Location_column]: 7,
        [_Location_line]: 512,
        [_Location_file]: null
      });
    },
    get C196() {
      return C196 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onDismiss",
        [_Location_column]: 7,
        [_Location_line]: 513,
        [_Location_file]: null
      });
    },
    get C197() {
      return C197 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 516,
        [_Location_file]: null
      });
    },
    get C193() {
      return C193 = dart.constList([C194 || CT.C194, C195 || CT.C195, C196 || CT.C196, C197 || CT.C197], _LocationL());
    },
    get C192() {
      return C192 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C193 || CT.C193,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 510,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C200() {
      return C200 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 9,
        [_Location_line]: 532,
        [_Location_file]: null
      });
    },
    get C201() {
      return C201 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 533,
        [_Location_file]: null
      });
    },
    get C199() {
      return C199 = dart.constList([C200 || CT.C200, C201 || CT.C201], _LocationL());
    },
    get C198() {
      return C198 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C199 || CT.C199,
        [_Location_name]: null,
        [_Location_column]: 28,
        [_Location_line]: 531,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C204() {
      return C204 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 13,
        [_Location_line]: 540,
        [_Location_file]: null
      });
    },
    get C205() {
      return C205 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "heightFactor",
        [_Location_column]: 13,
        [_Location_line]: 541,
        [_Location_file]: null
      });
    },
    get C206() {
      return C206 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 542,
        [_Location_file]: null
      });
    },
    get C203() {
      return C203 = dart.constList([C204 || CT.C204, C205 || CT.C205, C206 || CT.C206], _LocationL());
    },
    get C202() {
      return C202 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C203 || CT.C203,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 539,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C209() {
      return C209 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animation",
        [_Location_column]: 9,
        [_Location_line]: 537,
        [_Location_file]: null
      });
    },
    get C210() {
      return C210 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 9,
        [_Location_line]: 538,
        [_Location_file]: null
      });
    },
    get C211() {
      return C211 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 545,
        [_Location_file]: null
      });
    },
    get C208() {
      return C208 = dart.constList([C209 || CT.C209, C210 || CT.C210, C211 || CT.C211], _LocationL());
    },
    get C207() {
      return C207 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C208 || CT.C208,
        [_Location_name]: null,
        [_Location_column]: 28,
        [_Location_line]: 536,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C214() {
      return C214 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 21,
        [_Location_line]: 549,
        [_Location_file]: null
      });
    },
    get C213() {
      return C213 = dart.constList([C214 || CT.C214], _LocationL());
    },
    get C212() {
      return C212 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C213 || CT.C213,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 549,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C215() {
      return C215 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 250000
      });
    },
    get C216() {
      return C216 = dart.const({
        __proto__: curves.Cubic.prototype,
        [Cubic_d]: 1,
        [Cubic_c]: 0.2,
        [Cubic_b]: 0,
        [Cubic_a]: 0.4
      });
    },
    get C217() {
      return C217 = dart.const({
        __proto__: curves.Interval.prototype,
        [Interval_curve]: C216 || CT.C216,
        [Interval_end]: 1,
        [Interval_begin]: 0.45
      });
    },
    get C218() {
      return C218 = dart.const({
        __proto__: curves.Interval.prototype,
        [Interval_curve]: C216 || CT.C216,
        [Interval_end]: 1,
        [Interval_begin]: 0.72
      });
    },
    get C219() {
      return C219 = dart.const({
        __proto__: floating_action_button_location._StartTopFabLocation.prototype
      });
    },
    get C220() {
      return C220 = dart.const({
        __proto__: floating_action_button_location._MiniStartTopFabLocation.prototype
      });
    },
    get C221() {
      return C221 = dart.const({
        __proto__: floating_action_button_location._CenterTopFabLocation.prototype
      });
    },
    get C222() {
      return C222 = dart.const({
        __proto__: floating_action_button_location._MiniCenterTopFabLocation.prototype
      });
    },
    get C223() {
      return C223 = dart.const({
        __proto__: floating_action_button_location._EndTopFabLocation.prototype
      });
    },
    get C224() {
      return C224 = dart.const({
        __proto__: floating_action_button_location._MiniEndTopFabLocation.prototype
      });
    },
    get C225() {
      return C225 = dart.const({
        __proto__: floating_action_button_location._StartFloatFabLocation.prototype
      });
    },
    get C226() {
      return C226 = dart.const({
        __proto__: floating_action_button_location._MiniStartFloatFabLocation.prototype
      });
    },
    get C227() {
      return C227 = dart.const({
        __proto__: floating_action_button_location._CenterFloatFabLocation.prototype
      });
    },
    get C228() {
      return C228 = dart.const({
        __proto__: floating_action_button_location._MiniCenterFloatFabLocation.prototype
      });
    },
    get C229() {
      return C229 = dart.const({
        __proto__: floating_action_button_location._EndFloatFabLocation.prototype
      });
    },
    get C230() {
      return C230 = dart.const({
        __proto__: floating_action_button_location._MiniEndFloatFabLocation.prototype
      });
    },
    get C231() {
      return C231 = dart.const({
        __proto__: floating_action_button_location._StartDockedFabLocation.prototype
      });
    },
    get C232() {
      return C232 = dart.const({
        __proto__: floating_action_button_location._MiniStartDockedFabLocation.prototype
      });
    },
    get C233() {
      return C233 = dart.const({
        __proto__: floating_action_button_location._CenterDockedFabLocation.prototype
      });
    },
    get C234() {
      return C234 = dart.const({
        __proto__: floating_action_button_location._MiniCenterDockedFabLocation.prototype
      });
    },
    get C235() {
      return C235 = dart.const({
        __proto__: floating_action_button_location._EndDockedFabLocation.prototype
      });
    },
    get C236() {
      return C236 = dart.const({
        __proto__: floating_action_button_location._MiniEndDockedFabLocation.prototype
      });
    },
    get C237() {
      return C237 = dart.const({
        __proto__: ui.TextDirection.prototype,
        [_name$2]: "TextDirection.rtl",
        index: 0
      });
    },
    get C238() {
      return C238 = dart.const({
        __proto__: ui.TextDirection.prototype,
        [_name$2]: "TextDirection.ltr",
        index: 1
      });
    },
    get C239() {
      return C239 = dart.const({
        __proto__: floating_action_button_location._ScalingFabMotionAnimator.prototype
      });
    },
    get C241() {
      return C241 = dart.const({
        __proto__: curves.Cubic.prototype,
        [Cubic_d]: 1,
        [Cubic_c]: 0.25,
        [Cubic_b]: 0.1,
        [Cubic_a]: 0.25
      });
    },
    get C240() {
      return C240 = dart.const({
        __proto__: curves.Interval.prototype,
        [Interval_curve]: C241 || CT.C241,
        [Interval_end]: 1,
        [Interval_begin]: 0.5
      });
    },
    get C242() {
      return C242 = dart.const({
        __proto__: curves.Threshold.prototype,
        [Threshold_threshold]: 0.5
      });
    },
    get C243() {
      return C243 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 200000
      });
    },
    get C246() {
      return C246 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "message",
        [_Location_column]: 9,
        [_Location_line]: 295,
        [_Location_file]: null
      });
    },
    get C247() {
      return C247 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 9,
        [_Location_line]: 296,
        [_Location_file]: null
      });
    },
    get C248() {
      return C248 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 9,
        [_Location_line]: 297,
        [_Location_file]: null
      });
    },
    get C249() {
      return C249 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "margin",
        [_Location_column]: 9,
        [_Location_line]: 298,
        [_Location_file]: null
      });
    },
    get C250() {
      return C250 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "decoration",
        [_Location_column]: 9,
        [_Location_line]: 299,
        [_Location_file]: null
      });
    },
    get C251() {
      return C251 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textStyle",
        [_Location_column]: 9,
        [_Location_line]: 300,
        [_Location_file]: null
      });
    },
    get C252() {
      return C252 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animation",
        [_Location_column]: 9,
        [_Location_line]: 301,
        [_Location_file]: null
      });
    },
    get C253() {
      return C253 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "target",
        [_Location_column]: 9,
        [_Location_line]: 305,
        [_Location_file]: null
      });
    },
    get C254() {
      return C254 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "verticalOffset",
        [_Location_column]: 9,
        [_Location_line]: 306,
        [_Location_file]: null
      });
    },
    get C255() {
      return C255 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "preferBelow",
        [_Location_column]: 9,
        [_Location_line]: 307,
        [_Location_file]: null
      });
    },
    get C245() {
      return C245 = dart.constList([C246 || CT.C246, C247 || CT.C247, C248 || CT.C248, C249 || CT.C249, C250 || CT.C250, C251 || CT.C251, C252 || CT.C252, C253 || CT.C253, C254 || CT.C254, C255 || CT.C255], _LocationL());
    },
    get C244() {
      return C244 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C245 || CT.C245,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 294,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C258() {
      return C258 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textDirection",
        [_Location_column]: 7,
        [_Location_line]: 293,
        [_Location_file]: null
      });
    },
    get C259() {
      return C259 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 294,
        [_Location_file]: null
      });
    },
    get C257() {
      return C257 = dart.constList([C258 || CT.C258, C259 || CT.C259], _LocationL());
    },
    get C256() {
      return C256 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C257 || CT.C257,
        [_Location_name]: null,
        [_Location_column]: 28,
        [_Location_line]: 292,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C261() {
      return C261 = dart.const({
        __proto__: ui.Radius.prototype,
        [Radius_y]: 4,
        [Radius_x]: 4
      });
    },
    get C260() {
      return C260 = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [BorderRadius_bottomRight]: C261 || CT.C261,
        [BorderRadius_bottomLeft]: C261 || CT.C261,
        [BorderRadius_topRight]: C261 || CT.C261,
        [BorderRadius_topLeft]: C261 || CT.C261
      });
    },
    get C264() {
      return C264 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "label",
        [_Location_column]: 9,
        [_Location_line]: 402,
        [_Location_file]: null
      });
    },
    get C265() {
      return C265 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 403,
        [_Location_file]: null
      });
    },
    get C263() {
      return C263 = dart.constList([C264 || CT.C264, C265 || CT.C265], _LocationL());
    },
    get C262() {
      return C262 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C263 || CT.C263,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 401,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C268() {
      return C268 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 7,
        [_Location_line]: 398,
        [_Location_file]: null
      });
    },
    get C269() {
      return C269 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onLongPress",
        [_Location_column]: 7,
        [_Location_line]: 399,
        [_Location_file]: null
      });
    },
    get C270() {
      return C270 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "excludeFromSemantics",
        [_Location_column]: 7,
        [_Location_line]: 400,
        [_Location_file]: null
      });
    },
    get C271() {
      return C271 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 401,
        [_Location_file]: null
      });
    },
    get C267() {
      return C267 = dart.constList([C268 || CT.C268, C269 || CT.C269, C270 || CT.C270, C271 || CT.C271], _LocationL());
    },
    get C266() {
      return C266 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C267 || CT.C267,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 397,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C274() {
      return C274 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onEnter",
        [_Location_column]: 9,
        [_Location_line]: 410,
        [_Location_file]: null
      });
    },
    get C275() {
      return C275 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onExit",
        [_Location_column]: 9,
        [_Location_line]: 411,
        [_Location_file]: null
      });
    },
    get C276() {
      return C276 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 412,
        [_Location_file]: null
      });
    },
    get C273() {
      return C273 = dart.constList([C274 || CT.C274, C275 || CT.C275, C276 || CT.C276], _LocationL());
    },
    get C272() {
      return C272 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C273 || CT.C273,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 409,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C277() {
      return C277 = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 16,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 16
      });
    },
    get C278() {
      return C278 = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 0
      });
    },
    get C279() {
      return C279 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 150000
      });
    },
    get C280() {
      return C280 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 75000
      });
    },
    get C281() {
      return C281 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 1500000
      });
    },
    get C282() {
      return C282 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 0
      });
    },
    get C285() {
      return C285 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 23,
        [_Location_line]: 520,
        [_Location_file]: null
      });
    },
    get C286() {
      return C286 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 23,
        [_Location_line]: 521,
        [_Location_file]: null
      });
    },
    get C284() {
      return C284 = dart.constList([C285 || CT.C285, C286 || CT.C286], _LocationL());
    },
    get C283() {
      return C283 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C284 || CT.C284,
        [_Location_name]: null,
        [_Location_column]: 28,
        [_Location_line]: 519,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C289() {
      return C289 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "widthFactor",
        [_Location_column]: 21,
        [_Location_line]: 517,
        [_Location_file]: null
      });
    },
    get C290() {
      return C290 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "heightFactor",
        [_Location_column]: 21,
        [_Location_line]: 518,
        [_Location_file]: null
      });
    },
    get C291() {
      return C291 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 21,
        [_Location_line]: 519,
        [_Location_file]: null
      });
    },
    get C288() {
      return C288 = dart.constList([C289 || CT.C289, C290 || CT.C290, C291 || CT.C291], _LocationL());
    },
    get C287() {
      return C287 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C288 || CT.C288,
        [_Location_name]: null,
        [_Location_column]: 26,
        [_Location_line]: 516,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C294() {
      return C294 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "decoration",
        [_Location_column]: 19,
        [_Location_line]: 513,
        [_Location_file]: null
      });
    },
    get C295() {
      return C295 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 19,
        [_Location_line]: 514,
        [_Location_file]: null
      });
    },
    get C296() {
      return C296 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "margin",
        [_Location_column]: 19,
        [_Location_line]: 515,
        [_Location_file]: null
      });
    },
    get C297() {
      return C297 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 19,
        [_Location_line]: 516,
        [_Location_file]: null
      });
    },
    get C293() {
      return C293 = dart.constList([C294 || CT.C294, C295 || CT.C295, C296 || CT.C296, C297 || CT.C297], _LocationL());
    },
    get C292() {
      return C292 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C293 || CT.C293,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 512,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C300() {
      return C300 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 17,
        [_Location_line]: 511,
        [_Location_file]: null
      });
    },
    get C301() {
      return C301 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 512,
        [_Location_file]: null
      });
    },
    get C299() {
      return C299 = dart.constList([C300 || CT.C300, C301 || CT.C301], _LocationL());
    },
    get C298() {
      return C298 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C299 || CT.C299,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 510,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C304() {
      return C304 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 15,
        [_Location_line]: 509,
        [_Location_file]: null
      });
    },
    get C305() {
      return C305 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 510,
        [_Location_file]: null
      });
    },
    get C303() {
      return C303 = dart.constList([C304 || CT.C304, C305 || CT.C305], _LocationL());
    },
    get C302() {
      return C302 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C303 || CT.C303,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 508,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C308() {
      return C308 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 13,
        [_Location_line]: 507,
        [_Location_file]: null
      });
    },
    get C309() {
      return C309 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 508,
        [_Location_file]: null
      });
    },
    get C307() {
      return C307 = dart.constList([C308 || CT.C308, C309 || CT.C309], _LocationL());
    },
    get C306() {
      return C306 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C307 || CT.C307,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 506,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C312() {
      return C312 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "delegate",
        [_Location_column]: 11,
        [_Location_line]: 501,
        [_Location_file]: null
      });
    },
    get C313() {
      return C313 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 506,
        [_Location_file]: null
      });
    },
    get C311() {
      return C311 = dart.constList([C312 || CT.C312, C313 || CT.C313], _LocationL());
    },
    get C310() {
      return C310 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C311 || CT.C311,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 500,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C316() {
      return C316 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 500,
        [_Location_file]: null
      });
    },
    get C315() {
      return C315 = dart.constList([C316 || CT.C316], _LocationL());
    },
    get C314() {
      return C314 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C315 || CT.C315,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 499,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C319() {
      return C319 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 499,
        [_Location_file]: null
      });
    },
    get C318() {
      return C318 = dart.constList([C319 || CT.C319], _LocationL());
    },
    get C317() {
      return C317 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C318 || CT.C318,
        [_Location_name]: null,
        [_Location_column]: 23,
        [_Location_line]: 498,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C320() {
      return C320 = dart.const({
        __proto__: floating_action_button._DefaultHeroTag.prototype
      });
    },
    get C321() {
      return C321 = dart.const({
        __proto__: ui.Clip.prototype,
        [_name$2]: "Clip.none",
        index: 0
      });
    },
    get C325() {
      return C325 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 33,
        [_Location_line]: 212,
        [_Location_file]: null
      });
    },
    get C324() {
      return C324 = dart.constList([C325 || CT.C325], _LocationL());
    },
    get C323() {
      return C323 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C324 || CT.C324,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 212,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C322() {
      return C322 = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget__location]: C323 || CT.C323,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: null,
        [SizedBox_width]: 20
      });
    },
    get C329() {
      return C329 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 33,
        [_Location_line]: 214,
        [_Location_file]: null
      });
    },
    get C328() {
      return C328 = dart.constList([C329 || CT.C329], _LocationL());
    },
    get C327() {
      return C327 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C328 || CT.C328,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 214,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C326() {
      return C326 = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget__location]: C327 || CT.C327,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: null,
        [SizedBox_width]: 20
      });
    },
    get C333() {
      return C333 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 33,
        [_Location_line]: 217,
        [_Location_file]: null
      });
    },
    get C332() {
      return C332 = dart.constList([C333 || CT.C333], _LocationL());
    },
    get C331() {
      return C331 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C332 || CT.C332,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 217,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C330() {
      return C330 = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget__location]: C331 || CT.C331,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: null,
        [SizedBox_width]: 16
      });
    },
    get C337() {
      return C337 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 33,
        [_Location_line]: 219,
        [_Location_file]: null
      });
    },
    get C336() {
      return C336 = dart.constList([C337 || CT.C337], _LocationL());
    },
    get C335() {
      return C335 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C336 || CT.C336,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 219,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C334() {
      return C334 = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget__location]: C335 || CT.C335,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: null,
        [SizedBox_width]: 8
      });
    },
    get C341() {
      return C341 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 33,
        [_Location_line]: 221,
        [_Location_file]: null
      });
    },
    get C340() {
      return C340 = dart.constList([C341 || CT.C341], _LocationL());
    },
    get C339() {
      return C339 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C340 || CT.C340,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 221,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C338() {
      return C338 = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget__location]: C339 || CT.C339,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: null,
        [SizedBox_width]: 20
      });
    },
    get C344() {
      return C344 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mainAxisSize",
        [_Location_column]: 12,
        [_Location_line]: 209,
        [_Location_file]: null
      });
    },
    get C345() {
      return C345 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 12,
        [_Location_line]: 210,
        [_Location_file]: null
      });
    },
    get C343() {
      return C343 = dart.constList([C344 || CT.C344, C345 || CT.C345], _LocationL());
    },
    get C342() {
      return C342 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C343 || CT.C343,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 208,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C348() {
      return C348 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 10,
        [_Location_line]: 208,
        [_Location_file]: null
      });
    },
    get C347() {
      return C347 = dart.constList([C348 || CT.C348], _LocationL());
    },
    get C346() {
      return C346 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C347 || CT.C347,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 207,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C351() {
      return C351 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPressed",
        [_Location_column]: 7,
        [_Location_line]: 493,
        [_Location_file]: null
      });
    },
    get C352() {
      return C352 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mouseCursor",
        [_Location_column]: 7,
        [_Location_line]: 494,
        [_Location_file]: null
      });
    },
    get C353() {
      return C353 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "elevation",
        [_Location_column]: 7,
        [_Location_line]: 495,
        [_Location_file]: null
      });
    },
    get C354() {
      return C354 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusElevation",
        [_Location_column]: 7,
        [_Location_line]: 496,
        [_Location_file]: null
      });
    },
    get C355() {
      return C355 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "hoverElevation",
        [_Location_column]: 7,
        [_Location_line]: 497,
        [_Location_file]: null
      });
    },
    get C356() {
      return C356 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "highlightElevation",
        [_Location_column]: 7,
        [_Location_line]: 498,
        [_Location_file]: null
      });
    },
    get C357() {
      return C357 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "disabledElevation",
        [_Location_column]: 7,
        [_Location_line]: 499,
        [_Location_file]: null
      });
    },
    get C358() {
      return C358 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 7,
        [_Location_line]: 500,
        [_Location_file]: null
      });
    },
    get C359() {
      return C359 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "materialTapTargetSize",
        [_Location_column]: 7,
        [_Location_line]: 501,
        [_Location_file]: null
      });
    },
    get C360() {
      return C360 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "fillColor",
        [_Location_column]: 7,
        [_Location_line]: 502,
        [_Location_file]: null
      });
    },
    get C361() {
      return C361 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusColor",
        [_Location_column]: 7,
        [_Location_line]: 503,
        [_Location_file]: null
      });
    },
    get C362() {
      return C362 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "hoverColor",
        [_Location_column]: 7,
        [_Location_line]: 504,
        [_Location_file]: null
      });
    },
    get C363() {
      return C363 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "splashColor",
        [_Location_column]: 7,
        [_Location_line]: 505,
        [_Location_file]: null
      });
    },
    get C364() {
      return C364 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textStyle",
        [_Location_column]: 7,
        [_Location_line]: 506,
        [_Location_file]: null
      });
    },
    get C365() {
      return C365 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shape",
        [_Location_column]: 7,
        [_Location_line]: 507,
        [_Location_file]: null
      });
    },
    get C366() {
      return C366 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipBehavior",
        [_Location_column]: 7,
        [_Location_line]: 508,
        [_Location_file]: null
      });
    },
    get C367() {
      return C367 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusNode",
        [_Location_column]: 7,
        [_Location_line]: 509,
        [_Location_file]: null
      });
    },
    get C368() {
      return C368 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "autofocus",
        [_Location_column]: 7,
        [_Location_line]: 510,
        [_Location_file]: null
      });
    },
    get C369() {
      return C369 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 511,
        [_Location_file]: null
      });
    },
    get C350() {
      return C350 = dart.constList([C351 || CT.C351, C352 || CT.C352, C353 || CT.C353, C354 || CT.C354, C355 || CT.C355, C356 || CT.C356, C357 || CT.C357, C358 || CT.C358, C359 || CT.C359, C360 || CT.C360, C361 || CT.C361, C362 || CT.C362, C363 || CT.C363, C364 || CT.C364, C365 || CT.C365, C366 || CT.C366, C367 || CT.C367, C368 || CT.C368, C369 || CT.C369], _LocationL());
    },
    get C349() {
      return C349 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C350 || CT.C350,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 492,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C372() {
      return C372 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "message",
        [_Location_column]: 9,
        [_Location_line]: 516,
        [_Location_file]: null
      });
    },
    get C373() {
      return C373 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 517,
        [_Location_file]: null
      });
    },
    get C371() {
      return C371 = dart.constList([C372 || CT.C372, C373 || CT.C373], _LocationL());
    },
    get C370() {
      return C370 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C371 || CT.C371,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 515,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C376() {
      return C376 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "tag",
        [_Location_column]: 9,
        [_Location_line]: 523,
        [_Location_file]: null
      });
    },
    get C377() {
      return C377 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 524,
        [_Location_file]: null
      });
    },
    get C375() {
      return C375 = dart.constList([C376 || CT.C376, C377 || CT.C377], _LocationL());
    },
    get C374() {
      return C374 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C375 || CT.C375,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 522,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C380() {
      return C380 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 27,
        [_Location_line]: 528,
        [_Location_file]: null
      });
    },
    get C379() {
      return C379 = dart.constList([C380 || CT.C380], _LocationL());
    },
    get C378() {
      return C378 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C379 || CT.C379,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 528,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C383() {
      return C383 = dart.const({
        __proto__: borders.BorderStyle.prototype,
        [_name$3]: "BorderStyle.none",
        index: 0
      });
    },
    get C384() {
      return C384 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4278190080.0
      });
    },
    get C382() {
      return C382 = dart.const({
        __proto__: borders.BorderSide.prototype,
        [BorderSide_style]: C383 || CT.C383,
        [BorderSide_width]: 0,
        [BorderSide_color]: C384 || CT.C384
      });
    },
    get C381() {
      return C381 = dart.const({
        __proto__: circle_border.CircleBorder.prototype,
        [OutlinedBorder_side]: C382 || CT.C382
      });
    },
    get C385() {
      return C385 = dart.const({
        __proto__: stadium_border.StadiumBorder.prototype,
        [OutlinedBorder_side]: C382 || CT.C382
      });
    },
    get C386() {
      return C386 = dart.const({
        __proto__: box.BoxConstraints.prototype,
        [BoxConstraints_maxHeight]: 1 / 0,
        [BoxConstraints_minHeight]: 0,
        [BoxConstraints_maxWidth]: 1 / 0,
        [BoxConstraints_minWidth]: 0
      });
    },
    get C387() {
      return C387 = dart.const({
        __proto__: box.BoxConstraints.prototype,
        [BoxConstraints_maxHeight]: 56,
        [BoxConstraints_minHeight]: 56,
        [BoxConstraints_maxWidth]: 56,
        [BoxConstraints_minWidth]: 56
      });
    },
    get C388() {
      return C388 = dart.const({
        __proto__: box.BoxConstraints.prototype,
        [BoxConstraints_maxHeight]: 40,
        [BoxConstraints_minHeight]: 40,
        [BoxConstraints_maxWidth]: 40,
        [BoxConstraints_minWidth]: 40
      });
    },
    get C389() {
      return C389 = dart.const({
        __proto__: box.BoxConstraints.prototype,
        [BoxConstraints_maxHeight]: 48,
        [BoxConstraints_minHeight]: 48,
        [BoxConstraints_maxWidth]: 1 / 0,
        [BoxConstraints_minWidth]: 0
      });
    },
    get C390() {
      return C390 = dart.const({
        __proto__: flexible_space_bar.CollapseMode.prototype,
        [_name$4]: "CollapseMode.parallax",
        index: 0
      });
    },
    get C391() {
      return C391 = dart.const({
        __proto__: flexible_space_bar.CollapseMode.prototype,
        [_name$4]: "CollapseMode.pin",
        index: 1
      });
    },
    get C392() {
      return C392 = dart.const({
        __proto__: flexible_space_bar.CollapseMode.prototype,
        [_name$4]: "CollapseMode.none",
        index: 2
      });
    },
    get C393() {
      return C393 = dart.constList([C390 || CT.C390, C391 || CT.C391, C392 || CT.C392], CollapseModeL());
    },
    get C394() {
      return C394 = dart.const({
        __proto__: flexible_space_bar.StretchMode.prototype,
        [_name$4]: "StretchMode.zoomBackground",
        index: 0
      });
    },
    get C395() {
      return C395 = dart.const({
        __proto__: flexible_space_bar.StretchMode.prototype,
        [_name$4]: "StretchMode.blurBackground",
        index: 1
      });
    },
    get C396() {
      return C396 = dart.const({
        __proto__: flexible_space_bar.StretchMode.prototype,
        [_name$4]: "StretchMode.fadeTitle",
        index: 2
      });
    },
    get C397() {
      return C397 = dart.constList([C394 || CT.C394, C395 || CT.C395, C396 || CT.C396], StretchModeL());
    },
    get C398() {
      return C398 = dart.constList([C394 || CT.C394], StretchModeL());
    },
    get C401() {
      return C401 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "toolbarOpacity",
        [_Location_column]: 7,
        [_Location_line]: 222,
        [_Location_file]: null
      });
    },
    get C402() {
      return C402 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "minExtent",
        [_Location_column]: 7,
        [_Location_line]: 223,
        [_Location_file]: null
      });
    },
    get C403() {
      return C403 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxExtent",
        [_Location_column]: 7,
        [_Location_line]: 224,
        [_Location_file]: null
      });
    },
    get C404() {
      return C404 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "currentExtent",
        [_Location_column]: 7,
        [_Location_line]: 225,
        [_Location_file]: null
      });
    },
    get C405() {
      return C405 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 226,
        [_Location_file]: null
      });
    },
    get C400() {
      return C400 = dart.constList([C401 || CT.C401, C402 || CT.C402, C403 || CT.C403, C404 || CT.C404, C405 || CT.C405], _LocationL());
    },
    get C399() {
      return C399 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C400 || CT.C400,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 221,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C408() {
      return C408 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 17,
        [_Location_line]: 318,
        [_Location_file]: null
      });
    },
    get C409() {
      return C409 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 319,
        [_Location_file]: null
      });
    },
    get C407() {
      return C407 = dart.constList([C408 || CT.C408, C409 || CT.C409], _LocationL());
    },
    get C406() {
      return C406 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C407 || CT.C407,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 317,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C412() {
      return C412 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "top",
        [_Location_column]: 15,
        [_Location_line]: 313,
        [_Location_file]: null
      });
    },
    get C413() {
      return C413 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "left",
        [_Location_column]: 15,
        [_Location_line]: 314,
        [_Location_file]: null
      });
    },
    get C414() {
      return C414 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "right",
        [_Location_column]: 15,
        [_Location_line]: 315,
        [_Location_file]: null
      });
    },
    get C415() {
      return C415 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 15,
        [_Location_line]: 316,
        [_Location_file]: null
      });
    },
    get C416() {
      return C416 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 317,
        [_Location_file]: null
      });
    },
    get C411() {
      return C411 = dart.constList([C412 || CT.C412, C413 || CT.C413, C414 || CT.C414, C415 || CT.C415, C416 || CT.C416], _LocationL());
    },
    get C410() {
      return C410 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C411 || CT.C411,
        [_Location_name]: null,
        [_Location_column]: 26,
        [_Location_line]: 312,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C419() {
      return C419 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 21,
        [_Location_line]: 330,
        [_Location_file]: null
      });
    },
    get C418() {
      return C418 = dart.constList([C419 || CT.C419], _LocationL());
    },
    get C417() {
      return C417 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C418 || CT.C418,
        [_Location_name]: null,
        [_Location_column]: 26,
        [_Location_line]: 329,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C422() {
      return C422 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 19,
        [_Location_line]: 329,
        [_Location_file]: null
      });
    },
    get C423() {
      return C423 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "filter",
        [_Location_column]: 19,
        [_Location_line]: 332,
        [_Location_file]: null
      });
    },
    get C421() {
      return C421 = dart.constList([C422 || CT.C422, C423 || CT.C423], _LocationL());
    },
    get C420() {
      return C420 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C421 || CT.C421,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 328,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C426() {
      return C426 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 328,
        [_Location_file]: null
      });
    },
    get C425() {
      return C425 = dart.constList([C426 || CT.C426], _LocationL());
    },
    get C424() {
      return C424 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C425 || CT.C425,
        [_Location_name]: null,
        [_Location_column]: 39,
        [_Location_line]: 327,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C429() {
      return C429 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "namesRoute",
        [_Location_column]: 17,
        [_Location_line]: 357,
        [_Location_file]: null
      });
    },
    get C430() {
      return C430 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 358,
        [_Location_file]: null
      });
    },
    get C428() {
      return C428 = dart.constList([C429 || CT.C429, C430 || CT.C430], _LocationL());
    },
    get C427() {
      return C427 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C428 || CT.C428,
        [_Location_name]: null,
        [_Location_column]: 23,
        [_Location_line]: 356,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C433() {
      return C433 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 15,
        [_Location_line]: 369,
        [_Location_file]: null
      });
    },
    get C434() {
      return C434 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 370,
        [_Location_file]: null
      });
    },
    get C432() {
      return C432 = dart.constList([C433 || CT.C433, C434 || CT.C434], _LocationL());
    },
    get C431() {
      return C431 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C432 || CT.C432,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 368,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C437() {
      return C437 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 27,
        [_Location_line]: 402,
        [_Location_file]: null
      });
    },
    get C438() {
      return C438 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 27,
        [_Location_line]: 403,
        [_Location_file]: null
      });
    },
    get C439() {
      return C439 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 27,
        [_Location_line]: 404,
        [_Location_file]: null
      });
    },
    get C436() {
      return C436 = dart.constList([C437 || CT.C437, C438 || CT.C438, C439 || CT.C439], _LocationL());
    },
    get C435() {
      return C435 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C436 || CT.C436,
        [_Location_name]: null,
        [_Location_column]: 32,
        [_Location_line]: 401,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C442() {
      return C442 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 23,
        [_Location_line]: 400,
        [_Location_file]: null
      });
    },
    get C441() {
      return C441 = dart.constList([C442 || CT.C442], _LocationL());
    },
    get C440() {
      return C440 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C441 || CT.C441,
        [_Location_name]: null,
        [_Location_column]: 28,
        [_Location_line]: 399,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C445() {
      return C445 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 21,
        [_Location_line]: 398,
        [_Location_file]: null
      });
    },
    get C446() {
      return C446 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 21,
        [_Location_line]: 399,
        [_Location_file]: null
      });
    },
    get C444() {
      return C444 = dart.constList([C445 || CT.C445, C446 || CT.C446], _LocationL());
    },
    get C443() {
      return C443 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C444 || CT.C444,
        [_Location_name]: null,
        [_Location_column]: 26,
        [_Location_line]: 397,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C449() {
      return C449 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 19,
        [_Location_line]: 396,
        [_Location_file]: null
      });
    },
    get C450() {
      return C450 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 19,
        [_Location_line]: 397,
        [_Location_file]: null
      });
    },
    get C448() {
      return C448 = dart.constList([C449 || CT.C449, C450 || CT.C450], _LocationL());
    },
    get C447() {
      return C447 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C448 || CT.C448,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 395,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C453() {
      return C453 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 17,
        [_Location_line]: 393,
        [_Location_file]: null
      });
    },
    get C454() {
      return C454 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "transform",
        [_Location_column]: 17,
        [_Location_line]: 394,
        [_Location_file]: null
      });
    },
    get C455() {
      return C455 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 395,
        [_Location_file]: null
      });
    },
    get C452() {
      return C452 = dart.constList([C453 || CT.C453, C454 || CT.C454, C455 || CT.C455], _LocationL());
    },
    get C451() {
      return C451 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C452 || CT.C452,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 392,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C458() {
      return C458 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 15,
        [_Location_line]: 391,
        [_Location_file]: null
      });
    },
    get C459() {
      return C459 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 392,
        [_Location_file]: null
      });
    },
    get C457() {
      return C457 = dart.constList([C458 || CT.C458, C459 || CT.C459], _LocationL());
    },
    get C456() {
      return C456 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C457 || CT.C457,
        [_Location_name]: null,
        [_Location_column]: 26,
        [_Location_line]: 390,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C462() {
      return C462 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 38,
        [_Location_line]: 415,
        [_Location_file]: null
      });
    },
    get C461() {
      return C461 = dart.constList([C462 || CT.C462], _LocationL());
    },
    get C460() {
      return C460 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C461 || CT.C461,
        [_Location_name]: null,
        [_Location_column]: 32,
        [_Location_line]: 415,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C465() {
      return C465 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 25,
        [_Location_line]: 415,
        [_Location_file]: null
      });
    },
    get C464() {
      return C464 = dart.constList([C465 || CT.C465], _LocationL());
    },
    get C463() {
      return C463 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C464 || CT.C464,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 415,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C468() {
      return C468 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 7,
        [_Location_line]: 282,
        [_Location_file]: null
      });
    },
    get C467() {
      return C467 = dart.constList([C468 || CT.C468], _LocationL());
    },
    get C466() {
      return C466 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C467 || CT.C467,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 281,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C469() {
      return C469 = dart.const({
        __proto__: list_tile.ListTileStyle.prototype,
        [_name$5]: "ListTileStyle.list",
        index: 0
      });
    },
    get C470() {
      return C470 = dart.const({
        __proto__: list_tile.ListTileStyle.prototype,
        [_name$5]: "ListTileStyle.drawer",
        index: 1
      });
    },
    get C471() {
      return C471 = dart.constList([C469 || CT.C469, C470 || CT.C470], ListTileStyleL());
    },
    get C474() {
      return C474 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 11,
        [_Location_line]: 82,
        [_Location_file]: null
      });
    },
    get C475() {
      return C475 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "dense",
        [_Location_column]: 11,
        [_Location_line]: 83,
        [_Location_file]: null
      });
    },
    get C476() {
      return C476 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shape",
        [_Location_column]: 11,
        [_Location_line]: 84,
        [_Location_file]: null
      });
    },
    get C477() {
      return C477 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 11,
        [_Location_line]: 85,
        [_Location_file]: null
      });
    },
    get C478() {
      return C478 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selectedColor",
        [_Location_column]: 11,
        [_Location_line]: 86,
        [_Location_file]: null
      });
    },
    get C479() {
      return C479 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "iconColor",
        [_Location_column]: 11,
        [_Location_line]: 87,
        [_Location_file]: null
      });
    },
    get C480() {
      return C480 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textColor",
        [_Location_column]: 11,
        [_Location_line]: 88,
        [_Location_file]: null
      });
    },
    get C481() {
      return C481 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "contentPadding",
        [_Location_column]: 11,
        [_Location_line]: 89,
        [_Location_file]: null
      });
    },
    get C482() {
      return C482 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "tileColor",
        [_Location_column]: 11,
        [_Location_line]: 90,
        [_Location_file]: null
      });
    },
    get C483() {
      return C483 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selectedTileColor",
        [_Location_column]: 11,
        [_Location_line]: 91,
        [_Location_file]: null
      });
    },
    get C484() {
      return C484 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 92,
        [_Location_file]: null
      });
    },
    get C473() {
      return C473 = dart.constList([C474 || CT.C474, C475 || CT.C475, C476 || CT.C476, C477 || CT.C477, C478 || CT.C478, C479 || CT.C479, C480 || CT.C480, C481 || CT.C481, C482 || CT.C482, C483 || CT.C483, C484 || CT.C484], _LocationL());
    },
    get C472() {
      return C472 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C473 || CT.C473,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 81,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C487() {
      return C487 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 7,
        [_Location_line]: 79,
        [_Location_file]: null
      });
    },
    get C486() {
      return C486 = dart.constList([C487 || CT.C487], _LocationL());
    },
    get C485() {
      return C485 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C486 || CT.C486,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 78,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C489() {
      return C489 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C55 || CT.C55,
        [_Location_name]: null,
        [_Location_column]: 28,
        [_Location_line]: 143,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C488() {
      return C488 = dart.const({
        __proto__: list_tile.ListTileTheme.prototype,
        [Widget__location]: C489 || CT.C489,
        [Widget_key]: null,
        [ProxyWidget_child]: null,
        [ListTileTheme_selectedTileColor]: null,
        [ListTileTheme_tileColor]: null,
        [ListTileTheme_contentPadding]: null,
        [ListTileTheme_textColor]: null,
        [ListTileTheme_iconColor]: null,
        [ListTileTheme_selectedColor]: null,
        [ListTileTheme_style]: C469 || CT.C469,
        [ListTileTheme_shape]: null,
        [ListTileTheme_dense]: false
      });
    },
    get C492() {
      return C492 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "dense",
        [_Location_column]: 7,
        [_Location_line]: 150,
        [_Location_file]: null
      });
    },
    get C493() {
      return C493 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shape",
        [_Location_column]: 7,
        [_Location_line]: 151,
        [_Location_file]: null
      });
    },
    get C494() {
      return C494 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 7,
        [_Location_line]: 152,
        [_Location_file]: null
      });
    },
    get C495() {
      return C495 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selectedColor",
        [_Location_column]: 7,
        [_Location_line]: 153,
        [_Location_file]: null
      });
    },
    get C496() {
      return C496 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "iconColor",
        [_Location_column]: 7,
        [_Location_line]: 154,
        [_Location_file]: null
      });
    },
    get C497() {
      return C497 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textColor",
        [_Location_column]: 7,
        [_Location_line]: 155,
        [_Location_file]: null
      });
    },
    get C498() {
      return C498 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "contentPadding",
        [_Location_column]: 7,
        [_Location_line]: 156,
        [_Location_file]: null
      });
    },
    get C499() {
      return C499 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "tileColor",
        [_Location_column]: 7,
        [_Location_line]: 157,
        [_Location_file]: null
      });
    },
    get C500() {
      return C500 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selectedTileColor",
        [_Location_column]: 7,
        [_Location_line]: 158,
        [_Location_file]: null
      });
    },
    get C501() {
      return C501 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 159,
        [_Location_file]: null
      });
    },
    get C491() {
      return C491 = dart.constList([C492 || CT.C492, C493 || CT.C493, C494 || CT.C494, C495 || CT.C495, C496 || CT.C496, C497 || CT.C497, C498 || CT.C498, C499 || CT.C499, C500 || CT.C500, C501 || CT.C501], _LocationL());
    },
    get C490() {
      return C490 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C491 || CT.C491,
        [_Location_name]: null,
        [_Location_column]: 53,
        [_Location_line]: 149,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C502() {
      return C502 = dart.const({
        __proto__: list_tile.ListTileControlAffinity.prototype,
        [_name$5]: "ListTileControlAffinity.leading",
        index: 0
      });
    },
    get C503() {
      return C503 = dart.const({
        __proto__: list_tile.ListTileControlAffinity.prototype,
        [_name$5]: "ListTileControlAffinity.trailing",
        index: 1
      });
    },
    get C504() {
      return C504 = dart.const({
        __proto__: list_tile.ListTileControlAffinity.prototype,
        [_name$5]: "ListTileControlAffinity.platform",
        index: 2
      });
    },
    get C505() {
      return C505 = dart.constList([C502 || CT.C502, C503 || CT.C503, C504 || CT.C504], ListTileControlAffinityL());
    },
    get C508() {
      return C508 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "position",
        [_Location_column]: 9,
        [_Location_line]: 898,
        [_Location_file]: null
      });
    },
    get C509() {
      return C509 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "decoration",
        [_Location_column]: 9,
        [_Location_line]: 899,
        [_Location_file]: null
      });
    },
    get C510() {
      return C510 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 900,
        [_Location_file]: null
      });
    },
    get C507() {
      return C507 = dart.constList([C508 || CT.C508, C509 || CT.C509, C510 || CT.C510], _LocationL());
    },
    get C506() {
      return C506 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C507 || CT.C507,
        [_Location_name]: null,
        [_Location_column]: 13,
        [_Location_line]: 897,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C511() {
      return C511 = dart.const({
        __proto__: ui.Brightness.prototype,
        [_name$2]: "Brightness.light",
        index: 1
      });
    },
    get C512() {
      return C512 = dart.const({
        __proto__: ui.Brightness.prototype,
        [_name$2]: "Brightness.dark",
        index: 0
      });
    },
    get C514() {
      return C514 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C55 || CT.C55,
        [_Location_name]: null,
        [_Location_column]: 29,
        [_Location_line]: 1021,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C513() {
      return C513 = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget__location]: C514 || CT.C514,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: null,
        [SizedBox_width]: null
      });
    },
    get C517() {
      return C517 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 7,
        [_Location_line]: 1019,
        [_Location_file]: null
      });
    },
    get C518() {
      return C518 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "duration",
        [_Location_column]: 7,
        [_Location_line]: 1020,
        [_Location_file]: null
      });
    },
    get C519() {
      return C519 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 1021,
        [_Location_file]: null
      });
    },
    get C516() {
      return C516 = dart.constList([C517 || CT.C517, C518 || CT.C518, C519 || CT.C519], _LocationL());
    },
    get C515() {
      return C515 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C516 || CT.C516,
        [_Location_name]: null,
        [_Location_column]: 30,
        [_Location_line]: 1018,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C522() {
      return C522 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 9,
        [_Location_line]: 1029,
        [_Location_file]: null
      });
    },
    get C523() {
      return C523 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "duration",
        [_Location_column]: 9,
        [_Location_line]: 1030,
        [_Location_file]: null
      });
    },
    get C524() {
      return C524 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 1031,
        [_Location_file]: null
      });
    },
    get C521() {
      return C521 = dart.constList([C522 || CT.C522, C523 || CT.C523, C524 || CT.C524], _LocationL());
    },
    get C520() {
      return C520 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C521 || CT.C521,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 1028,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C527() {
      return C527 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "leading",
        [_Location_column]: 15,
        [_Location_line]: 1077,
        [_Location_file]: null
      });
    },
    get C528() {
      return C528 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "title",
        [_Location_column]: 15,
        [_Location_line]: 1078,
        [_Location_file]: null
      });
    },
    get C529() {
      return C529 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "subtitle",
        [_Location_column]: 15,
        [_Location_line]: 1079,
        [_Location_file]: null
      });
    },
    get C530() {
      return C530 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "trailing",
        [_Location_column]: 15,
        [_Location_line]: 1080,
        [_Location_file]: null
      });
    },
    get C531() {
      return C531 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isDense",
        [_Location_column]: 15,
        [_Location_line]: 1081,
        [_Location_file]: null
      });
    },
    get C532() {
      return C532 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "visualDensity",
        [_Location_column]: 15,
        [_Location_line]: 1082,
        [_Location_file]: null
      });
    },
    get C533() {
      return C533 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isThreeLine",
        [_Location_column]: 15,
        [_Location_line]: 1083,
        [_Location_file]: null
      });
    },
    get C534() {
      return C534 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textDirection",
        [_Location_column]: 15,
        [_Location_line]: 1084,
        [_Location_file]: null
      });
    },
    get C535() {
      return C535 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "titleBaselineType",
        [_Location_column]: 15,
        [_Location_line]: 1085,
        [_Location_file]: null
      });
    },
    get C536() {
      return C536 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "subtitleBaselineType",
        [_Location_column]: 15,
        [_Location_line]: 1086,
        [_Location_file]: null
      });
    },
    get C526() {
      return C526 = dart.constList([C527 || CT.C527, C528 || CT.C528, C529 || CT.C529, C530 || CT.C530, C531 || CT.C531, C532 || CT.C532, C533 || CT.C533, C534 || CT.C534, C535 || CT.C535, C536 || CT.C536], _LocationL());
    },
    get C525() {
      return C525 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C526 || CT.C526,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 1076,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C539() {
      return C539 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "top",
        [_Location_column]: 13,
        [_Location_line]: 1073,
        [_Location_file]: null
      });
    },
    get C540() {
      return C540 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "bottom",
        [_Location_column]: 13,
        [_Location_line]: 1074,
        [_Location_file]: null
      });
    },
    get C541() {
      return C541 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "minimum",
        [_Location_column]: 13,
        [_Location_line]: 1075,
        [_Location_file]: null
      });
    },
    get C542() {
      return C542 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 1076,
        [_Location_file]: null
      });
    },
    get C538() {
      return C538 = dart.constList([C539 || CT.C539, C540 || CT.C540, C541 || CT.C541, C542 || CT.C542], _LocationL());
    },
    get C537() {
      return C537 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C538 || CT.C538,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 1072,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C545() {
      return C545 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 11,
        [_Location_line]: 1071,
        [_Location_file]: null
      });
    },
    get C546() {
      return C546 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 1072,
        [_Location_file]: null
      });
    },
    get C544() {
      return C544 = dart.constList([C545 || CT.C545, C546 || CT.C546], _LocationL());
    },
    get C543() {
      return C543 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C544 || CT.C544,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 1070,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C549() {
      return C549 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selected",
        [_Location_column]: 9,
        [_Location_line]: 1068,
        [_Location_file]: null
      });
    },
    get C550() {
      return C550 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enabled",
        [_Location_column]: 9,
        [_Location_line]: 1069,
        [_Location_file]: null
      });
    },
    get C551() {
      return C551 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 1070,
        [_Location_file]: null
      });
    },
    get C548() {
      return C548 = dart.constList([C549 || CT.C549, C550 || CT.C550, C551 || CT.C551], _LocationL());
    },
    get C547() {
      return C547 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C548 || CT.C548,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 1067,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C554() {
      return C554 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "customBorder",
        [_Location_column]: 7,
        [_Location_line]: 1058,
        [_Location_file]: null
      });
    },
    get C555() {
      return C555 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTap",
        [_Location_column]: 7,
        [_Location_line]: 1059,
        [_Location_file]: null
      });
    },
    get C556() {
      return C556 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onLongPress",
        [_Location_column]: 7,
        [_Location_line]: 1060,
        [_Location_file]: null
      });
    },
    get C557() {
      return C557 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mouseCursor",
        [_Location_column]: 7,
        [_Location_line]: 1061,
        [_Location_file]: null
      });
    },
    get C558() {
      return C558 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "canRequestFocus",
        [_Location_column]: 7,
        [_Location_line]: 1062,
        [_Location_file]: null
      });
    },
    get C559() {
      return C559 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusNode",
        [_Location_column]: 7,
        [_Location_line]: 1063,
        [_Location_file]: null
      });
    },
    get C560() {
      return C560 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusColor",
        [_Location_column]: 7,
        [_Location_line]: 1064,
        [_Location_file]: null
      });
    },
    get C561() {
      return C561 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "hoverColor",
        [_Location_column]: 7,
        [_Location_line]: 1065,
        [_Location_file]: null
      });
    },
    get C562() {
      return C562 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "autofocus",
        [_Location_column]: 7,
        [_Location_line]: 1066,
        [_Location_file]: null
      });
    },
    get C563() {
      return C563 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 1067,
        [_Location_file]: null
      });
    },
    get C553() {
      return C553 = dart.constList([C554 || CT.C554, C555 || CT.C555, C556 || CT.C556, C557 || CT.C557, C558 || CT.C558, C559 || CT.C559, C560 || CT.C560, C561 || CT.C561, C562 || CT.C562, C563 || CT.C563], _LocationL());
    },
    get C552() {
      return C552 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C553 || CT.C553,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1057,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C564() {
      return C564 = dart.const({
        __proto__: list_tile._ListTileSlot.prototype,
        [_name$5]: "_ListTileSlot.leading",
        index: 0
      });
    },
    get C565() {
      return C565 = dart.const({
        __proto__: list_tile._ListTileSlot.prototype,
        [_name$5]: "_ListTileSlot.title",
        index: 1
      });
    },
    get C566() {
      return C566 = dart.const({
        __proto__: list_tile._ListTileSlot.prototype,
        [_name$5]: "_ListTileSlot.subtitle",
        index: 2
      });
    },
    get C567() {
      return C567 = dart.const({
        __proto__: list_tile._ListTileSlot.prototype,
        [_name$5]: "_ListTileSlot.trailing",
        index: 3
      });
    },
    get C568() {
      return C568 = dart.constList([C564 || CT.C564, C565 || CT.C565, C566 || CT.C566, C567 || CT.C567], _ListTileSlotL());
    },
    get C569() {
      return C569 = dart.const({
        __proto__: drawer.DrawerAlignment.prototype,
        [_name$6]: "DrawerAlignment.start",
        index: 0
      });
    },
    get C570() {
      return C570 = dart.const({
        __proto__: drawer.DrawerAlignment.prototype,
        [_name$6]: "DrawerAlignment.end",
        index: 1
      });
    },
    get C571() {
      return C571 = dart.constList([C569 || CT.C569, C570 || CT.C570], DrawerAlignmentL());
    },
    get C572() {
      return C572 = dart.const({
        __proto__: box.BoxConstraints.prototype,
        [BoxConstraints_maxHeight]: 1 / 0,
        [BoxConstraints_minHeight]: 1 / 0,
        [BoxConstraints_maxWidth]: 304,
        [BoxConstraints_minWidth]: 304
      });
    },
    get C575() {
      return C575 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "elevation",
        [_Location_column]: 11,
        [_Location_line]: 201,
        [_Location_file]: null
      });
    },
    get C576() {
      return C576 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 202,
        [_Location_file]: null
      });
    },
    get C574() {
      return C574 = dart.constList([C575 || CT.C575, C576 || CT.C576], _LocationL());
    },
    get C573() {
      return C573 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C574 || CT.C574,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 200,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C579() {
      return C579 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 9,
        [_Location_line]: 199,
        [_Location_file]: null
      });
    },
    get C580() {
      return C580 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 200,
        [_Location_file]: null
      });
    },
    get C578() {
      return C578 = dart.constList([C579 || CT.C579, C580 || CT.C580], _LocationL());
    },
    get C577() {
      return C577 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C578 || CT.C578,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 198,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C583() {
      return C583 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scopesRoute",
        [_Location_column]: 7,
        [_Location_line]: 194,
        [_Location_file]: null
      });
    },
    get C584() {
      return C584 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "namesRoute",
        [_Location_column]: 7,
        [_Location_line]: 195,
        [_Location_file]: null
      });
    },
    get C585() {
      return C585 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "explicitChildNodes",
        [_Location_column]: 7,
        [_Location_line]: 196,
        [_Location_file]: null
      });
    },
    get C586() {
      return C586 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "label",
        [_Location_column]: 7,
        [_Location_line]: 197,
        [_Location_file]: null
      });
    },
    get C587() {
      return C587 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 198,
        [_Location_file]: null
      });
    },
    get C582() {
      return C582 = dart.constList([C583 || CT.C583, C584 || CT.C584, C585 || CT.C585, C586 || CT.C586, C587 || CT.C587], _LocationL());
    },
    get C581() {
      return C581 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C582 || CT.C582,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 193,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C588() {
      return C588 = dart.const({
        __proto__: recognizer.DragStartBehavior.prototype,
        [_name$7]: "DragStartBehavior.start",
        index: 1
      });
    },
    get C591() {
      return C591 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 30,
        [_Location_line]: 534,
        [_Location_file]: null
      });
    },
    get C590() {
      return C590 = dart.constList([C591 || CT.C591], _LocationL());
    },
    get C589() {
      return C589 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C590 || CT.C590,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 534,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C594() {
      return C594 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 13,
        [_Location_line]: 528,
        [_Location_file]: null
      });
    },
    get C595() {
      return C595 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHorizontalDragUpdate",
        [_Location_column]: 13,
        [_Location_line]: 529,
        [_Location_file]: null
      });
    },
    get C596() {
      return C596 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHorizontalDragEnd",
        [_Location_column]: 13,
        [_Location_line]: 530,
        [_Location_file]: null
      });
    },
    get C597() {
      return C597 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 13,
        [_Location_line]: 531,
        [_Location_file]: null
      });
    },
    get C598() {
      return C598 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "excludeFromSemantics",
        [_Location_column]: 13,
        [_Location_line]: 532,
        [_Location_file]: null
      });
    },
    get C599() {
      return C599 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "dragStartBehavior",
        [_Location_column]: 13,
        [_Location_line]: 533,
        [_Location_file]: null
      });
    },
    get C600() {
      return C600 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 534,
        [_Location_file]: null
      });
    },
    get C593() {
      return C593 = dart.constList([C594 || CT.C594, C595 || CT.C595, C596 || CT.C596, C597 || CT.C597, C598 || CT.C598, C599 || CT.C599, C600 || CT.C600], _LocationL());
    },
    get C592() {
      return C592 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C593 || CT.C593,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 527,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C603() {
      return C603 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 11,
        [_Location_line]: 526,
        [_Location_file]: null
      });
    },
    get C604() {
      return C604 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 527,
        [_Location_file]: null
      });
    },
    get C602() {
      return C602 = dart.constList([C603 || CT.C603, C604 || CT.C604], _LocationL());
    },
    get C601() {
      return C601 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C602 || CT.C602,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 525,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C606() {
      return C606 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C55 || CT.C55,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 538,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C605() {
      return C605 = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget__location]: C606 || CT.C606,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 0,
        [SizedBox_width]: 0
      });
    },
    get C609() {
      return C609 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 27,
        [_Location_line]: 577,
        [_Location_file]: null
      });
    },
    get C608() {
      return C608 = dart.constList([C609 || CT.C609], _LocationL());
    },
    get C607() {
      return C607 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C608 || CT.C608,
        [_Location_name]: null,
        [_Location_column]: 32,
        [_Location_line]: 576,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C612() {
      return C612 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opaque",
        [_Location_column]: 25,
        [_Location_line]: 575,
        [_Location_file]: null
      });
    },
    get C613() {
      return C613 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 25,
        [_Location_line]: 576,
        [_Location_file]: null
      });
    },
    get C611() {
      return C611 = dart.constList([C612 || CT.C612, C613 || CT.C613], _LocationL());
    },
    get C610() {
      return C610 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C611 || CT.C611,
        [_Location_name]: null,
        [_Location_column]: 30,
        [_Location_line]: 574,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C616() {
      return C616 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "label",
        [_Location_column]: 23,
        [_Location_line]: 573,
        [_Location_file]: null
      });
    },
    get C617() {
      return C617 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 23,
        [_Location_line]: 574,
        [_Location_file]: null
      });
    },
    get C615() {
      return C615 = dart.constList([C616 || CT.C616, C617 || CT.C617], _LocationL());
    },
    get C614() {
      return C614 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C615 || CT.C615,
        [_Location_name]: null,
        [_Location_column]: 28,
        [_Location_line]: 572,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C620() {
      return C620 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTap",
        [_Location_column]: 21,
        [_Location_line]: 571,
        [_Location_file]: null
      });
    },
    get C621() {
      return C621 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 21,
        [_Location_line]: 572,
        [_Location_file]: null
      });
    },
    get C619() {
      return C619 = dart.constList([C620 || CT.C620, C621 || CT.C621], _LocationL());
    },
    get C618() {
      return C618 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C619 || CT.C619,
        [_Location_name]: null,
        [_Location_column]: 26,
        [_Location_line]: 570,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C624() {
      return C624 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "excluding",
        [_Location_column]: 19,
        [_Location_line]: 569,
        [_Location_file]: null
      });
    },
    get C625() {
      return C625 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 19,
        [_Location_line]: 570,
        [_Location_file]: null
      });
    },
    get C623() {
      return C623 = dart.constList([C624 || CT.C624, C625 || CT.C625], _LocationL());
    },
    get C622() {
      return C622 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C623 || CT.C623,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 567,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C628() {
      return C628 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 567,
        [_Location_file]: null
      });
    },
    get C627() {
      return C627 = dart.constList([C628 || CT.C628], _LocationL());
    },
    get C626() {
      return C626 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C627 || CT.C627,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 566,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C631() {
      return C631 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 23,
        [_Location_line]: 591,
        [_Location_file]: null
      });
    },
    get C632() {
      return C632 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "node",
        [_Location_column]: 23,
        [_Location_line]: 592,
        [_Location_file]: null
      });
    },
    get C633() {
      return C633 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 23,
        [_Location_line]: 593,
        [_Location_file]: null
      });
    },
    get C630() {
      return C630 = dart.constList([C631 || CT.C631, C632 || CT.C632, C633 || CT.C633], _LocationL());
    },
    get C629() {
      return C629 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C630 || CT.C630,
        [_Location_name]: null,
        [_Location_column]: 28,
        [_Location_line]: 590,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C636() {
      return C636 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 21,
        [_Location_line]: 590,
        [_Location_file]: null
      });
    },
    get C635() {
      return C635 = dart.constList([C636 || CT.C636], _LocationL());
    },
    get C634() {
      return C634 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C635 || CT.C635,
        [_Location_name]: null,
        [_Location_column]: 26,
        [_Location_line]: 589,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C639() {
      return C639 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 19,
        [_Location_line]: 587,
        [_Location_file]: null
      });
    },
    get C640() {
      return C640 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "widthFactor",
        [_Location_column]: 19,
        [_Location_line]: 588,
        [_Location_file]: null
      });
    },
    get C641() {
      return C641 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 19,
        [_Location_line]: 589,
        [_Location_file]: null
      });
    },
    get C638() {
      return C638 = dart.constList([C639 || CT.C639, C640 || CT.C640, C641 || CT.C641], _LocationL());
    },
    get C637() {
      return C637 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C638 || CT.C638,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 586,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C644() {
      return C644 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 17,
        [_Location_line]: 585,
        [_Location_file]: null
      });
    },
    get C645() {
      return C645 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 586,
        [_Location_file]: null
      });
    },
    get C643() {
      return C643 = dart.constList([C644 || CT.C644, C645 || CT.C645], _LocationL());
    },
    get C642() {
      return C642 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C643 || CT.C643,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 584,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C648() {
      return C648 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 13,
        [_Location_line]: 565,
        [_Location_file]: null
      });
    },
    get C647() {
      return C647 = dart.constList([C648 || CT.C648], _LocationL());
    },
    get C646() {
      return C646 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C647 || CT.C647,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 564,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C651() {
      return C651 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 564,
        [_Location_file]: null
      });
    },
    get C650() {
      return C650 = dart.constList([C651 || CT.C651], _LocationL());
    },
    get C649() {
      return C649 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C650 || CT.C650,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 563,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C654() {
      return C654 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 9,
        [_Location_line]: 556,
        [_Location_file]: null
      });
    },
    get C655() {
      return C655 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHorizontalDragDown",
        [_Location_column]: 9,
        [_Location_line]: 557,
        [_Location_file]: null
      });
    },
    get C656() {
      return C656 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHorizontalDragUpdate",
        [_Location_column]: 9,
        [_Location_line]: 558,
        [_Location_file]: null
      });
    },
    get C657() {
      return C657 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHorizontalDragEnd",
        [_Location_column]: 9,
        [_Location_line]: 559,
        [_Location_file]: null
      });
    },
    get C658() {
      return C658 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHorizontalDragCancel",
        [_Location_column]: 9,
        [_Location_line]: 560,
        [_Location_file]: null
      });
    },
    get C659() {
      return C659 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "excludeFromSemantics",
        [_Location_column]: 9,
        [_Location_line]: 561,
        [_Location_file]: null
      });
    },
    get C660() {
      return C660 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "dragStartBehavior",
        [_Location_column]: 9,
        [_Location_line]: 562,
        [_Location_file]: null
      });
    },
    get C661() {
      return C661 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 563,
        [_Location_file]: null
      });
    },
    get C653() {
      return C653 = dart.constList([C654 || CT.C654, C655 || CT.C655, C656 || CT.C656, C657 || CT.C657, C658 || CT.C658, C659 || CT.C659, C660 || CT.C660, C661 || CT.C661], _LocationL());
    },
    get C652() {
      return C652 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C653 || CT.C653,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 555,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C664() {
      return C664 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 7,
        [_Location_line]: 608,
        [_Location_file]: null
      });
    },
    get C665() {
      return C665 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 609,
        [_Location_file]: null
      });
    },
    get C663() {
      return C663 = dart.constList([C664 || CT.C664, C665 || CT.C665], _LocationL());
    },
    get C662() {
      return C662 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C663 || CT.C663,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 607,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C666() {
      return C666 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 246000
      });
    },
    get C669() {
      return C669 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 11,
        [_Location_line]: 202,
        [_Location_file]: null
      });
    },
    get C670() {
      return C670 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "margin",
        [_Location_column]: 11,
        [_Location_line]: 203,
        [_Location_file]: null
      });
    },
    get C671() {
      return C671 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "decoration",
        [_Location_column]: 11,
        [_Location_line]: 204,
        [_Location_file]: null
      });
    },
    get C668() {
      return C668 = dart.constList([C669 || CT.C669, C670 || CT.C670, C671 || CT.C671], _LocationL());
    },
    get C667() {
      return C667 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C668 || CT.C668,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 201,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/divider.dart"
      });
    },
    get C674() {
      return C674 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 201,
        [_Location_file]: null
      });
    },
    get C673() {
      return C673 = dart.constList([C674 || CT.C674], _LocationL());
    },
    get C672() {
      return C672 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C673 || CT.C673,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 200,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/divider.dart"
      });
    },
    get C677() {
      return C677 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 7,
        [_Location_line]: 199,
        [_Location_file]: null
      });
    },
    get C678() {
      return C678 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 200,
        [_Location_file]: null
      });
    },
    get C676() {
      return C676 = dart.constList([C677 || CT.C677, C678 || CT.C678], _LocationL());
    },
    get C675() {
      return C675 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C676 || CT.C676,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 198,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/divider.dart"
      });
    },
    get C681() {
      return C681 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 11,
        [_Location_line]: 303,
        [_Location_file]: null
      });
    },
    get C682() {
      return C682 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "margin",
        [_Location_column]: 11,
        [_Location_line]: 304,
        [_Location_file]: null
      });
    },
    get C683() {
      return C683 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "decoration",
        [_Location_column]: 11,
        [_Location_line]: 305,
        [_Location_file]: null
      });
    },
    get C680() {
      return C680 = dart.constList([C681 || CT.C681, C682 || CT.C682, C683 || CT.C683], _LocationL());
    },
    get C679() {
      return C679 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C680 || CT.C680,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 302,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/divider.dart"
      });
    },
    get C686() {
      return C686 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 302,
        [_Location_file]: null
      });
    },
    get C685() {
      return C685 = dart.constList([C686 || CT.C686], _LocationL());
    },
    get C684() {
      return C684 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C685 || CT.C685,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 301,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/divider.dart"
      });
    },
    get C689() {
      return C689 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 7,
        [_Location_line]: 300,
        [_Location_file]: null
      });
    },
    get C690() {
      return C690 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 301,
        [_Location_file]: null
      });
    },
    get C688() {
      return C688 = dart.constList([C689 || CT.C689, C690 || CT.C690], _LocationL());
    },
    get C687() {
      return C687 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C688 || CT.C688,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 299,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/divider.dart"
      });
    },
    get C691() {
      return C691 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 100000
      });
    },
    get C692() {
      return C692 = dart.const({
        __proto__: curves._DecelerateCurve.prototype
      });
    },
    get C693() {
      return C693 = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 24,
        [EdgeInsets_right]: 40,
        [EdgeInsets_top]: 24,
        [EdgeInsets_left]: 40
      });
    },
    get C694() {
      return C694 = dart.const({
        __proto__: box.BoxConstraints.prototype,
        [BoxConstraints_maxHeight]: 1 / 0,
        [BoxConstraints_minHeight]: 0,
        [BoxConstraints_maxWidth]: 1 / 0,
        [BoxConstraints_minWidth]: 280
      });
    },
    get C697() {
      return C697 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 15,
        [_Location_line]: 149,
        [_Location_file]: null
      });
    },
    get C698() {
      return C698 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "elevation",
        [_Location_column]: 15,
        [_Location_line]: 150,
        [_Location_file]: null
      });
    },
    get C699() {
      return C699 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shape",
        [_Location_column]: 15,
        [_Location_line]: 151,
        [_Location_file]: null
      });
    },
    get C700() {
      return C700 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "type",
        [_Location_column]: 15,
        [_Location_line]: 152,
        [_Location_file]: null
      });
    },
    get C701() {
      return C701 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipBehavior",
        [_Location_column]: 15,
        [_Location_line]: 153,
        [_Location_file]: null
      });
    },
    get C702() {
      return C702 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 154,
        [_Location_file]: null
      });
    },
    get C696() {
      return C696 = dart.constList([C697 || CT.C697, C698 || CT.C698, C699 || CT.C699, C700 || CT.C700, C701 || CT.C701, C702 || CT.C702], _LocationL());
    },
    get C695() {
      return C695 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C696 || CT.C696,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 148,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C705() {
      return C705 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 13,
        [_Location_line]: 147,
        [_Location_file]: null
      });
    },
    get C706() {
      return C706 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 148,
        [_Location_file]: null
      });
    },
    get C704() {
      return C704 = dart.constList([C705 || CT.C705, C706 || CT.C706], _LocationL());
    },
    get C703() {
      return C703 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C704 || CT.C704,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 146,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C709() {
      return C709 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 146,
        [_Location_file]: null
      });
    },
    get C708() {
      return C708 = dart.constList([C709 || CT.C709], _LocationL());
    },
    get C707() {
      return C707 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C708 || CT.C708,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 145,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C712() {
      return C712 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "removeLeft",
        [_Location_column]: 9,
        [_Location_line]: 140,
        [_Location_file]: null
      });
    },
    get C713() {
      return C713 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "removeTop",
        [_Location_column]: 9,
        [_Location_line]: 141,
        [_Location_file]: null
      });
    },
    get C714() {
      return C714 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "removeRight",
        [_Location_column]: 9,
        [_Location_line]: 142,
        [_Location_file]: null
      });
    },
    get C715() {
      return C715 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "removeBottom",
        [_Location_column]: 9,
        [_Location_line]: 143,
        [_Location_file]: null
      });
    },
    get C716() {
      return C716 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "context",
        [_Location_column]: 9,
        [_Location_line]: 144,
        [_Location_file]: null
      });
    },
    get C717() {
      return C717 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 145,
        [_Location_file]: null
      });
    },
    get C711() {
      return C711 = dart.constList([C712 || CT.C712, C713 || CT.C713, C714 || CT.C714, C715 || CT.C715, C716 || CT.C716, C717 || CT.C717], _LocationL());
    },
    get C710() {
      return C710 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C711 || CT.C711,
        [_Location_name]: null,
        [_Location_column]: 25,
        [_Location_line]: 139,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C720() {
      return C720 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 7,
        [_Location_line]: 136,
        [_Location_file]: null
      });
    },
    get C721() {
      return C721 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "duration",
        [_Location_column]: 7,
        [_Location_line]: 137,
        [_Location_file]: null
      });
    },
    get C722() {
      return C722 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "curve",
        [_Location_column]: 7,
        [_Location_line]: 138,
        [_Location_file]: null
      });
    },
    get C723() {
      return C723 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 139,
        [_Location_file]: null
      });
    },
    get C719() {
      return C719 = dart.constList([C720 || CT.C720, C721 || CT.C721, C722 || CT.C722, C723 || CT.C723], _LocationL());
    },
    get C718() {
      return C718 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C719 || CT.C719,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 135,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C724() {
      return C724 = dart.const({
        __proto__: rounded_rectangle_border.RoundedRectangleBorder.prototype,
        [OutlinedBorder_side]: C382 || CT.C382,
        [RoundedRectangleBorder_borderRadius]: C260 || CT.C260
      });
    },
    get C725() {
      return C725 = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 24,
        [EdgeInsets_right]: 24,
        [EdgeInsets_top]: 20,
        [EdgeInsets_left]: 24
      });
    },
    get C728() {
      return C728 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 494,
        [_Location_file]: null
      });
    },
    get C729() {
      return C729 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "namesRoute",
        [_Location_column]: 13,
        [_Location_line]: 495,
        [_Location_file]: null
      });
    },
    get C730() {
      return C730 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "container",
        [_Location_column]: 13,
        [_Location_line]: 496,
        [_Location_file]: null
      });
    },
    get C727() {
      return C727 = dart.constList([C728 || CT.C728, C729 || CT.C729, C730 || CT.C730], _LocationL());
    },
    get C726() {
      return C726 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C727 || CT.C727,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 493,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C733() {
      return C733 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 11,
        [_Location_line]: 492,
        [_Location_file]: null
      });
    },
    get C734() {
      return C734 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 493,
        [_Location_file]: null
      });
    },
    get C732() {
      return C732 = dart.constList([C733 || CT.C733, C734 || CT.C734], _LocationL());
    },
    get C731() {
      return C731 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C732 || CT.C732,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 491,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C737() {
      return C737 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 9,
        [_Location_line]: 485,
        [_Location_file]: null
      });
    },
    get C738() {
      return C738 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 491,
        [_Location_file]: null
      });
    },
    get C736() {
      return C736 = dart.constList([C737 || CT.C737, C738 || CT.C738], _LocationL());
    },
    get C735() {
      return C735 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C736 || CT.C736,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 484,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C741() {
      return C741 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 11,
        [_Location_line]: 512,
        [_Location_file]: null
      });
    },
    get C742() {
      return C742 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 513,
        [_Location_file]: null
      });
    },
    get C740() {
      return C740 = dart.constList([C741 || CT.C741, C742 || CT.C742], _LocationL());
    },
    get C739() {
      return C739 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C740 || CT.C740,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 511,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C745() {
      return C745 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 9,
        [_Location_line]: 505,
        [_Location_file]: null
      });
    },
    get C746() {
      return C746 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 511,
        [_Location_file]: null
      });
    },
    get C744() {
      return C744 = dart.constList([C745 || CT.C745, C746 || CT.C746], _LocationL());
    },
    get C743() {
      return C743 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C744 || CT.C744,
        [_Location_name]: null,
        [_Location_column]: 23,
        [_Location_line]: 504,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C749() {
      return C749 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "buttonPadding",
        [_Location_column]: 11,
        [_Location_line]: 523,
        [_Location_file]: null
      });
    },
    get C750() {
      return C750 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "overflowDirection",
        [_Location_column]: 11,
        [_Location_line]: 524,
        [_Location_file]: null
      });
    },
    get C751() {
      return C751 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "overflowButtonSpacing",
        [_Location_column]: 11,
        [_Location_line]: 525,
        [_Location_file]: null
      });
    },
    get C752() {
      return C752 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 11,
        [_Location_line]: 526,
        [_Location_file]: null
      });
    },
    get C748() {
      return C748 = dart.constList([C749 || CT.C749, C750 || CT.C750, C751 || CT.C751, C752 || CT.C752], _LocationL());
    },
    get C747() {
      return C747 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C748 || CT.C748,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 522,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C755() {
      return C755 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 9,
        [_Location_line]: 521,
        [_Location_file]: null
      });
    },
    get C756() {
      return C756 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 522,
        [_Location_file]: null
      });
    },
    get C754() {
      return C754 = dart.constList([C755 || CT.C755, C756 || CT.C756], _LocationL());
    },
    get C753() {
      return C753 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C754 || CT.C754,
        [_Location_name]: null,
        [_Location_column]: 23,
        [_Location_line]: 520,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C759() {
      return C759 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mainAxisSize",
        [_Location_column]: 17,
        [_Location_line]: 538,
        [_Location_file]: null
      });
    },
    get C760() {
      return C760 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "crossAxisAlignment",
        [_Location_column]: 17,
        [_Location_line]: 539,
        [_Location_file]: null
      });
    },
    get C761() {
      return C761 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 17,
        [_Location_line]: 540,
        [_Location_file]: null
      });
    },
    get C758() {
      return C758 = dart.constList([C759 || CT.C759, C760 || CT.C760, C761 || CT.C761], _LocationL());
    },
    get C757() {
      return C757 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C758 || CT.C758,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 537,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C764() {
      return C764 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 537,
        [_Location_file]: null
      });
    },
    get C763() {
      return C763 = dart.constList([C764 || CT.C764], _LocationL());
    },
    get C762() {
      return C762 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C763 || CT.C763,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 536,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C767() {
      return C767 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 536,
        [_Location_file]: null
      });
    },
    get C766() {
      return C766 = dart.constList([C767 || CT.C767], _LocationL());
    },
    get C765() {
      return C765 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C766 || CT.C766,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 535,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C770() {
      return C770 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 20,
        [_Location_line]: 557,
        [_Location_file]: null
      });
    },
    get C769() {
      return C769 = dart.constList([C770 || CT.C770], _LocationL());
    },
    get C768() {
      return C768 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C769 || CT.C769,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 557,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C773() {
      return C773 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mainAxisSize",
        [_Location_column]: 9,
        [_Location_line]: 565,
        [_Location_file]: null
      });
    },
    get C774() {
      return C774 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "crossAxisAlignment",
        [_Location_column]: 9,
        [_Location_line]: 566,
        [_Location_file]: null
      });
    },
    get C775() {
      return C775 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 9,
        [_Location_line]: 567,
        [_Location_file]: null
      });
    },
    get C772() {
      return C772 = dart.constList([C773 || CT.C773, C774 || CT.C774, C775 || CT.C775], _LocationL());
    },
    get C771() {
      return C771 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C772 || CT.C772,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 564,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C778() {
      return C778 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 564,
        [_Location_file]: null
      });
    },
    get C777() {
      return C777 = dart.constList([C778 || CT.C778], _LocationL());
    },
    get C776() {
      return C776 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C777 || CT.C777,
        [_Location_name]: null,
        [_Location_column]: 26,
        [_Location_line]: 563,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C781() {
      return C781 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "namesRoute",
        [_Location_column]: 9,
        [_Location_line]: 573,
        [_Location_file]: null
      });
    },
    get C782() {
      return C782 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "label",
        [_Location_column]: 9,
        [_Location_line]: 574,
        [_Location_file]: null
      });
    },
    get C783() {
      return C783 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 575,
        [_Location_file]: null
      });
    },
    get C780() {
      return C780 = dart.constList([C781 || CT.C781, C782 || CT.C782, C783 || CT.C783], _LocationL());
    },
    get C779() {
      return C779 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C780 || CT.C780,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 572,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C786() {
      return C786 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundColor",
        [_Location_column]: 7,
        [_Location_line]: 579,
        [_Location_file]: null
      });
    },
    get C787() {
      return C787 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "elevation",
        [_Location_column]: 7,
        [_Location_line]: 580,
        [_Location_file]: null
      });
    },
    get C788() {
      return C788 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "insetPadding",
        [_Location_column]: 7,
        [_Location_line]: 581,
        [_Location_file]: null
      });
    },
    get C789() {
      return C789 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipBehavior",
        [_Location_column]: 7,
        [_Location_line]: 582,
        [_Location_file]: null
      });
    },
    get C790() {
      return C790 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shape",
        [_Location_column]: 7,
        [_Location_line]: 583,
        [_Location_file]: null
      });
    },
    get C791() {
      return C791 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 584,
        [_Location_file]: null
      });
    },
    get C785() {
      return C785 = dart.constList([C786 || CT.C786, C787 || CT.C787, C788 || CT.C788, C789 || CT.C789, C790 || CT.C790, C791 || CT.C791], _LocationL());
    },
    get C784() {
      return C784 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C785 || CT.C785,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 578,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C792() {
      return C792 = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 8,
        [EdgeInsets_right]: 24,
        [EdgeInsets_top]: 8,
        [EdgeInsets_left]: 24
      });
    },
    get C795() {
      return C795 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 9,
        [_Location_line]: 651,
        [_Location_file]: null
      });
    },
    get C796() {
      return C796 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 652,
        [_Location_file]: null
      });
    },
    get C794() {
      return C794 = dart.constList([C795 || CT.C795, C796 || CT.C796], _LocationL());
    },
    get C793() {
      return C793 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C794 || CT.C794,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 650,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C799() {
      return C799 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTap",
        [_Location_column]: 7,
        [_Location_line]: 649,
        [_Location_file]: null
      });
    },
    get C800() {
      return C800 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 650,
        [_Location_file]: null
      });
    },
    get C798() {
      return C798 = dart.constList([C799 || CT.C799, C800 || CT.C800], _LocationL());
    },
    get C797() {
      return C797 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C798 || CT.C798,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 648,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C801() {
      return C801 = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 24,
        [EdgeInsets_top]: 24,
        [EdgeInsets_left]: 24
      });
    },
    get C802() {
      return C802 = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 16,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 12,
        [EdgeInsets_left]: 0
      });
    },
    get C805() {
      return C805 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "namesRoute",
        [_Location_column]: 28,
        [_Location_line]: 851,
        [_Location_file]: null
      });
    },
    get C806() {
      return C806 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 46,
        [_Location_line]: 851,
        [_Location_file]: null
      });
    },
    get C804() {
      return C804 = dart.constList([C805 || CT.C805, C806 || CT.C806], _LocationL());
    },
    get C803() {
      return C803 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C804 || CT.C804,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 851,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C809() {
      return C809 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 11,
        [_Location_line]: 850,
        [_Location_file]: null
      });
    },
    get C810() {
      return C810 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 851,
        [_Location_file]: null
      });
    },
    get C808() {
      return C808 = dart.constList([C809 || CT.C809, C810 || CT.C810], _LocationL());
    },
    get C807() {
      return C807 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C808 || CT.C808,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 849,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C813() {
      return C813 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 9,
        [_Location_line]: 843,
        [_Location_file]: null
      });
    },
    get C814() {
      return C814 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 849,
        [_Location_file]: null
      });
    },
    get C812() {
      return C812 = dart.constList([C813 || CT.C813, C814 || CT.C814], _LocationL());
    },
    get C811() {
      return C811 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C812 || CT.C812,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 842,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C817() {
      return C817 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 27,
        [_Location_line]: 867,
        [_Location_file]: null
      });
    },
    get C816() {
      return C816 = dart.constList([C817 || CT.C817], _LocationL());
    },
    get C815() {
      return C815 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C816 || CT.C816,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 867,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C820() {
      return C820 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 11,
        [_Location_line]: 861,
        [_Location_file]: null
      });
    },
    get C821() {
      return C821 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 867,
        [_Location_file]: null
      });
    },
    get C819() {
      return C819 = dart.constList([C820 || CT.C820, C821 || CT.C821], _LocationL());
    },
    get C818() {
      return C818 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C819 || CT.C819,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 860,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C824() {
      return C824 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 860,
        [_Location_file]: null
      });
    },
    get C823() {
      return C823 = dart.constList([C824 || CT.C824], _LocationL());
    },
    get C822() {
      return C822 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C823 || CT.C823,
        [_Location_name]: null,
        [_Location_column]: 23,
        [_Location_line]: 859,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C827() {
      return C827 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mainAxisSize",
        [_Location_column]: 11,
        [_Location_line]: 877,
        [_Location_file]: null
      });
    },
    get C828() {
      return C828 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "crossAxisAlignment",
        [_Location_column]: 11,
        [_Location_line]: 878,
        [_Location_file]: null
      });
    },
    get C829() {
      return C829 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 11,
        [_Location_line]: 879,
        [_Location_file]: null
      });
    },
    get C826() {
      return C826 = dart.constList([C827 || CT.C827, C828 || CT.C828, C829 || CT.C829], _LocationL());
    },
    get C825() {
      return C825 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C826 || CT.C826,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 876,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C832() {
      return C832 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 9,
        [_Location_line]: 875,
        [_Location_file]: null
      });
    },
    get C833() {
      return C833 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 876,
        [_Location_file]: null
      });
    },
    get C831() {
      return C831 = dart.constList([C832 || CT.C832, C833 || CT.C833], _LocationL());
    },
    get C830() {
      return C830 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C831 || CT.C831,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 874,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C836() {
      return C836 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "stepWidth",
        [_Location_column]: 7,
        [_Location_line]: 873,
        [_Location_file]: null
      });
    },
    get C837() {
      return C837 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 874,
        [_Location_file]: null
      });
    },
    get C835() {
      return C835 = dart.constList([C836 || CT.C836, C837 || CT.C837], _LocationL());
    },
    get C834() {
      return C834 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C835 || CT.C835,
        [_Location_name]: null,
        [_Location_column]: 26,
        [_Location_line]: 872,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C840() {
      return C840 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "namesRoute",
        [_Location_column]: 9,
        [_Location_line]: 891,
        [_Location_file]: null
      });
    },
    get C841() {
      return C841 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "label",
        [_Location_column]: 9,
        [_Location_line]: 892,
        [_Location_file]: null
      });
    },
    get C842() {
      return C842 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 893,
        [_Location_file]: null
      });
    },
    get C839() {
      return C839 = dart.constList([C840 || CT.C840, C841 || CT.C841, C842 || CT.C842], _LocationL());
    },
    get C838() {
      return C838 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C839 || CT.C839,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 890,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C845() {
      return C845 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundColor",
        [_Location_column]: 7,
        [_Location_line]: 896,
        [_Location_file]: null
      });
    },
    get C846() {
      return C846 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "elevation",
        [_Location_column]: 7,
        [_Location_line]: 897,
        [_Location_file]: null
      });
    },
    get C847() {
      return C847 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shape",
        [_Location_column]: 7,
        [_Location_line]: 898,
        [_Location_file]: null
      });
    },
    get C848() {
      return C848 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 899,
        [_Location_file]: null
      });
    },
    get C844() {
      return C844 = dart.constList([C845 || CT.C845, C846 || CT.C846, C847 || CT.C847, C848 || CT.C848], _LocationL());
    },
    get C843() {
      return C843 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C844 || CT.C844,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 895,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C851() {
      return C851 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 5,
        [_Location_line]: 906,
        [_Location_file]: null
      });
    },
    get C852() {
      return C852 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 5,
        [_Location_line]: 910,
        [_Location_file]: null
      });
    },
    get C850() {
      return C850 = dart.constList([C851 || CT.C851, C852 || CT.C852], _LocationL());
    },
    get C849() {
      return C849 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C850 || CT.C850,
        [_Location_name]: null,
        [_Location_column]: 10,
        [_Location_line]: 905,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C855() {
      return C855 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 49,
        [_Location_line]: 993,
        [_Location_file]: null
      });
    },
    get C854() {
      return C854 = dart.constList([C855 || CT.C855], _LocationL());
    },
    get C853() {
      return C853 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C854 || CT.C854,
        [_Location_name]: null,
        [_Location_column]: 41,
        [_Location_line]: 993,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C858() {
      return C858 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 21,
        [_Location_line]: 997,
        [_Location_file]: null
      });
    },
    get C859() {
      return C859 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 34,
        [_Location_line]: 997,
        [_Location_file]: null
      });
    },
    get C857() {
      return C857 = dart.constList([C858 || CT.C858, C859 || CT.C859], _LocationL());
    },
    get C856() {
      return C856 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C857 || CT.C857,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 997,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C862() {
      return C862 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 9,
        [_Location_line]: 995,
        [_Location_file]: null
      });
    },
    get C861() {
      return C861 = dart.constList([C862 || CT.C862], _LocationL());
    },
    get C860() {
      return C860 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C861 || CT.C861,
        [_Location_name]: null,
        [_Location_column]: 23,
        [_Location_line]: 994,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C865() {
      return C865 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 27,
        [_Location_line]: 1002,
        [_Location_file]: null
      });
    },
    get C864() {
      return C864 = dart.constList([C865 || CT.C865], _LocationL());
    },
    get C863() {
      return C863 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C864 || CT.C864,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 1002,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/dialog.dart"
      });
    },
    get C866() {
      return C866 = dart.fn(dialog._buildMaterialDialogTransitions, BuildContextLAndAnimationLOfdoubleLAndAnimationLOfdoubleL__ToWidgetL());
    },
    get C869() {
      return C869 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPressed",
        [_Location_column]: 7,
        [_Location_line]: 223,
        [_Location_file]: null
      });
    },
    get C870() {
      return C870 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onLongPress",
        [_Location_column]: 7,
        [_Location_line]: 224,
        [_Location_file]: null
      });
    },
    get C871() {
      return C871 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHighlightChanged",
        [_Location_column]: 7,
        [_Location_line]: 225,
        [_Location_file]: null
      });
    },
    get C872() {
      return C872 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mouseCursor",
        [_Location_column]: 7,
        [_Location_line]: 226,
        [_Location_file]: null
      });
    },
    get C873() {
      return C873 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipBehavior",
        [_Location_column]: 7,
        [_Location_line]: 227,
        [_Location_file]: null
      });
    },
    get C874() {
      return C874 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "fillColor",
        [_Location_column]: 7,
        [_Location_line]: 228,
        [_Location_file]: null
      });
    },
    get C875() {
      return C875 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textStyle",
        [_Location_column]: 7,
        [_Location_line]: 229,
        [_Location_file]: null
      });
    },
    get C876() {
      return C876 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusColor",
        [_Location_column]: 7,
        [_Location_line]: 230,
        [_Location_file]: null
      });
    },
    get C877() {
      return C877 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "hoverColor",
        [_Location_column]: 7,
        [_Location_line]: 231,
        [_Location_file]: null
      });
    },
    get C878() {
      return C878 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "highlightColor",
        [_Location_column]: 7,
        [_Location_line]: 232,
        [_Location_file]: null
      });
    },
    get C879() {
      return C879 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "splashColor",
        [_Location_column]: 7,
        [_Location_line]: 233,
        [_Location_file]: null
      });
    },
    get C880() {
      return C880 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "elevation",
        [_Location_column]: 7,
        [_Location_line]: 234,
        [_Location_file]: null
      });
    },
    get C881() {
      return C881 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusElevation",
        [_Location_column]: 7,
        [_Location_line]: 235,
        [_Location_file]: null
      });
    },
    get C882() {
      return C882 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "hoverElevation",
        [_Location_column]: 7,
        [_Location_line]: 236,
        [_Location_file]: null
      });
    },
    get C883() {
      return C883 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "highlightElevation",
        [_Location_column]: 7,
        [_Location_line]: 237,
        [_Location_file]: null
      });
    },
    get C884() {
      return C884 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "disabledElevation",
        [_Location_column]: 7,
        [_Location_line]: 238,
        [_Location_file]: null
      });
    },
    get C885() {
      return C885 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 7,
        [_Location_line]: 239,
        [_Location_file]: null
      });
    },
    get C886() {
      return C886 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "visualDensity",
        [_Location_column]: 7,
        [_Location_line]: 240,
        [_Location_file]: null
      });
    },
    get C887() {
      return C887 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 7,
        [_Location_line]: 241,
        [_Location_file]: null
      });
    },
    get C888() {
      return C888 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shape",
        [_Location_column]: 7,
        [_Location_line]: 242,
        [_Location_file]: null
      });
    },
    get C889() {
      return C889 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusNode",
        [_Location_column]: 7,
        [_Location_line]: 243,
        [_Location_file]: null
      });
    },
    get C890() {
      return C890 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "autofocus",
        [_Location_column]: 7,
        [_Location_line]: 244,
        [_Location_file]: null
      });
    },
    get C891() {
      return C891 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animationDuration",
        [_Location_column]: 7,
        [_Location_line]: 245,
        [_Location_file]: null
      });
    },
    get C892() {
      return C892 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "materialTapTargetSize",
        [_Location_column]: 7,
        [_Location_line]: 246,
        [_Location_file]: null
      });
    },
    get C893() {
      return C893 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 247,
        [_Location_file]: null
      });
    },
    get C868() {
      return C868 = dart.constList([C869 || CT.C869, C870 || CT.C870, C871 || CT.C871, C872 || CT.C872, C873 || CT.C873, C874 || CT.C874, C875 || CT.C875, C876 || CT.C876, C877 || CT.C877, C878 || CT.C878, C879 || CT.C879, C880 || CT.C880, C881 || CT.C881, C882 || CT.C882, C883 || CT.C883, C884 || CT.C884, C885 || CT.C885, C886 || CT.C886, C887 || CT.C887, C888 || CT.C888, C889 || CT.C889, C890 || CT.C890, C891 || CT.C891, C892 || CT.C892, C893 || CT.C893], _LocationL());
    },
    get C867() {
      return C867 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C868 || CT.C868,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 222,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/raised_button.dart"
      });
    },
    get C896() {
      return C896 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPressed",
        [_Location_column]: 7,
        [_Location_line]: 392,
        [_Location_file]: null
      });
    },
    get C897() {
      return C897 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onLongPress",
        [_Location_column]: 7,
        [_Location_line]: 393,
        [_Location_file]: null
      });
    },
    get C898() {
      return C898 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enableFeedback",
        [_Location_column]: 7,
        [_Location_line]: 394,
        [_Location_file]: null
      });
    },
    get C899() {
      return C899 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHighlightChanged",
        [_Location_column]: 7,
        [_Location_line]: 395,
        [_Location_file]: null
      });
    },
    get C900() {
      return C900 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mouseCursor",
        [_Location_column]: 7,
        [_Location_line]: 396,
        [_Location_file]: null
      });
    },
    get C901() {
      return C901 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "fillColor",
        [_Location_column]: 7,
        [_Location_line]: 397,
        [_Location_file]: null
      });
    },
    get C902() {
      return C902 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textStyle",
        [_Location_column]: 7,
        [_Location_line]: 398,
        [_Location_file]: null
      });
    },
    get C903() {
      return C903 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusColor",
        [_Location_column]: 7,
        [_Location_line]: 399,
        [_Location_file]: null
      });
    },
    get C904() {
      return C904 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "hoverColor",
        [_Location_column]: 7,
        [_Location_line]: 400,
        [_Location_file]: null
      });
    },
    get C905() {
      return C905 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "highlightColor",
        [_Location_column]: 7,
        [_Location_line]: 401,
        [_Location_file]: null
      });
    },
    get C906() {
      return C906 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "splashColor",
        [_Location_column]: 7,
        [_Location_line]: 402,
        [_Location_file]: null
      });
    },
    get C907() {
      return C907 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "elevation",
        [_Location_column]: 7,
        [_Location_line]: 403,
        [_Location_file]: null
      });
    },
    get C908() {
      return C908 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusElevation",
        [_Location_column]: 7,
        [_Location_line]: 404,
        [_Location_file]: null
      });
    },
    get C909() {
      return C909 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "hoverElevation",
        [_Location_column]: 7,
        [_Location_line]: 405,
        [_Location_file]: null
      });
    },
    get C910() {
      return C910 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "highlightElevation",
        [_Location_column]: 7,
        [_Location_line]: 406,
        [_Location_file]: null
      });
    },
    get C911() {
      return C911 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 7,
        [_Location_line]: 407,
        [_Location_file]: null
      });
    },
    get C912() {
      return C912 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "visualDensity",
        [_Location_column]: 7,
        [_Location_line]: 408,
        [_Location_file]: null
      });
    },
    get C913() {
      return C913 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 7,
        [_Location_line]: 409,
        [_Location_file]: null
      });
    },
    get C914() {
      return C914 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shape",
        [_Location_column]: 7,
        [_Location_line]: 413,
        [_Location_file]: null
      });
    },
    get C915() {
      return C915 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipBehavior",
        [_Location_column]: 7,
        [_Location_line]: 414,
        [_Location_file]: null
      });
    },
    get C916() {
      return C916 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusNode",
        [_Location_column]: 7,
        [_Location_line]: 415,
        [_Location_file]: null
      });
    },
    get C917() {
      return C917 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "autofocus",
        [_Location_column]: 7,
        [_Location_line]: 416,
        [_Location_file]: null
      });
    },
    get C918() {
      return C918 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animationDuration",
        [_Location_column]: 7,
        [_Location_line]: 417,
        [_Location_file]: null
      });
    },
    get C919() {
      return C919 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 418,
        [_Location_file]: null
      });
    },
    get C920() {
      return C920 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "materialTapTargetSize",
        [_Location_column]: 7,
        [_Location_line]: 419,
        [_Location_file]: null
      });
    },
    get C921() {
      return C921 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "disabledElevation",
        [_Location_column]: 7,
        [_Location_line]: 420,
        [_Location_file]: null
      });
    },
    get C895() {
      return C895 = dart.constList([C896 || CT.C896, C897 || CT.C897, C898 || CT.C898, C899 || CT.C899, C900 || CT.C900, C901 || CT.C901, C902 || CT.C902, C903 || CT.C903, C904 || CT.C904, C905 || CT.C905, C906 || CT.C906, C907 || CT.C907, C908 || CT.C908, C909 || CT.C909, C910 || CT.C910, C911 || CT.C911, C912 || CT.C912, C913 || CT.C913, C914 || CT.C914, C915 || CT.C915, C916 || CT.C916, C917 || CT.C917, C918 || CT.C918, C919 || CT.C919, C920 || CT.C920, C921 || CT.C921], _LocationL());
    },
    get C894() {
      return C894 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C895 || CT.C895,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 391,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/material_button.dart"
      });
    },
    get C925() {
      return C925 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 29,
        [_Location_line]: 332,
        [_Location_file]: null
      });
    },
    get C924() {
      return C924 = dart.constList([C925 || CT.C925], _LocationL());
    },
    get C923() {
      return C923 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C924 || CT.C924,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 332,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/raised_button.dart"
      });
    },
    get C922() {
      return C922 = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget__location]: C923 || CT.C923,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: null,
        [SizedBox_width]: 8
      });
    },
    get C928() {
      return C928 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mainAxisSize",
        [_Location_column]: 12,
        [_Location_line]: 329,
        [_Location_file]: null
      });
    },
    get C929() {
      return C929 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 12,
        [_Location_line]: 330,
        [_Location_file]: null
      });
    },
    get C927() {
      return C927 = dart.constList([C928 || CT.C928, C929 || CT.C929], _LocationL());
    },
    get C926() {
      return C926 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C927 || CT.C927,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 328,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/raised_button.dart"
      });
    },
    get C932() {
      return C932 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "autofocus",
        [_Location_column]: 7,
        [_Location_line]: 203,
        [_Location_file]: null
      });
    },
    get C933() {
      return C933 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPressed",
        [_Location_column]: 7,
        [_Location_line]: 204,
        [_Location_file]: null
      });
    },
    get C934() {
      return C934 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onLongPress",
        [_Location_column]: 7,
        [_Location_line]: 205,
        [_Location_file]: null
      });
    },
    get C935() {
      return C935 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mouseCursor",
        [_Location_column]: 7,
        [_Location_line]: 206,
        [_Location_file]: null
      });
    },
    get C936() {
      return C936 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "brightness",
        [_Location_column]: 7,
        [_Location_line]: 207,
        [_Location_file]: null
      });
    },
    get C937() {
      return C937 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textTheme",
        [_Location_column]: 7,
        [_Location_line]: 208,
        [_Location_file]: null
      });
    },
    get C938() {
      return C938 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textColor",
        [_Location_column]: 7,
        [_Location_line]: 209,
        [_Location_file]: null
      });
    },
    get C939() {
      return C939 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "disabledTextColor",
        [_Location_column]: 7,
        [_Location_line]: 210,
        [_Location_file]: null
      });
    },
    get C940() {
      return C940 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 7,
        [_Location_line]: 211,
        [_Location_file]: null
      });
    },
    get C941() {
      return C941 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusColor",
        [_Location_column]: 7,
        [_Location_line]: 212,
        [_Location_file]: null
      });
    },
    get C942() {
      return C942 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "hoverColor",
        [_Location_column]: 7,
        [_Location_line]: 213,
        [_Location_file]: null
      });
    },
    get C943() {
      return C943 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "highlightColor",
        [_Location_column]: 7,
        [_Location_line]: 214,
        [_Location_file]: null
      });
    },
    get C944() {
      return C944 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "splashColor",
        [_Location_column]: 7,
        [_Location_line]: 215,
        [_Location_file]: null
      });
    },
    get C945() {
      return C945 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "highlightElevation",
        [_Location_column]: 7,
        [_Location_line]: 216,
        [_Location_file]: null
      });
    },
    get C946() {
      return C946 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "borderSide",
        [_Location_column]: 7,
        [_Location_line]: 217,
        [_Location_file]: null
      });
    },
    get C947() {
      return C947 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "disabledBorderColor",
        [_Location_column]: 7,
        [_Location_line]: 218,
        [_Location_file]: null
      });
    },
    get C948() {
      return C948 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "highlightedBorderColor",
        [_Location_column]: 7,
        [_Location_line]: 219,
        [_Location_file]: null
      });
    },
    get C949() {
      return C949 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 7,
        [_Location_line]: 220,
        [_Location_file]: null
      });
    },
    get C950() {
      return C950 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "visualDensity",
        [_Location_column]: 7,
        [_Location_line]: 221,
        [_Location_file]: null
      });
    },
    get C951() {
      return C951 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shape",
        [_Location_column]: 7,
        [_Location_line]: 222,
        [_Location_file]: null
      });
    },
    get C952() {
      return C952 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipBehavior",
        [_Location_column]: 7,
        [_Location_line]: 223,
        [_Location_file]: null
      });
    },
    get C953() {
      return C953 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusNode",
        [_Location_column]: 7,
        [_Location_line]: 224,
        [_Location_file]: null
      });
    },
    get C954() {
      return C954 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "materialTapTargetSize",
        [_Location_column]: 7,
        [_Location_line]: 225,
        [_Location_file]: null
      });
    },
    get C931() {
      return C931 = dart.constList([C932 || CT.C932, C933 || CT.C933, C934 || CT.C934, C935 || CT.C935, C936 || CT.C936, C937 || CT.C937, C938 || CT.C938, C939 || CT.C939, C940 || CT.C940, C941 || CT.C941, C942 || CT.C942, C943 || CT.C943, C944 || CT.C944, C945 || CT.C945, C946 || CT.C946, C947 || CT.C947, C948 || CT.C948, C949 || CT.C949, C950 || CT.C950, C951 || CT.C951, C952 || CT.C952, C953 || CT.C953, C954 || CT.C954, C405 || CT.C405], _LocationL());
    },
    get C930() {
      return C930 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C931 || CT.C931,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 202,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/outline_button.dart"
      });
    },
    get C958() {
      return C958 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 29,
        [_Location_line]: 303,
        [_Location_file]: null
      });
    },
    get C957() {
      return C957 = dart.constList([C958 || CT.C958], _LocationL());
    },
    get C956() {
      return C956 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C957 || CT.C957,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 303,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/outline_button.dart"
      });
    },
    get C955() {
      return C955 = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget__location]: C956 || CT.C956,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: null,
        [SizedBox_width]: 8
      });
    },
    get C961() {
      return C961 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mainAxisSize",
        [_Location_column]: 12,
        [_Location_line]: 300,
        [_Location_file]: null
      });
    },
    get C962() {
      return C962 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 12,
        [_Location_line]: 301,
        [_Location_file]: null
      });
    },
    get C960() {
      return C960 = dart.constList([C961 || CT.C961, C962 || CT.C962], _LocationL());
    },
    get C959() {
      return C959 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C960 || CT.C960,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 299,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/outline_button.dart"
      });
    },
    get C963() {
      return C963 = dart.const({
        __proto__: curves.Interval.prototype,
        [Interval_curve]: C216 || CT.C216,
        [Interval_end]: 0.5,
        [Interval_begin]: 0
      });
    },
    get C965() {
      return C965 = dart.const({
        __proto__: curves._Linear.prototype
      });
    },
    get C964() {
      return C964 = dart.const({
        __proto__: curves.Interval.prototype,
        [Interval_curve]: C965 || CT.C965,
        [Interval_end]: 0.5,
        [Interval_begin]: 0.5
      });
    },
    get C966() {
      return C966 = dart.const({
        __proto__: curves.Interval.prototype,
        [Interval_curve]: C965 || CT.C965,
        [Interval_end]: 1,
        [Interval_begin]: 1
      });
    },
    get C969() {
      return C969 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "autofocus",
        [_Location_column]: 11,
        [_Location_line]: 489,
        [_Location_file]: null
      });
    },
    get C970() {
      return C970 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textColor",
        [_Location_column]: 11,
        [_Location_line]: 490,
        [_Location_file]: null
      });
    },
    get C971() {
      return C971 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "disabledTextColor",
        [_Location_column]: 11,
        [_Location_line]: 491,
        [_Location_file]: null
      });
    },
    get C972() {
      return C972 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 11,
        [_Location_line]: 492,
        [_Location_file]: null
      });
    },
    get C973() {
      return C973 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "splashColor",
        [_Location_column]: 11,
        [_Location_line]: 493,
        [_Location_file]: null
      });
    },
    get C974() {
      return C974 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusColor",
        [_Location_column]: 11,
        [_Location_line]: 494,
        [_Location_file]: null
      });
    },
    get C975() {
      return C975 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "hoverColor",
        [_Location_column]: 11,
        [_Location_line]: 495,
        [_Location_file]: null
      });
    },
    get C976() {
      return C976 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "highlightColor",
        [_Location_column]: 11,
        [_Location_line]: 496,
        [_Location_file]: null
      });
    },
    get C977() {
      return C977 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "disabledColor",
        [_Location_column]: 11,
        [_Location_line]: 497,
        [_Location_file]: null
      });
    },
    get C978() {
      return C978 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPressed",
        [_Location_column]: 11,
        [_Location_line]: 498,
        [_Location_file]: null
      });
    },
    get C979() {
      return C979 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onLongPress",
        [_Location_column]: 11,
        [_Location_line]: 499,
        [_Location_file]: null
      });
    },
    get C980() {
      return C980 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mouseCursor",
        [_Location_column]: 11,
        [_Location_line]: 500,
        [_Location_file]: null
      });
    },
    get C981() {
      return C981 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "elevation",
        [_Location_column]: 11,
        [_Location_line]: 501,
        [_Location_file]: null
      });
    },
    get C982() {
      return C982 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "disabledElevation",
        [_Location_column]: 11,
        [_Location_line]: 502,
        [_Location_file]: null
      });
    },
    get C983() {
      return C983 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusElevation",
        [_Location_column]: 11,
        [_Location_line]: 503,
        [_Location_file]: null
      });
    },
    get C984() {
      return C984 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "hoverElevation",
        [_Location_column]: 11,
        [_Location_line]: 504,
        [_Location_file]: null
      });
    },
    get C985() {
      return C985 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "highlightElevation",
        [_Location_column]: 11,
        [_Location_line]: 505,
        [_Location_file]: null
      });
    },
    get C986() {
      return C986 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHighlightChanged",
        [_Location_column]: 11,
        [_Location_line]: 506,
        [_Location_file]: null
      });
    },
    get C987() {
      return C987 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 11,
        [_Location_line]: 507,
        [_Location_file]: null
      });
    },
    get C988() {
      return C988 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "visualDensity",
        [_Location_column]: 11,
        [_Location_line]: 508,
        [_Location_file]: null
      });
    },
    get C989() {
      return C989 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shape",
        [_Location_column]: 11,
        [_Location_line]: 509,
        [_Location_file]: null
      });
    },
    get C990() {
      return C990 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipBehavior",
        [_Location_column]: 11,
        [_Location_line]: 513,
        [_Location_file]: null
      });
    },
    get C991() {
      return C991 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusNode",
        [_Location_column]: 11,
        [_Location_line]: 514,
        [_Location_file]: null
      });
    },
    get C992() {
      return C992 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animationDuration",
        [_Location_column]: 11,
        [_Location_line]: 515,
        [_Location_file]: null
      });
    },
    get C993() {
      return C993 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "materialTapTargetSize",
        [_Location_column]: 11,
        [_Location_line]: 516,
        [_Location_file]: null
      });
    },
    get C994() {
      return C994 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 517,
        [_Location_file]: null
      });
    },
    get C968() {
      return C968 = dart.constList([C969 || CT.C969, C970 || CT.C970, C971 || CT.C971, C972 || CT.C972, C973 || CT.C973, C974 || CT.C974, C975 || CT.C975, C976 || CT.C976, C977 || CT.C977, C978 || CT.C978, C979 || CT.C979, C980 || CT.C980, C981 || CT.C981, C982 || CT.C982, C983 || CT.C983, C984 || CT.C984, C985 || CT.C985, C986 || CT.C986, C987 || CT.C987, C988 || CT.C988, C989 || CT.C989, C990 || CT.C990, C991 || CT.C991, C992 || CT.C992, C993 || CT.C993, C994 || CT.C994], _LocationL());
    },
    get C967() {
      return C967 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C968 || CT.C968,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 488,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/outline_button.dart"
      });
    },
    get C997() {
      return C997 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animation",
        [_Location_column]: 7,
        [_Location_line]: 486,
        [_Location_file]: null
      });
    },
    get C998() {
      return C998 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 7,
        [_Location_line]: 487,
        [_Location_file]: null
      });
    },
    get C996() {
      return C996 = dart.constList([C997 || CT.C997, C998 || CT.C998], _LocationL());
    },
    get C995() {
      return C995 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C996 || CT.C996,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 485,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/outline_button.dart"
      });
    },
    get C999() {
      return C999 = dart.const({
        __proto__: borders.BorderStyle.prototype,
        [_name$3]: "BorderStyle.solid",
        index: 1
      });
    },
    get C1000() {
      return C1000 = dart.const({
        __proto__: theme_data.VisualDensity.prototype,
        [VisualDensity_vertical]: 0,
        [VisualDensity_horizontal]: 0
      });
    },
    get C1001() {
      return C1001 = dart.const({
        __proto__: box.BoxConstraints.prototype,
        [BoxConstraints_maxHeight]: 1 / 0,
        [BoxConstraints_minHeight]: 36,
        [BoxConstraints_maxWidth]: 1 / 0,
        [BoxConstraints_minWidth]: 88
      });
    },
    get C1004() {
      return C1004 = dart.const({
        __proto__: ui.Radius.prototype,
        [Radius_y]: 0,
        [Radius_x]: 0
      });
    },
    get C1003() {
      return C1003 = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [BorderRadius_bottomRight]: C1004 || CT.C1004,
        [BorderRadius_bottomLeft]: C1004 || CT.C1004,
        [BorderRadius_topRight]: C1004 || CT.C1004,
        [BorderRadius_topLeft]: C1004 || CT.C1004
      });
    },
    get C1002() {
      return C1002 = dart.const({
        __proto__: rounded_rectangle_border.RoundedRectangleBorder.prototype,
        [OutlinedBorder_side]: C382 || CT.C382,
        [RoundedRectangleBorder_borderRadius]: C1003 || CT.C1003
      });
    },
    get C1007() {
      return C1007 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "widthFactor",
        [_Location_column]: 17,
        [_Location_line]: 435,
        [_Location_file]: null
      });
    },
    get C1008() {
      return C1008 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "heightFactor",
        [_Location_column]: 17,
        [_Location_line]: 436,
        [_Location_file]: null
      });
    },
    get C1009() {
      return C1009 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 437,
        [_Location_file]: null
      });
    },
    get C1006() {
      return C1006 = dart.constList([C1007 || CT.C1007, C1008 || CT.C1008, C1009 || CT.C1009], _LocationL());
    },
    get C1005() {
      return C1005 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1006 || CT.C1006,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 434,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/button.dart"
      });
    },
    get C1012() {
      return C1012 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 15,
        [_Location_line]: 433,
        [_Location_file]: null
      });
    },
    get C1013() {
      return C1013 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 434,
        [_Location_file]: null
      });
    },
    get C1011() {
      return C1011 = dart.constList([C1012 || CT.C1012, C1013 || CT.C1013], _LocationL());
    },
    get C1010() {
      return C1010 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1011 || CT.C1011,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 432,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/button.dart"
      });
    },
    get C1016() {
      return C1016 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusNode",
        [_Location_column]: 11,
        [_Location_line]: 415,
        [_Location_file]: null
      });
    },
    get C1017() {
      return C1017 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "canRequestFocus",
        [_Location_column]: 11,
        [_Location_line]: 416,
        [_Location_file]: null
      });
    },
    get C1018() {
      return C1018 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onFocusChange",
        [_Location_column]: 11,
        [_Location_line]: 417,
        [_Location_file]: null
      });
    },
    get C1019() {
      return C1019 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "autofocus",
        [_Location_column]: 11,
        [_Location_line]: 418,
        [_Location_file]: null
      });
    },
    get C1020() {
      return C1020 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHighlightChanged",
        [_Location_column]: 11,
        [_Location_line]: 419,
        [_Location_file]: null
      });
    },
    get C1021() {
      return C1021 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "splashColor",
        [_Location_column]: 11,
        [_Location_line]: 420,
        [_Location_file]: null
      });
    },
    get C1022() {
      return C1022 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "highlightColor",
        [_Location_column]: 11,
        [_Location_line]: 421,
        [_Location_file]: null
      });
    },
    get C1023() {
      return C1023 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusColor",
        [_Location_column]: 11,
        [_Location_line]: 422,
        [_Location_file]: null
      });
    },
    get C1024() {
      return C1024 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "hoverColor",
        [_Location_column]: 11,
        [_Location_line]: 423,
        [_Location_file]: null
      });
    },
    get C1025() {
      return C1025 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHover",
        [_Location_column]: 11,
        [_Location_line]: 424,
        [_Location_file]: null
      });
    },
    get C1026() {
      return C1026 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTap",
        [_Location_column]: 11,
        [_Location_line]: 425,
        [_Location_file]: null
      });
    },
    get C1027() {
      return C1027 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onLongPress",
        [_Location_column]: 11,
        [_Location_line]: 426,
        [_Location_file]: null
      });
    },
    get C1028() {
      return C1028 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enableFeedback",
        [_Location_column]: 11,
        [_Location_line]: 427,
        [_Location_file]: null
      });
    },
    get C1029() {
      return C1029 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "customBorder",
        [_Location_column]: 11,
        [_Location_line]: 428,
        [_Location_file]: null
      });
    },
    get C1030() {
      return C1030 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mouseCursor",
        [_Location_column]: 11,
        [_Location_line]: 429,
        [_Location_file]: null
      });
    },
    get C1031() {
      return C1031 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 430,
        [_Location_file]: null
      });
    },
    get C1015() {
      return C1015 = dart.constList([C1016 || CT.C1016, C1017 || CT.C1017, C1018 || CT.C1018, C1019 || CT.C1019, C1020 || CT.C1020, C1021 || CT.C1021, C1022 || CT.C1022, C1023 || CT.C1023, C1024 || CT.C1024, C1025 || CT.C1025, C1026 || CT.C1026, C1027 || CT.C1027, C1028 || CT.C1028, C1029 || CT.C1029, C1030 || CT.C1030, C1031 || CT.C1031], _LocationL());
    },
    get C1014() {
      return C1014 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1015 || CT.C1015,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 414,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/button.dart"
      });
    },
    get C1034() {
      return C1034 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "elevation",
        [_Location_column]: 9,
        [_Location_line]: 407,
        [_Location_file]: null
      });
    },
    get C1035() {
      return C1035 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textStyle",
        [_Location_column]: 9,
        [_Location_line]: 408,
        [_Location_file]: null
      });
    },
    get C1036() {
      return C1036 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shape",
        [_Location_column]: 9,
        [_Location_line]: 409,
        [_Location_file]: null
      });
    },
    get C1037() {
      return C1037 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 9,
        [_Location_line]: 410,
        [_Location_file]: null
      });
    },
    get C1038() {
      return C1038 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "type",
        [_Location_column]: 9,
        [_Location_line]: 411,
        [_Location_file]: null
      });
    },
    get C1039() {
      return C1039 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animationDuration",
        [_Location_column]: 9,
        [_Location_line]: 412,
        [_Location_file]: null
      });
    },
    get C1040() {
      return C1040 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipBehavior",
        [_Location_column]: 9,
        [_Location_line]: 413,
        [_Location_file]: null
      });
    },
    get C1041() {
      return C1041 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 414,
        [_Location_file]: null
      });
    },
    get C1033() {
      return C1033 = dart.constList([C1034 || CT.C1034, C1035 || CT.C1035, C1036 || CT.C1036, C1037 || CT.C1037, C1038 || CT.C1038, C1039 || CT.C1039, C1040 || CT.C1040, C1041 || CT.C1041], _LocationL());
    },
    get C1032() {
      return C1032 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1033 || CT.C1033,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 406,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/button.dart"
      });
    },
    get C1044() {
      return C1044 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 7,
        [_Location_line]: 405,
        [_Location_file]: null
      });
    },
    get C1045() {
      return C1045 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 406,
        [_Location_file]: null
      });
    },
    get C1043() {
      return C1043 = dart.constList([C1044 || CT.C1044, C1045 || CT.C1045], _LocationL());
    },
    get C1042() {
      return C1042 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1043 || CT.C1043,
        [_Location_name]: null,
        [_Location_column]: 27,
        [_Location_line]: 404,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/button.dart"
      });
    },
    get C1046() {
      return C1046 = dart.const({
        __proto__: theme_data.MaterialTapTargetSize.prototype,
        [_name$8]: "MaterialTapTargetSize.padded",
        index: 0
      });
    },
    get C1047() {
      return C1047 = dart.const({
        __proto__: theme_data.MaterialTapTargetSize.prototype,
        [_name$8]: "MaterialTapTargetSize.shrinkWrap",
        index: 1
      });
    },
    get C1050() {
      return C1050 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "minSize",
        [_Location_column]: 9,
        [_Location_line]: 464,
        [_Location_file]: null
      });
    },
    get C1051() {
      return C1051 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 465,
        [_Location_file]: null
      });
    },
    get C1049() {
      return C1049 = dart.constList([C1050 || CT.C1050, C1051 || CT.C1051], _LocationL());
    },
    get C1048() {
      return C1048 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1049 || CT.C1049,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 463,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/button.dart"
      });
    },
    get C1054() {
      return C1054 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "container",
        [_Location_column]: 7,
        [_Location_line]: 460,
        [_Location_file]: null
      });
    },
    get C1055() {
      return C1055 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "button",
        [_Location_column]: 7,
        [_Location_line]: 461,
        [_Location_file]: null
      });
    },
    get C1056() {
      return C1056 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enabled",
        [_Location_column]: 7,
        [_Location_line]: 462,
        [_Location_file]: null
      });
    },
    get C1057() {
      return C1057 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 463,
        [_Location_file]: null
      });
    },
    get C1053() {
      return C1053 = dart.constList([C1054 || CT.C1054, C1055 || CT.C1055, C1056 || CT.C1056, C1057 || CT.C1057], _LocationL());
    },
    get C1052() {
      return C1052 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1053 || CT.C1053,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 459,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/button.dart"
      });
    },
    get C1060() {
      return C1060 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPressed",
        [_Location_column]: 7,
        [_Location_line]: 195,
        [_Location_file]: null
      });
    },
    get C1061() {
      return C1061 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onLongPress",
        [_Location_column]: 7,
        [_Location_line]: 196,
        [_Location_file]: null
      });
    },
    get C1062() {
      return C1062 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHighlightChanged",
        [_Location_column]: 7,
        [_Location_line]: 197,
        [_Location_file]: null
      });
    },
    get C1063() {
      return C1063 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mouseCursor",
        [_Location_column]: 7,
        [_Location_line]: 198,
        [_Location_file]: null
      });
    },
    get C1064() {
      return C1064 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "fillColor",
        [_Location_column]: 7,
        [_Location_line]: 199,
        [_Location_file]: null
      });
    },
    get C1065() {
      return C1065 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textStyle",
        [_Location_column]: 7,
        [_Location_line]: 200,
        [_Location_file]: null
      });
    },
    get C1066() {
      return C1066 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusColor",
        [_Location_column]: 7,
        [_Location_line]: 201,
        [_Location_file]: null
      });
    },
    get C1067() {
      return C1067 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "hoverColor",
        [_Location_column]: 7,
        [_Location_line]: 202,
        [_Location_file]: null
      });
    },
    get C1068() {
      return C1068 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "highlightColor",
        [_Location_column]: 7,
        [_Location_line]: 203,
        [_Location_file]: null
      });
    },
    get C1069() {
      return C1069 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "splashColor",
        [_Location_column]: 7,
        [_Location_line]: 204,
        [_Location_file]: null
      });
    },
    get C1070() {
      return C1070 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "elevation",
        [_Location_column]: 7,
        [_Location_line]: 205,
        [_Location_file]: null
      });
    },
    get C1071() {
      return C1071 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusElevation",
        [_Location_column]: 7,
        [_Location_line]: 206,
        [_Location_file]: null
      });
    },
    get C1072() {
      return C1072 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "hoverElevation",
        [_Location_column]: 7,
        [_Location_line]: 207,
        [_Location_file]: null
      });
    },
    get C1073() {
      return C1073 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "highlightElevation",
        [_Location_column]: 7,
        [_Location_line]: 208,
        [_Location_file]: null
      });
    },
    get C1074() {
      return C1074 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "disabledElevation",
        [_Location_column]: 7,
        [_Location_line]: 209,
        [_Location_file]: null
      });
    },
    get C1075() {
      return C1075 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 7,
        [_Location_line]: 210,
        [_Location_file]: null
      });
    },
    get C1076() {
      return C1076 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "visualDensity",
        [_Location_column]: 7,
        [_Location_line]: 211,
        [_Location_file]: null
      });
    },
    get C1077() {
      return C1077 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 7,
        [_Location_line]: 212,
        [_Location_file]: null
      });
    },
    get C1078() {
      return C1078 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shape",
        [_Location_column]: 7,
        [_Location_line]: 213,
        [_Location_file]: null
      });
    },
    get C1079() {
      return C1079 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipBehavior",
        [_Location_column]: 7,
        [_Location_line]: 214,
        [_Location_file]: null
      });
    },
    get C1080() {
      return C1080 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusNode",
        [_Location_column]: 7,
        [_Location_line]: 215,
        [_Location_file]: null
      });
    },
    get C1081() {
      return C1081 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "autofocus",
        [_Location_column]: 7,
        [_Location_line]: 216,
        [_Location_file]: null
      });
    },
    get C1082() {
      return C1082 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "materialTapTargetSize",
        [_Location_column]: 7,
        [_Location_line]: 217,
        [_Location_file]: null
      });
    },
    get C1083() {
      return C1083 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animationDuration",
        [_Location_column]: 7,
        [_Location_line]: 218,
        [_Location_file]: null
      });
    },
    get C1084() {
      return C1084 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 219,
        [_Location_file]: null
      });
    },
    get C1059() {
      return C1059 = dart.constList([C1060 || CT.C1060, C1061 || CT.C1061, C1062 || CT.C1062, C1063 || CT.C1063, C1064 || CT.C1064, C1065 || CT.C1065, C1066 || CT.C1066, C1067 || CT.C1067, C1068 || CT.C1068, C1069 || CT.C1069, C1070 || CT.C1070, C1071 || CT.C1071, C1072 || CT.C1072, C1073 || CT.C1073, C1074 || CT.C1074, C1075 || CT.C1075, C1076 || CT.C1076, C1077 || CT.C1077, C1078 || CT.C1078, C1079 || CT.C1079, C1080 || CT.C1080, C1081 || CT.C1081, C1082 || CT.C1082, C1083 || CT.C1083, C1084 || CT.C1084], _LocationL());
    },
    get C1058() {
      return C1058 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1059 || CT.C1059,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 194,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/flat_button.dart"
      });
    },
    get C1088() {
      return C1088 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 29,
        [_Location_line]: 283,
        [_Location_file]: null
      });
    },
    get C1087() {
      return C1087 = dart.constList([C1088 || CT.C1088], _LocationL());
    },
    get C1086() {
      return C1086 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1087 || CT.C1087,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 283,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/flat_button.dart"
      });
    },
    get C1085() {
      return C1085 = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget__location]: C1086 || CT.C1086,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: null,
        [SizedBox_width]: 8
      });
    },
    get C1091() {
      return C1091 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mainAxisSize",
        [_Location_column]: 12,
        [_Location_line]: 280,
        [_Location_file]: null
      });
    },
    get C1092() {
      return C1092 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 12,
        [_Location_line]: 281,
        [_Location_file]: null
      });
    },
    get C1090() {
      return C1090 = dart.constList([C1091 || CT.C1091, C1092 || CT.C1092], _LocationL());
    },
    get C1089() {
      return C1089 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1090 || CT.C1090,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 279,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/flat_button.dart"
      });
    },
    get C1095() {
      return C1095 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 66,
        [_Location_line]: 250,
        [_Location_file]: null
      });
    },
    get C1096() {
      return C1096 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 78,
        [_Location_line]: 250,
        [_Location_file]: null
      });
    },
    get C1094() {
      return C1094 = dart.constList([C1095 || CT.C1095, C1096 || CT.C1096], _LocationL());
    },
    get C1093() {
      return C1093 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1094 || CT.C1094,
        [_Location_name]: null,
        [_Location_column]: 53,
        [_Location_line]: 250,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/tooltip_theme.dart"
      });
    },
    get C1099() {
      return C1099 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 72,
        [_Location_line]: 277,
        [_Location_file]: null
      });
    },
    get C1100() {
      return C1100 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 84,
        [_Location_line]: 277,
        [_Location_file]: null
      });
    },
    get C1098() {
      return C1098 = dart.constList([C1099 || CT.C1099, C1100 || CT.C1100], _LocationL());
    },
    get C1097() {
      return C1097 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1098 || CT.C1098,
        [_Location_name]: null,
        [_Location_column]: 53,
        [_Location_line]: 277,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/toggle_buttons_theme.dart"
      });
    },
    get C1103() {
      return C1103 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 69,
        [_Location_line]: 393,
        [_Location_file]: null
      });
    },
    get C1104() {
      return C1104 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 81,
        [_Location_line]: 393,
        [_Location_file]: null
      });
    },
    get C1102() {
      return C1102 = dart.constList([C1103 || CT.C1103, C1104 || CT.C1104], _LocationL());
    },
    get C1101() {
      return C1101 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1102 || CT.C1102,
        [_Location_name]: null,
        [_Location_column]: 53,
        [_Location_line]: 393,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/time_picker_theme.dart"
      });
    },
    get C1107() {
      return C1107 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 69,
        [_Location_line]: 122,
        [_Location_file]: null
      });
    },
    get C1108() {
      return C1108 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 81,
        [_Location_line]: 122,
        [_Location_file]: null
      });
    },
    get C1106() {
      return C1106 = dart.constList([C1107 || CT.C1107, C1108 || CT.C1108], _LocationL());
    },
    get C1105() {
      return C1105 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1106 || CT.C1106,
        [_Location_name]: null,
        [_Location_column]: 53,
        [_Location_line]: 122,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/text_button_theme.dart"
      });
    },
    get C1109() {
      return C1109 = dart.const({
        __proto__: tabs$.TabBarIndicatorSize.prototype,
        [_name$9]: "TabBarIndicatorSize.tab",
        index: 0
      });
    },
    get C1110() {
      return C1110 = dart.const({
        __proto__: tabs$.TabBarIndicatorSize.prototype,
        [_name$9]: "TabBarIndicatorSize.label",
        index: 1
      });
    },
    get C1111() {
      return C1111 = dart.constList([C1109 || CT.C1109, C1110 || CT.C1110], TabBarIndicatorSizeL());
    },
    get C1112() {
      return C1112 = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 10,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 0
      });
    },
    get C1115() {
      return C1115 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 26,
        [_Location_line]: 100,
        [_Location_file]: null
      });
    },
    get C1116() {
      return C1116 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "softWrap",
        [_Location_column]: 32,
        [_Location_line]: 100,
        [_Location_file]: null
      });
    },
    get C1117() {
      return C1117 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "overflow",
        [_Location_column]: 49,
        [_Location_line]: 100,
        [_Location_file]: null
      });
    },
    get C1114() {
      return C1114 = dart.constList([C1115 || CT.C1115, C1116 || CT.C1116, C1117 || CT.C1117], _LocationL());
    },
    get C1113() {
      return C1113 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1114 || CT.C1114,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 100,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1120() {
      return C1120 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 122,
        [_Location_file]: null
      });
    },
    get C1121() {
      return C1121 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "margin",
        [_Location_column]: 13,
        [_Location_line]: 123,
        [_Location_file]: null
      });
    },
    get C1119() {
      return C1119 = dart.constList([C1120 || CT.C1120, C1121 || CT.C1121], _LocationL());
    },
    get C1118() {
      return C1118 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1119 || CT.C1119,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 121,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1124() {
      return C1124 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mainAxisAlignment",
        [_Location_column]: 9,
        [_Location_line]: 118,
        [_Location_file]: null
      });
    },
    get C1125() {
      return C1125 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "crossAxisAlignment",
        [_Location_column]: 9,
        [_Location_line]: 119,
        [_Location_file]: null
      });
    },
    get C1126() {
      return C1126 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 9,
        [_Location_line]: 120,
        [_Location_file]: null
      });
    },
    get C1123() {
      return C1123 = dart.constList([C1124 || CT.C1124, C1125 || CT.C1125, C1126 || CT.C1126], _LocationL());
    },
    get C1122() {
      return C1122 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1123 || CT.C1123,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 117,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1129() {
      return C1129 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 133,
        [_Location_file]: null
      });
    },
    get C1130() {
      return C1130 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "widthFactor",
        [_Location_column]: 9,
        [_Location_line]: 134,
        [_Location_file]: null
      });
    },
    get C1128() {
      return C1128 = dart.constList([C1129 || CT.C1129, C1130 || CT.C1130], _LocationL());
    },
    get C1127() {
      return C1127 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1128 || CT.C1128,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 132,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1133() {
      return C1133 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 7,
        [_Location_line]: 131,
        [_Location_file]: null
      });
    },
    get C1134() {
      return C1134 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 132,
        [_Location_file]: null
      });
    },
    get C1132() {
      return C1132 = dart.constList([C1133 || CT.C1133, C1134 || CT.C1134], _LocationL());
    },
    get C1131() {
      return C1131 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1132 || CT.C1132,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 130,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1137() {
      return C1137 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 7,
        [_Location_line]: 198,
        [_Location_file]: null
      });
    },
    get C1138() {
      return C1138 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 199,
        [_Location_file]: null
      });
    },
    get C1136() {
      return C1136 = dart.constList([C1137 || CT.C1137, C1138 || CT.C1138], _LocationL());
    },
    get C1135() {
      return C1135 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1136 || CT.C1136,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 197,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1139() {
      return C1139 = dart.constList([], WidgetL());
    },
    get C1142() {
      return C1142 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animation",
        [_Location_column]: 7,
        [_Location_line]: 1012,
        [_Location_file]: null
      });
    },
    get C1143() {
      return C1143 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selected",
        [_Location_column]: 7,
        [_Location_line]: 1013,
        [_Location_file]: null
      });
    },
    get C1144() {
      return C1144 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "labelColor",
        [_Location_column]: 7,
        [_Location_line]: 1014,
        [_Location_file]: null
      });
    },
    get C1145() {
      return C1145 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "unselectedLabelColor",
        [_Location_column]: 7,
        [_Location_line]: 1015,
        [_Location_file]: null
      });
    },
    get C1146() {
      return C1146 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "labelStyle",
        [_Location_column]: 7,
        [_Location_line]: 1016,
        [_Location_file]: null
      });
    },
    get C1147() {
      return C1147 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "unselectedLabelStyle",
        [_Location_column]: 7,
        [_Location_line]: 1017,
        [_Location_file]: null
      });
    },
    get C1148() {
      return C1148 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 1018,
        [_Location_file]: null
      });
    },
    get C1141() {
      return C1141 = dart.constList([C1142 || CT.C1142, C1143 || CT.C1143, C1144 || CT.C1144, C1145 || CT.C1145, C1146 || CT.C1146, C1147 || CT.C1147, C1148 || CT.C1148], _LocationL());
    },
    get C1140() {
      return C1140 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1141 || CT.C1141,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1011,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1151() {
      return C1151 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 9,
        [_Location_line]: 1037,
        [_Location_file]: null
      });
    },
    get C1150() {
      return C1150 = dart.constList([C1151 || CT.C1151], _LocationL());
    },
    get C1149() {
      return C1149 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1150 || CT.C1150,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 1036,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1154() {
      return C1154 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 13,
        [_Location_line]: 1050,
        [_Location_file]: null
      });
    },
    get C1155() {
      return C1155 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 1051,
        [_Location_file]: null
      });
    },
    get C1153() {
      return C1153 = dart.constList([C1154 || CT.C1154, C1155 || CT.C1155], _LocationL());
    },
    get C1152() {
      return C1152 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1153 || CT.C1153,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 1049,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1158() {
      return C1158 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 11,
        [_Location_line]: 1048,
        [_Location_file]: null
      });
    },
    get C1159() {
      return C1159 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 1049,
        [_Location_file]: null
      });
    },
    get C1157() {
      return C1157 = dart.constList([C1158 || CT.C1158, C1159 || CT.C1159], _LocationL());
    },
    get C1156() {
      return C1156 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1157 || CT.C1157,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 1047,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1162() {
      return C1162 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "heightFactor",
        [_Location_column]: 9,
        [_Location_line]: 1046,
        [_Location_file]: null
      });
    },
    get C1163() {
      return C1163 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 1047,
        [_Location_file]: null
      });
    },
    get C1161() {
      return C1161 = dart.constList([C1162 || CT.C1162, C1163 || CT.C1163], _LocationL());
    },
    get C1160() {
      return C1160 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1161 || CT.C1161,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 1045,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1166() {
      return C1166 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selected",
        [_Location_column]: 17,
        [_Location_line]: 1102,
        [_Location_file]: null
      });
    },
    get C1167() {
      return C1167 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "label",
        [_Location_column]: 17,
        [_Location_line]: 1103,
        [_Location_file]: null
      });
    },
    get C1165() {
      return C1165 = dart.constList([C1166 || CT.C1166, C1167 || CT.C1167], _LocationL());
    },
    get C1164() {
      return C1164 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1165 || CT.C1165,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 1101,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1170() {
      return C1170 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 13,
        [_Location_line]: 1099,
        [_Location_file]: null
      });
    },
    get C1169() {
      return C1169 = dart.constList([C1170 || CT.C1170], _LocationL());
    },
    get C1168() {
      return C1168 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1169 || CT.C1169,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 1098,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1173() {
      return C1173 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 11,
        [_Location_line]: 1097,
        [_Location_file]: null
      });
    },
    get C1174() {
      return C1174 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 1098,
        [_Location_file]: null
      });
    },
    get C1172() {
      return C1172 = dart.constList([C1173 || CT.C1173, C1174 || CT.C1174], _LocationL());
    },
    get C1171() {
      return C1171 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1172 || CT.C1172,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 1096,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1177() {
      return C1177 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mouseCursor",
        [_Location_column]: 9,
        [_Location_line]: 1094,
        [_Location_file]: null
      });
    },
    get C1178() {
      return C1178 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTap",
        [_Location_column]: 9,
        [_Location_line]: 1095,
        [_Location_file]: null
      });
    },
    get C1179() {
      return C1179 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 1096,
        [_Location_file]: null
      });
    },
    get C1176() {
      return C1176 = dart.constList([C1177 || CT.C1177, C1178 || CT.C1178, C1179 || CT.C1179], _LocationL());
    },
    get C1175() {
      return C1175 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1176 || CT.C1176,
        [_Location_name]: null,
        [_Location_column]: 28,
        [_Location_line]: 1093,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1182() {
      return C1182 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 39,
        [_Location_line]: 1110,
        [_Location_file]: null
      });
    },
    get C1181() {
      return C1181 = dart.constList([C1182 || CT.C1182], _LocationL());
    },
    get C1180() {
      return C1180 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1181 || CT.C1181,
        [_Location_name]: null,
        [_Location_column]: 30,
        [_Location_line]: 1110,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1185() {
      return C1185 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPerformLayout",
        [_Location_column]: 11,
        [_Location_line]: 1123,
        [_Location_file]: null
      });
    },
    get C1186() {
      return C1186 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 11,
        [_Location_line]: 1124,
        [_Location_file]: null
      });
    },
    get C1184() {
      return C1184 = dart.constList([C1185 || CT.C1185, C1186 || CT.C1186], _LocationL());
    },
    get C1183() {
      return C1183 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1184 || CT.C1184,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 1122,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1189() {
      return C1189 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animation",
        [_Location_column]: 9,
        [_Location_line]: 1116,
        [_Location_file]: null
      });
    },
    get C1190() {
      return C1190 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selected",
        [_Location_column]: 9,
        [_Location_line]: 1117,
        [_Location_file]: null
      });
    },
    get C1191() {
      return C1191 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "labelColor",
        [_Location_column]: 9,
        [_Location_line]: 1118,
        [_Location_file]: null
      });
    },
    get C1192() {
      return C1192 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "unselectedLabelColor",
        [_Location_column]: 9,
        [_Location_line]: 1119,
        [_Location_file]: null
      });
    },
    get C1193() {
      return C1193 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "labelStyle",
        [_Location_column]: 9,
        [_Location_line]: 1120,
        [_Location_file]: null
      });
    },
    get C1194() {
      return C1194 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "unselectedLabelStyle",
        [_Location_column]: 9,
        [_Location_line]: 1121,
        [_Location_file]: null
      });
    },
    get C1195() {
      return C1195 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 1122,
        [_Location_file]: null
      });
    },
    get C1188() {
      return C1188 = dart.constList([C1189 || CT.C1189, C1190 || CT.C1190, C1191 || CT.C1191, C1192 || CT.C1192, C1193 || CT.C1193, C1194 || CT.C1194, C1195 || CT.C1195], _LocationL());
    },
    get C1187() {
      return C1187 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1188 || CT.C1188,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 1115,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1198() {
      return C1198 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "painter",
        [_Location_column]: 7,
        [_Location_line]: 1114,
        [_Location_file]: null
      });
    },
    get C1199() {
      return C1199 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 1115,
        [_Location_file]: null
      });
    },
    get C1197() {
      return C1197 = dart.constList([C1198 || CT.C1198, C1199 || CT.C1199], _LocationL());
    },
    get C1196() {
      return C1196 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1197 || CT.C1197,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 1113,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1202() {
      return C1202 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "dragStartBehavior",
        [_Location_column]: 9,
        [_Location_line]: 1132,
        [_Location_file]: null
      });
    },
    get C1203() {
      return C1203 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrollDirection",
        [_Location_column]: 9,
        [_Location_line]: 1133,
        [_Location_file]: null
      });
    },
    get C1204() {
      return C1204 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "controller",
        [_Location_column]: 9,
        [_Location_line]: 1134,
        [_Location_file]: null
      });
    },
    get C1205() {
      return C1205 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "physics",
        [_Location_column]: 9,
        [_Location_line]: 1135,
        [_Location_file]: null
      });
    },
    get C1206() {
      return C1206 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 1136,
        [_Location_file]: null
      });
    },
    get C1201() {
      return C1201 = dart.constList([C1202 || CT.C1202, C1203 || CT.C1203, C1204 || CT.C1204, C1205 || CT.C1205, C1206 || CT.C1206], _LocationL());
    },
    get C1200() {
      return C1200 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1201 || CT.C1201,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 1131,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1207() {
      return C1207 = dart.const({
        __proto__: scroll_physics.ClampingScrollPhysics.prototype,
        [ScrollPhysics_parent]: null
      });
    },
    get C1210() {
      return C1210 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "dragStartBehavior",
        [_Location_column]: 9,
        [_Location_line]: 1370,
        [_Location_file]: null
      });
    },
    get C1211() {
      return C1211 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "controller",
        [_Location_column]: 9,
        [_Location_line]: 1371,
        [_Location_file]: null
      });
    },
    get C1212() {
      return C1212 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "physics",
        [_Location_column]: 9,
        [_Location_line]: 1372,
        [_Location_file]: null
      });
    },
    get C1213() {
      return C1213 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 9,
        [_Location_line]: 1375,
        [_Location_file]: null
      });
    },
    get C1209() {
      return C1209 = dart.constList([C1210 || CT.C1210, C1211 || CT.C1211, C1212 || CT.C1212, C1213 || CT.C1213], _LocationL());
    },
    get C1208() {
      return C1208 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1209 || CT.C1209,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 1369,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1216() {
      return C1216 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onNotification",
        [_Location_column]: 7,
        [_Location_line]: 1368,
        [_Location_file]: null
      });
    },
    get C1217() {
      return C1217 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 1369,
        [_Location_file]: null
      });
    },
    get C1215() {
      return C1215 = dart.constList([C1216 || CT.C1216, C1217 || CT.C1217], _LocationL());
    },
    get C1214() {
      return C1214 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1215 || CT.C1215,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1367,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1218() {
      return C1218 = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 4,
        [EdgeInsets_right]: 4,
        [EdgeInsets_top]: 4,
        [EdgeInsets_left]: 4
      });
    },
    get C1221() {
      return C1221 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 7,
        [_Location_line]: 1410,
        [_Location_file]: null
      });
    },
    get C1222() {
      return C1222 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 7,
        [_Location_line]: 1411,
        [_Location_file]: null
      });
    },
    get C1223() {
      return C1223 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "margin",
        [_Location_column]: 7,
        [_Location_line]: 1412,
        [_Location_file]: null
      });
    },
    get C1224() {
      return C1224 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "decoration",
        [_Location_column]: 7,
        [_Location_line]: 1413,
        [_Location_file]: null
      });
    },
    get C1220() {
      return C1220 = dart.constList([C1221 || CT.C1221, C1222 || CT.C1222, C1223 || CT.C1223, C1224 || CT.C1224], _LocationL());
    },
    get C1219() {
      return C1219 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1220 || CT.C1220,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1409,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1227() {
      return C1227 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundColor",
        [_Location_column]: 7,
        [_Location_line]: 1492,
        [_Location_file]: null
      });
    },
    get C1228() {
      return C1228 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "borderColor",
        [_Location_column]: 7,
        [_Location_line]: 1493,
        [_Location_file]: null
      });
    },
    get C1229() {
      return C1229 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "size",
        [_Location_column]: 7,
        [_Location_line]: 1494,
        [_Location_file]: null
      });
    },
    get C1226() {
      return C1226 = dart.constList([C1227 || CT.C1227, C1228 || CT.C1228, C1229 || CT.C1229], _LocationL());
    },
    get C1225() {
      return C1225 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1226 || CT.C1226,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1491,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1232() {
      return C1232 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mainAxisSize",
        [_Location_column]: 13,
        [_Location_line]: 1527,
        [_Location_file]: null
      });
    },
    get C1233() {
      return C1233 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 13,
        [_Location_line]: 1528,
        [_Location_file]: null
      });
    },
    get C1231() {
      return C1231 = dart.constList([C1232 || CT.C1232, C1233 || CT.C1233], _LocationL());
    },
    get C1230() {
      return C1230 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1231 || CT.C1231,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 1526,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1236() {
      return C1236 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "label",
        [_Location_column]: 11,
        [_Location_line]: 1525,
        [_Location_file]: null
      });
    },
    get C1237() {
      return C1237 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 1526,
        [_Location_file]: null
      });
    },
    get C1235() {
      return C1235 = dart.constList([C1236 || CT.C1236, C1237 || CT.C1237], _LocationL());
    },
    get C1234() {
      return C1234 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1235 || CT.C1235,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 1524,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1240() {
      return C1240 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animation",
        [_Location_column]: 7,
        [_Location_line]: 1522,
        [_Location_file]: null
      });
    },
    get C1241() {
      return C1241 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 7,
        [_Location_line]: 1523,
        [_Location_file]: null
      });
    },
    get C1239() {
      return C1239 = dart.constList([C1240 || CT.C1240, C1241 || CT.C1241], _LocationL());
    },
    get C1238() {
      return C1238 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1239 || CT.C1239,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1521,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C1242() {
      return C1242 = dart.const({
        __proto__: page_view.PageScrollPhysics.prototype,
        [ScrollPhysics_parent]: null
      });
    },
    get C1243() {
      return C1243 = dart.const({
        __proto__: snack_bar_theme.SnackBarBehavior.prototype,
        [_name$10]: "SnackBarBehavior.fixed",
        index: 0
      });
    },
    get C1244() {
      return C1244 = dart.const({
        __proto__: snack_bar_theme.SnackBarBehavior.prototype,
        [_name$10]: "SnackBarBehavior.floating",
        index: 1
      });
    },
    get C1245() {
      return C1245 = dart.constList([C1243 || CT.C1243, C1244 || CT.C1244], SnackBarBehaviorL());
    },
    get C1248() {
      return C1248 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 65,
        [_Location_line]: 216,
        [_Location_file]: null
      });
    },
    get C1249() {
      return C1249 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 77,
        [_Location_line]: 216,
        [_Location_file]: null
      });
    },
    get C1247() {
      return C1247 = dart.constList([C1248 || CT.C1248, C1249 || CT.C1249], _LocationL());
    },
    get C1246() {
      return C1246 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1247 || CT.C1247,
        [_Location_name]: null,
        [_Location_column]: 53,
        [_Location_line]: 216,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/slider_theme.dart"
      });
    },
    get C1250() {
      return C1250 = dart.const({
        __proto__: slider_theme.ShowValueIndicator.prototype,
        [_name$11]: "ShowValueIndicator.onlyForDiscrete",
        index: 0
      });
    },
    get C1251() {
      return C1251 = dart.const({
        __proto__: slider_theme.ShowValueIndicator.prototype,
        [_name$11]: "ShowValueIndicator.onlyForContinuous",
        index: 1
      });
    },
    get C1252() {
      return C1252 = dart.const({
        __proto__: slider_theme.ShowValueIndicator.prototype,
        [_name$11]: "ShowValueIndicator.always",
        index: 2
      });
    },
    get C1253() {
      return C1253 = dart.const({
        __proto__: slider_theme.ShowValueIndicator.prototype,
        [_name$11]: "ShowValueIndicator.never",
        index: 3
      });
    },
    get C1254() {
      return C1254 = dart.constList([C1250 || CT.C1250, C1251 || CT.C1251, C1252 || CT.C1252, C1253 || CT.C1253], ShowValueIndicatorL());
    },
    get C1255() {
      return C1255 = dart.const({
        __proto__: slider_theme.Thumb.prototype,
        [_name$11]: "Thumb.start",
        index: 0
      });
    },
    get C1256() {
      return C1256 = dart.const({
        __proto__: slider_theme.Thumb.prototype,
        [_name$11]: "Thumb.end",
        index: 1
      });
    },
    get C1257() {
      return C1257 = dart.constList([C1255 || CT.C1255, C1256 || CT.C1256], ThumbL());
    },
    get C1258() {
      return C1258 = dart.const({
        __proto__: slider_theme.RoundSliderOverlayShape.prototype,
        [RoundSliderOverlayShape_overlayRadius]: 24
      });
    },
    get C1259() {
      return C1259 = dart.const({
        __proto__: slider_theme.RoundSliderTickMarkShape.prototype,
        [RoundSliderTickMarkShape_tickMarkRadius]: null
      });
    },
    get C1260() {
      return C1260 = dart.const({
        __proto__: slider_theme.RoundSliderThumbShape.prototype,
        [RoundSliderThumbShape_pressedElevation]: 6,
        [RoundSliderThumbShape_elevation]: 1,
        [RoundSliderThumbShape_disabledThumbRadius]: null,
        [RoundSliderThumbShape_enabledThumbRadius]: 10
      });
    },
    get C1261() {
      return C1261 = dart.const({
        __proto__: slider_theme.RoundedRectSliderTrackShape.prototype
      });
    },
    get C1262() {
      return C1262 = dart.const({
        __proto__: slider_theme.PaddleSliderValueIndicatorShape.prototype
      });
    },
    get C1263() {
      return C1263 = dart.const({
        __proto__: slider_theme.RoundRangeSliderTickMarkShape.prototype,
        [RoundRangeSliderTickMarkShape_tickMarkRadius]: null
      });
    },
    get C1264() {
      return C1264 = dart.const({
        __proto__: slider_theme.RoundRangeSliderThumbShape.prototype,
        [RoundRangeSliderThumbShape_pressedElevation]: 6,
        [RoundRangeSliderThumbShape_elevation]: 1,
        [RoundRangeSliderThumbShape_disabledThumbRadius]: null,
        [RoundRangeSliderThumbShape_enabledThumbRadius]: 10
      });
    },
    get C1265() {
      return C1265 = dart.const({
        __proto__: slider_theme.RoundedRectRangeSliderTrackShape.prototype
      });
    },
    get C1266() {
      return C1266 = dart.const({
        __proto__: slider_theme.PaddleRangeSliderValueIndicatorShape.prototype
      });
    },
    get C1267() {
      return C1267 = dart.const({
        __proto__: slider_theme.SliderThemeData.prototype,
        [SliderThemeData_thumbSelector]: null,
        [SliderThemeData_minThumbSeparation]: null,
        [SliderThemeData_valueIndicatorTextStyle]: null,
        [SliderThemeData_showValueIndicator]: null,
        [SliderThemeData_rangeValueIndicatorShape]: null,
        [SliderThemeData_rangeTrackShape]: null,
        [SliderThemeData_rangeThumbShape]: null,
        [SliderThemeData_rangeTickMarkShape]: null,
        [SliderThemeData_valueIndicatorShape]: null,
        [SliderThemeData_trackShape]: null,
        [SliderThemeData_thumbShape]: null,
        [SliderThemeData_tickMarkShape]: null,
        [SliderThemeData_overlayShape]: null,
        [SliderThemeData_valueIndicatorColor]: null,
        [SliderThemeData_overlayColor]: null,
        [SliderThemeData_disabledThumbColor]: null,
        [SliderThemeData_overlappingShapeStrokeColor]: null,
        [SliderThemeData_thumbColor]: null,
        [SliderThemeData_disabledInactiveTickMarkColor]: null,
        [SliderThemeData_disabledActiveTickMarkColor]: null,
        [SliderThemeData_inactiveTickMarkColor]: null,
        [SliderThemeData_activeTickMarkColor]: null,
        [SliderThemeData_disabledInactiveTrackColor]: null,
        [SliderThemeData_disabledActiveTrackColor]: null,
        [SliderThemeData_inactiveTrackColor]: null,
        [SliderThemeData_activeTrackColor]: null,
        [SliderThemeData_trackHeight]: null
      });
    },
    get C1268() {
      return C1268 = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 0,
        [OffsetBase__dx]: 0
      });
    },
    get C1269() {
      return C1269 = dart.const({
        __proto__: slider_theme._RectangularSliderValueIndicatorPathPainter.prototype
      });
    },
    get C1270() {
      return C1270 = dart.const({
        __proto__: slider_theme._PaddleSliderValueIndicatorPathPainter.prototype
      });
    },
    get C1271() {
      return C1271 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294901760.0
      });
    },
    get C1272() {
      return C1272 = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: -40,
        [OffsetBase__dx]: 0
      });
    },
    get C1275() {
      return C1275 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 68,
        [_Location_line]: 158,
        [_Location_file]: null
      });
    },
    get C1276() {
      return C1276 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 80,
        [_Location_line]: 158,
        [_Location_file]: null
      });
    },
    get C1274() {
      return C1274 = dart.constList([C1275 || CT.C1275, C1276 || CT.C1276], _LocationL());
    },
    get C1273() {
      return C1273 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1274 || CT.C1274,
        [_Location_name]: null,
        [_Location_column]: 53,
        [_Location_line]: 158,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/popup_menu_theme.dart"
      });
    },
    get C1279() {
      return C1279 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 9,
        [_Location_line]: 43,
        [_Location_file]: null
      });
    },
    get C1280() {
      return C1280 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 44,
        [_Location_file]: null
      });
    },
    get C1278() {
      return C1278 = dart.constList([C1279 || CT.C1279, C1280 || CT.C1280], _LocationL());
    },
    get C1277() {
      return C1277 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1278 || CT.C1278,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 42,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1283() {
      return C1283 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "position",
        [_Location_column]: 7,
        [_Location_line]: 40,
        [_Location_file]: null
      });
    },
    get C1284() {
      return C1284 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 42,
        [_Location_file]: null
      });
    },
    get C1282() {
      return C1282 = dart.constList([C1283 || CT.C1283, C1284 || CT.C1284], _LocationL());
    },
    get C1281() {
      return C1281 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1282 || CT.C1282,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 39,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1285() {
      return C1285 = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 0.25,
        [OffsetBase__dx]: 0
      });
    },
    get C1288() {
      return C1288 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 21,
        [_Location_line]: 124,
        [_Location_file]: null
      });
    },
    get C1289() {
      return C1289 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxHeight",
        [_Location_column]: 21,
        [_Location_line]: 125,
        [_Location_file]: null
      });
    },
    get C1290() {
      return C1290 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 21,
        [_Location_line]: 126,
        [_Location_file]: null
      });
    },
    get C1287() {
      return C1287 = dart.constList([C1288 || CT.C1288, C1289 || CT.C1289, C1290 || CT.C1290], _LocationL());
    },
    get C1286() {
      return C1286 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1287 || CT.C1287,
        [_Location_name]: null,
        [_Location_column]: 26,
        [_Location_line]: 123,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1293() {
      return C1293 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 19,
        [_Location_line]: 122,
        [_Location_file]: null
      });
    },
    get C1294() {
      return C1294 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 19,
        [_Location_line]: 123,
        [_Location_file]: null
      });
    },
    get C1292() {
      return C1292 = dart.constList([C1293 || CT.C1293, C1294 || CT.C1294], _LocationL());
    },
    get C1291() {
      return C1291 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1292 || CT.C1292,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 121,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1297() {
      return C1297 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 121,
        [_Location_file]: null
      });
    },
    get C1296() {
      return C1296 = dart.constList([C1297 || CT.C1297], _LocationL());
    },
    get C1295() {
      return C1295 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1296 || CT.C1296,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 120,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1300() {
      return C1300 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 15,
        [_Location_line]: 118,
        [_Location_file]: null
      });
    },
    get C1301() {
      return C1301 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 15,
        [_Location_line]: 119,
        [_Location_file]: null
      });
    },
    get C1302() {
      return C1302 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 120,
        [_Location_file]: null
      });
    },
    get C1299() {
      return C1299 = dart.constList([C1300 || CT.C1300, C1301 || CT.C1301, C1302 || CT.C1302], _LocationL());
    },
    get C1298() {
      return C1298 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1299 || CT.C1299,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 117,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1305() {
      return C1305 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "translation",
        [_Location_column]: 15,
        [_Location_line]: 135,
        [_Location_file]: null
      });
    },
    get C1306() {
      return C1306 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 136,
        [_Location_file]: null
      });
    },
    get C1304() {
      return C1304 = dart.constList([C1305 || CT.C1305, C1306 || CT.C1306], _LocationL());
    },
    get C1303() {
      return C1303 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1304 || CT.C1304,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 134,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1309() {
      return C1309 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "translation",
        [_Location_column]: 17,
        [_Location_line]: 140,
        [_Location_file]: null
      });
    },
    get C1310() {
      return C1310 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 141,
        [_Location_file]: null
      });
    },
    get C1308() {
      return C1308 = dart.constList([C1309 || CT.C1309, C1310 || CT.C1310], _LocationL());
    },
    get C1307() {
      return C1307 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1308 || CT.C1308,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 139,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1313() {
      return C1313 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animation",
        [_Location_column]: 13,
        [_Location_line]: 133,
        [_Location_file]: null
      });
    },
    get C1314() {
      return C1314 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 134,
        [_Location_file]: null
      });
    },
    get C1315() {
      return C1315 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 13,
        [_Location_line]: 138,
        [_Location_file]: null
      });
    },
    get C1312() {
      return C1312 = dart.constList([C1313 || CT.C1313, C1314 || CT.C1314, C1315 || CT.C1315], _LocationL());
    },
    get C1311() {
      return C1311 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1312 || CT.C1312,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 132,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1318() {
      return C1318 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animation",
        [_Location_column]: 11,
        [_Location_line]: 115,
        [_Location_file]: null
      });
    },
    get C1319() {
      return C1319 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 11,
        [_Location_line]: 116,
        [_Location_file]: null
      });
    },
    get C1320() {
      return C1320 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 132,
        [_Location_file]: null
      });
    },
    get C1317() {
      return C1317 = dart.constList([C1318 || CT.C1318, C1319 || CT.C1319, C1320 || CT.C1320], _LocationL());
    },
    get C1316() {
      return C1316 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1317 || CT.C1317,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 114,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1323() {
      return C1323 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 7,
        [_Location_line]: 88,
        [_Location_file]: null
      });
    },
    get C1322() {
      return C1322 = dart.constList([C1323 || CT.C1323], _LocationL());
    },
    get C1321() {
      return C1321 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1322 || CT.C1322,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 87,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1324() {
      return C1324 = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 0.05,
        [OffsetBase__dx]: 0
      });
    },
    get C1325() {
      return C1325 = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: -0.025,
        [OffsetBase__dx]: 0
      });
    },
    get C1326() {
      return C1326 = dart.const({
        __proto__: curves.Cubic.prototype,
        [Cubic_d]: 1,
        [Cubic_c]: 0,
        [Cubic_b]: 0,
        [Cubic_a]: 0.2
      });
    },
    get C1329() {
      return C1329 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animation",
        [_Location_column]: 11,
        [_Location_line]: 216,
        [_Location_file]: null
      });
    },
    get C1330() {
      return C1330 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 217,
        [_Location_file]: null
      });
    },
    get C1328() {
      return C1328 = dart.constList([C1329 || CT.C1329, C1330 || CT.C1330], _LocationL());
    },
    get C1327() {
      return C1327 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1328 || CT.C1328,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 215,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1333() {
      return C1333 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animation",
        [_Location_column]: 11,
        [_Location_line]: 226,
        [_Location_file]: null
      });
    },
    get C1334() {
      return C1334 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "reverse",
        [_Location_column]: 11,
        [_Location_line]: 227,
        [_Location_file]: null
      });
    },
    get C1335() {
      return C1335 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 228,
        [_Location_file]: null
      });
    },
    get C1332() {
      return C1332 = dart.constList([C1333 || CT.C1333, C1334 || CT.C1334, C1335 || CT.C1335], _LocationL());
    },
    get C1331() {
      return C1331 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1332 || CT.C1332,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 225,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1338() {
      return C1338 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animation",
        [_Location_column]: 13,
        [_Location_line]: 239,
        [_Location_file]: null
      });
    },
    get C1339() {
      return C1339 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "reverse",
        [_Location_column]: 13,
        [_Location_line]: 240,
        [_Location_file]: null
      });
    },
    get C1340() {
      return C1340 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 241,
        [_Location_file]: null
      });
    },
    get C1337() {
      return C1337 = dart.constList([C1338 || CT.C1338, C1339 || CT.C1339, C1340 || CT.C1340], _LocationL());
    },
    get C1336() {
      return C1336 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1337 || CT.C1337,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 238,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1343() {
      return C1343 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animation",
        [_Location_column]: 13,
        [_Location_line]: 250,
        [_Location_file]: null
      });
    },
    get C1344() {
      return C1344 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 251,
        [_Location_file]: null
      });
    },
    get C1342() {
      return C1342 = dart.constList([C1343 || CT.C1343, C1344 || CT.C1344], _LocationL());
    },
    get C1341() {
      return C1341 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1342 || CT.C1342,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 249,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1347() {
      return C1347 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animation",
        [_Location_column]: 9,
        [_Location_line]: 232,
        [_Location_file]: null
      });
    },
    get C1348() {
      return C1348 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "forwardBuilder",
        [_Location_column]: 9,
        [_Location_line]: 233,
        [_Location_file]: null
      });
    },
    get C1349() {
      return C1349 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "reverseBuilder",
        [_Location_column]: 9,
        [_Location_line]: 244,
        [_Location_file]: null
      });
    },
    get C1350() {
      return C1350 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 254,
        [_Location_file]: null
      });
    },
    get C1346() {
      return C1346 = dart.constList([C1347 || CT.C1347, C1348 || CT.C1348, C1349 || CT.C1349, C1350 || CT.C1350], _LocationL());
    },
    get C1345() {
      return C1345 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1346 || CT.C1346,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 231,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1353() {
      return C1353 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animation",
        [_Location_column]: 7,
        [_Location_line]: 209,
        [_Location_file]: null
      });
    },
    get C1354() {
      return C1354 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "forwardBuilder",
        [_Location_column]: 7,
        [_Location_line]: 210,
        [_Location_file]: null
      });
    },
    get C1355() {
      return C1355 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "reverseBuilder",
        [_Location_column]: 7,
        [_Location_line]: 220,
        [_Location_file]: null
      });
    },
    get C1356() {
      return C1356 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 231,
        [_Location_file]: null
      });
    },
    get C1352() {
      return C1352 = dart.constList([C1353 || CT.C1353, C1354 || CT.C1354, C1355 || CT.C1355, C1356 || CT.C1356], _LocationL());
    },
    get C1351() {
      return C1351 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1352 || CT.C1352,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 208,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1357() {
      return C1357 = dart.const({
        __proto__: curves.Cubic.prototype,
        [Cubic_d]: 0.06,
        [Cubic_c]: 0.133333,
        [Cubic_b]: 0,
        [Cubic_a]: 0.05
      });
    },
    get C1358() {
      return C1358 = dart.const({
        __proto__: curves.Cubic.prototype,
        [Cubic_d]: 1,
        [Cubic_c]: 0.25,
        [Cubic_b]: 0.82,
        [Cubic_a]: 0.208333
      });
    },
    get C1361() {
      return C1361 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 11,
        [_Location_line]: 324,
        [_Location_file]: null
      });
    },
    get C1362() {
      return C1362 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 325,
        [_Location_file]: null
      });
    },
    get C1360() {
      return C1360 = dart.constList([C1361 || CT.C1361, C1362 || CT.C1362], _LocationL());
    },
    get C1359() {
      return C1359 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1360 || CT.C1360,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 323,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1365() {
      return C1365 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scale",
        [_Location_column]: 11,
        [_Location_line]: 331,
        [_Location_file]: null
      });
    },
    get C1366() {
      return C1366 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 332,
        [_Location_file]: null
      });
    },
    get C1364() {
      return C1364 = dart.constList([C1365 || CT.C1365, C1366 || CT.C1366], _LocationL());
    },
    get C1363() {
      return C1363 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1364 || CT.C1364,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 330,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1369() {
      return C1369 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 9,
        [_Location_line]: 329,
        [_Location_file]: null
      });
    },
    get C1370() {
      return C1370 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 330,
        [_Location_file]: null
      });
    },
    get C1368() {
      return C1368 = dart.constList([C1369 || CT.C1369, C1370 || CT.C1370], _LocationL());
    },
    get C1367() {
      return C1367 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1368 || CT.C1368,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 328,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1373() {
      return C1373 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animation",
        [_Location_column]: 7,
        [_Location_line]: 321,
        [_Location_file]: null
      });
    },
    get C1374() {
      return C1374 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 7,
        [_Location_line]: 322,
        [_Location_file]: null
      });
    },
    get C1375() {
      return C1375 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 328,
        [_Location_file]: null
      });
    },
    get C1372() {
      return C1372 = dart.constList([C1373 || CT.C1373, C1374 || CT.C1374, C1375 || CT.C1375], _LocationL());
    },
    get C1371() {
      return C1371 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1372 || CT.C1372,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 320,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1376() {
      return C1376 = dart.const({
        __proto__: curves.Interval.prototype,
        [Interval_curve]: C965 || CT.C965,
        [Interval_end]: 0.25,
        [Interval_begin]: 0.125
      });
    },
    get C1377() {
      return C1377 = dart.const({
        __proto__: curves.Interval.prototype,
        [Interval_curve]: C965 || CT.C965,
        [Interval_end]: 0.4175,
        [Interval_begin]: 0.2075
      });
    },
    get C1380() {
      return C1380 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scale",
        [_Location_column]: 9,
        [_Location_line]: 381,
        [_Location_file]: null
      });
    },
    get C1381() {
      return C1381 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 382,
        [_Location_file]: null
      });
    },
    get C1379() {
      return C1379 = dart.constList([C1380 || CT.C1380, C1381 || CT.C1381], _LocationL());
    },
    get C1378() {
      return C1378 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1379 || CT.C1379,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 380,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1384() {
      return C1384 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 7,
        [_Location_line]: 379,
        [_Location_file]: null
      });
    },
    get C1385() {
      return C1385 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 380,
        [_Location_file]: null
      });
    },
    get C1383() {
      return C1383 = dart.constList([C1384 || CT.C1384, C1385 || CT.C1385], _LocationL());
    },
    get C1382() {
      return C1382 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1383 || CT.C1383,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 378,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1386() {
      return C1386 = dart.const({
        __proto__: curves.Interval.prototype,
        [Interval_curve]: C965 || CT.C965,
        [Interval_end]: 0.2075,
        [Interval_begin]: 0.0825
      });
    },
    get C1389() {
      return C1389 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "routeAnimation",
        [_Location_column]: 39,
        [_Location_line]: 451,
        [_Location_file]: null
      });
    },
    get C1390() {
      return C1390 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 66,
        [_Location_line]: 451,
        [_Location_file]: null
      });
    },
    get C1388() {
      return C1388 = dart.constList([C1389 || CT.C1389, C1390 || CT.C1390], _LocationL());
    },
    get C1387() {
      return C1387 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1388 || CT.C1388,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 451,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1393() {
      return C1393 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animation",
        [_Location_column]: 7,
        [_Location_line]: 479,
        [_Location_file]: null
      });
    },
    get C1394() {
      return C1394 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "secondaryAnimation",
        [_Location_column]: 7,
        [_Location_line]: 480,
        [_Location_file]: null
      });
    },
    get C1395() {
      return C1395 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 481,
        [_Location_file]: null
      });
    },
    get C1392() {
      return C1392 = dart.constList([C1393 || CT.C1393, C1394 || CT.C1394, C1395 || CT.C1395], _LocationL());
    },
    get C1391() {
      return C1391 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1392 || CT.C1392,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 478,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1398() {
      return C1398 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animation",
        [_Location_column]: 7,
        [_Location_line]: 510,
        [_Location_file]: null
      });
    },
    get C1399() {
      return C1399 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "secondaryAnimation",
        [_Location_column]: 7,
        [_Location_line]: 511,
        [_Location_file]: null
      });
    },
    get C1400() {
      return C1400 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 512,
        [_Location_file]: null
      });
    },
    get C1397() {
      return C1397 = dart.constList([C1398 || CT.C1398, C1399 || CT.C1399, C1400 || CT.C1400], _LocationL());
    },
    get C1396() {
      return C1396 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1397 || CT.C1397,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 509,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C1401() {
      return C1401 = dart.const({
        __proto__: page_transitions_theme.FadeUpwardsPageTransitionsBuilder.prototype
      });
    },
    get C1403() {
      return C1403 = dart.const({
        __proto__: page_transitions_theme.CupertinoPageTransitionsBuilder.prototype
      });
    },
    get C1402() {
      return C1402 = dart.constMap(TargetPlatformL(), PageTransitionsBuilderL(), [C44 || CT.C44, C1401 || CT.C1401, C48 || CT.C48, C1403 || CT.C1403, C46 || CT.C46, C1401 || CT.C1401, C49 || CT.C49, C1403 || CT.C1403, C47 || CT.C47, C1401 || CT.C1401]);
    },
    get C1406() {
      return C1406 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 73,
        [_Location_line]: 122,
        [_Location_file]: null
      });
    },
    get C1407() {
      return C1407 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 85,
        [_Location_line]: 122,
        [_Location_file]: null
      });
    },
    get C1405() {
      return C1405 = dart.constList([C1406 || CT.C1406, C1407 || CT.C1407], _LocationL());
    },
    get C1404() {
      return C1404 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1405 || CT.C1405,
        [_Location_name]: null,
        [_Location_column]: 53,
        [_Location_line]: 122,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/outlined_button_theme.dart"
      });
    },
    get C1410() {
      return C1410 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 21,
        [_Location_line]: 477,
        [_Location_file]: null
      });
    },
    get C1411() {
      return C1411 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 21,
        [_Location_line]: 480,
        [_Location_file]: null
      });
    },
    get C1409() {
      return C1409 = dart.constList([C1410 || CT.C1410, C1411 || CT.C1411], _LocationL());
    },
    get C1408() {
      return C1408 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1409 || CT.C1409,
        [_Location_name]: null,
        [_Location_column]: 19,
        [_Location_line]: 476,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1414() {
      return C1414 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "minWidth",
        [_Location_column]: 27,
        [_Location_line]: 492,
        [_Location_file]: null
      });
    },
    get C1415() {
      return C1415 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "minExtendedWidth",
        [_Location_column]: 27,
        [_Location_line]: 493,
        [_Location_file]: null
      });
    },
    get C1416() {
      return C1416 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "extendedTransitionAnimation",
        [_Location_column]: 27,
        [_Location_line]: 494,
        [_Location_file]: null
      });
    },
    get C1417() {
      return C1417 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selected",
        [_Location_column]: 27,
        [_Location_line]: 495,
        [_Location_file]: null
      });
    },
    get C1418() {
      return C1418 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "icon",
        [_Location_column]: 27,
        [_Location_line]: 496,
        [_Location_file]: null
      });
    },
    get C1419() {
      return C1419 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "label",
        [_Location_column]: 27,
        [_Location_line]: 497,
        [_Location_file]: null
      });
    },
    get C1420() {
      return C1420 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "destinationAnimation",
        [_Location_column]: 27,
        [_Location_line]: 498,
        [_Location_file]: null
      });
    },
    get C1421() {
      return C1421 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "labelType",
        [_Location_column]: 27,
        [_Location_line]: 499,
        [_Location_file]: null
      });
    },
    get C1422() {
      return C1422 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "iconTheme",
        [_Location_column]: 27,
        [_Location_line]: 500,
        [_Location_file]: null
      });
    },
    get C1423() {
      return C1423 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "labelTextStyle",
        [_Location_column]: 27,
        [_Location_line]: 501,
        [_Location_file]: null
      });
    },
    get C1424() {
      return C1424 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTap",
        [_Location_column]: 27,
        [_Location_line]: 502,
        [_Location_file]: null
      });
    },
    get C1425() {
      return C1425 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "indexLabel",
        [_Location_column]: 27,
        [_Location_line]: 505,
        [_Location_file]: null
      });
    },
    get C1413() {
      return C1413 = dart.constList([C1414 || CT.C1414, C1415 || CT.C1415, C1416 || CT.C1416, C1417 || CT.C1417, C1418 || CT.C1418, C1419 || CT.C1419, C1420 || CT.C1420, C1421 || CT.C1421, C1422 || CT.C1422, C1423 || CT.C1423, C1424 || CT.C1424, C1425 || CT.C1425], _LocationL());
    },
    get C1412() {
      return C1412 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1413 || CT.C1413,
        [_Location_name]: null,
        [_Location_column]: 25,
        [_Location_line]: 491,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1428() {
      return C1428 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 27,
        [_Location_line]: 512,
        [_Location_file]: null
      });
    },
    get C1429() {
      return C1429 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 27,
        [_Location_line]: 515,
        [_Location_file]: null
      });
    },
    get C1427() {
      return C1427 = dart.constList([C1428 || CT.C1428, C1429 || CT.C1429], _LocationL());
    },
    get C1426() {
      return C1426 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1427 || CT.C1427,
        [_Location_name]: null,
        [_Location_column]: 25,
        [_Location_line]: 511,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1432() {
      return C1432 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mainAxisSize",
        [_Location_column]: 21,
        [_Location_line]: 488,
        [_Location_file]: null
      });
    },
    get C1433() {
      return C1433 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 21,
        [_Location_line]: 489,
        [_Location_file]: null
      });
    },
    get C1431() {
      return C1431 = dart.constList([C1432 || CT.C1432, C1433 || CT.C1433], _LocationL());
    },
    get C1430() {
      return C1430 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1431 || CT.C1431,
        [_Location_name]: null,
        [_Location_column]: 26,
        [_Location_line]: 487,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1436() {
      return C1436 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 19,
        [_Location_line]: 486,
        [_Location_file]: null
      });
    },
    get C1437() {
      return C1437 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 19,
        [_Location_line]: 487,
        [_Location_file]: null
      });
    },
    get C1435() {
      return C1435 = dart.constList([C1436 || CT.C1436, C1437 || CT.C1437], _LocationL());
    },
    get C1434() {
      return C1434 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1435 || CT.C1435,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 485,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1440() {
      return C1440 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 485,
        [_Location_file]: null
      });
    },
    get C1439() {
      return C1439 = dart.constList([C1440 || CT.C1440], _LocationL());
    },
    get C1438() {
      return C1438 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1439 || CT.C1439,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 484,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1443() {
      return C1443 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 13,
        [_Location_line]: 472,
        [_Location_file]: null
      });
    },
    get C1442() {
      return C1442 = dart.constList([C1443 || CT.C1443], _LocationL());
    },
    get C1441() {
      return C1441 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1442 || CT.C1442,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 471,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1446() {
      return C1446 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "elevation",
        [_Location_column]: 11,
        [_Location_line]: 469,
        [_Location_file]: null
      });
    },
    get C1447() {
      return C1447 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 11,
        [_Location_line]: 470,
        [_Location_file]: null
      });
    },
    get C1448() {
      return C1448 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 471,
        [_Location_file]: null
      });
    },
    get C1445() {
      return C1445 = dart.constList([C1446 || CT.C1446, C1447 || CT.C1447, C1448 || CT.C1448], _LocationL());
    },
    get C1444() {
      return C1444 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1445 || CT.C1445,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 468,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1451() {
      return C1451 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "explicitChildNodes",
        [_Location_column]: 9,
        [_Location_line]: 467,
        [_Location_file]: null
      });
    },
    get C1452() {
      return C1452 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 468,
        [_Location_file]: null
      });
    },
    get C1450() {
      return C1450 = dart.constList([C1451 || CT.C1451, C1452 || CT.C1452], _LocationL());
    },
    get C1449() {
      return C1449 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1450 || CT.C1450,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 466,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1455() {
      return C1455 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animation",
        [_Location_column]: 7,
        [_Location_line]: 465,
        [_Location_file]: null
      });
    },
    get C1456() {
      return C1456 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 466,
        [_Location_file]: null
      });
    },
    get C1454() {
      return C1454 = dart.constList([C1455 || CT.C1455, C1456 || CT.C1456], _LocationL());
    },
    get C1453() {
      return C1453 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1454 || CT.C1454,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 464,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1459() {
      return C1459 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 7,
        [_Location_line]: 621,
        [_Location_file]: null
      });
    },
    get C1460() {
      return C1460 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 622,
        [_Location_file]: null
      });
    },
    get C1458() {
      return C1458 = dart.constList([C1459 || CT.C1459, C1460 || CT.C1460], _LocationL());
    },
    get C1457() {
      return C1457 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1458 || CT.C1458,
        [_Location_name]: null,
        [_Location_column]: 31,
        [_Location_line]: 620,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1463() {
      return C1463 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 7,
        [_Location_line]: 625,
        [_Location_file]: null
      });
    },
    get C1464() {
      return C1464 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 626,
        [_Location_file]: null
      });
    },
    get C1462() {
      return C1462 = dart.constList([C1463 || CT.C1463, C1464 || CT.C1464], _LocationL());
    },
    get C1461() {
      return C1461 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1462 || CT.C1462,
        [_Location_name]: null,
        [_Location_column]: 32,
        [_Location_line]: 624,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1467() {
      return C1467 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 13,
        [_Location_line]: 635,
        [_Location_file]: null
      });
    },
    get C1468() {
      return C1468 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 636,
        [_Location_file]: null
      });
    },
    get C1466() {
      return C1466 = dart.constList([C1467 || CT.C1467, C1468 || CT.C1468], _LocationL());
    },
    get C1465() {
      return C1465 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1466 || CT.C1466,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 634,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1471() {
      return C1471 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 11,
        [_Location_line]: 632,
        [_Location_file]: null
      });
    },
    get C1472() {
      return C1472 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 11,
        [_Location_line]: 633,
        [_Location_file]: null
      });
    },
    get C1473() {
      return C1473 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 634,
        [_Location_file]: null
      });
    },
    get C1470() {
      return C1470 = dart.constList([C1471 || CT.C1471, C1472 || CT.C1472, C1473 || CT.C1473], _LocationL());
    },
    get C1469() {
      return C1469 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1470 || CT.C1470,
        [_Location_name]: null,
        [_Location_column]: 33,
        [_Location_line]: 631,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1476() {
      return C1476 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alwaysIncludeSemantics",
        [_Location_column]: 19,
        [_Location_line]: 648,
        [_Location_file]: null
      });
    },
    get C1477() {
      return C1477 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 19,
        [_Location_line]: 649,
        [_Location_file]: null
      });
    },
    get C1478() {
      return C1478 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 19,
        [_Location_line]: 650,
        [_Location_file]: null
      });
    },
    get C1475() {
      return C1475 = dart.constList([C1476 || CT.C1476, C1477 || CT.C1477, C1478 || CT.C1478], _LocationL());
    },
    get C1474() {
      return C1474 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1475 || CT.C1475,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 647,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1481() {
      return C1481 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 17,
        [_Location_line]: 645,
        [_Location_file]: null
      });
    },
    get C1482() {
      return C1482 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 17,
        [_Location_line]: 646,
        [_Location_file]: null
      });
    },
    get C1483() {
      return C1483 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 647,
        [_Location_file]: null
      });
    },
    get C1480() {
      return C1480 = dart.constList([C1481 || CT.C1481, C1482 || CT.C1482, C1483 || CT.C1483], _LocationL());
    },
    get C1479() {
      return C1479 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1480 || CT.C1480,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 644,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1486() {
      return C1486 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 13,
        [_Location_line]: 641,
        [_Location_file]: null
      });
    },
    get C1485() {
      return C1485 = dart.constList([C1486 || CT.C1486], _LocationL());
    },
    get C1484() {
      return C1484 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1485 || CT.C1485,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 640,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1489() {
      return C1489 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alwaysIncludeSemantics",
        [_Location_column]: 23,
        [_Location_line]: 669,
        [_Location_file]: null
      });
    },
    get C1490() {
      return C1490 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 23,
        [_Location_line]: 670,
        [_Location_file]: null
      });
    },
    get C1491() {
      return C1491 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 23,
        [_Location_line]: 671,
        [_Location_file]: null
      });
    },
    get C1488() {
      return C1488 = dart.constList([C1489 || CT.C1489, C1490 || CT.C1490, C1491 || CT.C1491], _LocationL());
    },
    get C1487() {
      return C1487 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1488 || CT.C1488,
        [_Location_name]: null,
        [_Location_column]: 28,
        [_Location_line]: 668,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1494() {
      return C1494 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "heightFactor",
        [_Location_column]: 21,
        [_Location_line]: 665,
        [_Location_file]: null
      });
    },
    get C1495() {
      return C1495 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "widthFactor",
        [_Location_column]: 21,
        [_Location_line]: 666,
        [_Location_file]: null
      });
    },
    get C1496() {
      return C1496 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 21,
        [_Location_line]: 667,
        [_Location_file]: null
      });
    },
    get C1497() {
      return C1497 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 21,
        [_Location_line]: 668,
        [_Location_file]: null
      });
    },
    get C1493() {
      return C1493 = dart.constList([C1494 || CT.C1494, C1495 || CT.C1495, C1496 || CT.C1496, C1497 || CT.C1497], _LocationL());
    },
    get C1492() {
      return C1492 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1493 || CT.C1493,
        [_Location_name]: null,
        [_Location_column]: 19,
        [_Location_line]: 664,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1501() {
      return C1501 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 34,
        [_Location_line]: 674,
        [_Location_file]: null
      });
    },
    get C1500() {
      return C1500 = dart.constList([C1501 || CT.C1501], _LocationL());
    },
    get C1499() {
      return C1499 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1500 || CT.C1500,
        [_Location_name]: null,
        [_Location_column]: 25,
        [_Location_line]: 674,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1498() {
      return C1498 = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget__location]: C1499 || CT.C1499,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: null,
        [SizedBox_width]: 8
      });
    },
    get C1504() {
      return C1504 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 17,
        [_Location_line]: 662,
        [_Location_file]: null
      });
    },
    get C1503() {
      return C1503 = dart.constList([C1504 || CT.C1504], _LocationL());
    },
    get C1502() {
      return C1502 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1503 || CT.C1503,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 661,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1507() {
      return C1507 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 661,
        [_Location_file]: null
      });
    },
    get C1506() {
      return C1506 = dart.constList([C1507 || CT.C1507], _LocationL());
    },
    get C1505() {
      return C1505 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1506 || CT.C1506,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 660,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1510() {
      return C1510 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 13,
        [_Location_line]: 657,
        [_Location_file]: null
      });
    },
    get C1511() {
      return C1511 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 660,
        [_Location_file]: null
      });
    },
    get C1509() {
      return C1509 = dart.constList([C1510 || CT.C1510, C1511 || CT.C1511], _LocationL());
    },
    get C1508() {
      return C1508 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1509 || CT.C1509,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 656,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1512() {
      return C1512 = dart.const({
        __proto__: navigation_rail.NavigationRailLabelType.prototype,
        [_name$12]: "NavigationRailLabelType.none",
        index: 0
      });
    },
    get C1513() {
      return C1513 = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 8,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 8
      });
    },
    get C1516() {
      return C1516 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 26,
        [_Location_line]: 695,
        [_Location_file]: null
      });
    },
    get C1515() {
      return C1515 = dart.constList([C1516 || CT.C1516], _LocationL());
    },
    get C1514() {
      return C1514 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1515 || CT.C1515,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 695,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1519() {
      return C1519 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alwaysIncludeSemantics",
        [_Location_column]: 21,
        [_Location_line]: 702,
        [_Location_file]: null
      });
    },
    get C1520() {
      return C1520 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 21,
        [_Location_line]: 703,
        [_Location_file]: null
      });
    },
    get C1521() {
      return C1521 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 21,
        [_Location_line]: 704,
        [_Location_file]: null
      });
    },
    get C1518() {
      return C1518 = dart.constList([C1519 || CT.C1519, C1520 || CT.C1520, C1521 || CT.C1521], _LocationL());
    },
    get C1517() {
      return C1517 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1518 || CT.C1518,
        [_Location_name]: null,
        [_Location_column]: 26,
        [_Location_line]: 701,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1524() {
      return C1524 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 19,
        [_Location_line]: 698,
        [_Location_file]: null
      });
    },
    get C1525() {
      return C1525 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "heightFactor",
        [_Location_column]: 19,
        [_Location_line]: 699,
        [_Location_file]: null
      });
    },
    get C1526() {
      return C1526 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "widthFactor",
        [_Location_column]: 19,
        [_Location_line]: 700,
        [_Location_file]: null
      });
    },
    get C1527() {
      return C1527 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 19,
        [_Location_line]: 701,
        [_Location_file]: null
      });
    },
    get C1523() {
      return C1523 = dart.constList([C1524 || CT.C1524, C1525 || CT.C1525, C1526 || CT.C1526, C1527 || CT.C1527], _LocationL());
    },
    get C1522() {
      return C1522 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1523 || CT.C1523,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 697,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1530() {
      return C1530 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 26,
        [_Location_line]: 707,
        [_Location_file]: null
      });
    },
    get C1529() {
      return C1529 = dart.constList([C1530 || CT.C1530], _LocationL());
    },
    get C1528() {
      return C1528 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1529 || CT.C1529,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 707,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1533() {
      return C1533 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mainAxisSize",
        [_Location_column]: 15,
        [_Location_line]: 692,
        [_Location_file]: null
      });
    },
    get C1534() {
      return C1534 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mainAxisAlignment",
        [_Location_column]: 15,
        [_Location_line]: 693,
        [_Location_file]: null
      });
    },
    get C1535() {
      return C1535 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 15,
        [_Location_line]: 694,
        [_Location_file]: null
      });
    },
    get C1532() {
      return C1532 = dart.constList([C1533 || CT.C1533, C1534 || CT.C1534, C1535 || CT.C1535], _LocationL());
    },
    get C1531() {
      return C1531 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1532 || CT.C1532,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 691,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1538() {
      return C1538 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 691,
        [_Location_file]: null
      });
    },
    get C1537() {
      return C1537 = dart.constList([C1538 || CT.C1538], _LocationL());
    },
    get C1536() {
      return C1536 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1537 || CT.C1537,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 690,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1541() {
      return C1541 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 11,
        [_Location_line]: 685,
        [_Location_file]: null
      });
    },
    get C1542() {
      return C1542 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 11,
        [_Location_line]: 689,
        [_Location_file]: null
      });
    },
    get C1543() {
      return C1543 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 690,
        [_Location_file]: null
      });
    },
    get C1540() {
      return C1540 = dart.constList([C1541 || CT.C1541, C1542 || CT.C1542, C1543 || CT.C1543], _LocationL());
    },
    get C1539() {
      return C1539 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1540 || CT.C1540,
        [_Location_name]: null,
        [_Location_column]: 19,
        [_Location_line]: 684,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1544() {
      return C1544 = dart.const({
        __proto__: navigation_rail.NavigationRailLabelType.prototype,
        [_name$12]: "NavigationRailLabelType.selected",
        index: 1
      });
    },
    get C1548() {
      return C1548 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 30,
        [_Location_line]: 722,
        [_Location_file]: null
      });
    },
    get C1547() {
      return C1547 = dart.constList([C1548 || CT.C1548], _LocationL());
    },
    get C1546() {
      return C1546 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1547 || CT.C1547,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 722,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1545() {
      return C1545 = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget__location]: C1546 || CT.C1546,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 16,
        [SizedBox_width]: null
      });
    },
    get C1552() {
      return C1552 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 30,
        [_Location_line]: 725,
        [_Location_file]: null
      });
    },
    get C1551() {
      return C1551 = dart.constList([C1552 || CT.C1552], _LocationL());
    },
    get C1550() {
      return C1550 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1551 || CT.C1551,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 725,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1549() {
      return C1549 = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget__location]: C1550 || CT.C1550,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 16,
        [SizedBox_width]: null
      });
    },
    get C1555() {
      return C1555 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 13,
        [_Location_line]: 721,
        [_Location_file]: null
      });
    },
    get C1554() {
      return C1554 = dart.constList([C1555 || CT.C1555], _LocationL());
    },
    get C1553() {
      return C1553 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1554 || CT.C1554,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 720,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1558() {
      return C1558 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 11,
        [_Location_line]: 715,
        [_Location_file]: null
      });
    },
    get C1559() {
      return C1559 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 11,
        [_Location_line]: 719,
        [_Location_file]: null
      });
    },
    get C1560() {
      return C1560 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 720,
        [_Location_file]: null
      });
    },
    get C1557() {
      return C1557 = dart.constList([C1558 || CT.C1558, C1559 || CT.C1559, C1560 || CT.C1560], _LocationL());
    },
    get C1556() {
      return C1556 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1557 || CT.C1557,
        [_Location_name]: null,
        [_Location_column]: 19,
        [_Location_line]: 714,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1561() {
      return C1561 = dart.const({
        __proto__: navigation_rail.NavigationRailLabelType.prototype,
        [_name$12]: "NavigationRailLabelType.all",
        index: 2
      });
    },
    get C1564() {
      return C1564 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTap",
        [_Location_column]: 15,
        [_Location_line]: 742,
        [_Location_file]: null
      });
    },
    get C1565() {
      return C1565 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHover",
        [_Location_column]: 15,
        [_Location_line]: 743,
        [_Location_file]: null
      });
    },
    get C1566() {
      return C1566 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "highlightShape",
        [_Location_column]: 15,
        [_Location_line]: 744,
        [_Location_file]: null
      });
    },
    get C1567() {
      return C1567 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "borderRadius",
        [_Location_column]: 15,
        [_Location_line]: 745,
        [_Location_file]: null
      });
    },
    get C1568() {
      return C1568 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "containedInkWell",
        [_Location_column]: 15,
        [_Location_line]: 746,
        [_Location_file]: null
      });
    },
    get C1569() {
      return C1569 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "splashColor",
        [_Location_column]: 15,
        [_Location_line]: 747,
        [_Location_file]: null
      });
    },
    get C1570() {
      return C1570 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "hoverColor",
        [_Location_column]: 15,
        [_Location_line]: 748,
        [_Location_file]: null
      });
    },
    get C1571() {
      return C1571 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 749,
        [_Location_file]: null
      });
    },
    get C1563() {
      return C1563 = dart.constList([C1564 || CT.C1564, C1565 || CT.C1565, C1566 || CT.C1566, C1567 || CT.C1567, C1568 || CT.C1568, C1569 || CT.C1569, C1570 || CT.C1570, C1571 || CT.C1571], _LocationL());
    },
    get C1562() {
      return C1562 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1563 || CT.C1563,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 741,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1574() {
      return C1574 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "type",
        [_Location_column]: 13,
        [_Location_line]: 739,
        [_Location_file]: null
      });
    },
    get C1575() {
      return C1575 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipBehavior",
        [_Location_column]: 13,
        [_Location_line]: 740,
        [_Location_file]: null
      });
    },
    get C1576() {
      return C1576 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 741,
        [_Location_file]: null
      });
    },
    get C1573() {
      return C1573 = dart.constList([C1574 || CT.C1574, C1575 || CT.C1575, C1576 || CT.C1576], _LocationL());
    },
    get C1572() {
      return C1572 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1573 || CT.C1573,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 738,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1579() {
      return C1579 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "label",
        [_Location_column]: 13,
        [_Location_line]: 753,
        [_Location_file]: null
      });
    },
    get C1578() {
      return C1578 = dart.constList([C1579 || CT.C1579], _LocationL());
    },
    get C1577() {
      return C1577 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1578 || CT.C1578,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 752,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1582() {
      return C1582 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 9,
        [_Location_line]: 737,
        [_Location_file]: null
      });
    },
    get C1581() {
      return C1581 = dart.constList([C1582 || CT.C1582], _LocationL());
    },
    get C1580() {
      return C1580 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1581 || CT.C1581,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 736,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1585() {
      return C1585 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "container",
        [_Location_column]: 7,
        [_Location_line]: 734,
        [_Location_file]: null
      });
    },
    get C1586() {
      return C1586 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selected",
        [_Location_column]: 7,
        [_Location_line]: 735,
        [_Location_file]: null
      });
    },
    get C1587() {
      return C1587 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 736,
        [_Location_file]: null
      });
    },
    get C1584() {
      return C1584 = dart.constList([C1585 || CT.C1585, C1586 || CT.C1586, C1587 || CT.C1587], _LocationL());
    },
    get C1583() {
      return C1583 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1584 || CT.C1584,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 733,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1588() {
      return C1588 = dart.constList([C1512 || CT.C1512, C1544 || CT.C1544, C1561 || CT.C1561], NavigationRailLabelTypeL());
    },
    get C1592() {
      return C1592 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 41,
        [_Location_line]: 875,
        [_Location_file]: null
      });
    },
    get C1591() {
      return C1591 = dart.constList([C1592 || CT.C1592], _LocationL());
    },
    get C1590() {
      return C1590 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1591 || CT.C1591,
        [_Location_name]: null,
        [_Location_column]: 32,
        [_Location_line]: 875,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C1589() {
      return C1589 = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget__location]: C1590 || CT.C1590,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 8,
        [SizedBox_width]: null
      });
    },
    get C1593() {
      return C1593 = dart.const({
        __proto__: navigation_rail_theme.NavigationRailThemeData.prototype,
        [NavigationRailThemeData_labelType]: null,
        [NavigationRailThemeData_groupAlignment]: null,
        [NavigationRailThemeData_selectedIconTheme]: null,
        [NavigationRailThemeData_unselectedIconTheme]: null,
        [NavigationRailThemeData_selectedLabelTextStyle]: null,
        [NavigationRailThemeData_unselectedLabelTextStyle]: null,
        [NavigationRailThemeData_elevation]: null,
        [NavigationRailThemeData_backgroundColor]: null
      });
    },
    get C1596() {
      return C1596 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 73,
        [_Location_line]: 213,
        [_Location_file]: null
      });
    },
    get C1597() {
      return C1597 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 85,
        [_Location_line]: 213,
        [_Location_file]: null
      });
    },
    get C1595() {
      return C1595 = dart.constList([C1596 || CT.C1596, C1597 || CT.C1597], _LocationL());
    },
    get C1594() {
      return C1594 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1595 || CT.C1595,
        [_Location_name]: null,
        [_Location_column]: 53,
        [_Location_line]: 213,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/navigation_rail_theme.dart"
      });
    },
    get C1600() {
      return C1600 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "foregroundPainter",
        [_Location_column]: 7,
        [_Location_line]: 232,
        [_Location_file]: null
      });
    },
    get C1599() {
      return C1599 = dart.constList([C1600 || CT.C1600, C893 || CT.C893], _LocationL());
    },
    get C1598() {
      return C1598 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1599 || CT.C1599,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 231,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1601() {
      return C1601 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 15000
      });
    },
    get C1604() {
      return C1604 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "transform",
        [_Location_column]: 7,
        [_Location_line]: 279,
        [_Location_file]: null
      });
    },
    get C1605() {
      return C1605 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 280,
        [_Location_file]: null
      });
    },
    get C1603() {
      return C1603 = dart.constList([C1604 || CT.C1604, C1605 || CT.C1605], _LocationL());
    },
    get C1602() {
      return C1602 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1603 || CT.C1603,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 278,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1608() {
      return C1608 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 18,
        [_Location_line]: 381,
        [_Location_file]: null
      });
    },
    get C1609() {
      return C1609 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 11,
        [_Location_line]: 382,
        [_Location_file]: null
      });
    },
    get C1610() {
      return C1610 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textAlign",
        [_Location_column]: 11,
        [_Location_line]: 383,
        [_Location_file]: null
      });
    },
    get C1611() {
      return C1611 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "overflow",
        [_Location_column]: 11,
        [_Location_line]: 384,
        [_Location_file]: null
      });
    },
    get C1612() {
      return C1612 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxLines",
        [_Location_column]: 11,
        [_Location_line]: 385,
        [_Location_file]: null
      });
    },
    get C1607() {
      return C1607 = dart.constList([C1608 || CT.C1608, C1609 || CT.C1609, C1610 || CT.C1610, C1611 || CT.C1611, C1612 || CT.C1612], _LocationL());
    },
    get C1606() {
      return C1606 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1607 || CT.C1607,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 380,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1615() {
      return C1615 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 9,
        [_Location_line]: 379,
        [_Location_file]: null
      });
    },
    get C1616() {
      return C1616 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 380,
        [_Location_file]: null
      });
    },
    get C1614() {
      return C1614 = dart.constList([C1615 || CT.C1615, C1616 || CT.C1616], _LocationL());
    },
    get C1613() {
      return C1613 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1614 || CT.C1614,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 378,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1619() {
      return C1619 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "container",
        [_Location_column]: 7,
        [_Location_line]: 377,
        [_Location_file]: null
      });
    },
    get C1620() {
      return C1620 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 378,
        [_Location_file]: null
      });
    },
    get C1618() {
      return C1618 = dart.constList([C1619 || CT.C1619, C1620 || CT.C1620], _LocationL());
    },
    get C1617() {
      return C1617 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1618 || CT.C1618,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 376,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1621() {
      return C1621 = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: -0.25,
        [OffsetBase__dx]: 0
      });
    },
    get C1624() {
      return C1624 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 20,
        [_Location_line]: 404,
        [_Location_file]: null
      });
    },
    get C1625() {
      return C1625 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 13,
        [_Location_line]: 405,
        [_Location_file]: null
      });
    },
    get C1626() {
      return C1626 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textAlign",
        [_Location_column]: 13,
        [_Location_line]: 406,
        [_Location_file]: null
      });
    },
    get C1627() {
      return C1627 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "overflow",
        [_Location_column]: 13,
        [_Location_line]: 407,
        [_Location_file]: null
      });
    },
    get C1628() {
      return C1628 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxLines",
        [_Location_column]: 13,
        [_Location_line]: 408,
        [_Location_file]: null
      });
    },
    get C1623() {
      return C1623 = dart.constList([C1624 || CT.C1624, C1625 || CT.C1625, C1626 || CT.C1626, C1627 || CT.C1627, C1628 || CT.C1628], _LocationL());
    },
    get C1622() {
      return C1622 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1623 || CT.C1623,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 403,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1631() {
      return C1631 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "translation",
        [_Location_column]: 11,
        [_Location_line]: 399,
        [_Location_file]: null
      });
    },
    get C1632() {
      return C1632 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 403,
        [_Location_file]: null
      });
    },
    get C1630() {
      return C1630 = dart.constList([C1631 || CT.C1631, C1632 || CT.C1632], _LocationL());
    },
    get C1629() {
      return C1629 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1630 || CT.C1630,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 398,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1635() {
      return C1635 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 9,
        [_Location_line]: 397,
        [_Location_file]: null
      });
    },
    get C1636() {
      return C1636 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 398,
        [_Location_file]: null
      });
    },
    get C1634() {
      return C1634 = dart.constList([C1635 || CT.C1635, C1636 || CT.C1636], _LocationL());
    },
    get C1633() {
      return C1633 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1634 || CT.C1634,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 396,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1639() {
      return C1639 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "container",
        [_Location_column]: 7,
        [_Location_line]: 394,
        [_Location_file]: null
      });
    },
    get C1640() {
      return C1640 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "liveRegion",
        [_Location_column]: 7,
        [_Location_line]: 395,
        [_Location_file]: null
      });
    },
    get C1641() {
      return C1641 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 396,
        [_Location_file]: null
      });
    },
    get C1638() {
      return C1638 = dart.constList([C1639 || CT.C1639, C1640 || CT.C1640, C1641 || CT.C1641], _LocationL());
    },
    get C1637() {
      return C1637 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1638 || CT.C1638,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 393,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1644() {
      return C1644 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 13,
        [_Location_line]: 447,
        [_Location_file]: null
      });
    },
    get C1645() {
      return C1645 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 448,
        [_Location_file]: null
      });
    },
    get C1643() {
      return C1643 = dart.constList([C1644 || CT.C1644, C1645 || CT.C1645], _LocationL());
    },
    get C1642() {
      return C1642 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1643 || CT.C1643,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 446,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1648() {
      return C1648 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 9,
        [_Location_line]: 445,
        [_Location_file]: null
      });
    },
    get C1647() {
      return C1647 = dart.constList([C1648 || CT.C1648], _LocationL());
    },
    get C1646() {
      return C1646 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1647 || CT.C1647,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 444,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1651() {
      return C1651 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 13,
        [_Location_line]: 460,
        [_Location_file]: null
      });
    },
    get C1652() {
      return C1652 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 461,
        [_Location_file]: null
      });
    },
    get C1650() {
      return C1650 = dart.constList([C1651 || CT.C1651, C1652 || CT.C1652], _LocationL());
    },
    get C1649() {
      return C1649 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1650 || CT.C1650,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 459,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1655() {
      return C1655 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 9,
        [_Location_line]: 457,
        [_Location_file]: null
      });
    },
    get C1654() {
      return C1654 = dart.constList([C1655 || CT.C1655], _LocationL());
    },
    get C1653() {
      return C1653 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1654 || CT.C1654,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 456,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1657() {
      return C1657 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C55 || CT.C55,
        [_Location_name]: null,
        [_Location_column]: 31,
        [_Location_line]: 315,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1656() {
      return C1656 = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget__location]: C1657 || CT.C1657,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: null,
        [SizedBox_width]: null
      });
    },
    get C1658() {
      return C1658 = dart.const({
        __proto__: input_decorator.FloatingLabelBehavior.prototype,
        [_name$13]: "FloatingLabelBehavior.never",
        index: 0
      });
    },
    get C1659() {
      return C1659 = dart.const({
        __proto__: input_decorator.FloatingLabelBehavior.prototype,
        [_name$13]: "FloatingLabelBehavior.auto",
        index: 1
      });
    },
    get C1660() {
      return C1660 = dart.const({
        __proto__: input_decorator.FloatingLabelBehavior.prototype,
        [_name$13]: "FloatingLabelBehavior.always",
        index: 2
      });
    },
    get C1661() {
      return C1661 = dart.constList([C1658 || CT.C1658, C1659 || CT.C1659, C1660 || CT.C1660], FloatingLabelBehaviorL());
    },
    get C1662() {
      return C1662 = dart.const({
        __proto__: input_decorator._DecorationSlot.prototype,
        [_name$13]: "_DecorationSlot.icon",
        index: 0
      });
    },
    get C1663() {
      return C1663 = dart.const({
        __proto__: input_decorator._DecorationSlot.prototype,
        [_name$13]: "_DecorationSlot.input",
        index: 1
      });
    },
    get C1664() {
      return C1664 = dart.const({
        __proto__: input_decorator._DecorationSlot.prototype,
        [_name$13]: "_DecorationSlot.label",
        index: 2
      });
    },
    get C1665() {
      return C1665 = dart.const({
        __proto__: input_decorator._DecorationSlot.prototype,
        [_name$13]: "_DecorationSlot.hint",
        index: 3
      });
    },
    get C1666() {
      return C1666 = dart.const({
        __proto__: input_decorator._DecorationSlot.prototype,
        [_name$13]: "_DecorationSlot.prefix",
        index: 4
      });
    },
    get C1667() {
      return C1667 = dart.const({
        __proto__: input_decorator._DecorationSlot.prototype,
        [_name$13]: "_DecorationSlot.suffix",
        index: 5
      });
    },
    get C1668() {
      return C1668 = dart.const({
        __proto__: input_decorator._DecorationSlot.prototype,
        [_name$13]: "_DecorationSlot.prefixIcon",
        index: 6
      });
    },
    get C1669() {
      return C1669 = dart.const({
        __proto__: input_decorator._DecorationSlot.prototype,
        [_name$13]: "_DecorationSlot.suffixIcon",
        index: 7
      });
    },
    get C1670() {
      return C1670 = dart.const({
        __proto__: input_decorator._DecorationSlot.prototype,
        [_name$13]: "_DecorationSlot.helperError",
        index: 8
      });
    },
    get C1671() {
      return C1671 = dart.const({
        __proto__: input_decorator._DecorationSlot.prototype,
        [_name$13]: "_DecorationSlot.counter",
        index: 9
      });
    },
    get C1672() {
      return C1672 = dart.const({
        __proto__: input_decorator._DecorationSlot.prototype,
        [_name$13]: "_DecorationSlot.container",
        index: 10
      });
    },
    get C1673() {
      return C1673 = dart.constList([C1662 || CT.C1662, C1663 || CT.C1663, C1664 || CT.C1664, C1665 || CT.C1665, C1666 || CT.C1666, C1667 || CT.C1667, C1668 || CT.C1668, C1669 || CT.C1669, C1670 || CT.C1670, C1671 || CT.C1671, C1672 || CT.C1672], _DecorationSlotL());
    },
    get C1676() {
      return C1676 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 30,
        [_Location_line]: 1751,
        [_Location_file]: null
      });
    },
    get C1677() {
      return C1677 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 36,
        [_Location_line]: 1751,
        [_Location_file]: null
      });
    },
    get C1675() {
      return C1675 = dart.constList([C1676 || CT.C1676, C1677 || CT.C1677], _LocationL());
    },
    get C1674() {
      return C1674 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1675 || CT.C1675,
        [_Location_name]: null,
        [_Location_column]: 25,
        [_Location_line]: 1751,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1680() {
      return C1680 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "duration",
        [_Location_column]: 9,
        [_Location_line]: 1748,
        [_Location_file]: null
      });
    },
    get C1681() {
      return C1681 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "curve",
        [_Location_column]: 9,
        [_Location_line]: 1749,
        [_Location_file]: null
      });
    },
    get C1682() {
      return C1682 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 9,
        [_Location_line]: 1750,
        [_Location_file]: null
      });
    },
    get C1683() {
      return C1683 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 1751,
        [_Location_file]: null
      });
    },
    get C1679() {
      return C1679 = dart.constList([C1680 || CT.C1680, C1681 || CT.C1681, C1682 || CT.C1682, C1683 || CT.C1683], _LocationL());
    },
    get C1678() {
      return C1678 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1679 || CT.C1679,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 1747,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1684() {
      return C1684 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 452984831
      });
    },
    get C1685() {
      return C1685 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 234881023
      });
    },
    get C1686() {
      return C1686 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 167772160
      });
    },
    get C1687() {
      return C1687 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 83886080
      });
    },
    get C1689() {
      return C1689 = dart.const({
        __proto__: borders.BorderSide.prototype,
        [BorderSide_style]: C999 || CT.C999,
        [BorderSide_width]: 1,
        [BorderSide_color]: C384 || CT.C384
      });
    },
    get C1690() {
      return C1690 = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [BorderRadius_bottomRight]: C1004 || CT.C1004,
        [BorderRadius_bottomLeft]: C1004 || CT.C1004,
        [BorderRadius_topRight]: C261 || CT.C261,
        [BorderRadius_topLeft]: C261 || CT.C261
      });
    },
    get C1688() {
      return C1688 = dart.const({
        __proto__: input_border.UnderlineInputBorder.prototype,
        [InputBorder_borderSide]: C1689 || CT.C1689,
        [UnderlineInputBorder_borderRadius]: C1690 || CT.C1690
      });
    },
    get C1693() {
      return C1693 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 20,
        [_Location_line]: 2175,
        [_Location_file]: null
      });
    },
    get C1694() {
      return C1694 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 9,
        [_Location_line]: 2176,
        [_Location_file]: null
      });
    },
    get C1695() {
      return C1695 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "overflow",
        [_Location_column]: 9,
        [_Location_line]: 2177,
        [_Location_file]: null
      });
    },
    get C1696() {
      return C1696 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textAlign",
        [_Location_column]: 9,
        [_Location_line]: 2178,
        [_Location_file]: null
      });
    },
    get C1697() {
      return C1697 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxLines",
        [_Location_column]: 9,
        [_Location_line]: 2179,
        [_Location_file]: null
      });
    },
    get C1692() {
      return C1692 = dart.constList([C1693 || CT.C1693, C1694 || CT.C1694, C1695 || CT.C1695, C1696 || CT.C1696, C1697 || CT.C1697], _LocationL());
    },
    get C1691() {
      return C1691 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1692 || CT.C1692,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 2174,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1700() {
      return C1700 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 7,
        [_Location_line]: 2170,
        [_Location_file]: null
      });
    },
    get C1701() {
      return C1701 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "duration",
        [_Location_column]: 7,
        [_Location_line]: 2171,
        [_Location_file]: null
      });
    },
    get C1702() {
      return C1702 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "curve",
        [_Location_column]: 7,
        [_Location_line]: 2172,
        [_Location_file]: null
      });
    },
    get C1703() {
      return C1703 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alwaysIncludeSemantics",
        [_Location_column]: 7,
        [_Location_line]: 2173,
        [_Location_file]: null
      });
    },
    get C1704() {
      return C1704 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 2174,
        [_Location_file]: null
      });
    },
    get C1699() {
      return C1699 = dart.constList([C1700 || CT.C1700, C1701 || CT.C1701, C1702 || CT.C1702, C1703 || CT.C1703, C1704 || CT.C1704], _LocationL());
    },
    get C1698() {
      return C1698 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1699 || CT.C1699,
        [_Location_name]: null,
        [_Location_column]: 62,
        [_Location_line]: 2169,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1707() {
      return C1707 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "border",
        [_Location_column]: 7,
        [_Location_line]: 2194,
        [_Location_file]: null
      });
    },
    get C1708() {
      return C1708 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "gap",
        [_Location_column]: 7,
        [_Location_line]: 2195,
        [_Location_file]: null
      });
    },
    get C1709() {
      return C1709 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "gapAnimation",
        [_Location_column]: 7,
        [_Location_line]: 2196,
        [_Location_file]: null
      });
    },
    get C1710() {
      return C1710 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "fillColor",
        [_Location_column]: 7,
        [_Location_line]: 2197,
        [_Location_file]: null
      });
    },
    get C1711() {
      return C1711 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "hoverColor",
        [_Location_column]: 7,
        [_Location_line]: 2198,
        [_Location_file]: null
      });
    },
    get C1712() {
      return C1712 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isHovering",
        [_Location_column]: 7,
        [_Location_line]: 2199,
        [_Location_file]: null
      });
    },
    get C1706() {
      return C1706 = dart.constList([C1707 || CT.C1707, C1708 || CT.C1708, C1709 || CT.C1709, C1710 || CT.C1710, C1711 || CT.C1711, C1712 || CT.C1712], _LocationL());
    },
    get C1705() {
      return C1705 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1706 || CT.C1706,
        [_Location_name]: null,
        [_Location_column]: 30,
        [_Location_line]: 2193,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1715() {
      return C1715 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 24,
        [_Location_line]: 2221,
        [_Location_file]: null
      });
    },
    get C1716() {
      return C1716 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "overflow",
        [_Location_column]: 13,
        [_Location_line]: 2222,
        [_Location_file]: null
      });
    },
    get C1717() {
      return C1717 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textAlign",
        [_Location_column]: 13,
        [_Location_line]: 2223,
        [_Location_file]: null
      });
    },
    get C1714() {
      return C1714 = dart.constList([C1715 || CT.C1715, C1716 || CT.C1716, C1717 || CT.C1717], _LocationL());
    },
    get C1713() {
      return C1713 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1714 || CT.C1714,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 2220,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1720() {
      return C1720 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "duration",
        [_Location_column]: 11,
        [_Location_line]: 2215,
        [_Location_file]: null
      });
    },
    get C1721() {
      return C1721 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "curve",
        [_Location_column]: 11,
        [_Location_line]: 2216,
        [_Location_file]: null
      });
    },
    get C1722() {
      return C1722 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 11,
        [_Location_line]: 2217,
        [_Location_file]: null
      });
    },
    get C1723() {
      return C1723 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 2220,
        [_Location_file]: null
      });
    },
    get C1719() {
      return C1719 = dart.constList([C1720 || CT.C1720, C1721 || CT.C1721, C1722 || CT.C1722, C1723 || CT.C1723], _LocationL());
    },
    get C1718() {
      return C1718 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1719 || CT.C1719,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 2214,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1726() {
      return C1726 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "duration",
        [_Location_column]: 9,
        [_Location_line]: 2211,
        [_Location_file]: null
      });
    },
    get C1727() {
      return C1727 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "curve",
        [_Location_column]: 9,
        [_Location_line]: 2212,
        [_Location_file]: null
      });
    },
    get C1728() {
      return C1728 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 9,
        [_Location_line]: 2213,
        [_Location_file]: null
      });
    },
    get C1729() {
      return C1729 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 2214,
        [_Location_file]: null
      });
    },
    get C1725() {
      return C1725 = dart.constList([C1726 || CT.C1726, C1727 || CT.C1727, C1728 || CT.C1728, C1729 || CT.C1729], _LocationL());
    },
    get C1724() {
      return C1724 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1725 || CT.C1725,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 2210,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1732() {
      return C1732 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animation",
        [_Location_column]: 7,
        [_Location_line]: 2209,
        [_Location_file]: null
      });
    },
    get C1733() {
      return C1733 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 2210,
        [_Location_file]: null
      });
    },
    get C1731() {
      return C1731 = dart.constList([C1732 || CT.C1732, C1733 || CT.C1733], _LocationL());
    },
    get C1730() {
      return C1730 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1731 || CT.C1731,
        [_Location_name]: null,
        [_Location_column]: 64,
        [_Location_line]: 2208,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1736() {
      return C1736 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "labelIsFloating",
        [_Location_column]: 9,
        [_Location_line]: 2231,
        [_Location_file]: null
      });
    },
    get C1737() {
      return C1737 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "text",
        [_Location_column]: 9,
        [_Location_line]: 2232,
        [_Location_file]: null
      });
    },
    get C1738() {
      return C1738 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 9,
        [_Location_line]: 2233,
        [_Location_file]: null
      });
    },
    get C1739() {
      return C1739 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 2234,
        [_Location_file]: null
      });
    },
    get C1735() {
      return C1735 = dart.constList([C1736 || CT.C1736, C1737 || CT.C1737, C1738 || CT.C1738, C1739 || CT.C1739], _LocationL());
    },
    get C1734() {
      return C1734 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1735 || CT.C1735,
        [_Location_name]: null,
        [_Location_column]: 7,
        [_Location_line]: 2230,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1742() {
      return C1742 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "labelIsFloating",
        [_Location_column]: 9,
        [_Location_line]: 2239,
        [_Location_file]: null
      });
    },
    get C1743() {
      return C1743 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "text",
        [_Location_column]: 9,
        [_Location_line]: 2240,
        [_Location_file]: null
      });
    },
    get C1744() {
      return C1744 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 9,
        [_Location_line]: 2241,
        [_Location_file]: null
      });
    },
    get C1745() {
      return C1745 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 2242,
        [_Location_file]: null
      });
    },
    get C1741() {
      return C1741 = dart.constList([C1742 || CT.C1742, C1743 || CT.C1743, C1744 || CT.C1744, C1745 || CT.C1745], _LocationL());
    },
    get C1740() {
      return C1740 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1741 || CT.C1741,
        [_Location_name]: null,
        [_Location_column]: 7,
        [_Location_line]: 2238,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1746() {
      return C1746 = dart.const({
        __proto__: edge_insets.EdgeInsetsDirectional.prototype,
        [EdgeInsetsDirectional_bottom]: 0,
        [EdgeInsetsDirectional_end]: 16,
        [EdgeInsetsDirectional_top]: 0,
        [EdgeInsetsDirectional_start]: 0
      });
    },
    get C1749() {
      return C1749 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 9,
        [_Location_line]: 2252,
        [_Location_file]: null
      });
    },
    get C1750() {
      return C1750 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 2253,
        [_Location_file]: null
      });
    },
    get C1748() {
      return C1748 = dart.constList([C1749 || CT.C1749, C1750 || CT.C1750], _LocationL());
    },
    get C1747() {
      return C1747 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1748 || CT.C1748,
        [_Location_name]: null,
        [_Location_column]: 7,
        [_Location_line]: 2251,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1753() {
      return C1753 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 11,
        [_Location_line]: 2267,
        [_Location_file]: null
      });
    },
    get C1754() {
      return C1754 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 2273,
        [_Location_file]: null
      });
    },
    get C1752() {
      return C1752 = dart.constList([C1753 || CT.C1753, C1754 || CT.C1754], _LocationL());
    },
    get C1751() {
      return C1751 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1752 || CT.C1752,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 2266,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1757() {
      return C1757 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "widthFactor",
        [_Location_column]: 9,
        [_Location_line]: 2264,
        [_Location_file]: null
      });
    },
    get C1758() {
      return C1758 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "heightFactor",
        [_Location_column]: 9,
        [_Location_line]: 2265,
        [_Location_file]: null
      });
    },
    get C1759() {
      return C1759 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 2266,
        [_Location_file]: null
      });
    },
    get C1756() {
      return C1756 = dart.constList([C1757 || CT.C1757, C1758 || CT.C1758, C1759 || CT.C1759], _LocationL());
    },
    get C1755() {
      return C1755 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1756 || CT.C1756,
        [_Location_name]: null,
        [_Location_column]: 7,
        [_Location_line]: 2263,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1762() {
      return C1762 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 11,
        [_Location_line]: 2288,
        [_Location_file]: null
      });
    },
    get C1763() {
      return C1763 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 2294,
        [_Location_file]: null
      });
    },
    get C1761() {
      return C1761 = dart.constList([C1762 || CT.C1762, C1763 || CT.C1763], _LocationL());
    },
    get C1760() {
      return C1760 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1761 || CT.C1761,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 2287,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1766() {
      return C1766 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "widthFactor",
        [_Location_column]: 9,
        [_Location_line]: 2285,
        [_Location_file]: null
      });
    },
    get C1767() {
      return C1767 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "heightFactor",
        [_Location_column]: 9,
        [_Location_line]: 2286,
        [_Location_file]: null
      });
    },
    get C1768() {
      return C1768 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 2287,
        [_Location_file]: null
      });
    },
    get C1765() {
      return C1765 = dart.constList([C1766 || CT.C1766, C1767 || CT.C1767, C1768 || CT.C1768], _LocationL());
    },
    get C1764() {
      return C1764 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1765 || CT.C1765,
        [_Location_name]: null,
        [_Location_column]: 7,
        [_Location_line]: 2284,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1771() {
      return C1771 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textAlign",
        [_Location_column]: 7,
        [_Location_line]: 2305,
        [_Location_file]: null
      });
    },
    get C1772() {
      return C1772 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "helperText",
        [_Location_column]: 7,
        [_Location_line]: 2306,
        [_Location_file]: null
      });
    },
    get C1773() {
      return C1773 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "helperStyle",
        [_Location_column]: 7,
        [_Location_line]: 2307,
        [_Location_file]: null
      });
    },
    get C1774() {
      return C1774 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "helperMaxLines",
        [_Location_column]: 7,
        [_Location_line]: 2308,
        [_Location_file]: null
      });
    },
    get C1775() {
      return C1775 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "errorText",
        [_Location_column]: 7,
        [_Location_line]: 2309,
        [_Location_file]: null
      });
    },
    get C1776() {
      return C1776 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "errorStyle",
        [_Location_column]: 7,
        [_Location_line]: 2310,
        [_Location_file]: null
      });
    },
    get C1777() {
      return C1777 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "errorMaxLines",
        [_Location_column]: 7,
        [_Location_line]: 2311,
        [_Location_file]: null
      });
    },
    get C1770() {
      return C1770 = dart.constList([C1771 || CT.C1771, C1772 || CT.C1772, C1773 || CT.C1773, C1774 || CT.C1774, C1775 || CT.C1775, C1776 || CT.C1776, C1777 || CT.C1777], _LocationL());
    },
    get C1769() {
      return C1769 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1770 || CT.C1770,
        [_Location_name]: null,
        [_Location_column]: 32,
        [_Location_line]: 2304,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1780() {
      return C1780 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 22,
        [_Location_line]: 2322,
        [_Location_file]: null
      });
    },
    get C1781() {
      return C1781 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 11,
        [_Location_line]: 2323,
        [_Location_file]: null
      });
    },
    get C1782() {
      return C1782 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "overflow",
        [_Location_column]: 11,
        [_Location_line]: 2324,
        [_Location_file]: null
      });
    },
    get C1783() {
      return C1783 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "semanticsLabel",
        [_Location_column]: 11,
        [_Location_line]: 2325,
        [_Location_file]: null
      });
    },
    get C1779() {
      return C1779 = dart.constList([C1780 || CT.C1780, C1781 || CT.C1781, C1782 || CT.C1782, C1783 || CT.C1783], _LocationL());
    },
    get C1778() {
      return C1778 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1779 || CT.C1779,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 2321,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1786() {
      return C1786 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "container",
        [_Location_column]: 9,
        [_Location_line]: 2319,
        [_Location_file]: null
      });
    },
    get C1787() {
      return C1787 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "liveRegion",
        [_Location_column]: 9,
        [_Location_line]: 2320,
        [_Location_file]: null
      });
    },
    get C1788() {
      return C1788 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 2321,
        [_Location_file]: null
      });
    },
    get C1785() {
      return C1785 = dart.constList([C1786 || CT.C1786, C1787 || CT.C1787, C1788 || CT.C1788], _LocationL());
    },
    get C1784() {
      return C1784 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1785 || CT.C1785,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 2318,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1789() {
      return C1789 = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 8,
        [EdgeInsets_right]: 12,
        [EdgeInsets_top]: 8,
        [EdgeInsets_left]: 12
      });
    },
    get C1790() {
      return C1790 = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 12,
        [EdgeInsets_right]: 12,
        [EdgeInsets_top]: 12,
        [EdgeInsets_left]: 12
      });
    },
    get C1791() {
      return C1791 = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 8,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 8,
        [EdgeInsets_left]: 0
      });
    },
    get C1792() {
      return C1792 = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 12,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 12,
        [EdgeInsets_left]: 0
      });
    },
    get C1793() {
      return C1793 = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 12,
        [EdgeInsets_right]: 12,
        [EdgeInsets_top]: 20,
        [EdgeInsets_left]: 12
      });
    },
    get C1794() {
      return C1794 = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 16,
        [EdgeInsets_right]: 12,
        [EdgeInsets_top]: 24,
        [EdgeInsets_left]: 12
      });
    },
    get C1797() {
      return C1797 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "decoration",
        [_Location_column]: 7,
        [_Location_line]: 2363,
        [_Location_file]: null
      });
    },
    get C1798() {
      return C1798 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textDirection",
        [_Location_column]: 7,
        [_Location_line]: 2386,
        [_Location_file]: null
      });
    },
    get C1799() {
      return C1799 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textBaseline",
        [_Location_column]: 7,
        [_Location_line]: 2387,
        [_Location_file]: null
      });
    },
    get C1800() {
      return C1800 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textAlignVertical",
        [_Location_column]: 7,
        [_Location_line]: 2388,
        [_Location_file]: null
      });
    },
    get C1801() {
      return C1801 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isFocused",
        [_Location_column]: 7,
        [_Location_line]: 2389,
        [_Location_file]: null
      });
    },
    get C1802() {
      return C1802 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "expands",
        [_Location_column]: 7,
        [_Location_line]: 2390,
        [_Location_file]: null
      });
    },
    get C1796() {
      return C1796 = dart.constList([C1797 || CT.C1797, C1798 || CT.C1798, C1799 || CT.C1799, C1800 || CT.C1800, C1801 || CT.C1801, C1802 || CT.C1802], _LocationL());
    },
    get C1795() {
      return C1795 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1796 || CT.C1796,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 2362,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C1803() {
      return C1803 = dart.const({
        __proto__: input_border._NoInputBorder.prototype,
        [InputBorder_borderSide]: C382 || CT.C382
      });
    },
    get C1804() {
      return C1804 = dart.const({
        __proto__: input_decorator.InputDecorationTheme.prototype,
        [InputDecorationTheme_alignLabelWithHint]: false,
        [InputDecorationTheme_border]: null,
        [InputDecorationTheme_enabledBorder]: null,
        [InputDecorationTheme_disabledBorder]: null,
        [InputDecorationTheme_focusedErrorBorder]: null,
        [InputDecorationTheme_focusedBorder]: null,
        [InputDecorationTheme_errorBorder]: null,
        [InputDecorationTheme_hoverColor]: null,
        [InputDecorationTheme_focusColor]: null,
        [InputDecorationTheme_fillColor]: null,
        [InputDecorationTheme_filled]: false,
        [InputDecorationTheme_counterStyle]: null,
        [InputDecorationTheme_suffixStyle]: null,
        [InputDecorationTheme_prefixStyle]: null,
        [InputDecorationTheme_isCollapsed]: false,
        [InputDecorationTheme_contentPadding]: null,
        [InputDecorationTheme_isDense]: false,
        [InputDecorationTheme_floatingLabelBehavior]: C1659 || CT.C1659,
        [InputDecorationTheme_hasFloatingPlaceholder]: true,
        [InputDecorationTheme_errorMaxLines]: null,
        [InputDecorationTheme_errorStyle]: null,
        [InputDecorationTheme_hintStyle]: null,
        [InputDecorationTheme_helperMaxLines]: null,
        [InputDecorationTheme_helperStyle]: null,
        [InputDecorationTheme_labelStyle]: null
      });
    },
    get C1805() {
      return C1805 = dart.const({
        __proto__: ink_splash._InkSplashFactory.prototype
      });
    },
    get C1806() {
      return C1806 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 1000000
      });
    },
    get C1807() {
      return C1807 = dart.fn(text_style.TextStyle.lerp, TextStyleLAndTextStyleLAnddoubleLToTextStyleL());
    },
    get C1808() {
      return C1808 = dart.fn(ui.Color.lerp, ColorNAndColorNAnddoubleToColorN());
    },
    get C1809() {
      return C1809 = dart.fn(ui.lerpDouble, numNAndnumNAnddoubleTodoubleN());
    },
    get C1810() {
      return C1810 = dart.fn(edge_insets.EdgeInsetsGeometry.lerp, EdgeInsetsGeometryLAndEdgeInsetsGeometryLAnddoubleLToEdgeInsetsGeometryL());
    },
    get C1811() {
      return C1811 = dart.fn(ui.Size.lerp, SizeNAndSizeNAnddoubleToSizeN());
    },
    get C1812() {
      return C1812 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1405 || CT.C1405,
        [_Location_name]: null,
        [_Location_column]: 53,
        [_Location_line]: 122,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/elevated_button_theme.dart"
      });
    },
    get C1815() {
      return C1815 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 66,
        [_Location_line]: 172,
        [_Location_file]: null
      });
    },
    get C1816() {
      return C1816 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 78,
        [_Location_line]: 172,
        [_Location_file]: null
      });
    },
    get C1814() {
      return C1814 = dart.constList([C1815 || CT.C1815, C1816 || CT.C1816], _LocationL());
    },
    get C1813() {
      return C1813 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1814 || CT.C1814,
        [_Location_name]: null,
        [_Location_column]: 53,
        [_Location_line]: 172,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/divider_theme.dart"
      });
    },
    get C1819() {
      return C1819 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 63,
        [_Location_line]: 97,
        [_Location_file]: null
      });
    },
    get C1820() {
      return C1820 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 75,
        [_Location_line]: 97,
        [_Location_file]: null
      });
    },
    get C1818() {
      return C1818 = dart.constList([C1819 || CT.C1819, C1820 || CT.C1820], _LocationL());
    },
    get C1817() {
      return C1817 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1818 || CT.C1818,
        [_Location_name]: null,
        [_Location_column]: 53,
        [_Location_line]: 97,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/chip_theme.dart"
      });
    },
    get C1821() {
      return C1821 = dart.const({
        __proto__: box_border.BoxShape.prototype,
        [_name$14]: "BoxShape.rectangle",
        index: 0
      });
    },
    get C1822() {
      return C1822 = dart.const({
        __proto__: box_border.BoxShape.prototype,
        [_name$14]: "BoxShape.circle",
        index: 1
      });
    },
    get C1823() {
      return C1823 = dart.const({
        __proto__: semantics_event.TapSemanticEvent.prototype,
        [SemanticsEvent_type]: "tap"
      });
    },
    get C1824() {
      return C1824 = dart.const({
        __proto__: semantics_event.LongPressSemanticsEvent.prototype,
        [SemanticsEvent_type]: "longPress"
      });
    },
    get C1827() {
      return C1827 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 585,
        [_Location_file]: null
      });
    },
    get C1828() {
      return C1828 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTap",
        [_Location_column]: 7,
        [_Location_line]: 586,
        [_Location_file]: null
      });
    },
    get C1829() {
      return C1829 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTapDown",
        [_Location_column]: 7,
        [_Location_line]: 587,
        [_Location_file]: null
      });
    },
    get C1830() {
      return C1830 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTapCancel",
        [_Location_column]: 7,
        [_Location_line]: 588,
        [_Location_file]: null
      });
    },
    get C1831() {
      return C1831 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onDoubleTap",
        [_Location_column]: 7,
        [_Location_line]: 589,
        [_Location_file]: null
      });
    },
    get C1832() {
      return C1832 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onLongPress",
        [_Location_column]: 7,
        [_Location_line]: 590,
        [_Location_file]: null
      });
    },
    get C1833() {
      return C1833 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHighlightChanged",
        [_Location_column]: 7,
        [_Location_line]: 591,
        [_Location_file]: null
      });
    },
    get C1834() {
      return C1834 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHover",
        [_Location_column]: 7,
        [_Location_line]: 592,
        [_Location_file]: null
      });
    },
    get C1835() {
      return C1835 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mouseCursor",
        [_Location_column]: 7,
        [_Location_line]: 593,
        [_Location_file]: null
      });
    },
    get C1836() {
      return C1836 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "containedInkWell",
        [_Location_column]: 7,
        [_Location_line]: 594,
        [_Location_file]: null
      });
    },
    get C1837() {
      return C1837 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "highlightShape",
        [_Location_column]: 7,
        [_Location_line]: 595,
        [_Location_file]: null
      });
    },
    get C1838() {
      return C1838 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "radius",
        [_Location_column]: 7,
        [_Location_line]: 596,
        [_Location_file]: null
      });
    },
    get C1839() {
      return C1839 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "borderRadius",
        [_Location_column]: 7,
        [_Location_line]: 597,
        [_Location_file]: null
      });
    },
    get C1840() {
      return C1840 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "customBorder",
        [_Location_column]: 7,
        [_Location_line]: 598,
        [_Location_file]: null
      });
    },
    get C1841() {
      return C1841 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusColor",
        [_Location_column]: 7,
        [_Location_line]: 599,
        [_Location_file]: null
      });
    },
    get C1842() {
      return C1842 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "hoverColor",
        [_Location_column]: 7,
        [_Location_line]: 600,
        [_Location_file]: null
      });
    },
    get C1843() {
      return C1843 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "highlightColor",
        [_Location_column]: 7,
        [_Location_line]: 601,
        [_Location_file]: null
      });
    },
    get C1844() {
      return C1844 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "overlayColor",
        [_Location_column]: 7,
        [_Location_line]: 602,
        [_Location_file]: null
      });
    },
    get C1845() {
      return C1845 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "splashColor",
        [_Location_column]: 7,
        [_Location_line]: 603,
        [_Location_file]: null
      });
    },
    get C1846() {
      return C1846 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "splashFactory",
        [_Location_column]: 7,
        [_Location_line]: 604,
        [_Location_file]: null
      });
    },
    get C1847() {
      return C1847 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enableFeedback",
        [_Location_column]: 7,
        [_Location_line]: 605,
        [_Location_file]: null
      });
    },
    get C1848() {
      return C1848 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "excludeFromSemantics",
        [_Location_column]: 7,
        [_Location_line]: 606,
        [_Location_file]: null
      });
    },
    get C1849() {
      return C1849 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusNode",
        [_Location_column]: 7,
        [_Location_line]: 607,
        [_Location_file]: null
      });
    },
    get C1850() {
      return C1850 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "canRequestFocus",
        [_Location_column]: 7,
        [_Location_line]: 608,
        [_Location_file]: null
      });
    },
    get C1851() {
      return C1851 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onFocusChange",
        [_Location_column]: 7,
        [_Location_line]: 609,
        [_Location_file]: null
      });
    },
    get C1852() {
      return C1852 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "autofocus",
        [_Location_column]: 7,
        [_Location_line]: 610,
        [_Location_file]: null
      });
    },
    get C1853() {
      return C1853 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "parentState",
        [_Location_column]: 7,
        [_Location_line]: 611,
        [_Location_file]: null
      });
    },
    get C1854() {
      return C1854 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "getRectCallback",
        [_Location_column]: 7,
        [_Location_line]: 612,
        [_Location_file]: null
      });
    },
    get C1855() {
      return C1855 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "debugCheckContext",
        [_Location_column]: 7,
        [_Location_line]: 613,
        [_Location_file]: null
      });
    },
    get C1826() {
      return C1826 = dart.constList([C1827 || CT.C1827, C1828 || CT.C1828, C1829 || CT.C1829, C1830 || CT.C1830, C1831 || CT.C1831, C1832 || CT.C1832, C1833 || CT.C1833, C1834 || CT.C1834, C1835 || CT.C1835, C1836 || CT.C1836, C1837 || CT.C1837, C1838 || CT.C1838, C1839 || CT.C1839, C1840 || CT.C1840, C1841 || CT.C1841, C1842 || CT.C1842, C1843 || CT.C1843, C1844 || CT.C1844, C1845 || CT.C1845, C1846 || CT.C1846, C1847 || CT.C1847, C1848 || CT.C1848, C1849 || CT.C1849, C1850 || CT.C1850, C1851 || CT.C1851, C1852 || CT.C1852, C1853 || CT.C1853, C1854 || CT.C1854, C1855 || CT.C1855], _LocationL());
    },
    get C1825() {
      return C1825 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1826 || CT.C1826,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 584,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/ink_well.dart"
      });
    },
    get C1856() {
      return C1856 = dart.const({
        __proto__: ink_well._HighlightType.prototype,
        [_name$15]: "_HighlightType.pressed",
        index: 0
      });
    },
    get C1857() {
      return C1857 = dart.const({
        __proto__: ink_well._HighlightType.prototype,
        [_name$15]: "_HighlightType.hover",
        index: 1
      });
    },
    get C1858() {
      return C1858 = dart.const({
        __proto__: ink_well._HighlightType.prototype,
        [_name$15]: "_HighlightType.focus",
        index: 2
      });
    },
    get C1859() {
      return C1859 = dart.constList([C1856 || CT.C1856, C1857 || CT.C1857, C1858 || CT.C1858], _HighlightTypeL());
    },
    get C1861() {
      return C1861 = dart.const({
        __proto__: material_state.MaterialState.prototype,
        [_name$16]: "MaterialState.focused",
        index: 1
      });
    },
    get C1860() {
      return C1860 = dart.constSet(MaterialStateL(), [C1861 || CT.C1861]);
    },
    get C1863() {
      return C1863 = dart.const({
        __proto__: material_state.MaterialState.prototype,
        [_name$16]: "MaterialState.hovered",
        index: 0
      });
    },
    get C1862() {
      return C1862 = dart.constSet(MaterialStateL(), [C1863 || CT.C1863]);
    },
    get C1864() {
      return C1864 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 50000
      });
    },
    get C1866() {
      return C1866 = dart.const({
        __proto__: material_state.MaterialState.prototype,
        [_name$16]: "MaterialState.pressed",
        index: 2
      });
    },
    get C1865() {
      return C1865 = dart.constSet(MaterialStateL(), [C1866 || CT.C1866]);
    },
    get C1867() {
      return C1867 = dart.const({
        __proto__: media_query.NavigationMode.prototype,
        [_name$17]: "NavigationMode.traditional",
        index: 0
      });
    },
    get C1868() {
      return C1868 = dart.const({
        __proto__: media_query.NavigationMode.prototype,
        [_name$17]: "NavigationMode.directional",
        index: 1
      });
    },
    get C1869() {
      return C1869 = dart.const({
        __proto__: focus_manager.FocusHighlightMode.prototype,
        [_name$18]: "FocusHighlightMode.touch",
        index: 0
      });
    },
    get C1870() {
      return C1870 = dart.const({
        __proto__: focus_manager.FocusHighlightMode.prototype,
        [_name$18]: "FocusHighlightMode.traditional",
        index: 1
      });
    },
    get C1873() {
      return C1873 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTapDown",
        [_Location_column]: 15,
        [_Location_line]: 1100,
        [_Location_file]: null
      });
    },
    get C1874() {
      return C1874 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTap",
        [_Location_column]: 15,
        [_Location_line]: 1101,
        [_Location_file]: null
      });
    },
    get C1875() {
      return C1875 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTapCancel",
        [_Location_column]: 15,
        [_Location_line]: 1102,
        [_Location_file]: null
      });
    },
    get C1876() {
      return C1876 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onDoubleTap",
        [_Location_column]: 15,
        [_Location_line]: 1103,
        [_Location_file]: null
      });
    },
    get C1877() {
      return C1877 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onLongPress",
        [_Location_column]: 15,
        [_Location_line]: 1104,
        [_Location_file]: null
      });
    },
    get C1878() {
      return C1878 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 15,
        [_Location_line]: 1105,
        [_Location_file]: null
      });
    },
    get C1879() {
      return C1879 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "excludeFromSemantics",
        [_Location_column]: 15,
        [_Location_line]: 1106,
        [_Location_file]: null
      });
    },
    get C1880() {
      return C1880 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 1107,
        [_Location_file]: null
      });
    },
    get C1872() {
      return C1872 = dart.constList([C1873 || CT.C1873, C1874 || CT.C1874, C1875 || CT.C1875, C1876 || CT.C1876, C1877 || CT.C1877, C1878 || CT.C1878, C1879 || CT.C1879, C1880 || CT.C1880], _LocationL());
    },
    get C1871() {
      return C1871 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1872 || CT.C1872,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 1099,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/ink_well.dart"
      });
    },
    get C1883() {
      return C1883 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "cursor",
        [_Location_column]: 13,
        [_Location_line]: 1096,
        [_Location_file]: null
      });
    },
    get C1884() {
      return C1884 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onEnter",
        [_Location_column]: 13,
        [_Location_line]: 1097,
        [_Location_file]: null
      });
    },
    get C1885() {
      return C1885 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onExit",
        [_Location_column]: 13,
        [_Location_line]: 1098,
        [_Location_file]: null
      });
    },
    get C1886() {
      return C1886 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 1099,
        [_Location_file]: null
      });
    },
    get C1882() {
      return C1882 = dart.constList([C1883 || CT.C1883, C1884 || CT.C1884, C1885 || CT.C1885, C1886 || CT.C1886], _LocationL());
    },
    get C1881() {
      return C1881 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1882 || CT.C1882,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 1095,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/ink_well.dart"
      });
    },
    get C1889() {
      return C1889 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusNode",
        [_Location_column]: 11,
        [_Location_line]: 1091,
        [_Location_file]: null
      });
    },
    get C1890() {
      return C1890 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "canRequestFocus",
        [_Location_column]: 11,
        [_Location_line]: 1092,
        [_Location_file]: null
      });
    },
    get C1891() {
      return C1891 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onFocusChange",
        [_Location_column]: 11,
        [_Location_line]: 1093,
        [_Location_file]: null
      });
    },
    get C1892() {
      return C1892 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "autofocus",
        [_Location_column]: 11,
        [_Location_line]: 1094,
        [_Location_file]: null
      });
    },
    get C1893() {
      return C1893 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 1095,
        [_Location_file]: null
      });
    },
    get C1888() {
      return C1888 = dart.constList([C1889 || CT.C1889, C1890 || CT.C1890, C1891 || CT.C1891, C1892 || CT.C1892, C1893 || CT.C1893], _LocationL());
    },
    get C1887() {
      return C1887 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1888 || CT.C1888,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 1090,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/ink_well.dart"
      });
    },
    get C1896() {
      return C1896 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "actions",
        [_Location_column]: 9,
        [_Location_line]: 1089,
        [_Location_file]: null
      });
    },
    get C1897() {
      return C1897 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 1090,
        [_Location_file]: null
      });
    },
    get C1895() {
      return C1895 = dart.constList([C1896 || CT.C1896, C1897 || CT.C1897], _LocationL());
    },
    get C1894() {
      return C1894 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1895 || CT.C1895,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 1088,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/ink_well.dart"
      });
    },
    get C1900() {
      return C1900 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "state",
        [_Location_column]: 7,
        [_Location_line]: 1087,
        [_Location_file]: null
      });
    },
    get C1901() {
      return C1901 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 1088,
        [_Location_file]: null
      });
    },
    get C1899() {
      return C1899 = dart.constList([C1900 || CT.C1900, C1901 || CT.C1901], _LocationL());
    },
    get C1898() {
      return C1898 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1899 || CT.C1899,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1086,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/ink_well.dart"
      });
    },
    get C1902() {
      return C1902 = dart.const({
        __proto__: bottom_navigation_bar.BottomNavigationBarType.prototype,
        [_name$19]: "BottomNavigationBarType.fixed",
        index: 0
      });
    },
    get C1903() {
      return C1903 = dart.const({
        __proto__: bottom_navigation_bar.BottomNavigationBarType.prototype,
        [_name$19]: "BottomNavigationBarType.shifting",
        index: 1
      });
    },
    get C1904() {
      return C1904 = dart.constList([C1902 || CT.C1902, C1903 || CT.C1903], BottomNavigationBarTypeL());
    },
    get C1907() {
      return C1907 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "colorTween",
        [_Location_column]: 23,
        [_Location_line]: 477,
        [_Location_file]: null
      });
    },
    get C1908() {
      return C1908 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animation",
        [_Location_column]: 23,
        [_Location_line]: 478,
        [_Location_file]: null
      });
    },
    get C1909() {
      return C1909 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "iconSize",
        [_Location_column]: 23,
        [_Location_line]: 479,
        [_Location_file]: null
      });
    },
    get C1910() {
      return C1910 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selected",
        [_Location_column]: 23,
        [_Location_line]: 480,
        [_Location_file]: null
      });
    },
    get C1911() {
      return C1911 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "item",
        [_Location_column]: 23,
        [_Location_line]: 481,
        [_Location_file]: null
      });
    },
    get C1912() {
      return C1912 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selectedIconTheme",
        [_Location_column]: 23,
        [_Location_line]: 482,
        [_Location_file]: null
      });
    },
    get C1913() {
      return C1913 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "unselectedIconTheme",
        [_Location_column]: 23,
        [_Location_line]: 483,
        [_Location_file]: null
      });
    },
    get C1906() {
      return C1906 = dart.constList([C1907 || CT.C1907, C1908 || CT.C1908, C1909 || CT.C1909, C1910 || CT.C1910, C1911 || CT.C1911, C1912 || CT.C1912, C1913 || CT.C1913], _LocationL());
    },
    get C1905() {
      return C1905 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1906 || CT.C1906,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 476,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C1916() {
      return C1916 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "colorTween",
        [_Location_column]: 23,
        [_Location_line]: 486,
        [_Location_file]: null
      });
    },
    get C1917() {
      return C1917 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animation",
        [_Location_column]: 23,
        [_Location_line]: 487,
        [_Location_file]: null
      });
    },
    get C1918() {
      return C1918 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "item",
        [_Location_column]: 23,
        [_Location_line]: 488,
        [_Location_file]: null
      });
    },
    get C1919() {
      return C1919 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selectedLabelStyle",
        [_Location_column]: 23,
        [_Location_line]: 489,
        [_Location_file]: null
      });
    },
    get C1920() {
      return C1920 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "unselectedLabelStyle",
        [_Location_column]: 23,
        [_Location_line]: 490,
        [_Location_file]: null
      });
    },
    get C1921() {
      return C1921 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "showSelectedLabels",
        [_Location_column]: 23,
        [_Location_line]: 491,
        [_Location_file]: null
      });
    },
    get C1922() {
      return C1922 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "showUnselectedLabels",
        [_Location_column]: 23,
        [_Location_line]: 492,
        [_Location_file]: null
      });
    },
    get C1915() {
      return C1915 = dart.constList([C1916 || CT.C1916, C1917 || CT.C1917, C1918 || CT.C1918, C1919 || CT.C1919, C1920 || CT.C1920, C1921 || CT.C1921, C1922 || CT.C1922], _LocationL());
    },
    get C1914() {
      return C1914 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1915 || CT.C1915,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 485,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C1925() {
      return C1925 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "crossAxisAlignment",
        [_Location_column]: 19,
        [_Location_line]: 472,
        [_Location_file]: null
      });
    },
    get C1926() {
      return C1926 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mainAxisAlignment",
        [_Location_column]: 19,
        [_Location_line]: 473,
        [_Location_file]: null
      });
    },
    get C1927() {
      return C1927 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mainAxisSize",
        [_Location_column]: 19,
        [_Location_line]: 474,
        [_Location_file]: null
      });
    },
    get C1928() {
      return C1928 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 19,
        [_Location_line]: 475,
        [_Location_file]: null
      });
    },
    get C1924() {
      return C1924 = dart.constList([C1925 || CT.C1925, C1926 || CT.C1926, C1927 || CT.C1927, C1928 || CT.C1928], _LocationL());
    },
    get C1923() {
      return C1923 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1924 || CT.C1924,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 471,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C1931() {
      return C1931 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 17,
        [_Location_line]: 470,
        [_Location_file]: null
      });
    },
    get C1932() {
      return C1932 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 471,
        [_Location_file]: null
      });
    },
    get C1930() {
      return C1930 = dart.constList([C1931 || CT.C1931, C1932 || CT.C1932], _LocationL());
    },
    get C1929() {
      return C1929 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1930 || CT.C1930,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 469,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C1935() {
      return C1935 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTap",
        [_Location_column]: 15,
        [_Location_line]: 467,
        [_Location_file]: null
      });
    },
    get C1936() {
      return C1936 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mouseCursor",
        [_Location_column]: 15,
        [_Location_line]: 468,
        [_Location_file]: null
      });
    },
    get C1937() {
      return C1937 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 469,
        [_Location_file]: null
      });
    },
    get C1934() {
      return C1934 = dart.constList([C1935 || CT.C1935, C1936 || CT.C1936, C1937 || CT.C1937], _LocationL());
    },
    get C1933() {
      return C1933 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1934 || CT.C1934,
        [_Location_name]: null,
        [_Location_column]: 13,
        [_Location_line]: 466,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C1940() {
      return C1940 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "label",
        [_Location_column]: 15,
        [_Location_line]: 499,
        [_Location_file]: null
      });
    },
    get C1939() {
      return C1939 = dart.constList([C1940 || CT.C1940], _LocationL());
    },
    get C1938() {
      return C1938 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1939 || CT.C1939,
        [_Location_name]: null,
        [_Location_column]: 13,
        [_Location_line]: 498,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C1943() {
      return C1943 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 11,
        [_Location_line]: 465,
        [_Location_file]: null
      });
    },
    get C1942() {
      return C1942 = dart.constList([C1943 || CT.C1943], _LocationL());
    },
    get C1941() {
      return C1941 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1942 || CT.C1942,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 464,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C1946() {
      return C1946 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "container",
        [_Location_column]: 9,
        [_Location_line]: 462,
        [_Location_file]: null
      });
    },
    get C1947() {
      return C1947 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selected",
        [_Location_column]: 9,
        [_Location_line]: 463,
        [_Location_file]: null
      });
    },
    get C1948() {
      return C1948 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 464,
        [_Location_file]: null
      });
    },
    get C1945() {
      return C1945 = dart.constList([C1946 || CT.C1946, C1947 || CT.C1947, C1948 || CT.C1948], _LocationL());
    },
    get C1944() {
      return C1944 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1945 || CT.C1945,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 461,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C1951() {
      return C1951 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "flex",
        [_Location_column]: 7,
        [_Location_line]: 460,
        [_Location_file]: null
      });
    },
    get C1952() {
      return C1952 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 461,
        [_Location_file]: null
      });
    },
    get C1950() {
      return C1950 = dart.constList([C1951 || CT.C1951, C1952 || CT.C1952], _LocationL());
    },
    get C1949() {
      return C1949 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1950 || CT.C1950,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 459,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C1955() {
      return C1955 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 11,
        [_Location_line]: 549,
        [_Location_file]: null
      });
    },
    get C1956() {
      return C1956 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 550,
        [_Location_file]: null
      });
    },
    get C1954() {
      return C1954 = dart.constList([C1955 || CT.C1955, C1956 || CT.C1956], _LocationL());
    },
    get C1953() {
      return C1953 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1954 || CT.C1954,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 548,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C1959() {
      return C1959 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 548,
        [_Location_file]: null
      });
    },
    get C1958() {
      return C1958 = dart.constList([C1959 || CT.C1959], _LocationL());
    },
    get C1957() {
      return C1957 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1958 || CT.C1958,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 547,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C1962() {
      return C1962 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 7,
        [_Location_line]: 545,
        [_Location_file]: null
      });
    },
    get C1963() {
      return C1963 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "heightFactor",
        [_Location_column]: 7,
        [_Location_line]: 546,
        [_Location_file]: null
      });
    },
    get C1964() {
      return C1964 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 547,
        [_Location_file]: null
      });
    },
    get C1961() {
      return C1961 = dart.constList([C1962 || CT.C1962, C1963 || CT.C1963, C1964 || CT.C1964], _LocationL());
    },
    get C1960() {
      return C1960 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1961 || CT.C1961,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 544,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C1967() {
      return C1967 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "transform",
        [_Location_column]: 9,
        [_Location_line]: 603,
        [_Location_file]: null
      });
    },
    get C1968() {
      return C1968 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 9,
        [_Location_line]: 611,
        [_Location_file]: null
      });
    },
    get C1969() {
      return C1969 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 612,
        [_Location_file]: null
      });
    },
    get C1966() {
      return C1966 = dart.constList([C1967 || CT.C1967, C1968 || CT.C1968, C1969 || CT.C1969], _LocationL());
    },
    get C1965() {
      return C1965 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1966 || CT.C1966,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 602,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C1972() {
      return C1972 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alwaysIncludeSemantics",
        [_Location_column]: 9,
        [_Location_line]: 619,
        [_Location_file]: null
      });
    },
    get C1973() {
      return C1973 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 9,
        [_Location_line]: 620,
        [_Location_file]: null
      });
    },
    get C1974() {
      return C1974 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 621,
        [_Location_file]: null
      });
    },
    get C1971() {
      return C1971 = dart.constList([C1972 || CT.C1972, C1973 || CT.C1973, C1974 || CT.C1974], _LocationL());
    },
    get C1970() {
      return C1970 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1971 || CT.C1971,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 618,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C1977() {
      return C1977 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alwaysIncludeSemantics",
        [_Location_column]: 9,
        [_Location_line]: 626,
        [_Location_file]: null
      });
    },
    get C1978() {
      return C1978 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 9,
        [_Location_line]: 627,
        [_Location_file]: null
      });
    },
    get C1979() {
      return C1979 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 628,
        [_Location_file]: null
      });
    },
    get C1976() {
      return C1976 = dart.constList([C1977 || CT.C1977, C1978 || CT.C1978, C1979 || CT.C1979], _LocationL());
    },
    get C1975() {
      return C1975 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1976 || CT.C1976,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 625,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C1982() {
      return C1982 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alwaysIncludeSemantics",
        [_Location_column]: 9,
        [_Location_line]: 633,
        [_Location_file]: null
      });
    },
    get C1983() {
      return C1983 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 9,
        [_Location_line]: 634,
        [_Location_file]: null
      });
    },
    get C1984() {
      return C1984 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 635,
        [_Location_file]: null
      });
    },
    get C1981() {
      return C1981 = dart.constList([C1982 || CT.C1982, C1983 || CT.C1983, C1984 || CT.C1984], _LocationL());
    },
    get C1980() {
      return C1980 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1981 || CT.C1981,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 632,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C1987() {
      return C1987 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 24,
        [_Location_line]: 642,
        [_Location_file]: null
      });
    },
    get C1986() {
      return C1986 = dart.constList([C1987 || CT.C1987], _LocationL());
    },
    get C1985() {
      return C1985 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1986 || CT.C1986,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 642,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C1990() {
      return C1990 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 7,
        [_Location_line]: 640,
        [_Location_file]: null
      });
    },
    get C1991() {
      return C1991 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "heightFactor",
        [_Location_column]: 7,
        [_Location_line]: 641,
        [_Location_file]: null
      });
    },
    get C1992() {
      return C1992 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 642,
        [_Location_file]: null
      });
    },
    get C1989() {
      return C1989 = dart.constList([C1990 || CT.C1990, C1991 || CT.C1991, C1992 || CT.C1992], _LocationL());
    },
    get C1988() {
      return C1988 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1989 || CT.C1989,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 639,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C1993() {
      return C1993 = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: null,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: null,
        [TextStyle_inherit]: true
      });
    },
    get C1996() {
      return C1996 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "type",
        [_Location_column]: 9,
        [_Location_line]: 855,
        [_Location_file]: null
      });
    },
    get C1997() {
      return C1997 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "item",
        [_Location_column]: 21,
        [_Location_line]: 856,
        [_Location_file]: null
      });
    },
    get C1998() {
      return C1998 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animation",
        [_Location_column]: 20,
        [_Location_line]: 857,
        [_Location_file]: null
      });
    },
    get C1999() {
      return C1999 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "iconSize",
        [_Location_column]: 16,
        [_Location_line]: 858,
        [_Location_file]: null
      });
    },
    get C2000() {
      return C2000 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selectedIconTheme",
        [_Location_column]: 9,
        [_Location_line]: 859,
        [_Location_file]: null
      });
    },
    get C2001() {
      return C2001 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "unselectedIconTheme",
        [_Location_column]: 9,
        [_Location_line]: 860,
        [_Location_file]: null
      });
    },
    get C2002() {
      return C2002 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selectedLabelStyle",
        [_Location_column]: 9,
        [_Location_line]: 861,
        [_Location_file]: null
      });
    },
    get C2003() {
      return C2003 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "unselectedLabelStyle",
        [_Location_column]: 9,
        [_Location_line]: 862,
        [_Location_file]: null
      });
    },
    get C2004() {
      return C2004 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTap",
        [_Location_column]: 9,
        [_Location_line]: 863,
        [_Location_file]: null
      });
    },
    get C2005() {
      return C2005 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "colorTween",
        [_Location_column]: 9,
        [_Location_line]: 867,
        [_Location_file]: null
      });
    },
    get C2006() {
      return C2006 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "flex",
        [_Location_column]: 9,
        [_Location_line]: 868,
        [_Location_file]: null
      });
    },
    get C2007() {
      return C2007 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selected",
        [_Location_column]: 9,
        [_Location_line]: 869,
        [_Location_file]: null
      });
    },
    get C2008() {
      return C2008 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "showSelectedLabels",
        [_Location_column]: 9,
        [_Location_line]: 870,
        [_Location_file]: null
      });
    },
    get C2009() {
      return C2009 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "showUnselectedLabels",
        [_Location_column]: 9,
        [_Location_line]: 871,
        [_Location_file]: null
      });
    },
    get C2010() {
      return C2010 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "indexLabel",
        [_Location_column]: 9,
        [_Location_line]: 872,
        [_Location_file]: null
      });
    },
    get C2011() {
      return C2011 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mouseCursor",
        [_Location_column]: 9,
        [_Location_line]: 873,
        [_Location_file]: null
      });
    },
    get C1995() {
      return C1995 = dart.constList([C1996 || CT.C1996, C1997 || CT.C1997, C1998 || CT.C1998, C1999 || CT.C1999, C2000 || CT.C2000, C2001 || CT.C2001, C2002 || CT.C2002, C2003 || CT.C2003, C2004 || CT.C2004, C2005 || CT.C2005, C2006 || CT.C2006, C2007 || CT.C2007, C2008 || CT.C2008, C2009 || CT.C2009, C2010 || CT.C2010, C2011 || CT.C2011], _LocationL());
    },
    get C1994() {
      return C1994 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1995 || CT.C1995,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 854,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C2014() {
      return C2014 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mainAxisAlignment",
        [_Location_column]: 9,
        [_Location_line]: 883,
        [_Location_file]: null
      });
    },
    get C2015() {
      return C2015 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 9,
        [_Location_line]: 884,
        [_Location_file]: null
      });
    },
    get C2013() {
      return C2013 = dart.constList([C2014 || CT.C2014, C2015 || CT.C2015], _LocationL());
    },
    get C2012() {
      return C2012 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2013 || CT.C2013,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 882,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C2018() {
      return C2018 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "context",
        [_Location_column]: 19,
        [_Location_line]: 925,
        [_Location_file]: null
      });
    },
    get C2019() {
      return C2019 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "removeBottom",
        [_Location_column]: 19,
        [_Location_line]: 926,
        [_Location_file]: null
      });
    },
    get C2020() {
      return C2020 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 19,
        [_Location_line]: 927,
        [_Location_file]: null
      });
    },
    get C2017() {
      return C2017 = dart.constList([C2018 || CT.C2018, C2019 || CT.C2019, C2020 || CT.C2020], _LocationL());
    },
    get C2016() {
      return C2016 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2017 || CT.C2017,
        [_Location_name]: null,
        [_Location_column]: 35,
        [_Location_line]: 924,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C2023() {
      return C2023 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 17,
        [_Location_line]: 923,
        [_Location_file]: null
      });
    },
    get C2024() {
      return C2024 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 924,
        [_Location_file]: null
      });
    },
    get C2022() {
      return C2022 = dart.constList([C2023 || CT.C2023, C2024 || CT.C2024], _LocationL());
    },
    get C2021() {
      return C2021 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2022 || CT.C2022,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 922,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C2027() {
      return C2027 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "type",
        [_Location_column]: 15,
        [_Location_line]: 921,
        [_Location_file]: null
      });
    },
    get C2028() {
      return C2028 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 922,
        [_Location_file]: null
      });
    },
    get C2026() {
      return C2026 = dart.constList([C2027 || CT.C2027, C2028 || CT.C2028], _LocationL());
    },
    get C2025() {
      return C2025 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2026 || CT.C2026,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 920,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C2031() {
      return C2031 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "painter",
        [_Location_column]: 13,
        [_Location_line]: 916,
        [_Location_file]: null
      });
    },
    get C2032() {
      return C2032 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 920,
        [_Location_file]: null
      });
    },
    get C2030() {
      return C2030 = dart.constList([C2031 || CT.C2031, C2032 || CT.C2032], _LocationL());
    },
    get C2029() {
      return C2029 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2030 || CT.C2030,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 915,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C2035() {
      return C2035 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 11,
        [_Location_line]: 914,
        [_Location_file]: null
      });
    },
    get C2036() {
      return C2036 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 915,
        [_Location_file]: null
      });
    },
    get C2034() {
      return C2034 = dart.constList([C2035 || CT.C2035, C2036 || CT.C2036], _LocationL());
    },
    get C2033() {
      return C2033 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2034 || CT.C2034,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 913,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C2039() {
      return C2039 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "elevation",
        [_Location_column]: 9,
        [_Location_line]: 911,
        [_Location_file]: null
      });
    },
    get C2040() {
      return C2040 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 9,
        [_Location_line]: 912,
        [_Location_file]: null
      });
    },
    get C2041() {
      return C2041 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 913,
        [_Location_file]: null
      });
    },
    get C2038() {
      return C2038 = dart.constList([C2039 || CT.C2039, C2040 || CT.C2040, C2041 || CT.C2041], _LocationL());
    },
    get C2037() {
      return C2037 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2038 || CT.C2038,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 910,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C2044() {
      return C2044 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "explicitChildNodes",
        [_Location_column]: 7,
        [_Location_line]: 909,
        [_Location_file]: null
      });
    },
    get C2045() {
      return C2045 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 910,
        [_Location_file]: null
      });
    },
    get C2043() {
      return C2043 = dart.constList([C2044 || CT.C2044, C2045 || CT.C2045], _LocationL());
    },
    get C2042() {
      return C2042 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2043 || CT.C2043,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 908,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C2048() {
      return C2048 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 73,
        [_Location_line]: 153,
        [_Location_file]: null
      });
    },
    get C2049() {
      return C2049 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 85,
        [_Location_line]: 153,
        [_Location_file]: null
      });
    },
    get C2047() {
      return C2047 = dart.constList([C2048 || CT.C2048, C2049 || CT.C2049], _LocationL());
    },
    get C2046() {
      return C2046 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2047 || CT.C2047,
        [_Location_name]: null,
        [_Location_column]: 53,
        [_Location_line]: 153,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/banner_theme.dart"
      });
    },
    get C2050() {
      return C2050 = dart.constList([C1046 || CT.C1046, C1047 || CT.C1047], MaterialTapTargetSizeL());
    },
    get C2051() {
      return C2051 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 536870911
      });
    },
    get C2052() {
      return C2052 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 520093696
      });
    },
    get C2053() {
      return C2053 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4282549748.0
      });
    },
    get C2054() {
      return C2054 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 2164260863.0
      });
    },
    get C2055() {
      return C2055 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 2315255808.0
      });
    },
    get C2056() {
      return C2056 = dart.const({
        __proto__: page_transitions_theme.PageTransitionsTheme.prototype,
        [_builders$]: null
      });
    },
    get C2058() {
      return C2058 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294967295.0
      });
    },
    get C2057() {
      return C2057 = dart.const({
        __proto__: icon_theme_data.IconThemeData.prototype,
        [IconThemeData_size]: null,
        [IconThemeData__opacity]: null,
        [IconThemeData_color]: C2058 || CT.C2058
      });
    },
    get C2059() {
      return C2059 = dart.const({
        __proto__: icon_theme_data.IconThemeData.prototype,
        [IconThemeData_size]: null,
        [IconThemeData__opacity]: null,
        [IconThemeData_color]: C384 || CT.C384
      });
    },
    get C2061() {
      return C2061 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 3707764736.0
      });
    },
    get C2060() {
      return C2060 = dart.const({
        __proto__: icon_theme_data.IconThemeData.prototype,
        [IconThemeData_size]: null,
        [IconThemeData__opacity]: null,
        [IconThemeData_color]: C2061 || CT.C2061
      });
    },
    get C2062() {
      return C2062 = dart.const({
        __proto__: toggle_buttons_theme.ToggleButtonsThemeData.prototype,
        [borderRadius$]: null,
        [borderWidth$]: null,
        [disabledBorderColor$1]: null,
        [selectedBorderColor$]: null,
        [borderColor$]: null,
        [hoverColor$5]: null,
        [splashColor$4]: null,
        [highlightColor$3]: null,
        [focusColor$5]: null,
        [fillColor$0]: null,
        [disabledColor$1]: null,
        [selectedColor$0]: null,
        [color$6]: null,
        [constraints$1]: null,
        [textStyle$3]: null
      });
    },
    get C2063() {
      return C2063 = dart.const({
        __proto__: tab_bar_theme.TabBarTheme.prototype,
        [unselectedLabelStyle$1]: null,
        [unselectedLabelColor$1]: null,
        [labelStyle$1]: null,
        [labelPadding$0]: null,
        [labelColor$1]: null,
        [indicatorSize$1]: null,
        [indicator$0]: null
      });
    },
    get C2064() {
      return C2064 = dart.const({
        __proto__: tooltip_theme.TooltipThemeData.prototype,
        [showDuration$0]: null,
        [waitDuration$0]: null,
        [textStyle$2]: null,
        [decoration$1]: null,
        [excludeFromSemantics$0]: null,
        [preferBelow$1]: null,
        [verticalOffset$1]: null,
        [margin$2]: null,
        [padding$7]: null,
        [height$3]: null
      });
    },
    get C2065() {
      return C2065 = dart.const({
        __proto__: app_bar_theme.AppBarTheme.prototype,
        [AppBarTheme_centerTitle]: null,
        [AppBarTheme_textTheme]: null,
        [AppBarTheme_actionsIconTheme]: null,
        [AppBarTheme_iconTheme]: null,
        [AppBarTheme_shadowColor]: null,
        [AppBarTheme_elevation]: null,
        [AppBarTheme_color]: null,
        [AppBarTheme_brightness]: null
      });
    },
    get C2066() {
      return C2066 = dart.const({
        __proto__: bottom_app_bar_theme.BottomAppBarTheme.prototype,
        [shape$17]: null,
        [elevation$19]: null,
        [color$11]: null
      });
    },
    get C2067() {
      return C2067 = dart.const({
        __proto__: card_theme.CardTheme.prototype,
        [shape$16]: null,
        [margin$3]: null,
        [elevation$16]: null,
        [shadowColor$1]: null,
        [color$10]: null,
        [clipBehavior$5]: null
      });
    },
    get C2068() {
      return C2068 = dart.const({
        __proto__: dialog_theme.DialogTheme.prototype,
        [contentTextStyle$1]: null,
        [titleTextStyle$1]: null,
        [shape$14]: null,
        [elevation$14]: null,
        [backgroundColor$10]: null
      });
    },
    get C2069() {
      return C2069 = dart.const({
        __proto__: floating_action_button_theme.FloatingActionButtonThemeData.prototype,
        [FloatingActionButtonThemeData_shape]: null,
        [FloatingActionButtonThemeData_highlightElevation]: null,
        [FloatingActionButtonThemeData_disabledElevation]: null,
        [FloatingActionButtonThemeData_hoverElevation]: null,
        [FloatingActionButtonThemeData_focusElevation]: null,
        [FloatingActionButtonThemeData_elevation]: null,
        [FloatingActionButtonThemeData_splashColor]: null,
        [FloatingActionButtonThemeData_hoverColor]: null,
        [FloatingActionButtonThemeData_focusColor]: null,
        [FloatingActionButtonThemeData_backgroundColor]: null,
        [FloatingActionButtonThemeData_foregroundColor]: null
      });
    },
    get C2070() {
      return C2070 = dart.const({
        __proto__: snack_bar_theme.SnackBarThemeData.prototype,
        [behavior$0]: null,
        [shape$11]: null,
        [elevation$7]: null,
        [contentTextStyle$0]: null,
        [disabledActionTextColor$]: null,
        [actionTextColor$]: null,
        [backgroundColor$6]: null
      });
    },
    get C2071() {
      return C2071 = dart.const({
        __proto__: bottom_sheet_theme.BottomSheetThemeData.prototype,
        [BottomSheetThemeData_clipBehavior]: null,
        [BottomSheetThemeData_shape]: null,
        [BottomSheetThemeData_modalElevation]: null,
        [BottomSheetThemeData_modalBackgroundColor]: null,
        [BottomSheetThemeData_elevation]: null,
        [BottomSheetThemeData_backgroundColor]: null
      });
    },
    get C2072() {
      return C2072 = dart.const({
        __proto__: popup_menu_theme.PopupMenuThemeData.prototype,
        [textStyle$4]: null,
        [elevation$10]: null,
        [shape$12]: null,
        [color$8]: null
      });
    },
    get C2073() {
      return C2073 = dart.const({
        __proto__: banner_theme.MaterialBannerThemeData.prototype,
        [leadingPadding$]: null,
        [padding$10]: null,
        [contentTextStyle$2]: null,
        [backgroundColor$14]: null
      });
    },
    get C2074() {
      return C2074 = dart.const({
        __proto__: divider_theme.DividerThemeData.prototype,
        [endIndent$1]: null,
        [indent$1]: null,
        [thickness$1]: null,
        [space$]: null,
        [color$9]: null
      });
    },
    get C2075() {
      return C2075 = dart.const({
        __proto__: button_bar_theme.ButtonBarThemeData.prototype,
        [ButtonBarThemeData_overflowDirection]: null,
        [ButtonBarThemeData_layoutBehavior]: null,
        [ButtonBarThemeData_buttonAlignedDropdown]: null,
        [ButtonBarThemeData_buttonPadding]: null,
        [ButtonBarThemeData_buttonHeight]: null,
        [ButtonBarThemeData_buttonMinWidth]: null,
        [ButtonBarThemeData_buttonTextTheme]: null,
        [ButtonBarThemeData_mainAxisSize]: null,
        [ButtonBarThemeData_alignment]: null
      });
    },
    get C2076() {
      return C2076 = dart.const({
        __proto__: bottom_navigation_bar_theme.BottomNavigationBarThemeData.prototype,
        [type$1]: null,
        [showUnselectedLabels$2]: null,
        [showSelectedLabels$2]: null,
        [unselectedLabelStyle$5]: null,
        [selectedLabelStyle$2]: null,
        [unselectedItemColor$0]: null,
        [selectedItemColor$0]: null,
        [unselectedIconTheme$4]: null,
        [selectedIconTheme$4]: null,
        [elevation$18]: null,
        [backgroundColor$13]: null
      });
    },
    get C2077() {
      return C2077 = dart.const({
        __proto__: time_picker_theme.TimePickerThemeData.prototype,
        [inputDecorationTheme$]: null,
        [dayPeriodBorderSide$]: null,
        [dayPeriodShape$]: null,
        [hourMinuteShape$]: null,
        [shape$10]: null,
        [helpTextStyle$]: null,
        [dayPeriodTextStyle$]: null,
        [hourMinuteTextStyle$]: null,
        [entryModeIconColor$]: null,
        [dialTextColor$]: null,
        [dialBackgroundColor$]: null,
        [dialHandColor$]: null,
        [dayPeriodColor$]: null,
        [dayPeriodTextColor$]: null,
        [hourMinuteColor$]: null,
        [hourMinuteTextColor$]: null,
        [backgroundColor$4]: null
      });
    },
    get C2078() {
      return C2078 = dart.const({
        __proto__: text_button_theme.TextButtonThemeData.prototype,
        [style$0]: null
      });
    },
    get C2079() {
      return C2079 = dart.const({
        __proto__: elevated_button_theme.ElevatedButtonThemeData.prototype,
        [style$3]: null
      });
    },
    get C2080() {
      return C2080 = dart.const({
        __proto__: outlined_button_theme.OutlinedButtonThemeData.prototype,
        [style$1]: null
      });
    },
    get C2085() {
      return C2085 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4285887861.0
      });
    },
    get C2086() {
      return C2086 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4288256409.0
      });
    },
    get C2084() {
      return C2084 = dart.const({
        __proto__: colors$0.CupertinoDynamicColor.prototype,
        [Color_value]: 0,
        [CupertinoDynamicColor_darkHighContrastElevatedColor]: C2085 || CT.C2085,
        [CupertinoDynamicColor_highContrastElevatedColor]: C2086 || CT.C2086,
        [CupertinoDynamicColor_darkElevatedColor]: C2085 || CT.C2085,
        [CupertinoDynamicColor_elevatedColor]: C2086 || CT.C2086,
        [CupertinoDynamicColor_darkHighContrastColor]: C2085 || CT.C2085,
        [CupertinoDynamicColor_highContrastColor]: C2086 || CT.C2086,
        [CupertinoDynamicColor_darkColor]: C2085 || CT.C2085,
        [CupertinoDynamicColor_color]: C2086 || CT.C2086,
        [CupertinoDynamicColor__debugResolveContext]: null,
        [CupertinoDynamicColor__debugLabel]: "inactiveGray",
        [CupertinoDynamicColor__effectiveColor]: C2086 || CT.C2086
      });
    },
    get C2087() {
      return C2087 = dart.const({
        __proto__: colors$0.CupertinoDynamicColor.prototype,
        [Color_value]: 0,
        [CupertinoDynamicColor_darkHighContrastElevatedColor]: C2058 || CT.C2058,
        [CupertinoDynamicColor_highContrastElevatedColor]: C384 || CT.C384,
        [CupertinoDynamicColor_darkElevatedColor]: C2058 || CT.C2058,
        [CupertinoDynamicColor_elevatedColor]: C384 || CT.C384,
        [CupertinoDynamicColor_darkHighContrastColor]: C2058 || CT.C2058,
        [CupertinoDynamicColor_highContrastColor]: C384 || CT.C384,
        [CupertinoDynamicColor_darkColor]: C2058 || CT.C2058,
        [CupertinoDynamicColor_color]: C384 || CT.C384,
        [CupertinoDynamicColor__debugResolveContext]: null,
        [CupertinoDynamicColor__debugLabel]: "label",
        [CupertinoDynamicColor__effectiveColor]: C384 || CT.C384
      });
    },
    get C2083() {
      return C2083 = dart.const({
        __proto__: theme._CupertinoTextThemeDefaults.prototype,
        [_CupertinoTextThemeDefaults_inactiveGray]: C2084 || CT.C2084,
        [_CupertinoTextThemeDefaults_labelColor]: C2087 || CT.C2087
      });
    },
    get C2089() {
      return C2089 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4280558630.0
      });
    },
    get C2090() {
      return C2090 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4280032286.0
      });
    },
    get C2088() {
      return C2088 = dart.const({
        __proto__: colors$0.CupertinoDynamicColor.prototype,
        [Color_value]: 0,
        [CupertinoDynamicColor_darkHighContrastElevatedColor]: C2089 || CT.C2089,
        [CupertinoDynamicColor_highContrastElevatedColor]: C2058 || CT.C2058,
        [CupertinoDynamicColor_darkElevatedColor]: C2090 || CT.C2090,
        [CupertinoDynamicColor_elevatedColor]: C2058 || CT.C2058,
        [CupertinoDynamicColor_darkHighContrastColor]: C384 || CT.C384,
        [CupertinoDynamicColor_highContrastColor]: C2058 || CT.C2058,
        [CupertinoDynamicColor_darkColor]: C384 || CT.C384,
        [CupertinoDynamicColor_color]: C2058 || CT.C2058,
        [CupertinoDynamicColor__debugResolveContext]: null,
        [CupertinoDynamicColor__debugLabel]: "systemBackground",
        [CupertinoDynamicColor__effectiveColor]: C2058 || CT.C2058
      });
    },
    get C2092() {
      return C2092 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4028439837.0
      });
    },
    get C2093() {
      return C2093 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4042914297.0
      });
    },
    get C2091() {
      return C2091 = dart.const({
        __proto__: colors$0.CupertinoDynamicColor.prototype,
        [Color_value]: 0,
        [CupertinoDynamicColor_darkHighContrastElevatedColor]: C2092 || CT.C2092,
        [CupertinoDynamicColor_highContrastElevatedColor]: C2093 || CT.C2093,
        [CupertinoDynamicColor_darkElevatedColor]: C2092 || CT.C2092,
        [CupertinoDynamicColor_elevatedColor]: C2093 || CT.C2093,
        [CupertinoDynamicColor_darkHighContrastColor]: C2092 || CT.C2092,
        [CupertinoDynamicColor_highContrastColor]: C2093 || CT.C2093,
        [CupertinoDynamicColor_darkColor]: C2092 || CT.C2092,
        [CupertinoDynamicColor_color]: C2093 || CT.C2093,
        [CupertinoDynamicColor__debugResolveContext]: null,
        [CupertinoDynamicColor__debugLabel]: null,
        [CupertinoDynamicColor__effectiveColor]: C2093 || CT.C2093
      });
    },
    get C2095() {
      return C2095 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4282424575.0
      });
    },
    get C2096() {
      return C2096 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4278206685.0
      });
    },
    get C2097() {
      return C2097 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4278879487.0
      });
    },
    get C2098() {
      return C2098 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4278221567.0
      });
    },
    get C2094() {
      return C2094 = dart.const({
        __proto__: colors$0.CupertinoDynamicColor.prototype,
        [Color_value]: 0,
        [CupertinoDynamicColor_darkHighContrastElevatedColor]: C2095 || CT.C2095,
        [CupertinoDynamicColor_highContrastElevatedColor]: C2096 || CT.C2096,
        [CupertinoDynamicColor_darkElevatedColor]: C2097 || CT.C2097,
        [CupertinoDynamicColor_elevatedColor]: C2098 || CT.C2098,
        [CupertinoDynamicColor_darkHighContrastColor]: C2095 || CT.C2095,
        [CupertinoDynamicColor_highContrastColor]: C2096 || CT.C2096,
        [CupertinoDynamicColor_darkColor]: C2097 || CT.C2097,
        [CupertinoDynamicColor_color]: C2098 || CT.C2098,
        [CupertinoDynamicColor__debugResolveContext]: null,
        [CupertinoDynamicColor__debugLabel]: "systemBlue",
        [CupertinoDynamicColor__effectiveColor]: C2098 || CT.C2098
      });
    },
    get C2082() {
      return C2082 = dart.const({
        __proto__: theme._CupertinoThemeDefaults.prototype,
        [_CupertinoThemeDefaults_textThemeDefaults]: C2083 || CT.C2083,
        [_CupertinoThemeDefaults_scaffoldBackgroundColor]: C2088 || CT.C2088,
        [_CupertinoThemeDefaults_barBackgroundColor]: C2091 || CT.C2091,
        [_CupertinoThemeDefaults_primaryContrastingColor]: C2088 || CT.C2088,
        [_CupertinoThemeDefaults_primaryColor]: C2094 || CT.C2094,
        [_CupertinoThemeDefaults_brightness]: null
      });
    },
    get C2081() {
      return C2081 = dart.const({
        __proto__: theme.CupertinoThemeData.prototype,
        [CupertinoThemeData__scaffoldBackgroundColor]: null,
        [CupertinoThemeData__barBackgroundColor]: null,
        [CupertinoThemeData__textTheme]: null,
        [CupertinoThemeData__primaryContrastingColor]: null,
        [CupertinoThemeData__primaryColor]: null,
        [CupertinoThemeData_brightness]: null,
        [CupertinoThemeData__defaults]: C2082 || CT.C2082
      });
    },
    get C2099() {
      return C2099 = dart.const({
        __proto__: theme_data.VisualDensity.prototype,
        [VisualDensity_vertical]: -1,
        [VisualDensity_horizontal]: -1
      });
    },
    get C2100() {
      return C2100 = dart.const({
        __proto__: theme_data.VisualDensity.prototype,
        [VisualDensity_vertical]: -2,
        [VisualDensity_horizontal]: -2
      });
    },
    get C2101() {
      return C2101 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 1723645116
      });
    },
    get C2102() {
      return C2102 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 1724434632
      });
    },
    get C2103() {
      return C2103 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 1087163596
      });
    },
    get C2104() {
      return C2104 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4284612846.0
      });
    },
    get C2105() {
      return C2105 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4281794739.0
      });
    },
    get C2106() {
      return C2106 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4278442694.0
      });
    },
    get C2107() {
      return C2107 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4278290310.0
      });
    },
    get C2108() {
      return C2108 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4289724448.0
      });
    },
    get C2109() {
      return C2109 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4290479868.0
      });
    },
    get C2110() {
      return C2110 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4279374354.0
      });
    },
    get C2111() {
      return C2111 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4291782265.0
      });
    },
    get C2114() {
      return C2114 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293128957.0
      });
    },
    get C2115() {
      return C2115 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4290502395.0
      });
    },
    get C2116() {
      return C2116 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4287679225.0
      });
    },
    get C2117() {
      return C2117 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4284790262.0
      });
    },
    get C2118() {
      return C2118 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4282557941.0
      });
    },
    get C2119() {
      return C2119 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4280391411.0
      });
    },
    get C2120() {
      return C2120 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4280191205.0
      });
    },
    get C2121() {
      return C2121 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4279858898.0
      });
    },
    get C2122() {
      return C2122 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4279592384.0
      });
    },
    get C2123() {
      return C2123 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4279060385.0
      });
    },
    get C2113() {
      return C2113 = dart.constMap(intL(), ColorL(), [50, C2114 || CT.C2114, 100, C2115 || CT.C2115, 200, C2116 || CT.C2116, 300, C2117 || CT.C2117, 400, C2118 || CT.C2118, 500, C2119 || CT.C2119, 600, C2120 || CT.C2120, 700, C2121 || CT.C2121, 800, C2122 || CT.C2122, 900, C2123 || CT.C2123]);
    },
    get C2112() {
      return C2112 = dart.const({
        __proto__: colors$.MaterialColor.prototype,
        [Color_value]: 4280391411.0,
        [ColorSwatch__swatch]: C2113 || CT.C2113
      });
    },
    get C2124() {
      return C2124 = dart.const({
        __proto__: color_scheme.ColorScheme.prototype,
        [ColorScheme_brightness]: C511 || CT.C511,
        [ColorScheme_onError]: C2058 || CT.C2058,
        [ColorScheme_onBackground]: C384 || CT.C384,
        [ColorScheme_onSurface]: C384 || CT.C384,
        [ColorScheme_onSecondary]: C384 || CT.C384,
        [ColorScheme_onPrimary]: C2058 || CT.C2058,
        [ColorScheme_error]: C2108 || CT.C2108,
        [ColorScheme_background]: C2058 || CT.C2058,
        [ColorScheme_surface]: C2058 || CT.C2058,
        [ColorScheme_secondaryVariant]: C2107 || CT.C2107,
        [ColorScheme_secondary]: C2106 || CT.C2106,
        [ColorScheme_primaryVariant]: C2105 || CT.C2105,
        [ColorScheme_primary]: C2104 || CT.C2104
      });
    },
    get C2125() {
      return C2125 = dart.const({
        __proto__: button_theme.ButtonTextTheme.prototype,
        [_name$20]: "ButtonTextTheme.normal",
        index: 0
      });
    },
    get C2126() {
      return C2126 = dart.const({
        __proto__: button_theme.ButtonTextTheme.prototype,
        [_name$20]: "ButtonTextTheme.accent",
        index: 1
      });
    },
    get C2127() {
      return C2127 = dart.const({
        __proto__: button_theme.ButtonTextTheme.prototype,
        [_name$20]: "ButtonTextTheme.primary",
        index: 2
      });
    },
    get C2128() {
      return C2128 = dart.constList([C2125 || CT.C2125, C2126 || CT.C2126, C2127 || CT.C2127], ButtonTextThemeL());
    },
    get C2129() {
      return C2129 = dart.const({
        __proto__: button_theme.ButtonBarLayoutBehavior.prototype,
        [_name$20]: "ButtonBarLayoutBehavior.constrained",
        index: 0
      });
    },
    get C2130() {
      return C2130 = dart.const({
        __proto__: button_theme.ButtonBarLayoutBehavior.prototype,
        [_name$20]: "ButtonBarLayoutBehavior.padded",
        index: 1
      });
    },
    get C2131() {
      return C2131 = dart.constList([C2129 || CT.C2129, C2130 || CT.C2130], ButtonBarLayoutBehaviorL());
    },
    get C2134() {
      return C2134 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 85,
        [_Location_line]: 237,
        [_Location_file]: null
      });
    },
    get C2135() {
      return C2135 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 97,
        [_Location_line]: 237,
        [_Location_file]: null
      });
    },
    get C2133() {
      return C2133 = dart.constList([C2134 || CT.C2134, C2135 || CT.C2135], _LocationL());
    },
    get C2132() {
      return C2132 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2133 || CT.C2133,
        [_Location_name]: null,
        [_Location_column]: 65,
        [_Location_line]: 237,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/button_theme.dart"
      });
    },
    get C2136() {
      return C2136 = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 24,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 24
      });
    },
    get C2139() {
      return C2139 = dart.const({
        __proto__: ui.Radius.prototype,
        [Radius_y]: 2,
        [Radius_x]: 2
      });
    },
    get C2138() {
      return C2138 = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [BorderRadius_bottomRight]: C2139 || CT.C2139,
        [BorderRadius_bottomLeft]: C2139 || CT.C2139,
        [BorderRadius_topRight]: C2139 || CT.C2139,
        [BorderRadius_topLeft]: C2139 || CT.C2139
      });
    },
    get C2137() {
      return C2137 = dart.const({
        __proto__: rounded_rectangle_border.RoundedRectangleBorder.prototype,
        [OutlinedBorder_side]: C382 || CT.C382,
        [RoundedRectangleBorder_borderRadius]: C2138 || CT.C2138
      });
    },
    get C2140() {
      return C2140 = dart.const({
        __proto__: edge_insets.EdgeInsetsDirectional.prototype,
        [EdgeInsetsDirectional_bottom]: 0,
        [EdgeInsetsDirectional_end]: 16,
        [EdgeInsetsDirectional_top]: 0,
        [EdgeInsetsDirectional_start]: 12
      });
    },
    get C2141() {
      return C2141 = dart.const({
        __proto__: button_theme.ButtonThemeData.prototype,
        [ButtonThemeData__materialTapTargetSize]: null,
        [ButtonThemeData_colorScheme]: null,
        [ButtonThemeData__splashColor]: null,
        [ButtonThemeData__highlightColor]: null,
        [ButtonThemeData__hoverColor]: null,
        [ButtonThemeData__focusColor]: null,
        [ButtonThemeData__disabledColor]: null,
        [ButtonThemeData__buttonColor]: null,
        [ButtonThemeData_alignedDropdown]: false,
        [ButtonThemeData__shape]: null,
        [ButtonThemeData__padding]: null,
        [ButtonThemeData_layoutBehavior]: C2130 || CT.C2130,
        [ButtonThemeData_textTheme]: C2125 || CT.C2125,
        [ButtonThemeData_height]: 36,
        [ButtonThemeData_minWidth]: 88
      });
    },
    get C2144() {
      return C2144 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 13,
        [_Location_line]: 195,
        [_Location_file]: null
      });
    },
    get C2145() {
      return C2145 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 196,
        [_Location_file]: null
      });
    },
    get C2143() {
      return C2143 = dart.constList([C2144 || CT.C2144, C2145 || CT.C2145], _LocationL());
    },
    get C2142() {
      return C2142 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2143 || CT.C2143,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 194,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/button_bar.dart"
      });
    },
    get C2148() {
      return C2148 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mainAxisAlignment",
        [_Location_column]: 9,
        [_Location_line]: 190,
        [_Location_file]: null
      });
    },
    get C2149() {
      return C2149 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mainAxisSize",
        [_Location_column]: 9,
        [_Location_line]: 191,
        [_Location_file]: null
      });
    },
    get C2150() {
      return C2150 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "overflowDirection",
        [_Location_column]: 9,
        [_Location_line]: 192,
        [_Location_file]: null
      });
    },
    get C2151() {
      return C2151 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 9,
        [_Location_line]: 193,
        [_Location_file]: null
      });
    },
    get C2152() {
      return C2152 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "overflowButtonSpacing",
        [_Location_column]: 9,
        [_Location_line]: 199,
        [_Location_file]: null
      });
    },
    get C2147() {
      return C2147 = dart.constList([C2148 || CT.C2148, C2149 || CT.C2149, C2150 || CT.C2150, C2151 || CT.C2151, C2152 || CT.C2152], _LocationL());
    },
    get C2146() {
      return C2146 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2147 || CT.C2147,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 189,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/button_bar.dart"
      });
    },
    get C2155() {
      return C2155 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 7,
        [_Location_line]: 188,
        [_Location_file]: null
      });
    },
    get C2156() {
      return C2156 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 189,
        [_Location_file]: null
      });
    },
    get C2154() {
      return C2154 = dart.constList([C2155 || CT.C2155, C2156 || CT.C2156], _LocationL());
    },
    get C2153() {
      return C2153 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2154 || CT.C2154,
        [_Location_name]: null,
        [_Location_column]: 38,
        [_Location_line]: 187,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/button_bar.dart"
      });
    },
    get C2159() {
      return C2159 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 11,
        [_Location_line]: 205,
        [_Location_file]: null
      });
    },
    get C2160() {
      return C2160 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 209,
        [_Location_file]: null
      });
    },
    get C2158() {
      return C2158 = dart.constList([C2159 || CT.C2159, C2160 || CT.C2160], _LocationL());
    },
    get C2157() {
      return C2157 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2158 || CT.C2158,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 204,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/button_bar.dart"
      });
    },
    get C2161() {
      return C2161 = dart.const({
        __proto__: box.BoxConstraints.prototype,
        [BoxConstraints_maxHeight]: 1 / 0,
        [BoxConstraints_minHeight]: 52,
        [BoxConstraints_maxWidth]: 1 / 0,
        [BoxConstraints_minWidth]: 0
      });
    },
    get C2164() {
      return C2164 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 11,
        [_Location_line]: 213,
        [_Location_file]: null
      });
    },
    get C2165() {
      return C2165 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 11,
        [_Location_line]: 214,
        [_Location_file]: null
      });
    },
    get C2166() {
      return C2166 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 11,
        [_Location_line]: 215,
        [_Location_file]: null
      });
    },
    get C2167() {
      return C2167 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 216,
        [_Location_file]: null
      });
    },
    get C2163() {
      return C2163 = dart.constList([C2164 || CT.C2164, C2165 || CT.C2165, C2166 || CT.C2166, C2167 || CT.C2167], _LocationL());
    },
    get C2162() {
      return C2162 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2163 || CT.C2163,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 212,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/button_bar.dart"
      });
    },
    get C2168() {
      return C2168 = dart.const({
        __proto__: basic_types.Axis.prototype,
        [_name$21]: "Axis.horizontal",
        index: 0
      });
    },
    get C2169() {
      return C2169 = dart.const({
        __proto__: flex.MainAxisSize.prototype,
        [_name$22]: "MainAxisSize.max",
        index: 1
      });
    },
    get C2170() {
      return C2170 = dart.const({
        __proto__: flex.MainAxisAlignment.prototype,
        [_name$22]: "MainAxisAlignment.start",
        index: 0
      });
    },
    get C2171() {
      return C2171 = dart.const({
        __proto__: flex.CrossAxisAlignment.prototype,
        [_name$22]: "CrossAxisAlignment.center",
        index: 2
      });
    },
    get C2172() {
      return C2172 = dart.const({
        __proto__: basic_types.VerticalDirection.prototype,
        [_name$21]: "VerticalDirection.down",
        index: 1
      });
    },
    get C2173() {
      return C2173 = dart.const({
        __proto__: basic_types.VerticalDirection.prototype,
        [_name$21]: "VerticalDirection.up",
        index: 0
      });
    },
    get C2174() {
      return C2174 = dart.const({
        __proto__: flex.MainAxisAlignment.prototype,
        [_name$22]: "MainAxisAlignment.center",
        index: 2
      });
    },
    get C2175() {
      return C2175 = dart.const({
        __proto__: flex.MainAxisAlignment.prototype,
        [_name$22]: "MainAxisAlignment.end",
        index: 1
      });
    },
    get C2178() {
      return C2178 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onNotification",
        [_Location_column]: 9,
        [_Location_line]: 259,
        [_Location_file]: null
      });
    },
    get C2179() {
      return C2179 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 260,
        [_Location_file]: null
      });
    },
    get C2177() {
      return C2177 = dart.constList([C2178 || CT.C2178, C2179 || CT.C2179], _LocationL());
    },
    get C2176() {
      return C2176 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2177 || CT.C2177,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 258,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C2182() {
      return C2182 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 7,
        [_Location_line]: 253,
        [_Location_file]: null
      });
    },
    get C2183() {
      return C2183 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 7,
        [_Location_line]: 254,
        [_Location_file]: null
      });
    },
    get C2184() {
      return C2184 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "elevation",
        [_Location_column]: 7,
        [_Location_line]: 255,
        [_Location_file]: null
      });
    },
    get C2185() {
      return C2185 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shape",
        [_Location_column]: 7,
        [_Location_line]: 256,
        [_Location_file]: null
      });
    },
    get C2186() {
      return C2186 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipBehavior",
        [_Location_column]: 7,
        [_Location_line]: 257,
        [_Location_file]: null
      });
    },
    get C2187() {
      return C2187 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 258,
        [_Location_file]: null
      });
    },
    get C2181() {
      return C2181 = dart.constList([C2182 || CT.C2182, C2183 || CT.C2183, C2184 || CT.C2184, C2185 || CT.C2185, C2186 || CT.C2186, C2187 || CT.C2187], _LocationL());
    },
    get C2180() {
      return C2180 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2181 || CT.C2181,
        [_Location_name]: null,
        [_Location_column]: 32,
        [_Location_line]: 252,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C2190() {
      return C2190 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onVerticalDragStart",
        [_Location_column]: 7,
        [_Location_line]: 264,
        [_Location_file]: null
      });
    },
    get C2191() {
      return C2191 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onVerticalDragUpdate",
        [_Location_column]: 7,
        [_Location_line]: 265,
        [_Location_file]: null
      });
    },
    get C2192() {
      return C2192 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onVerticalDragEnd",
        [_Location_column]: 7,
        [_Location_line]: 266,
        [_Location_file]: null
      });
    },
    get C2193() {
      return C2193 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 267,
        [_Location_file]: null
      });
    },
    get C2194() {
      return C2194 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "excludeFromSemantics",
        [_Location_column]: 7,
        [_Location_line]: 268,
        [_Location_file]: null
      });
    },
    get C2189() {
      return C2189 = dart.constList([C2190 || CT.C2190, C2191 || CT.C2191, C2192 || CT.C2192, C2193 || CT.C2193, C2194 || CT.C2194], _LocationL());
    },
    get C2188() {
      return C2188 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2189 || CT.C2189,
        [_Location_name]: null,
        [_Location_column]: 47,
        [_Location_line]: 263,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C2197() {
      return C2197 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animationController",
        [_Location_column]: 9,
        [_Location_line]: 375,
        [_Location_file]: null
      });
    },
    get C2198() {
      return C2198 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onClosing",
        [_Location_column]: 9,
        [_Location_line]: 376,
        [_Location_file]: null
      });
    },
    get C2199() {
      return C2199 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 9,
        [_Location_line]: 381,
        [_Location_file]: null
      });
    },
    get C2200() {
      return C2200 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundColor",
        [_Location_column]: 9,
        [_Location_line]: 382,
        [_Location_file]: null
      });
    },
    get C2201() {
      return C2201 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "elevation",
        [_Location_column]: 9,
        [_Location_line]: 383,
        [_Location_file]: null
      });
    },
    get C2202() {
      return C2202 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shape",
        [_Location_column]: 9,
        [_Location_line]: 384,
        [_Location_file]: null
      });
    },
    get C2203() {
      return C2203 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipBehavior",
        [_Location_column]: 9,
        [_Location_line]: 385,
        [_Location_file]: null
      });
    },
    get C2204() {
      return C2204 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enableDrag",
        [_Location_column]: 9,
        [_Location_line]: 386,
        [_Location_file]: null
      });
    },
    get C2205() {
      return C2205 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onDragStart",
        [_Location_column]: 9,
        [_Location_line]: 387,
        [_Location_file]: null
      });
    },
    get C2206() {
      return C2206 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onDragEnd",
        [_Location_column]: 9,
        [_Location_line]: 388,
        [_Location_file]: null
      });
    },
    get C2196() {
      return C2196 = dart.constList([C2197 || CT.C2197, C2198 || CT.C2198, C2199 || CT.C2199, C2200 || CT.C2200, C2201 || CT.C2201, C2202 || CT.C2202, C2203 || CT.C2203, C2204 || CT.C2204, C2205 || CT.C2205, C2206 || CT.C2206], _LocationL());
    },
    get C2195() {
      return C2195 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2196 || CT.C2196,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 374,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C2209() {
      return C2209 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "delegate",
        [_Location_column]: 15,
        [_Location_line]: 403,
        [_Location_file]: null
      });
    },
    get C2210() {
      return C2210 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 404,
        [_Location_file]: null
      });
    },
    get C2208() {
      return C2208 = dart.constList([C2209 || CT.C2209, C2210 || CT.C2210], _LocationL());
    },
    get C2207() {
      return C2207 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2208 || CT.C2208,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 402,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C2213() {
      return C2213 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 402,
        [_Location_file]: null
      });
    },
    get C2212() {
      return C2212 = dart.constList([C2213 || CT.C2213], _LocationL());
    },
    get C2211() {
      return C2211 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2212 || CT.C2212,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 401,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C2216() {
      return C2216 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scopesRoute",
        [_Location_column]: 11,
        [_Location_line]: 397,
        [_Location_file]: null
      });
    },
    get C2217() {
      return C2217 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "namesRoute",
        [_Location_column]: 11,
        [_Location_line]: 398,
        [_Location_file]: null
      });
    },
    get C2218() {
      return C2218 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "label",
        [_Location_column]: 11,
        [_Location_line]: 399,
        [_Location_file]: null
      });
    },
    get C2219() {
      return C2219 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "explicitChildNodes",
        [_Location_column]: 11,
        [_Location_line]: 400,
        [_Location_file]: null
      });
    },
    get C2220() {
      return C2220 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 401,
        [_Location_file]: null
      });
    },
    get C2215() {
      return C2215 = dart.constList([C2216 || CT.C2216, C2217 || CT.C2217, C2218 || CT.C2218, C2219 || CT.C2219, C2220 || CT.C2220], _LocationL());
    },
    get C2214() {
      return C2214 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2215 || CT.C2215,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 396,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C2223() {
      return C2223 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animation",
        [_Location_column]: 7,
        [_Location_line]: 373,
        [_Location_file]: null
      });
    },
    get C2224() {
      return C2224 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 374,
        [_Location_file]: null
      });
    },
    get C2225() {
      return C2225 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 7,
        [_Location_line]: 390,
        [_Location_file]: null
      });
    },
    get C2222() {
      return C2222 = dart.constList([C2223 || CT.C2223, C2224 || CT.C2224, C2225 || CT.C2225], _LocationL());
    },
    get C2221() {
      return C2221 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2222 || CT.C2222,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 372,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C2228() {
      return C2228 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "route",
        [_Location_column]: 9,
        [_Location_line]: 476,
        [_Location_file]: null
      });
    },
    get C2229() {
      return C2229 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundColor",
        [_Location_column]: 9,
        [_Location_line]: 477,
        [_Location_file]: null
      });
    },
    get C2230() {
      return C2230 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "elevation",
        [_Location_column]: 9,
        [_Location_line]: 478,
        [_Location_file]: null
      });
    },
    get C2231() {
      return C2231 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shape",
        [_Location_column]: 9,
        [_Location_line]: 479,
        [_Location_file]: null
      });
    },
    get C2232() {
      return C2232 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipBehavior",
        [_Location_column]: 9,
        [_Location_line]: 480,
        [_Location_file]: null
      });
    },
    get C2233() {
      return C2233 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isScrollControlled",
        [_Location_column]: 9,
        [_Location_line]: 481,
        [_Location_file]: null
      });
    },
    get C2234() {
      return C2234 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enableDrag",
        [_Location_column]: 9,
        [_Location_line]: 482,
        [_Location_file]: null
      });
    },
    get C2227() {
      return C2227 = dart.constList([C2228 || CT.C2228, C2229 || CT.C2229, C2230 || CT.C2230, C2231 || CT.C2231, C2232 || CT.C2232, C2233 || CT.C2233, C2234 || CT.C2234], _LocationL());
    },
    get C2226() {
      return C2226 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2227 || CT.C2227,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 475,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C2237() {
      return C2237 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "context",
        [_Location_column]: 7,
        [_Location_line]: 473,
        [_Location_file]: null
      });
    },
    get C2238() {
      return C2238 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "removeTop",
        [_Location_column]: 7,
        [_Location_line]: 474,
        [_Location_file]: null
      });
    },
    get C2239() {
      return C2239 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 475,
        [_Location_file]: null
      });
    },
    get C2236() {
      return C2236 = dart.constList([C2237 || CT.C2237, C2238 || CT.C2238, C2239 || CT.C2239], _LocationL());
    },
    get C2235() {
      return C2235 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2236 || CT.C2236,
        [_Location_name]: null,
        [_Location_column]: 37,
        [_Location_line]: 472,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C2242() {
      return C2242 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 27,
        [_Location_line]: 486,
        [_Location_file]: null
      });
    },
    get C2243() {
      return C2243 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 40,
        [_Location_line]: 486,
        [_Location_file]: null
      });
    },
    get C2241() {
      return C2241 = dart.constList([C2242 || CT.C2242, C2243 || CT.C2243], _LocationL());
    },
    get C2240() {
      return C2240 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2241 || CT.C2241,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 486,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C2244() {
      return C2244 = dart.const({
        __proto__: curves.Cubic.prototype,
        [Cubic_d]: 1,
        [Cubic_c]: 0.355,
        [Cubic_b]: 0.61,
        [Cubic_a]: 0.215
      });
    },
    get C2245() {
      return C2245 = dart.const({
        __proto__: curves.Cubic.prototype,
        [Cubic_d]: 1,
        [Cubic_c]: 0.2,
        [Cubic_b]: 0,
        [Cubic_a]: 0
      });
    },
    get C2246() {
      return C2246 = dart.const({
        __proto__: scaffold$._ScaffoldSlot.prototype,
        [_name$23]: "_ScaffoldSlot.body",
        index: 0
      });
    },
    get C2247() {
      return C2247 = dart.const({
        __proto__: scaffold$._ScaffoldSlot.prototype,
        [_name$23]: "_ScaffoldSlot.appBar",
        index: 1
      });
    },
    get C2248() {
      return C2248 = dart.const({
        __proto__: scaffold$._ScaffoldSlot.prototype,
        [_name$23]: "_ScaffoldSlot.bodyScrim",
        index: 2
      });
    },
    get C2249() {
      return C2249 = dart.const({
        __proto__: scaffold$._ScaffoldSlot.prototype,
        [_name$23]: "_ScaffoldSlot.bottomSheet",
        index: 3
      });
    },
    get C2250() {
      return C2250 = dart.const({
        __proto__: scaffold$._ScaffoldSlot.prototype,
        [_name$23]: "_ScaffoldSlot.snackBar",
        index: 4
      });
    },
    get C2251() {
      return C2251 = dart.const({
        __proto__: scaffold$._ScaffoldSlot.prototype,
        [_name$23]: "_ScaffoldSlot.persistentFooter",
        index: 5
      });
    },
    get C2252() {
      return C2252 = dart.const({
        __proto__: scaffold$._ScaffoldSlot.prototype,
        [_name$23]: "_ScaffoldSlot.bottomNavigationBar",
        index: 6
      });
    },
    get C2253() {
      return C2253 = dart.const({
        __proto__: scaffold$._ScaffoldSlot.prototype,
        [_name$23]: "_ScaffoldSlot.floatingActionButton",
        index: 7
      });
    },
    get C2254() {
      return C2254 = dart.const({
        __proto__: scaffold$._ScaffoldSlot.prototype,
        [_name$23]: "_ScaffoldSlot.drawer",
        index: 8
      });
    },
    get C2255() {
      return C2255 = dart.const({
        __proto__: scaffold$._ScaffoldSlot.prototype,
        [_name$23]: "_ScaffoldSlot.endDrawer",
        index: 9
      });
    },
    get C2256() {
      return C2256 = dart.const({
        __proto__: scaffold$._ScaffoldSlot.prototype,
        [_name$23]: "_ScaffoldSlot.statusBar",
        index: 10
      });
    },
    get C2257() {
      return C2257 = dart.constList([C2246 || CT.C2246, C2247 || CT.C2247, C2248 || CT.C2248, C2249 || CT.C2249, C2250 || CT.C2250, C2251 || CT.C2251, C2252 || CT.C2252, C2253 || CT.C2253, C2254 || CT.C2254, C2255 || CT.C2255, C2256 || CT.C2256], _ScaffoldSlotL());
    },
    get C2260() {
      return C2260 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 11,
        [_Location_line]: 387,
        [_Location_file]: null
      });
    },
    get C2261() {
      return C2261 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 393,
        [_Location_file]: null
      });
    },
    get C2259() {
      return C2259 = dart.constList([C2260 || CT.C2260, C2261 || CT.C2261], _LocationL());
    },
    get C2258() {
      return C2258 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2259 || CT.C2259,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 386,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2264() {
      return C2264 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 7,
        [_Location_line]: 374,
        [_Location_file]: null
      });
    },
    get C2263() {
      return C2263 = dart.constList([C2264 || CT.C2264], _LocationL());
    },
    get C2262() {
      return C2262 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2263 || CT.C2263,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 373,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2265() {
      return C2265 = dart.const({
        __proto__: curves.Interval.prototype,
        [Interval_curve]: C965 || CT.C965,
        [Interval_end]: 0.1,
        [Interval_begin]: 0
      });
    },
    get C2268() {
      return C2268 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 15,
        [_Location_line]: 787,
        [_Location_file]: null
      });
    },
    get C2269() {
      return C2269 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 788,
        [_Location_file]: null
      });
    },
    get C2267() {
      return C2267 = dart.constList([C2268 || CT.C2268, C2269 || CT.C2269], _LocationL());
    },
    get C2266() {
      return C2266 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2267 || CT.C2267,
        [_Location_name]: null,
        [_Location_column]: 13,
        [_Location_line]: 786,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2272() {
      return C2272 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "turns",
        [_Location_column]: 17,
        [_Location_line]: 794,
        [_Location_file]: null
      });
    },
    get C2273() {
      return C2273 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 795,
        [_Location_file]: null
      });
    },
    get C2271() {
      return C2271 = dart.constList([C2272 || CT.C2272, C2273 || CT.C2273], _LocationL());
    },
    get C2270() {
      return C2270 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2271 || CT.C2271,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 793,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2276() {
      return C2276 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scale",
        [_Location_column]: 15,
        [_Location_line]: 792,
        [_Location_file]: null
      });
    },
    get C2277() {
      return C2277 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 793,
        [_Location_file]: null
      });
    },
    get C2275() {
      return C2275 = dart.constList([C2276 || CT.C2276, C2277 || CT.C2277], _LocationL());
    },
    get C2274() {
      return C2274 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2275 || CT.C2275,
        [_Location_name]: null,
        [_Location_column]: 13,
        [_Location_line]: 791,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2280() {
      return C2280 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 15,
        [_Location_line]: 802,
        [_Location_file]: null
      });
    },
    get C2281() {
      return C2281 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 803,
        [_Location_file]: null
      });
    },
    get C2279() {
      return C2279 = dart.constList([C2280 || CT.C2280, C2281 || CT.C2281], _LocationL());
    },
    get C2278() {
      return C2278 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2279 || CT.C2279,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 801,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2284() {
      return C2284 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scale",
        [_Location_column]: 13,
        [_Location_line]: 800,
        [_Location_file]: null
      });
    },
    get C2285() {
      return C2285 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 801,
        [_Location_file]: null
      });
    },
    get C2283() {
      return C2283 = dart.constList([C2284 || CT.C2284, C2285 || CT.C2285], _LocationL());
    },
    get C2282() {
      return C2282 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2283 || CT.C2283,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 799,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2288() {
      return C2288 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "turns",
        [_Location_column]: 15,
        [_Location_line]: 810,
        [_Location_file]: null
      });
    },
    get C2289() {
      return C2289 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 811,
        [_Location_file]: null
      });
    },
    get C2287() {
      return C2287 = dart.constList([C2288 || CT.C2288, C2289 || CT.C2289], _LocationL());
    },
    get C2286() {
      return C2286 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2287 || CT.C2287,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 809,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2292() {
      return C2292 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scale",
        [_Location_column]: 13,
        [_Location_line]: 808,
        [_Location_file]: null
      });
    },
    get C2293() {
      return C2293 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 809,
        [_Location_file]: null
      });
    },
    get C2291() {
      return C2291 = dart.constList([C2292 || CT.C2292, C2293 || CT.C2293], _LocationL());
    },
    get C2290() {
      return C2290 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2291 || CT.C2291,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 807,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2296() {
      return C2296 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 7,
        [_Location_line]: 782,
        [_Location_file]: null
      });
    },
    get C2297() {
      return C2297 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 7,
        [_Location_line]: 783,
        [_Location_file]: null
      });
    },
    get C2295() {
      return C2295 = dart.constList([C2296 || CT.C2296, C2297 || CT.C2297], _LocationL());
    },
    get C2294() {
      return C2294 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2295 || CT.C2295,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 781,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2300() {
      return C2300 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 1824,
        [_Location_file]: null
      });
    },
    get C2299() {
      return C2299 = dart.constList([C2300 || CT.C2300], _LocationL());
    },
    get C2298() {
      return C2298 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2299 || CT.C2299,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 1823,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2303() {
      return C2303 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onNotification",
        [_Location_column]: 13,
        [_Location_line]: 1822,
        [_Location_file]: null
      });
    },
    get C2304() {
      return C2304 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 1823,
        [_Location_file]: null
      });
    },
    get C2302() {
      return C2302 = dart.constList([C2303 || CT.C2303, C2304 || CT.C2304], _LocationL());
    },
    get C2301() {
      return C2301 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2302 || CT.C2302,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 1821,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2307() {
      return C2307 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 7,
        [_Location_line]: 1910,
        [_Location_file]: null
      });
    },
    get C2308() {
      return C2308 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animationController",
        [_Location_column]: 7,
        [_Location_line]: 1911,
        [_Location_file]: null
      });
    },
    get C2309() {
      return C2309 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enableDrag",
        [_Location_column]: 7,
        [_Location_line]: 1912,
        [_Location_file]: null
      });
    },
    get C2310() {
      return C2310 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onClosing",
        [_Location_column]: 7,
        [_Location_line]: 1913,
        [_Location_file]: null
      });
    },
    get C2311() {
      return C2311 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onDismissed",
        [_Location_column]: 7,
        [_Location_line]: 1924,
        [_Location_file]: null
      });
    },
    get C2312() {
      return C2312 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 7,
        [_Location_line]: 1931,
        [_Location_file]: null
      });
    },
    get C2313() {
      return C2313 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isPersistent",
        [_Location_column]: 7,
        [_Location_line]: 1932,
        [_Location_file]: null
      });
    },
    get C2314() {
      return C2314 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundColor",
        [_Location_column]: 7,
        [_Location_line]: 1933,
        [_Location_file]: null
      });
    },
    get C2315() {
      return C2315 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "elevation",
        [_Location_column]: 7,
        [_Location_line]: 1934,
        [_Location_file]: null
      });
    },
    get C2316() {
      return C2316 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shape",
        [_Location_column]: 7,
        [_Location_line]: 1935,
        [_Location_file]: null
      });
    },
    get C2317() {
      return C2317 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipBehavior",
        [_Location_column]: 7,
        [_Location_line]: 1936,
        [_Location_file]: null
      });
    },
    get C2306() {
      return C2306 = dart.constList([C2307 || CT.C2307, C2308 || CT.C2308, C2309 || CT.C2309, C2310 || CT.C2310, C2311 || CT.C2311, C2312 || CT.C2312, C2313 || CT.C2313, C2314 || CT.C2314, C2315 || CT.C2315, C2316 || CT.C2316, C2317 || CT.C2317], _LocationL());
    },
    get C2305() {
      return C2305 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2306 || CT.C2306,
        [_Location_name]: null,
        [_Location_column]: 19,
        [_Location_line]: 1909,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2318() {
      return C2318 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 300000
      });
    },
    get C2319() {
      return C2319 = dart.const({
        __proto__: scaffold$.ScaffoldGeometry.prototype,
        [floatingActionButtonArea$]: null,
        [bottomNavigationBarTop$]: null
      });
    },
    get C2322() {
      return C2322 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 29,
        [_Location_line]: 2256,
        [_Location_file]: null
      });
    },
    get C2323() {
      return C2323 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 41,
        [_Location_line]: 2256,
        [_Location_file]: null
      });
    },
    get C2321() {
      return C2321 = dart.constList([C2322 || CT.C2322, C2323 || CT.C2323], _LocationL());
    },
    get C2320() {
      return C2320 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2321 || CT.C2321,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 2256,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2326() {
      return C2326 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "id",
        [_Location_column]: 11,
        [_Location_line]: 2255,
        [_Location_file]: null
      });
    },
    get C2327() {
      return C2327 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 2256,
        [_Location_file]: null
      });
    },
    get C2325() {
      return C2325 = dart.constList([C2326 || CT.C2326, C2327 || CT.C2327], _LocationL());
    },
    get C2324() {
      return C2324 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2325 || CT.C2325,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 2254,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2330() {
      return C2330 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 11,
        [_Location_line]: 2268,
        [_Location_file]: null
      });
    },
    get C2331() {
      return C2331 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 11,
        [_Location_line]: 2269,
        [_Location_file]: null
      });
    },
    get C2332() {
      return C2332 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 2270,
        [_Location_file]: null
      });
    },
    get C2333() {
      return C2333 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "drawerCallback",
        [_Location_column]: 11,
        [_Location_line]: 2271,
        [_Location_file]: null
      });
    },
    get C2334() {
      return C2334 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "dragStartBehavior",
        [_Location_column]: 11,
        [_Location_line]: 2272,
        [_Location_file]: null
      });
    },
    get C2335() {
      return C2335 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrimColor",
        [_Location_column]: 11,
        [_Location_line]: 2273,
        [_Location_file]: null
      });
    },
    get C2336() {
      return C2336 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "edgeDragWidth",
        [_Location_column]: 11,
        [_Location_line]: 2274,
        [_Location_file]: null
      });
    },
    get C2337() {
      return C2337 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enableOpenDragGesture",
        [_Location_column]: 11,
        [_Location_line]: 2275,
        [_Location_file]: null
      });
    },
    get C2329() {
      return C2329 = dart.constList([C2330 || CT.C2330, C2331 || CT.C2331, C2332 || CT.C2332, C2333 || CT.C2333, C2334 || CT.C2334, C2335 || CT.C2335, C2336 || CT.C2336, C2337 || CT.C2337], _LocationL());
    },
    get C2328() {
      return C2328 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2329 || CT.C2329,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 2267,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2340() {
      return C2340 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 11,
        [_Location_line]: 2293,
        [_Location_file]: null
      });
    },
    get C2341() {
      return C2341 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 11,
        [_Location_line]: 2294,
        [_Location_file]: null
      });
    },
    get C2342() {
      return C2342 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 2295,
        [_Location_file]: null
      });
    },
    get C2343() {
      return C2343 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "drawerCallback",
        [_Location_column]: 11,
        [_Location_line]: 2296,
        [_Location_file]: null
      });
    },
    get C2344() {
      return C2344 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "dragStartBehavior",
        [_Location_column]: 11,
        [_Location_line]: 2297,
        [_Location_file]: null
      });
    },
    get C2345() {
      return C2345 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrimColor",
        [_Location_column]: 11,
        [_Location_line]: 2298,
        [_Location_file]: null
      });
    },
    get C2346() {
      return C2346 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "edgeDragWidth",
        [_Location_column]: 11,
        [_Location_line]: 2299,
        [_Location_file]: null
      });
    },
    get C2347() {
      return C2347 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enableOpenDragGesture",
        [_Location_column]: 11,
        [_Location_line]: 2300,
        [_Location_file]: null
      });
    },
    get C2339() {
      return C2339 = dart.constList([C2340 || CT.C2340, C2341 || CT.C2341, C2342 || CT.C2342, C2343 || CT.C2343, C2344 || CT.C2344, C2345 || CT.C2345, C2346 || CT.C2346, C2347 || CT.C2347], _LocationL());
    },
    get C2338() {
      return C2338 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2339 || CT.C2339,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 2292,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2350() {
      return C2350 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "extendBody",
        [_Location_column]: 9,
        [_Location_line]: 2363,
        [_Location_file]: null
      });
    },
    get C2351() {
      return C2351 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "extendBodyBehindAppBar",
        [_Location_column]: 9,
        [_Location_line]: 2364,
        [_Location_file]: null
      });
    },
    get C2352() {
      return C2352 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "body",
        [_Location_column]: 9,
        [_Location_line]: 2365,
        [_Location_file]: null
      });
    },
    get C2349() {
      return C2349 = dart.constList([C2350 || CT.C2350, C2351 || CT.C2351, C2352 || CT.C2352], _LocationL());
    },
    get C2348() {
      return C2348 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2349 || CT.C2349,
        [_Location_name]: null,
        [_Location_column]: 36,
        [_Location_line]: 2362,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2355() {
      return C2355 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "dismissible",
        [_Location_column]: 11,
        [_Location_line]: 2378,
        [_Location_file]: null
      });
    },
    get C2356() {
      return C2356 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 11,
        [_Location_line]: 2379,
        [_Location_file]: null
      });
    },
    get C2354() {
      return C2354 = dart.constList([C2355 || CT.C2355, C2356 || CT.C2356], _LocationL());
    },
    get C2353() {
      return C2353 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2354 || CT.C2354,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 2377,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2359() {
      return C2359 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 11,
        [_Location_line]: 2396,
        [_Location_file]: null
      });
    },
    get C2360() {
      return C2360 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 2397,
        [_Location_file]: null
      });
    },
    get C2358() {
      return C2358 = dart.constList([C2359 || CT.C2359, C2360 || CT.C2360], _LocationL());
    },
    get C2357() {
      return C2357 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2358 || CT.C2358,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 2395,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2363() {
      return C2363 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 15,
        [_Location_line]: 2443,
        [_Location_file]: null
      });
    },
    get C2362() {
      return C2362 = dart.constList([C2363 || CT.C2363], _LocationL());
    },
    get C2361() {
      return C2361 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2362 || CT.C2362,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 2442,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2366() {
      return C2366 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "top",
        [_Location_column]: 13,
        [_Location_line]: 2441,
        [_Location_file]: null
      });
    },
    get C2367() {
      return C2367 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 2442,
        [_Location_file]: null
      });
    },
    get C2365() {
      return C2365 = dart.constList([C2366 || CT.C2366, C2367 || CT.C2367], _LocationL());
    },
    get C2364() {
      return C2364 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2365 || CT.C2365,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 2440,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2370() {
      return C2370 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "decoration",
        [_Location_column]: 11,
        [_Location_line]: 2435,
        [_Location_file]: null
      });
    },
    get C2371() {
      return C2371 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 2440,
        [_Location_file]: null
      });
    },
    get C2369() {
      return C2369 = dart.constList([C2370 || CT.C2370, C2371 || CT.C2371], _LocationL());
    },
    get C2368() {
      return C2368 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2369 || CT.C2369,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 2434,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2374() {
      return C2374 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 9,
        [_Location_line]: 2471,
        [_Location_file]: null
      });
    },
    get C2375() {
      return C2375 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 9,
        [_Location_line]: 2472,
        [_Location_file]: null
      });
    },
    get C2373() {
      return C2373 = dart.constList([C2374 || CT.C2374, C2375 || CT.C2375], _LocationL());
    },
    get C2372() {
      return C2372 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2373 || CT.C2373,
        [_Location_name]: null,
        [_Location_column]: 28,
        [_Location_line]: 2470,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2378() {
      return C2378 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 2491,
        [_Location_file]: null
      });
    },
    get C2379() {
      return C2379 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "fabMoveAnimation",
        [_Location_column]: 9,
        [_Location_line]: 2492,
        [_Location_file]: null
      });
    },
    get C2380() {
      return C2380 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "fabMotionAnimator",
        [_Location_column]: 9,
        [_Location_line]: 2493,
        [_Location_file]: null
      });
    },
    get C2381() {
      return C2381 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "geometryNotifier",
        [_Location_column]: 9,
        [_Location_line]: 2494,
        [_Location_file]: null
      });
    },
    get C2382() {
      return C2382 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "currentController",
        [_Location_column]: 9,
        [_Location_line]: 2495,
        [_Location_file]: null
      });
    },
    get C2377() {
      return C2377 = dart.constList([C2378 || CT.C2378, C2379 || CT.C2379, C2380 || CT.C2380, C2381 || CT.C2381, C2382 || CT.C2382], _LocationL());
    },
    get C2376() {
      return C2376 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2377 || CT.C2377,
        [_Location_name]: null,
        [_Location_column]: 7,
        [_Location_line]: 2490,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2385() {
      return C2385 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 13,
        [_Location_line]: 2510,
        [_Location_file]: null
      });
    },
    get C2386() {
      return C2386 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTap",
        [_Location_column]: 13,
        [_Location_line]: 2511,
        [_Location_file]: null
      });
    },
    get C2387() {
      return C2387 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "excludeFromSemantics",
        [_Location_column]: 13,
        [_Location_line]: 2513,
        [_Location_file]: null
      });
    },
    get C2384() {
      return C2384 = dart.constList([C2385 || CT.C2385, C2386 || CT.C2386, C2387 || CT.C2387], _LocationL());
    },
    get C2383() {
      return C2383 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2384 || CT.C2384,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 2509,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2390() {
      return C2390 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 15,
        [_Location_line]: 2560,
        [_Location_file]: null
      });
    },
    get C2391() {
      return C2391 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "delegate",
        [_Location_column]: 15,
        [_Location_line]: 2561,
        [_Location_file]: null
      });
    },
    get C2389() {
      return C2389 = dart.constList([C2390 || CT.C2390, C2391 || CT.C2391], _LocationL());
    },
    get C2388() {
      return C2388 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2389 || CT.C2389,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 2559,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2394() {
      return C2394 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animation",
        [_Location_column]: 34,
        [_Location_line]: 2558,
        [_Location_file]: null
      });
    },
    get C2395() {
      return C2395 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 82,
        [_Location_line]: 2558,
        [_Location_file]: null
      });
    },
    get C2393() {
      return C2393 = dart.constList([C2394 || CT.C2394, C2395 || CT.C2395], _LocationL());
    },
    get C2392() {
      return C2392 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2393 || CT.C2393,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 2558,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2398() {
      return C2398 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 11,
        [_Location_line]: 2557,
        [_Location_file]: null
      });
    },
    get C2399() {
      return C2399 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 2558,
        [_Location_file]: null
      });
    },
    get C2397() {
      return C2397 = dart.constList([C2398 || CT.C2398, C2399 || CT.C2399], _LocationL());
    },
    get C2396() {
      return C2396 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2397 || CT.C2397,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 2556,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2402() {
      return C2402 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "controller",
        [_Location_column]: 9,
        [_Location_line]: 2555,
        [_Location_file]: null
      });
    },
    get C2403() {
      return C2403 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 2556,
        [_Location_file]: null
      });
    },
    get C2401() {
      return C2401 = dart.constList([C2402 || CT.C2402, C2403 || CT.C2403], _LocationL());
    },
    get C2400() {
      return C2400 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2401 || CT.C2401,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 2554,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2406() {
      return C2406 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "hasDrawer",
        [_Location_column]: 7,
        [_Location_line]: 2552,
        [_Location_file]: null
      });
    },
    get C2407() {
      return C2407 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "geometryNotifier",
        [_Location_column]: 7,
        [_Location_line]: 2553,
        [_Location_file]: null
      });
    },
    get C2408() {
      return C2408 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 2554,
        [_Location_file]: null
      });
    },
    get C2405() {
      return C2405 = dart.constList([C2406 || CT.C2406, C2407 || CT.C2407, C2408 || CT.C2408], _LocationL());
    },
    get C2404() {
      return C2404 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2405 || CT.C2405,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 2551,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2411() {
      return C2411 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onNotification",
        [_Location_column]: 9,
        [_Location_line]: 2760,
        [_Location_file]: null
      });
    },
    get C2412() {
      return C2412 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 2761,
        [_Location_file]: null
      });
    },
    get C2410() {
      return C2410 = dart.constList([C2411 || CT.C2411, C2412 || CT.C2412], _LocationL());
    },
    get C2409() {
      return C2409 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2410 || CT.C2410,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 2759,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2415() {
      return C2415 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "container",
        [_Location_column]: 7,
        [_Location_line]: 2757,
        [_Location_file]: null
      });
    },
    get C2416() {
      return C2416 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onDismiss",
        [_Location_column]: 7,
        [_Location_line]: 2758,
        [_Location_file]: null
      });
    },
    get C2417() {
      return C2417 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 2759,
        [_Location_file]: null
      });
    },
    get C2414() {
      return C2414 = dart.constList([C2415 || CT.C2415, C2416 || CT.C2416, C2417 || CT.C2417], _LocationL());
    },
    get C2413() {
      return C2413 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2414 || CT.C2414,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 2756,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2420() {
      return C2420 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 13,
        [_Location_line]: 2773,
        [_Location_file]: null
      });
    },
    get C2421() {
      return C2421 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "heightFactor",
        [_Location_column]: 13,
        [_Location_line]: 2774,
        [_Location_file]: null
      });
    },
    get C2422() {
      return C2422 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 2775,
        [_Location_file]: null
      });
    },
    get C2419() {
      return C2419 = dart.constList([C2420 || CT.C2420, C2421 || CT.C2421, C2422 || CT.C2422], _LocationL());
    },
    get C2418() {
      return C2418 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2419 || CT.C2419,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 2772,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2425() {
      return C2425 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animationController",
        [_Location_column]: 13,
        [_Location_line]: 2780,
        [_Location_file]: null
      });
    },
    get C2426() {
      return C2426 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enableDrag",
        [_Location_column]: 13,
        [_Location_line]: 2781,
        [_Location_file]: null
      });
    },
    get C2427() {
      return C2427 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onDragStart",
        [_Location_column]: 13,
        [_Location_line]: 2782,
        [_Location_file]: null
      });
    },
    get C2428() {
      return C2428 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onDragEnd",
        [_Location_column]: 13,
        [_Location_line]: 2783,
        [_Location_file]: null
      });
    },
    get C2429() {
      return C2429 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onClosing",
        [_Location_column]: 13,
        [_Location_line]: 2784,
        [_Location_file]: null
      });
    },
    get C2430() {
      return C2430 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 13,
        [_Location_line]: 2785,
        [_Location_file]: null
      });
    },
    get C2431() {
      return C2431 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundColor",
        [_Location_column]: 13,
        [_Location_line]: 2786,
        [_Location_file]: null
      });
    },
    get C2432() {
      return C2432 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "elevation",
        [_Location_column]: 13,
        [_Location_line]: 2787,
        [_Location_file]: null
      });
    },
    get C2433() {
      return C2433 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shape",
        [_Location_column]: 13,
        [_Location_line]: 2788,
        [_Location_file]: null
      });
    },
    get C2434() {
      return C2434 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipBehavior",
        [_Location_column]: 13,
        [_Location_line]: 2789,
        [_Location_file]: null
      });
    },
    get C2424() {
      return C2424 = dart.constList([C2425 || CT.C2425, C2426 || CT.C2426, C2427 || CT.C2427, C2428 || CT.C2428, C2429 || CT.C2429, C2430 || CT.C2430, C2431 || CT.C2431, C2432 || CT.C2432, C2433 || CT.C2433, C2434 || CT.C2434], _LocationL());
    },
    get C2423() {
      return C2423 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2424 || CT.C2424,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 2779,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2437() {
      return C2437 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animation",
        [_Location_column]: 9,
        [_Location_line]: 2770,
        [_Location_file]: null
      });
    },
    get C2438() {
      return C2438 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 9,
        [_Location_line]: 2771,
        [_Location_file]: null
      });
    },
    get C2439() {
      return C2439 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 2778,
        [_Location_file]: null
      });
    },
    get C2436() {
      return C2436 = dart.constList([C2437 || CT.C2437, C2438 || CT.C2438, C2439 || CT.C2439], _LocationL());
    },
    get C2435() {
      return C2435 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2436 || CT.C2436,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 2769,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2442() {
      return C2442 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onClosing",
        [_Location_column]: 9,
        [_Location_line]: 2797,
        [_Location_file]: null
      });
    },
    get C2443() {
      return C2443 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 9,
        [_Location_line]: 2798,
        [_Location_file]: null
      });
    },
    get C2444() {
      return C2444 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundColor",
        [_Location_column]: 9,
        [_Location_line]: 2799,
        [_Location_file]: null
      });
    },
    get C2441() {
      return C2441 = dart.constList([C2442 || CT.C2442, C2443 || CT.C2443, C2444 || CT.C2444], _LocationL());
    },
    get C2440() {
      return C2440 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2441 || CT.C2441,
        [_Location_name]: null,
        [_Location_column]: 7,
        [_Location_line]: 2796,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C2445() {
      return C2445 = dart.const({
        __proto__: material.MaterialType.prototype,
        [_name$24]: "MaterialType.canvas",
        index: 0
      });
    },
    get C2446() {
      return C2446 = dart.const({
        __proto__: material.MaterialType.prototype,
        [_name$24]: "MaterialType.card",
        index: 1
      });
    },
    get C2447() {
      return C2447 = dart.const({
        __proto__: material.MaterialType.prototype,
        [_name$24]: "MaterialType.circle",
        index: 2
      });
    },
    get C2448() {
      return C2448 = dart.const({
        __proto__: material.MaterialType.prototype,
        [_name$24]: "MaterialType.button",
        index: 3
      });
    },
    get C2449() {
      return C2449 = dart.const({
        __proto__: material.MaterialType.prototype,
        [_name$24]: "MaterialType.transparency",
        index: 4
      });
    },
    get C2450() {
      return C2450 = dart.constList([C2445 || CT.C2445, C2446 || CT.C2446, C2447 || CT.C2447, C2448 || CT.C2448, C2449 || CT.C2449], MaterialTypeL());
    },
    get C2453() {
      return C2453 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 9,
        [_Location_line]: 374,
        [_Location_file]: null
      });
    },
    get C2454() {
      return C2454 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "duration",
        [_Location_column]: 9,
        [_Location_line]: 375,
        [_Location_file]: null
      });
    },
    get C2455() {
      return C2455 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 376,
        [_Location_file]: null
      });
    },
    get C2452() {
      return C2452 = dart.constList([C2453 || CT.C2453, C2454 || CT.C2454, C2455 || CT.C2455], _LocationL());
    },
    get C2451() {
      return C2451 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2452 || CT.C2452,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 373,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/material.dart"
      });
    },
    get C2458() {
      return C2458 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 9,
        [_Location_line]: 386,
        [_Location_file]: null
      });
    },
    get C2459() {
      return C2459 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "absorbHitTest",
        [_Location_column]: 9,
        [_Location_line]: 387,
        [_Location_file]: null
      });
    },
    get C2460() {
      return C2460 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 9,
        [_Location_line]: 388,
        [_Location_file]: null
      });
    },
    get C2461() {
      return C2461 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 389,
        [_Location_file]: null
      });
    },
    get C2462() {
      return C2462 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "vsync",
        [_Location_column]: 9,
        [_Location_line]: 390,
        [_Location_file]: null
      });
    },
    get C2457() {
      return C2457 = dart.constList([C2458 || CT.C2458, C2459 || CT.C2459, C2460 || CT.C2460, C2461 || CT.C2461, C2462 || CT.C2462], _LocationL());
    },
    get C2456() {
      return C2456 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2457 || CT.C2457,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 385,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/material.dart"
      });
    },
    get C2465() {
      return C2465 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onNotification",
        [_Location_column]: 7,
        [_Location_line]: 380,
        [_Location_file]: null
      });
    },
    get C2466() {
      return C2466 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 385,
        [_Location_file]: null
      });
    },
    get C2464() {
      return C2464 = dart.constList([C2465 || CT.C2465, C2466 || CT.C2466], _LocationL());
    },
    get C2463() {
      return C2463 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2464 || CT.C2464,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 379,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/material.dart"
      });
    },
    get C2469() {
      return C2469 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "curve",
        [_Location_column]: 9,
        [_Location_line]: 405,
        [_Location_file]: null
      });
    },
    get C2470() {
      return C2470 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "duration",
        [_Location_column]: 9,
        [_Location_line]: 406,
        [_Location_file]: null
      });
    },
    get C2471() {
      return C2471 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shape",
        [_Location_column]: 9,
        [_Location_line]: 407,
        [_Location_file]: null
      });
    },
    get C2472() {
      return C2472 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipBehavior",
        [_Location_column]: 9,
        [_Location_line]: 408,
        [_Location_file]: null
      });
    },
    get C2473() {
      return C2473 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "borderRadius",
        [_Location_column]: 9,
        [_Location_line]: 409,
        [_Location_file]: null
      });
    },
    get C2474() {
      return C2474 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "elevation",
        [_Location_column]: 9,
        [_Location_line]: 410,
        [_Location_file]: null
      });
    },
    get C2475() {
      return C2475 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 9,
        [_Location_line]: 411,
        [_Location_file]: null
      });
    },
    get C2476() {
      return C2476 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shadowColor",
        [_Location_column]: 9,
        [_Location_line]: 412,
        [_Location_file]: null
      });
    },
    get C2477() {
      return C2477 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animateColor",
        [_Location_column]: 9,
        [_Location_line]: 413,
        [_Location_file]: null
      });
    },
    get C2468() {
      return C2468 = dart.constList([C2469 || CT.C2469, C2470 || CT.C2470, C2471 || CT.C2471, C2472 || CT.C2472, C2473 || CT.C2473, C2474 || CT.C2474, C2475 || CT.C2475, C2476 || CT.C2476, C2477 || CT.C2477, C1041 || CT.C1041], _LocationL());
    },
    get C2467() {
      return C2467 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2468 || CT.C2468,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 404,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/material.dart"
      });
    },
    get C2480() {
      return C2480 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "curve",
        [_Location_column]: 7,
        [_Location_line]: 430,
        [_Location_file]: null
      });
    },
    get C2481() {
      return C2481 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "duration",
        [_Location_column]: 7,
        [_Location_line]: 431,
        [_Location_file]: null
      });
    },
    get C2482() {
      return C2482 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shape",
        [_Location_column]: 7,
        [_Location_line]: 432,
        [_Location_file]: null
      });
    },
    get C2483() {
      return C2483 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "borderOnForeground",
        [_Location_column]: 7,
        [_Location_line]: 433,
        [_Location_file]: null
      });
    },
    get C2484() {
      return C2484 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipBehavior",
        [_Location_column]: 7,
        [_Location_line]: 434,
        [_Location_file]: null
      });
    },
    get C2485() {
      return C2485 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "elevation",
        [_Location_column]: 7,
        [_Location_line]: 435,
        [_Location_file]: null
      });
    },
    get C2486() {
      return C2486 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 7,
        [_Location_line]: 436,
        [_Location_file]: null
      });
    },
    get C2487() {
      return C2487 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shadowColor",
        [_Location_column]: 7,
        [_Location_line]: 437,
        [_Location_file]: null
      });
    },
    get C2488() {
      return C2488 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 438,
        [_Location_file]: null
      });
    },
    get C2479() {
      return C2479 = dart.constList([C2480 || CT.C2480, C2481 || CT.C2481, C2482 || CT.C2482, C2483 || CT.C2483, C2484 || CT.C2484, C2485 || CT.C2485, C2486 || CT.C2486, C2487 || CT.C2487, C2488 || CT.C2488], _LocationL());
    },
    get C2478() {
      return C2478 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2479 || CT.C2479,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 429,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/material.dart"
      });
    },
    get C2491() {
      return C2491 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 449,
        [_Location_file]: null
      });
    },
    get C2492() {
      return C2492 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shape",
        [_Location_column]: 7,
        [_Location_line]: 450,
        [_Location_file]: null
      });
    },
    get C2490() {
      return C2490 = dart.constList([C2491 || CT.C2491, C2492 || CT.C2492], _LocationL());
    },
    get C2489() {
      return C2489 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2490 || CT.C2490,
        [_Location_name]: null,
        [_Location_column]: 37,
        [_Location_line]: 448,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/material.dart"
      });
    },
    get C2495() {
      return C2495 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 456,
        [_Location_file]: null
      });
    },
    get C2496() {
      return C2496 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipper",
        [_Location_column]: 7,
        [_Location_line]: 457,
        [_Location_file]: null
      });
    },
    get C2497() {
      return C2497 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipBehavior",
        [_Location_column]: 7,
        [_Location_line]: 461,
        [_Location_file]: null
      });
    },
    get C2494() {
      return C2494 = dart.constList([C2495 || CT.C2495, C2496 || CT.C2496, C2497 || CT.C2497], _LocationL());
    },
    get C2493() {
      return C2493 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2494 || CT.C2494,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 455,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/material.dart"
      });
    },
    get C2500() {
      return C2500 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 789,
        [_Location_file]: null
      });
    },
    get C2501() {
      return C2501 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shape",
        [_Location_column]: 9,
        [_Location_line]: 790,
        [_Location_file]: null
      });
    },
    get C2502() {
      return C2502 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "borderOnForeground",
        [_Location_column]: 9,
        [_Location_line]: 791,
        [_Location_file]: null
      });
    },
    get C2499() {
      return C2499 = dart.constList([C2500 || CT.C2500, C2501 || CT.C2501, C2502 || CT.C2502], _LocationL());
    },
    get C2498() {
      return C2498 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2499 || CT.C2499,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 788,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/material.dart"
      });
    },
    get C2505() {
      return C2505 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 788,
        [_Location_file]: null
      });
    },
    get C2506() {
      return C2506 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipper",
        [_Location_column]: 7,
        [_Location_line]: 793,
        [_Location_file]: null
      });
    },
    get C2507() {
      return C2507 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipBehavior",
        [_Location_column]: 7,
        [_Location_line]: 797,
        [_Location_file]: null
      });
    },
    get C2508() {
      return C2508 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "elevation",
        [_Location_column]: 7,
        [_Location_line]: 798,
        [_Location_file]: null
      });
    },
    get C2509() {
      return C2509 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 7,
        [_Location_line]: 799,
        [_Location_file]: null
      });
    },
    get C2510() {
      return C2510 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shadowColor",
        [_Location_column]: 7,
        [_Location_line]: 800,
        [_Location_file]: null
      });
    },
    get C2504() {
      return C2504 = dart.constList([C2505 || CT.C2505, C2506 || CT.C2506, C2507 || CT.C2507, C2508 || CT.C2508, C2509 || CT.C2509, C2510 || CT.C2510], _LocationL());
    },
    get C2503() {
      return C2503 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2504 || CT.C2504,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 787,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/material.dart"
      });
    },
    get C2513() {
      return C2513 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 819,
        [_Location_file]: null
      });
    },
    get C2514() {
      return C2514 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "painter",
        [_Location_column]: 7,
        [_Location_line]: 820,
        [_Location_file]: null
      });
    },
    get C2515() {
      return C2515 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "foregroundPainter",
        [_Location_column]: 7,
        [_Location_line]: 821,
        [_Location_file]: null
      });
    },
    get C2512() {
      return C2512 = dart.constList([C2513 || CT.C2513, C2514 || CT.C2514, C2515 || CT.C2515], _LocationL());
    },
    get C2511() {
      return C2511 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2512 || CT.C2512,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 818,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/material.dart"
      });
    },
    get C2516() {
      return C2516 = dart.const({
        __proto__: basic_types.Axis.prototype,
        [_name$21]: "Axis.vertical",
        index: 1
      });
    },
    get C2519() {
      return C2519 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "header",
        [_Location_column]: 11,
        [_Location_line]: 153,
        [_Location_file]: null
      });
    },
    get C2520() {
      return C2520 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 11,
        [_Location_line]: 154,
        [_Location_file]: null
      });
    },
    get C2521() {
      return C2521 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrollController",
        [_Location_column]: 11,
        [_Location_line]: 155,
        [_Location_file]: null
      });
    },
    get C2522() {
      return C2522 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrollDirection",
        [_Location_column]: 11,
        [_Location_line]: 156,
        [_Location_file]: null
      });
    },
    get C2523() {
      return C2523 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onReorder",
        [_Location_column]: 11,
        [_Location_line]: 157,
        [_Location_file]: null
      });
    },
    get C2524() {
      return C2524 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 11,
        [_Location_line]: 158,
        [_Location_file]: null
      });
    },
    get C2525() {
      return C2525 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "reverse",
        [_Location_column]: 11,
        [_Location_line]: 159,
        [_Location_file]: null
      });
    },
    get C2518() {
      return C2518 = dart.constList([C2519 || CT.C2519, C2520 || CT.C2520, C2521 || CT.C2521, C2522 || CT.C2522, C2523 || CT.C2523, C2524 || CT.C2524, C2525 || CT.C2525], _LocationL());
    },
    get C2517() {
      return C2517 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2518 || CT.C2518,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 152,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/reorderable_list.dart"
      });
    },
    get C2528() {
      return C2528 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 7,
        [_Location_line]: 168,
        [_Location_file]: null
      });
    },
    get C2529() {
      return C2529 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "initialEntries",
        [_Location_column]: 7,
        [_Location_line]: 169,
        [_Location_file]: null
      });
    },
    get C2527() {
      return C2527 = dart.constList([C2528 || CT.C2528, C2529 || CT.C2529], _LocationL());
    },
    get C2526() {
      return C2526 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2527 || CT.C2527,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 167,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/reorderable_list.dart"
      });
    },
    get C2532() {
      return C2532 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 20,
        [_Location_line]: 355,
        [_Location_file]: null
      });
    },
    get C2531() {
      return C2531 = dart.constList([C2532 || CT.C2532], _LocationL());
    },
    get C2530() {
      return C2530 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2531 || CT.C2531,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 355,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/reorderable_list.dart"
      });
    },
    get C2535() {
      return C2535 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 23,
        [_Location_line]: 358,
        [_Location_file]: null
      });
    },
    get C2534() {
      return C2534 = dart.constList([C2535 || CT.C2535], _LocationL());
    },
    get C2533() {
      return C2533 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2534 || CT.C2534,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 358,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/reorderable_list.dart"
      });
    },
    get C2538() {
      return C2538 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "customSemanticsActions",
        [_Location_column]: 13,
        [_Location_line]: 448,
        [_Location_file]: null
      });
    },
    get C2539() {
      return C2539 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 449,
        [_Location_file]: null
      });
    },
    get C2537() {
      return C2537 = dart.constList([C2538 || CT.C2538, C2539 || CT.C2539], _LocationL());
    },
    get C2536() {
      return C2536 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2537 || CT.C2537,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 447,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/reorderable_list.dart"
      });
    },
    get C2542() {
      return C2542 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 447,
        [_Location_file]: null
      });
    },
    get C2541() {
      return C2541 = dart.constList([C2542 || CT.C2542], _LocationL());
    },
    get C2540() {
      return C2540 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2541 || CT.C2541,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 446,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/reorderable_list.dart"
      });
    },
    get C2545() {
      return C2545 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 9,
        [_Location_line]: 445,
        [_Location_file]: null
      });
    },
    get C2546() {
      return C2546 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 446,
        [_Location_file]: null
      });
    },
    get C2544() {
      return C2544 = dart.constList([C2545 || CT.C2545, C2546 || CT.C2546], _LocationL());
    },
    get C2543() {
      return C2543 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2544 || CT.C2544,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 444,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/reorderable_list.dart"
      });
    },
    get C2549() {
      return C2549 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "elevation",
        [_Location_column]: 13,
        [_Location_line]: 470,
        [_Location_file]: null
      });
    },
    get C2550() {
      return C2550 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 471,
        [_Location_file]: null
      });
    },
    get C2548() {
      return C2548 = dart.constList([C2549 || CT.C2549, C2550 || CT.C2550], _LocationL());
    },
    get C2547() {
      return C2547 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2548 || CT.C2548,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 469,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/reorderable_list.dart"
      });
    },
    get C2553() {
      return C2553 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 11,
        [_Location_line]: 466,
        [_Location_file]: null
      });
    },
    get C2554() {
      return C2554 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 11,
        [_Location_line]: 468,
        [_Location_file]: null
      });
    },
    get C2555() {
      return C2555 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 469,
        [_Location_file]: null
      });
    },
    get C2552() {
      return C2552 = dart.constList([C2553 || CT.C2553, C2554 || CT.C2554, C2555 || CT.C2555], _LocationL());
    },
    get C2551() {
      return C2551 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2552 || CT.C2552,
        [_Location_name]: null,
        [_Location_column]: 19,
        [_Location_line]: 465,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/reorderable_list.dart"
      });
    },
    get C2557() {
      return C2557 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C55 || CT.C55,
        [_Location_name]: null,
        [_Location_column]: 48,
        [_Location_line]: 474,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/reorderable_list.dart"
      });
    },
    get C2556() {
      return C2556 = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget__location]: C2557 || CT.C2557,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: null,
        [SizedBox_width]: null
      });
    },
    get C2559() {
      return C2559 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C55 || CT.C55,
        [_Location_name]: null,
        [_Location_column]: 34,
        [_Location_line]: 475,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/reorderable_list.dart"
      });
    },
    get C2558() {
      return C2558 = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget__location]: C2559 || CT.C2559,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: null,
        [SizedBox_width]: null
      });
    },
    get C2562() {
      return C2562 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxSimultaneousDrags",
        [_Location_column]: 9,
        [_Location_line]: 461,
        [_Location_file]: null
      });
    },
    get C2563() {
      return C2563 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "axis",
        [_Location_column]: 9,
        [_Location_line]: 462,
        [_Location_file]: null
      });
    },
    get C2564() {
      return C2564 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 9,
        [_Location_line]: 463,
        [_Location_file]: null
      });
    },
    get C2565() {
      return C2565 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "ignoringFeedbackSemantics",
        [_Location_column]: 9,
        [_Location_line]: 464,
        [_Location_file]: null
      });
    },
    get C2566() {
      return C2566 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "feedback",
        [_Location_column]: 9,
        [_Location_line]: 465,
        [_Location_file]: null
      });
    },
    get C2567() {
      return C2567 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 474,
        [_Location_file]: null
      });
    },
    get C2568() {
      return C2568 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "childWhenDragging",
        [_Location_column]: 9,
        [_Location_line]: 475,
        [_Location_file]: null
      });
    },
    get C2569() {
      return C2569 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "dragAnchor",
        [_Location_column]: 9,
        [_Location_line]: 476,
        [_Location_file]: null
      });
    },
    get C2570() {
      return C2570 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onDragStarted",
        [_Location_column]: 9,
        [_Location_line]: 477,
        [_Location_file]: null
      });
    },
    get C2571() {
      return C2571 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onDragCompleted",
        [_Location_column]: 9,
        [_Location_line]: 480,
        [_Location_file]: null
      });
    },
    get C2572() {
      return C2572 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onDraggableCanceled",
        [_Location_column]: 9,
        [_Location_line]: 484,
        [_Location_file]: null
      });
    },
    get C2561() {
      return C2561 = dart.constList([C2562 || CT.C2562, C2563 || CT.C2563, C2564 || CT.C2564, C2565 || CT.C2565, C2566 || CT.C2566, C2567 || CT.C2567, C2568 || CT.C2568, C2569 || CT.C2569, C2570 || CT.C2570, C2571 || CT.C2571, C2572 || CT.C2572], _LocationL());
    },
    get C2560() {
      return C2560 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2561 || CT.C2561,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 460,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/reorderable_list.dart"
      });
    },
    get C2575() {
      return C2575 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 30,
        [_Location_line]: 499,
        [_Location_file]: null
      });
    },
    get C2574() {
      return C2574 = dart.constList([C2575 || CT.C2575], _LocationL());
    },
    get C2573() {
      return C2573 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2574 || CT.C2574,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 499,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/reorderable_list.dart"
      });
    },
    get C2578() {
      return C2578 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 30,
        [_Location_line]: 503,
        [_Location_file]: null
      });
    },
    get C2577() {
      return C2577 = dart.constList([C2578 || CT.C2578], _LocationL());
    },
    get C2576() {
      return C2576 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2577 || CT.C2577,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 503,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/reorderable_list.dart"
      });
    },
    get C2581() {
      return C2581 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "sizeFactor",
        [_Location_column]: 13,
        [_Location_line]: 512,
        [_Location_file]: null
      });
    },
    get C2582() {
      return C2582 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "axis",
        [_Location_column]: 13,
        [_Location_line]: 513,
        [_Location_file]: null
      });
    },
    get C2583() {
      return C2583 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 514,
        [_Location_file]: null
      });
    },
    get C2580() {
      return C2580 = dart.constList([C2581 || CT.C2581, C2582 || CT.C2582, C2583 || CT.C2583], _LocationL());
    },
    get C2579() {
      return C2579 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2580 || CT.C2580,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 511,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/reorderable_list.dart"
      });
    },
    get C2586() {
      return C2586 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "sizeFactor",
        [_Location_column]: 13,
        [_Location_line]: 524,
        [_Location_file]: null
      });
    },
    get C2587() {
      return C2587 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "axis",
        [_Location_column]: 13,
        [_Location_line]: 525,
        [_Location_file]: null
      });
    },
    get C2588() {
      return C2588 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 526,
        [_Location_file]: null
      });
    },
    get C2585() {
      return C2585 = dart.constList([C2586 || CT.C2586, C2587 || CT.C2587, C2588 || CT.C2588], _LocationL());
    },
    get C2584() {
      return C2584 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2585 || CT.C2585,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 523,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/reorderable_list.dart"
      });
    },
    get C2591() {
      return C2591 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 9,
        [_Location_line]: 537,
        [_Location_file]: null
      });
    },
    get C2592() {
      return C2592 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onWillAccept",
        [_Location_column]: 9,
        [_Location_line]: 538,
        [_Location_file]: null
      });
    },
    get C2593() {
      return C2593 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onAccept",
        [_Location_column]: 9,
        [_Location_line]: 547,
        [_Location_file]: null
      });
    },
    get C2594() {
      return C2594 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onLeave",
        [_Location_column]: 9,
        [_Location_line]: 548,
        [_Location_file]: null
      });
    },
    get C2590() {
      return C2590 = dart.constList([C2591 || CT.C2591, C2592 || CT.C2592, C2593 || CT.C2593, C2594 || CT.C2594], _LocationL());
    },
    get C2589() {
      return C2589 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2590 || CT.C2590,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 536,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/reorderable_list.dart"
      });
    },
    get C2597() {
      return C2597 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 20,
        [_Location_line]: 535,
        [_Location_file]: null
      });
    },
    get C2596() {
      return C2596 = dart.constList([C2597 || CT.C2597], _LocationL());
    },
    get C2595() {
      return C2595 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2596 || CT.C2596,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 535,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/reorderable_list.dart"
      });
    },
    get C2598() {
      return C2598 = dart.const({
        __proto__: ValueKeyOfStringL().prototype,
        [ValueKey_value]: "DraggableList - End Widget"
      });
    },
    get C2601() {
      return C2601 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 13,
        [_Location_line]: 563,
        [_Location_file]: null
      });
    },
    get C2602() {
      return C2602 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 13,
        [_Location_line]: 564,
        [_Location_file]: null
      });
    },
    get C2603() {
      return C2603 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 13,
        [_Location_line]: 565,
        [_Location_file]: null
      });
    },
    get C2600() {
      return C2600 = dart.constList([C2601 || CT.C2601, C2602 || CT.C2602, C2603 || CT.C2603], _LocationL());
    },
    get C2599() {
      return C2599 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2600 || CT.C2600,
        [_Location_name]: null,
        [_Location_column]: 27,
        [_Location_line]: 562,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/reorderable_list.dart"
      });
    },
    get C2606() {
      return C2606 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 13,
        [_Location_line]: 571,
        [_Location_file]: null
      });
    },
    get C2607() {
      return C2607 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 13,
        [_Location_line]: 572,
        [_Location_file]: null
      });
    },
    get C2608() {
      return C2608 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 13,
        [_Location_line]: 573,
        [_Location_file]: null
      });
    },
    get C2605() {
      return C2605 = dart.constList([C2606 || CT.C2606, C2607 || CT.C2607, C2608 || CT.C2608], _LocationL());
    },
    get C2604() {
      return C2604 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2605 || CT.C2605,
        [_Location_name]: null,
        [_Location_column]: 27,
        [_Location_line]: 570,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/reorderable_list.dart"
      });
    },
    get C2611() {
      return C2611 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrollDirection",
        [_Location_column]: 9,
        [_Location_line]: 583,
        [_Location_file]: null
      });
    },
    get C2612() {
      return C2612 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 9,
        [_Location_line]: 584,
        [_Location_file]: null
      });
    },
    get C2613() {
      return C2613 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "controller",
        [_Location_column]: 9,
        [_Location_line]: 585,
        [_Location_file]: null
      });
    },
    get C2614() {
      return C2614 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "reverse",
        [_Location_column]: 9,
        [_Location_line]: 586,
        [_Location_file]: null
      });
    },
    get C2615() {
      return C2615 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 587,
        [_Location_file]: null
      });
    },
    get C2610() {
      return C2610 = dart.constList([C2611 || CT.C2611, C2612 || CT.C2612, C2613 || CT.C2613, C2614 || CT.C2614, C2615 || CT.C2615], _LocationL());
    },
    get C2609() {
      return C2609 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2610 || CT.C2610,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 582,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/reorderable_list.dart"
      });
    },
    get C2618() {
      return C2618 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 26,
        [_Location_line]: 557,
        [_Location_file]: null
      });
    },
    get C2617() {
      return C2617 = dart.constList([C2618 || CT.C2618], _LocationL());
    },
    get C2616() {
      return C2616 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2617 || CT.C2617,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 557,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/reorderable_list.dart"
      });
    },
    get C2619() {
      return C2619 = dart.constList([31, -1, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], intL());
    },
    get C2620() {
      return C2620 = dart.const({
        __proto__: material_localizations.DefaultMaterialLocalizations.prototype
      });
    },
    get C2621() {
      return C2621 = dart.constList(["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"], StringL());
    },
    get C2622() {
      return C2622 = dart.constList(["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"], StringL());
    },
    get C2623() {
      return C2623 = dart.constList(["S", "M", "T", "W", "T", "F", "S"], StringL());
    },
    get C2624() {
      return C2624 = dart.constList(["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], StringL());
    },
    get C2625() {
      return C2625 = dart.constList(["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], StringL());
    },
    get C2626() {
      return C2626 = dart.const({
        __proto__: material_localizations._MaterialLocalizationsDelegate.prototype
      });
    },
    get C2629() {
      return C2629 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 11,
        [_Location_line]: 155,
        [_Location_file]: null
      });
    },
    get C2630() {
      return C2630 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 156,
        [_Location_file]: null
      });
    },
    get C2628() {
      return C2628 = dart.constList([C2629 || CT.C2629, C2630 || CT.C2630], _LocationL());
    },
    get C2627() {
      return C2627 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2628 || CT.C2628,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 154,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/theme.dart"
      });
    },
    get C2633() {
      return C2633 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 9,
        [_Location_line]: 151,
        [_Location_file]: null
      });
    },
    get C2634() {
      return C2634 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 154,
        [_Location_file]: null
      });
    },
    get C2632() {
      return C2632 = dart.constList([C2633 || CT.C2633, C2634 || CT.C2634], _LocationL());
    },
    get C2631() {
      return C2631 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2632 || CT.C2632,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 147,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/theme.dart"
      });
    },
    get C2637() {
      return C2637 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "theme",
        [_Location_column]: 7,
        [_Location_line]: 146,
        [_Location_file]: null
      });
    },
    get C2638() {
      return C2638 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 147,
        [_Location_file]: null
      });
    },
    get C2636() {
      return C2636 = dart.constList([C2637 || CT.C2637, C2638 || CT.C2638], _LocationL());
    },
    get C2635() {
      return C2635 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2636 || CT.C2636,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 145,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/theme.dart"
      });
    },
    get C2641() {
      return C2641 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 59,
        [_Location_line]: 182,
        [_Location_file]: null
      });
    },
    get C2642() {
      return C2642 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 77,
        [_Location_line]: 182,
        [_Location_file]: null
      });
    },
    get C2640() {
      return C2640 = dart.constList([C2641 || CT.C2641, C2642 || CT.C2642], _LocationL());
    },
    get C2639() {
      return C2639 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2640 || CT.C2640,
        [_Location_name]: null,
        [_Location_column]: 53,
        [_Location_line]: 182,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/theme.dart"
      });
    },
    get C2645() {
      return C2645 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isMaterialAppTheme",
        [_Location_column]: 7,
        [_Location_line]: 266,
        [_Location_file]: null
      });
    },
    get C2646() {
      return C2646 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 7,
        [_Location_line]: 268,
        [_Location_file]: null
      });
    },
    get C2644() {
      return C2644 = dart.constList([C2645 || CT.C2645, C2193 || CT.C2193, C2646 || CT.C2646], _LocationL());
    },
    get C2643() {
      return C2643 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2644 || CT.C2644,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 265,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/theme.dart"
      });
    },
    get C2647() {
      return C2647 = dart.const({
        __proto__: curves.Interval.prototype,
        [Interval_curve]: C216 || CT.C216,
        [Interval_end]: 1,
        [Interval_begin]: 0.25
      });
    },
    get C2651() {
      return C2651 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "icon",
        [_Location_column]: 34,
        [_Location_line]: 541,
        [_Location_file]: null
      });
    },
    get C2650() {
      return C2650 = dart.constList([C2651 || CT.C2651], _LocationL());
    },
    get C2649() {
      return C2649 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2650 || CT.C2650,
        [_Location_name]: null,
        [_Location_column]: 23,
        [_Location_line]: 541,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2652() {
      return C2652 = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 58834
      });
    },
    get C2648() {
      return C2648 = dart.const({
        __proto__: icon.Icon.prototype,
        [Widget__location]: C2649 || CT.C2649,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_color]: null,
        [Icon_size]: null,
        [Icon_icon]: C2652 || CT.C2652
      });
    },
    get C2655() {
      return C2655 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "icon",
        [_Location_column]: 11,
        [_Location_line]: 541,
        [_Location_file]: null
      });
    },
    get C2656() {
      return C2656 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPressed",
        [_Location_column]: 11,
        [_Location_line]: 542,
        [_Location_file]: null
      });
    },
    get C2657() {
      return C2657 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "tooltip",
        [_Location_column]: 11,
        [_Location_line]: 543,
        [_Location_file]: null
      });
    },
    get C2654() {
      return C2654 = dart.constList([C2655 || CT.C2655, C2656 || CT.C2656, C2657 || CT.C2657], _LocationL());
    },
    get C2653() {
      return C2653 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2654 || CT.C2654,
        [_Location_name]: null,
        [_Location_column]: 19,
        [_Location_line]: 540,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2659() {
      return C2659 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C55 || CT.C55,
        [_Location_name]: null,
        [_Location_column]: 44,
        [_Location_line]: 547,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2658() {
      return C2658 = dart.const({
        __proto__: back_button.CloseButton.prototype,
        [Widget__location]: C2659 || CT.C2659,
        [Widget_key]: null,
        [onPressed$1]: null,
        [color$1]: null
      });
    },
    get C2661() {
      return C2661 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C55 || CT.C55,
        [_Location_name]: null,
        [_Location_column]: 66,
        [_Location_line]: 547,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2660() {
      return C2660 = dart.const({
        __proto__: back_button.BackButton.prototype,
        [Widget__location]: C2661 || CT.C2661,
        [Widget_key]: null,
        [onPressed$0]: null,
        [color$0]: null
      });
    },
    get C2664() {
      return C2664 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 9,
        [_Location_line]: 552,
        [_Location_file]: null
      });
    },
    get C2665() {
      return C2665 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 553,
        [_Location_file]: null
      });
    },
    get C2663() {
      return C2663 = dart.constList([C2664 || CT.C2664, C2665 || CT.C2665], _LocationL());
    },
    get C2662() {
      return C2662 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2663 || CT.C2663,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 551,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2668() {
      return C2668 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 31,
        [_Location_line]: 572,
        [_Location_file]: null
      });
    },
    get C2667() {
      return C2667 = dart.constList([C2668 || CT.C2668], _LocationL());
    },
    get C2666() {
      return C2666 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2667 || CT.C2667,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 572,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2671() {
      return C2671 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "namesRoute",
        [_Location_column]: 11,
        [_Location_line]: 575,
        [_Location_file]: null
      });
    },
    get C2672() {
      return C2672 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 576,
        [_Location_file]: null
      });
    },
    get C2673() {
      return C2673 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "header",
        [_Location_column]: 11,
        [_Location_line]: 577,
        [_Location_file]: null
      });
    },
    get C2670() {
      return C2670 = dart.constList([C2671 || CT.C2671, C2672 || CT.C2672, C2673 || CT.C2673], _LocationL());
    },
    get C2669() {
      return C2669 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2670 || CT.C2670,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 574,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2676() {
      return C2676 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 9,
        [_Location_line]: 582,
        [_Location_file]: null
      });
    },
    get C2677() {
      return C2677 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "softWrap",
        [_Location_column]: 9,
        [_Location_line]: 583,
        [_Location_file]: null
      });
    },
    get C2678() {
      return C2678 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "overflow",
        [_Location_column]: 9,
        [_Location_line]: 584,
        [_Location_file]: null
      });
    },
    get C2679() {
      return C2679 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 585,
        [_Location_file]: null
      });
    },
    get C2675() {
      return C2675 = dart.constList([C2676 || CT.C2676, C2677 || CT.C2677, C2678 || CT.C2678, C2679 || CT.C2679], _LocationL());
    },
    get C2674() {
      return C2674 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2675 || CT.C2675,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 581,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2682() {
      return C2682 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 9,
        [_Location_line]: 595,
        [_Location_file]: null
      });
    },
    get C2683() {
      return C2683 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 601,
        [_Location_file]: null
      });
    },
    get C2681() {
      return C2681 = dart.constList([C2682 || CT.C2682, C2683 || CT.C2683], _LocationL());
    },
    get C2680() {
      return C2680 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2681 || CT.C2681,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 594,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2686() {
      return C2686 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mainAxisSize",
        [_Location_column]: 9,
        [_Location_line]: 608,
        [_Location_file]: null
      });
    },
    get C2687() {
      return C2687 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "crossAxisAlignment",
        [_Location_column]: 9,
        [_Location_line]: 609,
        [_Location_file]: null
      });
    },
    get C2688() {
      return C2688 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 9,
        [_Location_line]: 610,
        [_Location_file]: null
      });
    },
    get C2685() {
      return C2685 = dart.constList([C2686 || CT.C2686, C2687 || CT.C2687, C2688 || CT.C2688], _LocationL());
    },
    get C2684() {
      return C2684 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2685 || CT.C2685,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 607,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2692() {
      return C2692 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "icon",
        [_Location_column]: 32,
        [_Location_line]: 614,
        [_Location_file]: null
      });
    },
    get C2691() {
      return C2691 = dart.constList([C2692 || CT.C2692], _LocationL());
    },
    get C2690() {
      return C2690 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2691 || CT.C2691,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 614,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2689() {
      return C2689 = dart.const({
        __proto__: icon.Icon.prototype,
        [Widget__location]: C2690 || CT.C2690,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_color]: null,
        [Icon_size]: null,
        [Icon_icon]: C2652 || CT.C2652
      });
    },
    get C2695() {
      return C2695 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "icon",
        [_Location_column]: 9,
        [_Location_line]: 614,
        [_Location_file]: null
      });
    },
    get C2696() {
      return C2696 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPressed",
        [_Location_column]: 9,
        [_Location_line]: 615,
        [_Location_file]: null
      });
    },
    get C2697() {
      return C2697 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "tooltip",
        [_Location_column]: 9,
        [_Location_line]: 616,
        [_Location_file]: null
      });
    },
    get C2694() {
      return C2694 = dart.constList([C2695 || CT.C2695, C2696 || CT.C2696, C2697 || CT.C2697], _LocationL());
    },
    get C2693() {
      return C2693 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2694 || CT.C2694,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 613,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2700() {
      return C2700 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "leading",
        [_Location_column]: 7,
        [_Location_line]: 629,
        [_Location_file]: null
      });
    },
    get C2701() {
      return C2701 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "middle",
        [_Location_column]: 7,
        [_Location_line]: 630,
        [_Location_file]: null
      });
    },
    get C2702() {
      return C2702 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "trailing",
        [_Location_column]: 7,
        [_Location_line]: 631,
        [_Location_file]: null
      });
    },
    get C2703() {
      return C2703 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "centerMiddle",
        [_Location_column]: 7,
        [_Location_line]: 632,
        [_Location_file]: null
      });
    },
    get C2704() {
      return C2704 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "middleSpacing",
        [_Location_column]: 7,
        [_Location_line]: 633,
        [_Location_file]: null
      });
    },
    get C2699() {
      return C2699 = dart.constList([C2700 || CT.C2700, C2701 || CT.C2701, C2702 || CT.C2702, C2703 || CT.C2703, C2704 || CT.C2704], _LocationL());
    },
    get C2698() {
      return C2698 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2699 || CT.C2699,
        [_Location_name]: null,
        [_Location_column]: 28,
        [_Location_line]: 628,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2707() {
      return C2707 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 13,
        [_Location_line]: 644,
        [_Location_file]: null
      });
    },
    get C2708() {
      return C2708 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 645,
        [_Location_file]: null
      });
    },
    get C2706() {
      return C2706 = dart.constList([C2707 || CT.C2707, C2708 || CT.C2708], _LocationL());
    },
    get C2705() {
      return C2705 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2706 || CT.C2706,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 643,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2711() {
      return C2711 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "delegate",
        [_Location_column]: 9,
        [_Location_line]: 640,
        [_Location_file]: null
      });
    },
    get C2712() {
      return C2712 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 641,
        [_Location_file]: null
      });
    },
    get C2710() {
      return C2710 = dart.constList([C2711 || CT.C2711, C2712 || CT.C2712], _LocationL());
    },
    get C2709() {
      return C2709 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2710 || CT.C2710,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 639,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2715() {
      return C2715 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 639,
        [_Location_file]: null
      });
    },
    get C2714() {
      return C2714 = dart.constList([C2715 || CT.C2715], _LocationL());
    },
    get C2713() {
      return C2713 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2714 || CT.C2714,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 638,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2718() {
      return C2718 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 15,
        [_Location_line]: 656,
        [_Location_file]: null
      });
    },
    get C2719() {
      return C2719 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 657,
        [_Location_file]: null
      });
    },
    get C2717() {
      return C2717 = dart.constList([C2718 || CT.C2718, C2719 || CT.C2719], _LocationL());
    },
    get C2716() {
      return C2716 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2717 || CT.C2717,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 655,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2722() {
      return C2722 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 655,
        [_Location_file]: null
      });
    },
    get C2721() {
      return C2721 = dart.constList([C2722 || CT.C2722], _LocationL());
    },
    get C2720() {
      return C2720 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2721 || CT.C2721,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 654,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2725() {
      return C2725 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 15,
        [_Location_line]: 664,
        [_Location_file]: null
      });
    },
    get C2726() {
      return C2726 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 665,
        [_Location_file]: null
      });
    },
    get C2724() {
      return C2724 = dart.constList([C2725 || CT.C2725, C2726 || CT.C2726], _LocationL());
    },
    get C2723() {
      return C2723 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2724 || CT.C2724,
        [_Location_name]: null,
        [_Location_column]: 13,
        [_Location_line]: 663,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2729() {
      return C2729 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mainAxisAlignment",
        [_Location_column]: 9,
        [_Location_line]: 652,
        [_Location_file]: null
      });
    },
    get C2730() {
      return C2730 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 9,
        [_Location_line]: 653,
        [_Location_file]: null
      });
    },
    get C2728() {
      return C2728 = dart.constList([C2729 || CT.C2729, C2730 || CT.C2730], _LocationL());
    },
    get C2727() {
      return C2727 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2728 || CT.C2728,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 651,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2733() {
      return C2733 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "bottom",
        [_Location_column]: 9,
        [_Location_line]: 674,
        [_Location_file]: null
      });
    },
    get C2734() {
      return C2734 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "top",
        [_Location_column]: 9,
        [_Location_line]: 675,
        [_Location_file]: null
      });
    },
    get C2735() {
      return C2735 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 676,
        [_Location_file]: null
      });
    },
    get C2732() {
      return C2732 = dart.constList([C2733 || CT.C2733, C2734 || CT.C2734, C2735 || CT.C2735], _LocationL());
    },
    get C2731() {
      return C2731 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2732 || CT.C2732,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 673,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2738() {
      return C2738 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 7,
        [_Location_line]: 681,
        [_Location_file]: null
      });
    },
    get C2739() {
      return C2739 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 682,
        [_Location_file]: null
      });
    },
    get C2737() {
      return C2737 = dart.constList([C2738 || CT.C2738, C2739 || CT.C2739], _LocationL());
    },
    get C2736() {
      return C2736 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2737 || CT.C2737,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 680,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2742() {
      return C2742 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "type",
        [_Location_column]: 13,
        [_Location_line]: 693,
        [_Location_file]: null
      });
    },
    get C2743() {
      return C2743 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 694,
        [_Location_file]: null
      });
    },
    get C2741() {
      return C2741 = dart.constList([C2742 || CT.C2742, C2743 || CT.C2743], _LocationL());
    },
    get C2740() {
      return C2740 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2741 || CT.C2741,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 692,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2746() {
      return C2746 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "fit",
        [_Location_column]: 9,
        [_Location_line]: 687,
        [_Location_file]: null
      });
    },
    get C2747() {
      return C2747 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 9,
        [_Location_line]: 688,
        [_Location_file]: null
      });
    },
    get C2745() {
      return C2745 = dart.constList([C2746 || CT.C2746, C2747 || CT.C2747], _LocationL());
    },
    get C2744() {
      return C2744 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2745 || CT.C2745,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 686,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2750() {
      return C2750 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "explicitChildNodes",
        [_Location_column]: 13,
        [_Location_line]: 722,
        [_Location_file]: null
      });
    },
    get C2751() {
      return C2751 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 723,
        [_Location_file]: null
      });
    },
    get C2749() {
      return C2749 = dart.constList([C2750 || CT.C2750, C2751 || CT.C2751], _LocationL());
    },
    get C2748() {
      return C2748 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2749 || CT.C2749,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 721,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2754() {
      return C2754 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 11,
        [_Location_line]: 711,
        [_Location_file]: null
      });
    },
    get C2755() {
      return C2755 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "elevation",
        [_Location_column]: 11,
        [_Location_line]: 714,
        [_Location_file]: null
      });
    },
    get C2756() {
      return C2756 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shadowColor",
        [_Location_column]: 11,
        [_Location_line]: 717,
        [_Location_file]: null
      });
    },
    get C2757() {
      return C2757 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shape",
        [_Location_column]: 11,
        [_Location_line]: 720,
        [_Location_file]: null
      });
    },
    get C2758() {
      return C2758 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 721,
        [_Location_file]: null
      });
    },
    get C2753() {
      return C2753 = dart.constList([C2754 || CT.C2754, C2755 || CT.C2755, C2756 || CT.C2756, C2757 || CT.C2757, C2758 || CT.C2758], _LocationL());
    },
    get C2752() {
      return C2752 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2753 || CT.C2753,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 710,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2761() {
      return C2761 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "value",
        [_Location_column]: 9,
        [_Location_line]: 709,
        [_Location_file]: null
      });
    },
    get C2762() {
      return C2762 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 710,
        [_Location_file]: null
      });
    },
    get C2760() {
      return C2760 = dart.constList([C2761 || CT.C2761, C2762 || CT.C2762], _LocationL());
    },
    get C2759() {
      return C2759 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2760 || CT.C2760,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 708,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2765() {
      return C2765 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "container",
        [_Location_column]: 7,
        [_Location_line]: 707,
        [_Location_file]: null
      });
    },
    get C2766() {
      return C2766 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 708,
        [_Location_file]: null
      });
    },
    get C2764() {
      return C2764 = dart.constList([C2765 || CT.C2765, C2766 || CT.C2766], _LocationL());
    },
    get C2763() {
      return C2763 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2764 || CT.C2764,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 706,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2769() {
      return C2769 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 23,
        [_Location_line]: 879,
        [_Location_file]: null
      });
    },
    get C2770() {
      return C2770 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "header",
        [_Location_column]: 45,
        [_Location_line]: 879,
        [_Location_file]: null
      });
    },
    get C2768() {
      return C2768 = dart.constList([C2769 || CT.C2769, C2770 || CT.C2770], _LocationL());
    },
    get C2767() {
      return C2767 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2768 || CT.C2768,
        [_Location_name]: null,
        [_Location_column]: 13,
        [_Location_line]: 879,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2773() {
      return C2773 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "leading",
        [_Location_column]: 9,
        [_Location_line]: 874,
        [_Location_file]: null
      });
    },
    get C2774() {
      return C2774 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "automaticallyImplyLeading",
        [_Location_column]: 9,
        [_Location_line]: 875,
        [_Location_file]: null
      });
    },
    get C2775() {
      return C2775 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "title",
        [_Location_column]: 9,
        [_Location_line]: 876,
        [_Location_file]: null
      });
    },
    get C2776() {
      return C2776 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "actions",
        [_Location_column]: 9,
        [_Location_line]: 877,
        [_Location_file]: null
      });
    },
    get C2777() {
      return C2777 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "flexibleSpace",
        [_Location_column]: 9,
        [_Location_line]: 878,
        [_Location_file]: null
      });
    },
    get C2778() {
      return C2778 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "bottom",
        [_Location_column]: 9,
        [_Location_line]: 881,
        [_Location_file]: null
      });
    },
    get C2779() {
      return C2779 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "elevation",
        [_Location_column]: 9,
        [_Location_line]: 882,
        [_Location_file]: null
      });
    },
    get C2780() {
      return C2780 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shadowColor",
        [_Location_column]: 9,
        [_Location_line]: 883,
        [_Location_file]: null
      });
    },
    get C2781() {
      return C2781 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundColor",
        [_Location_column]: 9,
        [_Location_line]: 884,
        [_Location_file]: null
      });
    },
    get C2782() {
      return C2782 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "brightness",
        [_Location_column]: 9,
        [_Location_line]: 885,
        [_Location_file]: null
      });
    },
    get C2783() {
      return C2783 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "iconTheme",
        [_Location_column]: 9,
        [_Location_line]: 886,
        [_Location_file]: null
      });
    },
    get C2784() {
      return C2784 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "actionsIconTheme",
        [_Location_column]: 9,
        [_Location_line]: 887,
        [_Location_file]: null
      });
    },
    get C2785() {
      return C2785 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textTheme",
        [_Location_column]: 9,
        [_Location_line]: 888,
        [_Location_file]: null
      });
    },
    get C2786() {
      return C2786 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "primary",
        [_Location_column]: 9,
        [_Location_line]: 889,
        [_Location_file]: null
      });
    },
    get C2787() {
      return C2787 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "centerTitle",
        [_Location_column]: 9,
        [_Location_line]: 890,
        [_Location_file]: null
      });
    },
    get C2788() {
      return C2788 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "excludeHeaderSemantics",
        [_Location_column]: 9,
        [_Location_line]: 891,
        [_Location_file]: null
      });
    },
    get C2789() {
      return C2789 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "titleSpacing",
        [_Location_column]: 9,
        [_Location_line]: 892,
        [_Location_file]: null
      });
    },
    get C2790() {
      return C2790 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shape",
        [_Location_column]: 9,
        [_Location_line]: 893,
        [_Location_file]: null
      });
    },
    get C2791() {
      return C2791 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "toolbarOpacity",
        [_Location_column]: 9,
        [_Location_line]: 894,
        [_Location_file]: null
      });
    },
    get C2792() {
      return C2792 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "bottomOpacity",
        [_Location_column]: 9,
        [_Location_line]: 895,
        [_Location_file]: null
      });
    },
    get C2793() {
      return C2793 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "toolbarHeight",
        [_Location_column]: 9,
        [_Location_line]: 896,
        [_Location_file]: null
      });
    },
    get C2794() {
      return C2794 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "leadingWidth",
        [_Location_column]: 9,
        [_Location_line]: 897,
        [_Location_file]: null
      });
    },
    get C2772() {
      return C2772 = dart.constList([C2773 || CT.C2773, C2774 || CT.C2774, C2775 || CT.C2775, C2776 || CT.C2776, C2777 || CT.C2777, C2778 || CT.C2778, C2779 || CT.C2779, C2780 || CT.C2780, C2781 || CT.C2781, C2782 || CT.C2782, C2783 || CT.C2783, C2784 || CT.C2784, C2785 || CT.C2785, C2786 || CT.C2786, C2787 || CT.C2787, C2788 || CT.C2788, C2789 || CT.C2789, C2790 || CT.C2790, C2791 || CT.C2791, C2792 || CT.C2792, C2793 || CT.C2793, C2794 || CT.C2794], _LocationL());
    },
    get C2771() {
      return C2771 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2772 || CT.C2772,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 873,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2797() {
      return C2797 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 39,
        [_Location_line]: 900,
        [_Location_file]: null
      });
    },
    get C2796() {
      return C2796 = dart.constList([C2797 || CT.C2797], _LocationL());
    },
    get C2795() {
      return C2795 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2796 || CT.C2796,
        [_Location_name]: null,
        [_Location_column]: 23,
        [_Location_line]: 900,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2800() {
      return C2800 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "floating",
        [_Location_column]: 9,
        [_Location_line]: 1418,
        [_Location_file]: null
      });
    },
    get C2801() {
      return C2801 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pinned",
        [_Location_column]: 9,
        [_Location_line]: 1419,
        [_Location_file]: null
      });
    },
    get C2802() {
      return C2802 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "delegate",
        [_Location_column]: 9,
        [_Location_line]: 1420,
        [_Location_file]: null
      });
    },
    get C2799() {
      return C2799 = dart.constList([C2800 || CT.C2800, C2801 || CT.C2801, C2802 || CT.C2802], _LocationL());
    },
    get C2798() {
      return C2798 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2799 || CT.C2799,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 1417,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C2805() {
      return C2805 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "context",
        [_Location_column]: 7,
        [_Location_line]: 1415,
        [_Location_file]: null
      });
    },
    get C2806() {
      return C2806 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "removeBottom",
        [_Location_column]: 7,
        [_Location_line]: 1416,
        [_Location_file]: null
      });
    },
    get C2807() {
      return C2807 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 1417,
        [_Location_file]: null
      });
    },
    get C2804() {
      return C2804 = dart.constList([C2805 || CT.C2805, C2806 || CT.C2806, C2807 || CT.C2807], _LocationL());
    },
    get C2803() {
      return C2803 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2804 || CT.C2804,
        [_Location_name]: null,
        [_Location_column]: 23,
        [_Location_line]: 1414,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    }
  }, false);
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  var C0;
  var Alignment_y = dart.privateName(alignment, "Alignment.y");
  var Alignment_x = dart.privateName(alignment, "Alignment.x");
  var C1;
  var SystemMouseCursor_kind = dart.privateName(mouse_cursor, "SystemMouseCursor.kind");
  var C2;
  var BoxConstraints_maxHeight = dart.privateName(box, "BoxConstraints.maxHeight");
  var BoxConstraints_minHeight = dart.privateName(box, "BoxConstraints.minHeight");
  var BoxConstraints_maxWidth = dart.privateName(box, "BoxConstraints.maxWidth");
  var BoxConstraints_minWidth = dart.privateName(box, "BoxConstraints.minWidth");
  var C3;
  var _Location_parameterLocations = dart.privateName(widget_inspector, "_Location.parameterLocations");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  var C6;
  var C7;
  var C5;
  var C4;
  var C10;
  var C11;
  var C12;
  var C9;
  var C8;
  var C15;
  var C16;
  var C14;
  var C13;
  var C19;
  var C20;
  var C18;
  var C17;
  var C23;
  var C24;
  var C22;
  var C21;
  var C27;
  var C28;
  var C29;
  var C30;
  var C31;
  var C32;
  var C33;
  var C34;
  var C35;
  var C36;
  var C37;
  var C38;
  var C26;
  var C25;
  var C41;
  var C42;
  var C43;
  var C40;
  var C39;
  var iconSize$ = dart.privateName(icon_button, "IconButton.iconSize");
  var visualDensity$ = dart.privateName(icon_button, "IconButton.visualDensity");
  var padding$ = dart.privateName(icon_button, "IconButton.padding");
  var alignment$ = dart.privateName(icon_button, "IconButton.alignment");
  var splashRadius$ = dart.privateName(icon_button, "IconButton.splashRadius");
  var icon$ = dart.privateName(icon_button, "IconButton.icon");
  var focusColor$ = dart.privateName(icon_button, "IconButton.focusColor");
  var hoverColor$ = dart.privateName(icon_button, "IconButton.hoverColor");
  var color$ = dart.privateName(icon_button, "IconButton.color");
  var splashColor$ = dart.privateName(icon_button, "IconButton.splashColor");
  var highlightColor$ = dart.privateName(icon_button, "IconButton.highlightColor");
  var disabledColor$ = dart.privateName(icon_button, "IconButton.disabledColor");
  var onPressed$ = dart.privateName(icon_button, "IconButton.onPressed");
  var mouseCursor$ = dart.privateName(icon_button, "IconButton.mouseCursor");
  var focusNode$ = dart.privateName(icon_button, "IconButton.focusNode");
  var autofocus$ = dart.privateName(icon_button, "IconButton.autofocus");
  var tooltip$ = dart.privateName(icon_button, "IconButton.tooltip");
  var enableFeedback$ = dart.privateName(icon_button, "IconButton.enableFeedback");
  var constraints$ = dart.privateName(icon_button, "IconButton.constraints");
  icon_button.IconButton = class IconButton extends framework.StatelessWidget {
    get iconSize() {
      return this[iconSize$];
    }
    set iconSize(value) {
      super.iconSize = value;
    }
    get visualDensity() {
      return this[visualDensity$];
    }
    set visualDensity(value) {
      super.visualDensity = value;
    }
    get padding() {
      return this[padding$];
    }
    set padding(value) {
      super.padding = value;
    }
    get alignment() {
      return this[alignment$];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get splashRadius() {
      return this[splashRadius$];
    }
    set splashRadius(value) {
      super.splashRadius = value;
    }
    get icon() {
      return this[icon$];
    }
    set icon(value) {
      super.icon = value;
    }
    get focusColor() {
      return this[focusColor$];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get hoverColor() {
      return this[hoverColor$];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get color() {
      return this[color$];
    }
    set color(value) {
      super.color = value;
    }
    get splashColor() {
      return this[splashColor$];
    }
    set splashColor(value) {
      super.splashColor = value;
    }
    get highlightColor() {
      return this[highlightColor$];
    }
    set highlightColor(value) {
      super.highlightColor = value;
    }
    get disabledColor() {
      return this[disabledColor$];
    }
    set disabledColor(value) {
      super.disabledColor = value;
    }
    get onPressed() {
      return this[onPressed$];
    }
    set onPressed(value) {
      super.onPressed = value;
    }
    get mouseCursor() {
      return this[mouseCursor$];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get focusNode() {
      return this[focusNode$];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    get autofocus() {
      return this[autofocus$];
    }
    set autofocus(value) {
      super.autofocus = value;
    }
    get tooltip() {
      return this[tooltip$];
    }
    set tooltip(value) {
      super.tooltip = value;
    }
    get enableFeedback() {
      return this[enableFeedback$];
    }
    set enableFeedback(value) {
      super.enableFeedback = value;
    }
    get constraints() {
      return this[constraints$];
    }
    set constraints(value) {
      super.constraints = value;
    }
    build(context) {
      let t0, t0$, t0$0, t0$1, t0$2, t0$3, t0$4, t0$5;
      if (!dart.test(debug$0.debugCheckHasMaterial(context))) dart.assertFailed(null, L0, 330, 12, "debugCheckHasMaterial(context)");
      let theme = theme$.Theme.of(context);
      let currentColor = null;
      if (this.onPressed != null)
        currentColor = this.color;
      else
        currentColor = (t0 = this.disabledColor, t0 == null ? theme.disabledColor : t0);
      let effectiveVisualDensity = (t0$ = this.visualDensity, t0$ == null ? theme.visualDensity : t0$);
      let unadjustedConstraints = (t0$0 = this.constraints, t0$0 == null ? C3 || CT.C3 : t0$0);
      let adjustedConstraints = effectiveVisualDensity.effectiveConstraints(unadjustedConstraints);
      let result = new basic.ConstrainedBox.new({constraints: adjustedConstraints, child: new basic.Padding.new({padding: this.padding, child: new basic.SizedBox.new({height: this.iconSize, width: this.iconSize, child: new basic.Align.new({alignment: this.alignment, child: icon_theme.IconTheme.merge({data: new icon_theme_data.IconThemeData.new({size: this.iconSize, color: currentColor}), child: this.icon}), $creationLocationd_0dea112b090073317d4: C4 || CT.C4}), $creationLocationd_0dea112b090073317d4: C8 || CT.C8}), $creationLocationd_0dea112b090073317d4: C13 || CT.C13}), $creationLocationd_0dea112b090073317d4: C17 || CT.C17});
      if (this.tooltip != null) {
        result = new tooltip.Tooltip.new({message: this.tooltip, child: result, $creationLocationd_0dea112b090073317d4: C21 || CT.C21});
      }
      return new basic.Semantics.new({button: true, enabled: this.onPressed != null, child: new ink_well.InkResponse.new({focusNode: this.focusNode, autofocus: this.autofocus, canRequestFocus: this.onPressed != null, onTap: this.onPressed, mouseCursor: this.mouseCursor, enableFeedback: this.enableFeedback, child: result, focusColor: (t0$1 = this.focusColor, t0$1 == null ? theme.focusColor : t0$1), hoverColor: (t0$2 = this.hoverColor, t0$2 == null ? theme.hoverColor : t0$2), highlightColor: (t0$3 = this.highlightColor, t0$3 == null ? theme.highlightColor : t0$3), splashColor: (t0$4 = this.splashColor, t0$4 == null ? theme.splashColor : t0$4), radius: (t0$5 = this.splashRadius, t0$5 == null ? math.max(doubleL(), 35, (dart.notNull(this.iconSize) + math.min(numL(), this.padding.horizontal, this.padding.vertical)) * 0.7) : t0$5), $creationLocationd_0dea112b090073317d4: C25 || CT.C25}), $creationLocationd_0dea112b090073317d4: C39 || CT.C39});
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfWidgetL()).new("icon", this.icon, {showName: false}));
      properties.add(new diagnostics.StringProperty.new("tooltip", this.tooltip, {defaultValue: null, quoted: false}));
      properties.add(new (ObjectFlagPropertyOfVoidToLvoid()).new("onPressed", this.onPressed, {ifNull: "disabled"}));
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("disabledColor", this.disabledColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("focusColor", this.focusColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("hoverColor", this.hoverColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("highlightColor", this.highlightColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("splashColor", this.splashColor, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfEdgeInsetsGeometryL()).new("padding", this.padding, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfFocusNodeL()).new("focusNode", this.focusNode, {defaultValue: null}));
    }
  };
  (icon_button.IconButton.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let iconSize = opts && 'iconSize' in opts ? opts.iconSize : 24;
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    let padding = opts && 'padding' in opts ? opts.padding : C0 || CT.C0;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C1 || CT.C1;
    let splashRadius = opts && 'splashRadius' in opts ? opts.splashRadius : null;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : C2 || CT.C2;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    let tooltip = opts && 'tooltip' in opts ? opts.tooltip : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : true;
    let constraints = opts && 'constraints' in opts ? opts.constraints : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[iconSize$] = iconSize;
    this[visualDensity$] = visualDensity;
    this[padding$] = padding;
    this[alignment$] = alignment;
    this[splashRadius$] = splashRadius;
    this[icon$] = icon;
    this[color$] = color;
    this[focusColor$] = focusColor;
    this[hoverColor$] = hoverColor;
    this[highlightColor$] = highlightColor;
    this[splashColor$] = splashColor;
    this[disabledColor$] = disabledColor;
    this[onPressed$] = onPressed;
    this[mouseCursor$] = mouseCursor;
    this[focusNode$] = focusNode;
    this[autofocus$] = autofocus;
    this[tooltip$] = tooltip;
    this[enableFeedback$] = enableFeedback;
    this[constraints$] = constraints;
    if (!(iconSize != null)) dart.assertFailed(null, L0, 163, 15, "iconSize != null");
    if (!(padding != null)) dart.assertFailed(null, L0, 164, 15, "padding != null");
    if (!(alignment != null)) dart.assertFailed(null, L0, 165, 15, "alignment != null");
    if (!(splashRadius == null || dart.notNull(splashRadius) > 0)) dart.assertFailed(null, L0, 166, 15, "splashRadius == null || splashRadius > 0");
    if (!(autofocus != null)) dart.assertFailed(null, L0, 167, 15, "autofocus != null");
    if (!(icon != null)) dart.assertFailed(null, L0, 168, 15, "icon != null");
    icon_button.IconButton.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = icon_button.IconButton.prototype;
  dart.addTypeTests(icon_button.IconButton);
  dart.addTypeCaches(icon_button.IconButton);
  dart.setMethodSignature(icon_button.IconButton, () => ({
    __proto__: dart.getMethods(icon_button.IconButton.__proto__),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(icon_button.IconButton, L1);
  dart.setFieldSignature(icon_button.IconButton, () => ({
    __proto__: dart.getFields(icon_button.IconButton.__proto__),
    iconSize: dart.finalFieldType(dart.legacy(core.double)),
    visualDensity: dart.finalFieldType(dart.legacy(theme_data.VisualDensity)),
    padding: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsetsGeometry)),
    alignment: dart.finalFieldType(dart.legacy(alignment.AlignmentGeometry)),
    splashRadius: dart.finalFieldType(dart.legacy(core.double)),
    icon: dart.finalFieldType(dart.legacy(framework.Widget)),
    focusColor: dart.finalFieldType(dart.legacy(ui.Color)),
    hoverColor: dart.finalFieldType(dart.legacy(ui.Color)),
    color: dart.finalFieldType(dart.legacy(ui.Color)),
    splashColor: dart.finalFieldType(dart.legacy(ui.Color)),
    highlightColor: dart.finalFieldType(dart.legacy(ui.Color)),
    disabledColor: dart.finalFieldType(dart.legacy(ui.Color)),
    onPressed: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, []))),
    mouseCursor: dart.finalFieldType(dart.legacy(mouse_cursor.MouseCursor)),
    focusNode: dart.finalFieldType(dart.legacy(focus_manager.FocusNode)),
    autofocus: dart.finalFieldType(dart.legacy(core.bool)),
    tooltip: dart.finalFieldType(dart.legacy(core.String)),
    enableFeedback: dart.finalFieldType(dart.legacy(core.bool)),
    constraints: dart.finalFieldType(dart.legacy(box.BoxConstraints))
  }));
  dart.defineLazy(icon_button, {
    /*icon_button._kMinButtonSize*/get _kMinButtonSize() {
      return 48;
    }
  }, true);
  var _name = dart.privateName(platform$, "_name");
  var C44;
  var C45;
  var C46;
  var C47;
  var C48;
  var C49;
  var C52;
  var C51;
  var C50;
  back_button.BackButtonIcon = class BackButtonIcon extends framework.StatelessWidget {
    static _getIconData(platform) {
      switch (platform) {
        case C44 || CT.C44:
        case C45 || CT.C45:
        case C46 || CT.C46:
        case C47 || CT.C47:
        {
          return icons.Icons.arrow_back;
        }
        case C48 || CT.C48:
        case C49 || CT.C49:
        {
          return icons.Icons.arrow_back_ios;
        }
      }
      if (!false) dart.assertFailed(null, L2, 44, 12, "false");
      return null;
    }
    build(context) {
      return new icon.Icon.new(back_button.BackButtonIcon._getIconData(theme$.Theme.of(context).platform), {$creationLocationd_0dea112b090073317d4: C50 || CT.C50});
    }
  };
  (back_button.BackButtonIcon.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    back_button.BackButtonIcon.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = back_button.BackButtonIcon.prototype;
  dart.addTypeTests(back_button.BackButtonIcon);
  dart.addTypeCaches(back_button.BackButtonIcon);
  dart.setMethodSignature(back_button.BackButtonIcon, () => ({
    __proto__: dart.getMethods(back_button.BackButtonIcon.__proto__),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(back_button.BackButtonIcon, L3);
  var C55;
  var C54;
  var Widget__location = dart.privateName(framework, "Widget._location");
  var Widget_key = dart.privateName(framework, "Widget.key");
  var C53;
  var C58;
  var C59;
  var C60;
  var C61;
  var C57;
  var C56;
  var color$0 = dart.privateName(back_button, "BackButton.color");
  var onPressed$0 = dart.privateName(back_button, "BackButton.onPressed");
  back_button.BackButton = class BackButton extends framework.StatelessWidget {
    get color() {
      return this[color$0];
    }
    set color(value) {
      super.color = value;
    }
    get onPressed() {
      return this[onPressed$0];
    }
    set onPressed(value) {
      super.onPressed = value;
    }
    build(context) {
      if (!dart.test(debug$0.debugCheckHasMaterialLocalizations(context))) dart.assertFailed(null, L2, 101, 12, "debugCheckHasMaterialLocalizations(context)");
      return new icon_button.IconButton.new({icon: C53 || CT.C53, color: this.color, tooltip: material_localizations.MaterialLocalizations.of(context).backButtonTooltip, onPressed: dart.fn(() => {
          if (this.onPressed != null) {
            this.onPressed();
          } else {
            navigator.Navigator.maybePop(ObjectL(), context);
          }
        }, VoidToNullN()), $creationLocationd_0dea112b090073317d4: C56 || CT.C56});
    }
  };
  (back_button.BackButton.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[color$0] = color;
    this[onPressed$0] = onPressed;
    back_button.BackButton.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = back_button.BackButton.prototype;
  dart.addTypeTests(back_button.BackButton);
  dart.addTypeCaches(back_button.BackButton);
  dart.setMethodSignature(back_button.BackButton, () => ({
    __proto__: dart.getMethods(back_button.BackButton.__proto__),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(back_button.BackButton, L3);
  dart.setFieldSignature(back_button.BackButton, () => ({
    __proto__: dart.getFields(back_button.BackButton.__proto__),
    color: dart.finalFieldType(dart.legacy(ui.Color)),
    onPressed: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, [])))
  }));
  var C65;
  var C64;
  var C63;
  var Icon_textDirection = dart.privateName(icon, "Icon.textDirection");
  var Icon_semanticLabel = dart.privateName(icon, "Icon.semanticLabel");
  var Icon_color = dart.privateName(icon, "Icon.color");
  var Icon_size = dart.privateName(icon, "Icon.size");
  var IconData_matchTextDirection = dart.privateName(icon_data, "IconData.matchTextDirection");
  var IconData_fontPackage = dart.privateName(icon_data, "IconData.fontPackage");
  var IconData_fontFamily = dart.privateName(icon_data, "IconData.fontFamily");
  var IconData_codePoint = dart.privateName(icon_data, "IconData.codePoint");
  var C66;
  var Icon_icon = dart.privateName(icon, "Icon.icon");
  var C62;
  var C69;
  var C70;
  var C71;
  var C72;
  var C68;
  var C67;
  var color$1 = dart.privateName(back_button, "CloseButton.color");
  var onPressed$1 = dart.privateName(back_button, "CloseButton.onPressed");
  back_button.CloseButton = class CloseButton extends framework.StatelessWidget {
    get color() {
      return this[color$1];
    }
    set color(value) {
      super.color = value;
    }
    get onPressed() {
      return this[onPressed$1];
    }
    set onPressed(value) {
      super.onPressed = value;
    }
    build(context) {
      if (!dart.test(debug$0.debugCheckHasMaterialLocalizations(context))) dart.assertFailed(null, L2, 155, 12, "debugCheckHasMaterialLocalizations(context)");
      return new icon_button.IconButton.new({icon: C62 || CT.C62, color: this.color, tooltip: material_localizations.MaterialLocalizations.of(context).closeButtonTooltip, onPressed: dart.fn(() => {
          if (this.onPressed != null) {
            this.onPressed();
          } else {
            navigator.Navigator.maybePop(ObjectL(), context);
          }
        }, VoidToNullN()), $creationLocationd_0dea112b090073317d4: C67 || CT.C67});
    }
  };
  (back_button.CloseButton.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[color$1] = color;
    this[onPressed$1] = onPressed;
    back_button.CloseButton.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = back_button.CloseButton.prototype;
  dart.addTypeTests(back_button.CloseButton);
  dart.addTypeCaches(back_button.CloseButton);
  dart.setMethodSignature(back_button.CloseButton, () => ({
    __proto__: dart.getMethods(back_button.CloseButton.__proto__),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(back_button.CloseButton, L3);
  dart.setFieldSignature(back_button.CloseButton, () => ({
    __proto__: dart.getFields(back_button.CloseButton.__proto__),
    color: dart.finalFieldType(dart.legacy(ui.Color)),
    onPressed: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, [])))
  }));
  var _name$ = dart.privateName(time, "_name");
  var C73;
  var C74;
  var C75;
  time.DayPeriod = class DayPeriod extends core.Object {
    toString() {
      return this[_name$];
    }
  };
  (time.DayPeriod.new = function(index, _name) {
    this.index = index;
    this[_name$] = _name;
    ;
  }).prototype = time.DayPeriod.prototype;
  dart.addTypeTests(time.DayPeriod);
  dart.addTypeCaches(time.DayPeriod);
  dart.setMethodSignature(time.DayPeriod, () => ({
    __proto__: dart.getMethods(time.DayPeriod.__proto__),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setLibraryUri(time.DayPeriod, L4);
  dart.setFieldSignature(time.DayPeriod, () => ({
    __proto__: dart.getFields(time.DayPeriod.__proto__),
    index: dart.finalFieldType(dart.legacy(core.int)),
    [_name$]: dart.finalFieldType(dart.legacy(core.String))
  }));
  dart.defineExtensionMethods(time.DayPeriod, ['toString']);
  time.DayPeriod.am = C73 || CT.C73;
  time.DayPeriod.pm = C74 || CT.C74;
  time.DayPeriod.values = C75 || CT.C75;
  var hour$ = dart.privateName(time, "TimeOfDay.hour");
  var minute$ = dart.privateName(time, "TimeOfDay.minute");
  time.TimeOfDay = class TimeOfDay extends core.Object {
    get hour() {
      return this[hour$];
    }
    set hour(value) {
      super.hour = value;
    }
    get minute() {
      return this[minute$];
    }
    set minute(value) {
      super.minute = value;
    }
    static now() {
      return new time.TimeOfDay.fromDateTime(new core.DateTime.now());
    }
    replacing(opts) {
      let t0, t0$;
      let hour = opts && 'hour' in opts ? opts.hour : null;
      let minute = opts && 'minute' in opts ? opts.minute : null;
      if (!(hour == null || dart.notNull(hour) >= 0 && dart.notNull(hour) < 24)) dart.assertFailed(null, L5, 83, 12, "hour == null || (hour >= 0 && hour < hoursPerDay)");
      if (!(minute == null || dart.notNull(minute) >= 0 && dart.notNull(minute) < 60)) dart.assertFailed(null, L5, 84, 12, "minute == null || (minute >= 0 && minute < minutesPerHour)");
      return new time.TimeOfDay.new({hour: (t0 = hour, t0 == null ? this.hour : t0), minute: (t0$ = minute, t0$ == null ? this.minute : t0$)});
    }
    get period() {
      return dart.notNull(this.hour) < 12 ? time.DayPeriod.am : time.DayPeriod.pm;
    }
    get hourOfPeriod() {
      return dart.notNull(this.hour) - dart.notNull(this.periodOffset);
    }
    get periodOffset() {
      return this.period == time.DayPeriod.am ? 0 : 12;
    }
    format(context) {
      if (!dart.test(debug.debugCheckHasMediaQuery(context))) dart.assertFailed(null, L5, 107, 12, "debugCheckHasMediaQuery(context)");
      if (!dart.test(debug$0.debugCheckHasMaterialLocalizations(context))) dart.assertFailed(null, L5, 108, 12, "debugCheckHasMaterialLocalizations(context)");
      let localizations = material_localizations.MaterialLocalizations.of(context);
      return localizations.formatTimeOfDay(this, {alwaysUse24HourFormat: media_query.MediaQuery.of(context).alwaysUse24HourFormat});
    }
    _equals(other) {
      if (other == null) return false;
      return TimeOfDayL().is(other) && other.hour == this.hour && other.minute == this.minute;
    }
    get hashCode() {
      return ui.hashValues(this.hour, this.minute);
    }
    toString() {
      function _addLeadingZeroIfNeeded(value) {
        if (dart.notNull(value) < 10) return "0" + dart.str(value);
        return dart.toString(value);
      }
      dart.fn(_addLeadingZeroIfNeeded, intLToStringL());
      let hourLabel = _addLeadingZeroIfNeeded(this.hour);
      let minuteLabel = _addLeadingZeroIfNeeded(this.minute);
      return dart.str(dart.wrapType(TimeOfDayL())) + "(" + dart.str(hourLabel) + ":" + dart.str(minuteLabel) + ")";
    }
  };
  (time.TimeOfDay.new = function(opts) {
    let hour = opts && 'hour' in opts ? opts.hour : null;
    let minute = opts && 'minute' in opts ? opts.minute : null;
    this[hour$] = hour;
    this[minute$] = minute;
    ;
  }).prototype = time.TimeOfDay.prototype;
  (time.TimeOfDay.fromDateTime = function(time) {
    this[hour$] = time.hour;
    this[minute$] = time.minute;
    ;
  }).prototype = time.TimeOfDay.prototype;
  dart.addTypeTests(time.TimeOfDay);
  dart.addTypeCaches(time.TimeOfDay);
  dart.setMethodSignature(time.TimeOfDay, () => ({
    __proto__: dart.getMethods(time.TimeOfDay.__proto__),
    replacing: dart.fnType(dart.legacy(time.TimeOfDay), [], {hour: dart.legacy(core.int), minute: dart.legacy(core.int)}, {}),
    format: dart.fnType(dart.legacy(core.String), [dart.legacy(framework.BuildContext)]),
    _equals: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    [$_equals]: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setGetterSignature(time.TimeOfDay, () => ({
    __proto__: dart.getGetters(time.TimeOfDay.__proto__),
    period: dart.legacy(time.DayPeriod),
    hourOfPeriod: dart.legacy(core.int),
    periodOffset: dart.legacy(core.int),
    hashCode: dart.legacy(core.int),
    [$hashCode]: dart.legacy(core.int)
  }));
  dart.setLibraryUri(time.TimeOfDay, L4);
  dart.setFieldSignature(time.TimeOfDay, () => ({
    __proto__: dart.getFields(time.TimeOfDay.__proto__),
    hour: dart.finalFieldType(dart.legacy(core.int)),
    minute: dart.finalFieldType(dart.legacy(core.int))
  }));
  dart.defineExtensionMethods(time.TimeOfDay, ['_equals', 'toString']);
  dart.defineExtensionAccessors(time.TimeOfDay, ['hashCode']);
  dart.defineLazy(time.TimeOfDay, {
    /*time.TimeOfDay.hoursPerDay*/get hoursPerDay() {
      return 24;
    },
    /*time.TimeOfDay.hoursPerPeriod*/get hoursPerPeriod() {
      return 12;
    },
    /*time.TimeOfDay.minutesPerHour*/get minutesPerHour() {
      return 60;
    }
  }, true);
  var C76;
  var C77;
  var C78;
  var C79;
  var C80;
  var C81;
  var C82;
  time.TimeOfDayFormat = class TimeOfDayFormat extends core.Object {
    toString() {
      return this[_name$];
    }
  };
  (time.TimeOfDayFormat.new = function(index, _name) {
    this.index = index;
    this[_name$] = _name;
    ;
  }).prototype = time.TimeOfDayFormat.prototype;
  dart.addTypeTests(time.TimeOfDayFormat);
  dart.addTypeCaches(time.TimeOfDayFormat);
  dart.setMethodSignature(time.TimeOfDayFormat, () => ({
    __proto__: dart.getMethods(time.TimeOfDayFormat.__proto__),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setLibraryUri(time.TimeOfDayFormat, L4);
  dart.setFieldSignature(time.TimeOfDayFormat, () => ({
    __proto__: dart.getFields(time.TimeOfDayFormat.__proto__),
    index: dart.finalFieldType(dart.legacy(core.int)),
    [_name$]: dart.finalFieldType(dart.legacy(core.String))
  }));
  dart.defineExtensionMethods(time.TimeOfDayFormat, ['toString']);
  time.TimeOfDayFormat.HH_colon_mm = C76 || CT.C76;
  time.TimeOfDayFormat.HH_dot_mm = C77 || CT.C77;
  time.TimeOfDayFormat.frenchCanadian = C78 || CT.C78;
  time.TimeOfDayFormat.H_colon_mm = C79 || CT.C79;
  time.TimeOfDayFormat.h_colon_mm_space_a = C80 || CT.C80;
  time.TimeOfDayFormat.a_space_h_colon_mm = C81 || CT.C81;
  time.TimeOfDayFormat.values = C82 || CT.C82;
  var C83;
  var C84;
  var C85;
  var C86;
  time.HourFormat = class HourFormat extends core.Object {
    toString() {
      return this[_name$];
    }
  };
  (time.HourFormat.new = function(index, _name) {
    this.index = index;
    this[_name$] = _name;
    ;
  }).prototype = time.HourFormat.prototype;
  dart.addTypeTests(time.HourFormat);
  dart.addTypeCaches(time.HourFormat);
  dart.setMethodSignature(time.HourFormat, () => ({
    __proto__: dart.getMethods(time.HourFormat.__proto__),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setLibraryUri(time.HourFormat, L4);
  dart.setFieldSignature(time.HourFormat, () => ({
    __proto__: dart.getFields(time.HourFormat.__proto__),
    index: dart.finalFieldType(dart.legacy(core.int)),
    [_name$]: dart.finalFieldType(dart.legacy(core.String))
  }));
  dart.defineExtensionMethods(time.HourFormat, ['toString']);
  time.HourFormat.HH = C83 || CT.C83;
  time.HourFormat.H = C84 || CT.C84;
  time.HourFormat.h = C85 || CT.C85;
  time.HourFormat.values = C86 || CT.C86;
  time.hourFormat = function hourFormat(opts) {
    let of = opts && 'of' in opts ? opts.of : null;
    switch (of) {
      case C80 || CT.C80:
      case C81 || CT.C81:
      {
        return time.HourFormat.h;
      }
      case C79 || CT.C79:
      {
        return time.HourFormat.H;
      }
      case C77 || CT.C77:
      case C76 || CT.C76:
      case C78 || CT.C78:
      {
        return time.HourFormat.HH;
      }
    }
    return null;
  };
  var _name$0 = dart.privateName(snack_bar, "_name");
  var C87;
  var C88;
  var C89;
  var C90;
  var C91;
  var C92;
  var C93;
  snack_bar.SnackBarClosedReason = class SnackBarClosedReason extends core.Object {
    toString() {
      return this[_name$0];
    }
  };
  (snack_bar.SnackBarClosedReason.new = function(index, _name) {
    this.index = index;
    this[_name$0] = _name;
    ;
  }).prototype = snack_bar.SnackBarClosedReason.prototype;
  dart.addTypeTests(snack_bar.SnackBarClosedReason);
  dart.addTypeCaches(snack_bar.SnackBarClosedReason);
  dart.setMethodSignature(snack_bar.SnackBarClosedReason, () => ({
    __proto__: dart.getMethods(snack_bar.SnackBarClosedReason.__proto__),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setLibraryUri(snack_bar.SnackBarClosedReason, L6);
  dart.setFieldSignature(snack_bar.SnackBarClosedReason, () => ({
    __proto__: dart.getFields(snack_bar.SnackBarClosedReason.__proto__),
    index: dart.finalFieldType(dart.legacy(core.int)),
    [_name$0]: dart.finalFieldType(dart.legacy(core.String))
  }));
  dart.defineExtensionMethods(snack_bar.SnackBarClosedReason, ['toString']);
  snack_bar.SnackBarClosedReason.action = C87 || CT.C87;
  snack_bar.SnackBarClosedReason.dismiss = C88 || CT.C88;
  snack_bar.SnackBarClosedReason.swipe = C89 || CT.C89;
  snack_bar.SnackBarClosedReason.hide = C90 || CT.C90;
  snack_bar.SnackBarClosedReason.remove = C91 || CT.C91;
  snack_bar.SnackBarClosedReason.timeout = C92 || CT.C92;
  snack_bar.SnackBarClosedReason.values = C93 || CT.C93;
  var textColor$ = dart.privateName(snack_bar, "SnackBarAction.textColor");
  var disabledTextColor$ = dart.privateName(snack_bar, "SnackBarAction.disabledTextColor");
  var label$ = dart.privateName(snack_bar, "SnackBarAction.label");
  var onPressed$2 = dart.privateName(snack_bar, "SnackBarAction.onPressed");
  snack_bar.SnackBarAction = class SnackBarAction extends framework.StatefulWidget {
    get textColor() {
      return this[textColor$];
    }
    set textColor(value) {
      super.textColor = value;
    }
    get disabledTextColor() {
      return this[disabledTextColor$];
    }
    set disabledTextColor(value) {
      super.disabledTextColor = value;
    }
    get label() {
      return this[label$];
    }
    set label(value) {
      super.label = value;
    }
    get onPressed() {
      return this[onPressed$2];
    }
    set onPressed(value) {
      super.onPressed = value;
    }
    createState() {
      return new snack_bar._SnackBarActionState.new();
    }
  };
  (snack_bar.SnackBarAction.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let textColor = opts && 'textColor' in opts ? opts.textColor : null;
    let disabledTextColor = opts && 'disabledTextColor' in opts ? opts.disabledTextColor : null;
    let label = opts && 'label' in opts ? opts.label : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[textColor$] = textColor;
    this[disabledTextColor$] = disabledTextColor;
    this[label$] = label;
    this[onPressed$2] = onPressed;
    if (!(label != null)) dart.assertFailed(null, L7, 91, 15, "label != null");
    if (!(onPressed != null)) dart.assertFailed(null, L7, 92, 15, "onPressed != null");
    snack_bar.SnackBarAction.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = snack_bar.SnackBarAction.prototype;
  dart.addTypeTests(snack_bar.SnackBarAction);
  dart.addTypeCaches(snack_bar.SnackBarAction);
  dart.setMethodSignature(snack_bar.SnackBarAction, () => ({
    __proto__: dart.getMethods(snack_bar.SnackBarAction.__proto__),
    createState: dart.fnType(dart.legacy(framework.State$(dart.legacy(snack_bar.SnackBarAction))), [])
  }));
  dart.setLibraryUri(snack_bar.SnackBarAction, L6);
  dart.setFieldSignature(snack_bar.SnackBarAction, () => ({
    __proto__: dart.getFields(snack_bar.SnackBarAction.__proto__),
    textColor: dart.finalFieldType(dart.legacy(ui.Color)),
    disabledTextColor: dart.finalFieldType(dart.legacy(ui.Color)),
    label: dart.finalFieldType(dart.legacy(core.String)),
    onPressed: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, [])))
  }));
  var _haveTriggeredAction = dart.privateName(snack_bar, "_haveTriggeredAction");
  var _handlePressed = dart.privateName(snack_bar, "_handlePressed");
  var C96;
  var C95;
  var C94;
  var C99;
  var C100;
  var C101;
  var C102;
  var C98;
  var C97;
  snack_bar._SnackBarActionState = class _SnackBarActionState extends framework.State$(dart.legacy(snack_bar.SnackBarAction)) {
    [_handlePressed]() {
      if (dart.test(this[_haveTriggeredAction])) return;
      this.setState(dart.fn(() => {
        this[_haveTriggeredAction] = true;
      }, VoidToNullN()));
      this.widget.onPressed();
      scaffold$.Scaffold.of(this.context).hideCurrentSnackBar({reason: snack_bar.SnackBarClosedReason.action});
    }
    build(context) {
      let t0, t0$;
      let snackBarTheme = theme$.Theme.of(context).snackBarTheme;
      let textColor = (t0 = this.widget.textColor, t0 == null ? snackBarTheme.actionTextColor : t0);
      let disabledTextColor = (t0$ = this.widget.disabledTextColor, t0$ == null ? snackBarTheme.disabledActionTextColor : t0$);
      return new flat_button.FlatButton.new({onPressed: dart.test(this[_haveTriggeredAction]) ? null : dart.bind(this, _handlePressed), child: new text$.Text.new(this.widget.label, {$creationLocationd_0dea112b090073317d4: C94 || CT.C94}), textColor: textColor, disabledTextColor: disabledTextColor, $creationLocationd_0dea112b090073317d4: C97 || CT.C97});
    }
  };
  (snack_bar._SnackBarActionState.new = function() {
    this[_haveTriggeredAction] = false;
    snack_bar._SnackBarActionState.__proto__.new.call(this);
    ;
  }).prototype = snack_bar._SnackBarActionState.prototype;
  dart.addTypeTests(snack_bar._SnackBarActionState);
  dart.addTypeCaches(snack_bar._SnackBarActionState);
  dart.setMethodSignature(snack_bar._SnackBarActionState, () => ({
    __proto__: dart.getMethods(snack_bar._SnackBarActionState.__proto__),
    [_handlePressed]: dart.fnType(dart.void, []),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(snack_bar._SnackBarActionState, L6);
  dart.setFieldSignature(snack_bar._SnackBarActionState, () => ({
    __proto__: dart.getFields(snack_bar._SnackBarActionState.__proto__),
    [_haveTriggeredAction]: dart.fieldType(dart.legacy(core.bool))
  }));
  var Duration__duration = dart.privateName(core, "Duration._duration");
  var C103;
  var C106;
  var C107;
  var C108;
  var C109;
  var C110;
  var C111;
  var C112;
  var C113;
  var C114;
  var C115;
  var C116;
  var C117;
  var C118;
  var C105;
  var C104;
  var content$ = dart.privateName(snack_bar, "SnackBar.content");
  var backgroundColor$ = dart.privateName(snack_bar, "SnackBar.backgroundColor");
  var elevation$ = dart.privateName(snack_bar, "SnackBar.elevation");
  var margin$ = dart.privateName(snack_bar, "SnackBar.margin");
  var padding$0 = dart.privateName(snack_bar, "SnackBar.padding");
  var width$ = dart.privateName(snack_bar, "SnackBar.width");
  var shape$ = dart.privateName(snack_bar, "SnackBar.shape");
  var behavior$ = dart.privateName(snack_bar, "SnackBar.behavior");
  var action$ = dart.privateName(snack_bar, "SnackBar.action");
  var duration$ = dart.privateName(snack_bar, "SnackBar.duration");
  var animation$ = dart.privateName(snack_bar, "SnackBar.animation");
  var onVisible$ = dart.privateName(snack_bar, "SnackBar.onVisible");
  snack_bar.SnackBar = class SnackBar extends framework.StatefulWidget {
    get content() {
      return this[content$];
    }
    set content(value) {
      super.content = value;
    }
    get backgroundColor() {
      return this[backgroundColor$];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get elevation() {
      return this[elevation$];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get margin() {
      return this[margin$];
    }
    set margin(value) {
      super.margin = value;
    }
    get padding() {
      return this[padding$0];
    }
    set padding(value) {
      super.padding = value;
    }
    get width() {
      return this[width$];
    }
    set width(value) {
      super.width = value;
    }
    get shape() {
      return this[shape$];
    }
    set shape(value) {
      super.shape = value;
    }
    get behavior() {
      return this[behavior$];
    }
    set behavior(value) {
      super.behavior = value;
    }
    get action() {
      return this[action$];
    }
    set action(value) {
      super.action = value;
    }
    get duration() {
      return this[duration$];
    }
    set duration(value) {
      super.duration = value;
    }
    get animation() {
      return this[animation$];
    }
    set animation(value) {
      super.animation = value;
    }
    get onVisible() {
      return this[onVisible$];
    }
    set onVisible(value) {
      super.onVisible = value;
    }
    static createAnimationController(opts) {
      let vsync = opts && 'vsync' in opts ? opts.vsync : null;
      return new animation_controller.AnimationController.new({duration: snack_bar._snackBarTransitionDuration, debugLabel: "SnackBar", vsync: vsync});
    }
    withAnimation(newAnimation, opts) {
      let t0;
      let fallbackKey = opts && 'fallbackKey' in opts ? opts.fallbackKey : null;
      return new snack_bar.SnackBar.new({key: (t0 = this.key, t0 == null ? fallbackKey : t0), content: this.content, backgroundColor: this.backgroundColor, elevation: this.elevation, margin: this.margin, padding: this.padding, width: this.width, shape: this.shape, behavior: this.behavior, action: this.action, duration: this.duration, animation: newAnimation, onVisible: this.onVisible, $creationLocationd_0dea112b090073317d4: C104 || CT.C104});
    }
    createState() {
      return new snack_bar._SnackBarState.new();
    }
  };
  (snack_bar.SnackBar.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let content = opts && 'content' in opts ? opts.content : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let margin = opts && 'margin' in opts ? opts.margin : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let width = opts && 'width' in opts ? opts.width : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let behavior = opts && 'behavior' in opts ? opts.behavior : null;
    let action = opts && 'action' in opts ? opts.action : null;
    let duration = opts && 'duration' in opts ? opts.duration : C103 || CT.C103;
    let animation = opts && 'animation' in opts ? opts.animation : null;
    let onVisible = opts && 'onVisible' in opts ? opts.onVisible : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[content$] = content;
    this[backgroundColor$] = backgroundColor;
    this[elevation$] = elevation;
    this[margin$] = margin;
    this[padding$0] = padding;
    this[width$] = width;
    this[shape$] = shape;
    this[behavior$] = behavior;
    this[action$] = action;
    this[duration$] = duration;
    this[animation$] = animation;
    this[onVisible$] = onVisible;
    if (!(elevation == null || dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, L7, 187, 15, "elevation == null || elevation >= 0.0");
    if (!(content != null)) dart.assertFailed(null, L7, 188, 15, "content != null");
    if (!(margin == null || behavior == snack_bar_theme.SnackBarBehavior.floating)) dart.assertFailed("Margin can only be used with floating behavior", L7, 190, 10, "margin == null || behavior == SnackBarBehavior.floating");
    if (!(width == null || behavior == snack_bar_theme.SnackBarBehavior.floating)) dart.assertFailed("Width can only be used with floating behavior", L7, 194, 10, "width == null || behavior == SnackBarBehavior.floating");
    if (!(width == null || margin == null)) dart.assertFailed("Width and margin can not be used together", L7, 198, 10, "width == null || margin == null");
    if (!(duration != null)) dart.assertFailed(null, L7, 201, 15, "duration != null");
    snack_bar.SnackBar.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = snack_bar.SnackBar.prototype;
  dart.addTypeTests(snack_bar.SnackBar);
  dart.addTypeCaches(snack_bar.SnackBar);
  dart.setMethodSignature(snack_bar.SnackBar, () => ({
    __proto__: dart.getMethods(snack_bar.SnackBar.__proto__),
    withAnimation: dart.fnType(dart.legacy(snack_bar.SnackBar), [dart.legacy(animation.Animation$(dart.legacy(core.double)))], {fallbackKey: dart.legacy(key.Key)}, {}),
    createState: dart.fnType(dart.legacy(framework.State$(dart.legacy(snack_bar.SnackBar))), [])
  }));
  dart.setLibraryUri(snack_bar.SnackBar, L6);
  dart.setFieldSignature(snack_bar.SnackBar, () => ({
    __proto__: dart.getFields(snack_bar.SnackBar.__proto__),
    content: dart.finalFieldType(dart.legacy(framework.Widget)),
    backgroundColor: dart.finalFieldType(dart.legacy(ui.Color)),
    elevation: dart.finalFieldType(dart.legacy(core.double)),
    margin: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsetsGeometry)),
    padding: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsetsGeometry)),
    width: dart.finalFieldType(dart.legacy(core.double)),
    shape: dart.finalFieldType(dart.legacy(borders.ShapeBorder)),
    behavior: dart.finalFieldType(dart.legacy(snack_bar_theme.SnackBarBehavior)),
    action: dart.finalFieldType(dart.legacy(snack_bar.SnackBarAction)),
    duration: dart.finalFieldType(dart.legacy(core.Duration)),
    animation: dart.finalFieldType(dart.legacy(animation.Animation$(dart.legacy(core.double)))),
    onVisible: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, [])))
  }));
  var _wasVisible = dart.privateName(snack_bar, "_wasVisible");
  var _onAnimationStatusChanged = dart.privateName(snack_bar, "_onAnimationStatusChanged");
  var _name$1 = dart.privateName(animation, "_name");
  var C119;
  var C120;
  var C121;
  var C122;
  var Threshold_threshold = dart.privateName(curves, "Threshold.threshold");
  var C123;
  var C124;
  var C127;
  var C128;
  var C126;
  var C125;
  var C131;
  var C132;
  var C130;
  var C129;
  var C135;
  var C134;
  var C133;
  var C138;
  var C139;
  var C140;
  var C141;
  var C137;
  var C136;
  var C144;
  var C145;
  var C143;
  var C142;
  var C148;
  var C149;
  var C147;
  var C146;
  var C152;
  var C153;
  var C151;
  var C150;
  var C156;
  var C157;
  var C155;
  var C154;
  var C160;
  var C161;
  var C159;
  var C158;
  var C164;
  var C165;
  var C166;
  var C167;
  var C163;
  var C162;
  var C168;
  var C171;
  var C172;
  var C173;
  var C170;
  var C169;
  var C174;
  var C177;
  var C178;
  var C176;
  var C175;
  var C181;
  var C182;
  var C183;
  var C180;
  var C179;
  var ValueKey_value = dart.privateName(key, "ValueKey.value");
  var C184;
  var C187;
  var C188;
  var C189;
  var C190;
  var C191;
  var C186;
  var C185;
  var C194;
  var C195;
  var C196;
  var C197;
  var C193;
  var C192;
  var C200;
  var C201;
  var C199;
  var C198;
  var C204;
  var C205;
  var C206;
  var C203;
  var C202;
  var C209;
  var C210;
  var C211;
  var C208;
  var C207;
  var C214;
  var C213;
  var C212;
  snack_bar._SnackBarState = class _SnackBarState extends framework.State$(dart.legacy(snack_bar.SnackBar)) {
    initState() {
      super.initState();
      this.widget.animation.addStatusListener(dart.bind(this, _onAnimationStatusChanged));
    }
    didUpdateWidget(oldWidget) {
      SnackBarL().as(oldWidget);
      if (!dart.equals(this.widget.animation, oldWidget.animation)) {
        oldWidget.animation.removeStatusListener(dart.bind(this, _onAnimationStatusChanged));
        this.widget.animation.addStatusListener(dart.bind(this, _onAnimationStatusChanged));
      }
      super.didUpdateWidget(oldWidget);
    }
    dispose() {
      this.widget.animation.removeStatusListener(dart.bind(this, _onAnimationStatusChanged));
      super.dispose();
    }
    [_onAnimationStatusChanged](animationStatus) {
      switch (animationStatus) {
        case C119 || CT.C119:
        case C120 || CT.C120:
        case C121 || CT.C121:
        {
          break;
        }
        case C122 || CT.C122:
        {
          if (this.widget.onVisible != null && !dart.test(this[_wasVisible])) {
            this.widget.onVisible();
          }
          this[_wasVisible] = true;
        }
      }
    }
    build(context) {
      let t0, t0$, t0$0, t0$1, t1, t1$, t1$0, t1$1, t1$2, t1$3, t1$4;
      let mediaQueryData = media_query.MediaQuery.of(context);
      if (!(this.widget.animation != null)) dart.assertFailed(null, L7, 378, 12, "widget.animation != null");
      let theme = theme$.Theme.of(context);
      let colorScheme = theme.colorScheme;
      let snackBarTheme = theme.snackBarTheme;
      let isThemeDark = dart.equals(theme.brightness, ui.Brightness.dark);
      let brightness = isThemeDark ? ui.Brightness.light : ui.Brightness.dark;
      let themeBackgroundColor = isThemeDark ? colorScheme.onSurface : ui.Color.alphaBlend(colorScheme.onSurface.withOpacity(0.8), colorScheme.surface);
      let inverseTheme = theme_data.ThemeData.new({brightness: brightness, backgroundColor: themeBackgroundColor, colorScheme: new color_scheme.ColorScheme.new({primary: colorScheme.onPrimary, primaryVariant: colorScheme.onPrimary, secondary: isThemeDark ? colorScheme.primaryVariant : colorScheme.secondary, secondaryVariant: colorScheme.onSecondary, surface: colorScheme.onSurface, background: themeBackgroundColor, error: colorScheme.onError, onPrimary: colorScheme.primary, onSecondary: colorScheme.secondary, onSurface: colorScheme.surface, onBackground: colorScheme.background, onError: colorScheme.error, brightness: brightness}), snackBarTheme: snackBarTheme});
      let contentTextStyle = (t0 = snackBarTheme.contentTextStyle, t0 == null ? inverseTheme.textTheme.subtitle1 : t0);
      let snackBarBehavior = (t0$0 = (t0$ = this.widget.behavior, t0$ == null ? snackBarTheme.behavior : t0$), t0$0 == null ? snack_bar_theme.SnackBarBehavior.fixed : t0$0);
      let isFloatingSnackBar = snackBarBehavior == snack_bar_theme.SnackBarBehavior.floating;
      let horizontalPadding = isFloatingSnackBar ? 16.0 : 24.0;
      let padding = (t0$1 = this.widget.padding, t0$1 == null ? new edge_insets.EdgeInsetsDirectional.only({start: horizontalPadding, end: this.widget.action != null ? 0.0 : horizontalPadding}) : t0$1);
      let heightAnimation = new animations.CurvedAnimation.new({parent: this.widget.animation, curve: snack_bar._snackBarHeightCurve});
      let fadeInAnimation = new animations.CurvedAnimation.new({parent: this.widget.animation, curve: snack_bar._snackBarFadeInCurve});
      let fadeOutAnimation = new animations.CurvedAnimation.new({parent: this.widget.animation, curve: snack_bar._snackBarFadeOutCurve, reverseCurve: C123 || CT.C123});
      let snackBar = new basic.Padding.new({padding: padding, child: new basic.Row.new({crossAxisAlignment: flex.CrossAxisAlignment.center, children: (() => {
            let t0 = JSArrayOfWidgetL().of([]);
            t0[$add](new basic.Expanded.new({child: new container.Container.new({padding: C124 || CT.C124, child: new text$.DefaultTextStyle.new({style: contentTextStyle, child: this.widget.content, $creationLocationd_0dea112b090073317d4: C125 || CT.C125}), $creationLocationd_0dea112b090073317d4: C129 || CT.C129}), $creationLocationd_0dea112b090073317d4: C133 || CT.C133}));
            if (this.widget.action != null) t0[$add](new button_theme.ButtonTheme.new({textTheme: button_theme.ButtonTextTheme.accent, minWidth: 64.0, padding: new edge_insets.EdgeInsets.symmetric({horizontal: horizontalPadding}), child: this.widget.action, $creationLocationd_0dea112b090073317d4: C136 || CT.C136}));
            return t0;
          })(), $creationLocationd_0dea112b090073317d4: C142 || CT.C142}), $creationLocationd_0dea112b090073317d4: C146 || CT.C146});
      if (!isFloatingSnackBar) {
        snackBar = new safe_area.SafeArea.new({top: false, child: snackBar, $creationLocationd_0dea112b090073317d4: C150 || CT.C150});
      }
      let elevation = (t1$ = (t1 = this.widget.elevation, t1 == null ? snackBarTheme.elevation : t1), t1$ == null ? 6.0 : t1$);
      let backgroundColor = (t1$1 = (t1$0 = this.widget.backgroundColor, t1$0 == null ? snackBarTheme.backgroundColor : t1$0), t1$1 == null ? inverseTheme.backgroundColor : t1$1);
      let shape = (t1$3 = (t1$2 = this.widget.shape, t1$2 == null ? snackBarTheme.shape : t1$2), t1$3 == null ? isFloatingSnackBar ? new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(4.0)}) : null : t1$3);
      snackBar = new material.Material.new({shape: shape, elevation: elevation, color: backgroundColor, child: new theme$.Theme.new({data: inverseTheme, child: dart.test(mediaQueryData.accessibleNavigation) ? snackBar : new transitions.FadeTransition.new({opacity: fadeOutAnimation, child: snackBar, $creationLocationd_0dea112b090073317d4: C154 || CT.C154}), $creationLocationd_0dea112b090073317d4: C158 || CT.C158}), $creationLocationd_0dea112b090073317d4: C162 || CT.C162});
      if (isFloatingSnackBar) {
        if (this.widget.width != null) {
          snackBar = new container.Container.new({margin: C168 || CT.C168, width: this.widget.width, child: snackBar, $creationLocationd_0dea112b090073317d4: C169 || CT.C169});
        } else {
          snackBar = new basic.Padding.new({padding: (t1$4 = this.widget.margin, t1$4 == null ? C174 || CT.C174 : t1$4), child: snackBar, $creationLocationd_0dea112b090073317d4: C175 || CT.C175});
        }
        snackBar = new safe_area.SafeArea.new({top: false, bottom: false, child: snackBar, $creationLocationd_0dea112b090073317d4: C179 || CT.C179});
      }
      snackBar = new basic.Semantics.new({container: true, liveRegion: true, onDismiss: dart.fn(() => {
          scaffold$.Scaffold.of(context).removeCurrentSnackBar({reason: snack_bar.SnackBarClosedReason.dismiss});
        }, VoidToNullN()), child: new dismissible.Dismissible.new({key: C184 || CT.C184, direction: dismissible.DismissDirection.down, resizeDuration: null, onDismissed: dart.fn(direction => {
            scaffold$.Scaffold.of(context).removeCurrentSnackBar({reason: snack_bar.SnackBarClosedReason.swipe});
          }, DismissDirectionLToNullN()), child: snackBar, $creationLocationd_0dea112b090073317d4: C185 || CT.C185}), $creationLocationd_0dea112b090073317d4: C192 || CT.C192});
      let snackBarTransition = null;
      if (dart.test(mediaQueryData.accessibleNavigation)) {
        snackBarTransition = snackBar;
      } else if (isFloatingSnackBar) {
        snackBarTransition = new transitions.FadeTransition.new({opacity: fadeInAnimation, child: snackBar, $creationLocationd_0dea112b090073317d4: C198 || CT.C198});
      } else {
        snackBarTransition = new transitions.AnimatedBuilder.new({animation: heightAnimation, builder: dart.fn((context, child) => new basic.Align.new({alignment: alignment.AlignmentDirectional.topStart, heightFactor: heightAnimation.value, child: child, $creationLocationd_0dea112b090073317d4: C202 || CT.C202}), BuildContextLAndWidgetLToAlignL()), child: snackBar, $creationLocationd_0dea112b090073317d4: C207 || CT.C207});
      }
      return new basic.ClipRect.new({child: snackBarTransition, $creationLocationd_0dea112b090073317d4: C212 || CT.C212});
    }
  };
  (snack_bar._SnackBarState.new = function() {
    this[_wasVisible] = false;
    snack_bar._SnackBarState.__proto__.new.call(this);
    ;
  }).prototype = snack_bar._SnackBarState.prototype;
  dart.addTypeTests(snack_bar._SnackBarState);
  dart.addTypeCaches(snack_bar._SnackBarState);
  dart.setMethodSignature(snack_bar._SnackBarState, () => ({
    __proto__: dart.getMethods(snack_bar._SnackBarState.__proto__),
    [_onAnimationStatusChanged]: dart.fnType(dart.void, [dart.legacy(animation.AnimationStatus)]),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(snack_bar._SnackBarState, L6);
  dart.setFieldSignature(snack_bar._SnackBarState, () => ({
    __proto__: dart.getFields(snack_bar._SnackBarState.__proto__),
    [_wasVisible]: dart.fieldType(dart.legacy(core.bool))
  }));
  var C215;
  var Cubic_d = dart.privateName(curves, "Cubic.d");
  var Cubic_c = dart.privateName(curves, "Cubic.c");
  var Cubic_b = dart.privateName(curves, "Cubic.b");
  var Cubic_a = dart.privateName(curves, "Cubic.a");
  var C216;
  var Interval_curve = dart.privateName(curves, "Interval.curve");
  var Interval_end = dart.privateName(curves, "Interval.end");
  var Interval_begin = dart.privateName(curves, "Interval.begin");
  var C217;
  var C218;
  dart.defineLazy(snack_bar, {
    /*snack_bar._singleLineVerticalPadding*/get _singleLineVerticalPadding() {
      return 14;
    },
    /*snack_bar._snackBarTransitionDuration*/get _snackBarTransitionDuration() {
      return C215 || CT.C215;
    },
    /*snack_bar._snackBarDisplayDuration*/get _snackBarDisplayDuration() {
      return C103 || CT.C103;
    },
    /*snack_bar._snackBarHeightCurve*/get _snackBarHeightCurve() {
      return C216 || CT.C216;
    },
    /*snack_bar._snackBarFadeInCurve*/get _snackBarFadeInCurve() {
      return C217 || CT.C217;
    },
    /*snack_bar._snackBarFadeOutCurve*/get _snackBarFadeOutCurve() {
      return C218 || CT.C218;
    }
  }, true);
  var C219;
  var C220;
  var C221;
  var C222;
  var C223;
  var C224;
  var C225;
  var C226;
  var C227;
  var C228;
  var C229;
  var C230;
  var C231;
  var C232;
  var C233;
  var C234;
  var C235;
  var C236;
  floating_action_button_location.FloatingActionButtonLocation = class FloatingActionButtonLocation extends core.Object {
    toString() {
      return object$.objectRuntimeType(this, "FloatingActionButtonLocation");
    }
  };
  (floating_action_button_location.FloatingActionButtonLocation.new = function() {
    ;
  }).prototype = floating_action_button_location.FloatingActionButtonLocation.prototype;
  dart.addTypeTests(floating_action_button_location.FloatingActionButtonLocation);
  dart.addTypeCaches(floating_action_button_location.FloatingActionButtonLocation);
  dart.setMethodSignature(floating_action_button_location.FloatingActionButtonLocation, () => ({
    __proto__: dart.getMethods(floating_action_button_location.FloatingActionButtonLocation.__proto__),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setLibraryUri(floating_action_button_location.FloatingActionButtonLocation, L8);
  dart.defineExtensionMethods(floating_action_button_location.FloatingActionButtonLocation, ['toString']);
  dart.defineLazy(floating_action_button_location.FloatingActionButtonLocation, {
    /*floating_action_button_location.FloatingActionButtonLocation.startTop*/get startTop() {
      return C219 || CT.C219;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.miniStartTop*/get miniStartTop() {
      return C220 || CT.C220;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.centerTop*/get centerTop() {
      return C221 || CT.C221;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.miniCenterTop*/get miniCenterTop() {
      return C222 || CT.C222;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.endTop*/get endTop() {
      return C223 || CT.C223;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.miniEndTop*/get miniEndTop() {
      return C224 || CT.C224;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.startFloat*/get startFloat() {
      return C225 || CT.C225;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.miniStartFloat*/get miniStartFloat() {
      return C226 || CT.C226;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.centerFloat*/get centerFloat() {
      return C227 || CT.C227;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.miniCenterFloat*/get miniCenterFloat() {
      return C228 || CT.C228;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.endFloat*/get endFloat() {
      return C229 || CT.C229;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.miniEndFloat*/get miniEndFloat() {
      return C230 || CT.C230;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.startDocked*/get startDocked() {
      return C231 || CT.C231;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.miniStartDocked*/get miniStartDocked() {
      return C232 || CT.C232;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.centerDocked*/get centerDocked() {
      return C233 || CT.C233;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.miniCenterDocked*/get miniCenterDocked() {
      return C234 || CT.C234;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.endDocked*/get endDocked() {
      return C235 || CT.C235;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.miniEndDocked*/get miniEndDocked() {
      return C236 || CT.C236;
    }
  }, true);
  floating_action_button_location.StandardFabLocation = class StandardFabLocation extends floating_action_button_location.FloatingActionButtonLocation {
    isMini() {
      return false;
    }
    getOffset(scaffoldGeometry) {
      let adjustment = dart.test(this.isMini()) ? 4 : 0.0;
      return new ui.Offset.new(this.getOffsetX(scaffoldGeometry, adjustment), this.getOffsetY(scaffoldGeometry, adjustment));
    }
    static _leftOffsetX(scaffoldGeometry, adjustment) {
      return 16 + dart.notNull(scaffoldGeometry.minInsets.left) - dart.notNull(adjustment);
    }
    static _rightOffsetX(scaffoldGeometry, adjustment) {
      return dart.notNull(scaffoldGeometry.scaffoldSize.width) - 16 - dart.notNull(scaffoldGeometry.minInsets.right) - dart.notNull(scaffoldGeometry.floatingActionButtonSize.width) + dart.notNull(adjustment);
    }
  };
  (floating_action_button_location.StandardFabLocation.new = function() {
    floating_action_button_location.StandardFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location.StandardFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location.StandardFabLocation);
  dart.addTypeCaches(floating_action_button_location.StandardFabLocation);
  dart.setMethodSignature(floating_action_button_location.StandardFabLocation, () => ({
    __proto__: dart.getMethods(floating_action_button_location.StandardFabLocation.__proto__),
    isMini: dart.fnType(dart.legacy(core.bool), []),
    getOffset: dart.fnType(dart.legacy(ui.Offset), [dart.legacy(scaffold$.ScaffoldPrelayoutGeometry)])
  }));
  dart.setLibraryUri(floating_action_button_location.StandardFabLocation, L8);
  floating_action_button_location.FabTopOffsetY = class FabTopOffsetY extends floating_action_button_location.StandardFabLocation {};
  floating_action_button_location.FabTopOffsetY[dart.mixinOn] = StandardFabLocation => class FabTopOffsetY extends StandardFabLocation {
    getOffsetY(scaffoldGeometry, adjustment) {
      if (dart.notNull(scaffoldGeometry.contentTop) > dart.notNull(scaffoldGeometry.minViewPadding.top)) {
        let fabHalfHeight = dart.notNull(scaffoldGeometry.floatingActionButtonSize.height) / 2.0;
        return dart.notNull(scaffoldGeometry.contentTop) - fabHalfHeight;
      }
      return scaffoldGeometry.minViewPadding.top;
    }
  };
  dart.addTypeTests(floating_action_button_location.FabTopOffsetY);
  dart.addTypeCaches(floating_action_button_location.FabTopOffsetY);
  floating_action_button_location.FabTopOffsetY[dart.implements] = () => [floating_action_button_location.StandardFabLocation];
  dart.setMethodSignature(floating_action_button_location.FabTopOffsetY, () => ({
    __proto__: dart.getMethods(floating_action_button_location.FabTopOffsetY.__proto__),
    getOffsetY: dart.fnType(dart.legacy(core.double), [dart.legacy(scaffold$.ScaffoldPrelayoutGeometry), dart.legacy(core.double)])
  }));
  dart.setLibraryUri(floating_action_button_location.FabTopOffsetY, L8);
  floating_action_button_location.FabFloatOffsetY = class FabFloatOffsetY extends floating_action_button_location.StandardFabLocation {};
  floating_action_button_location.FabFloatOffsetY[dart.mixinOn] = StandardFabLocation => class FabFloatOffsetY extends StandardFabLocation {
    getOffsetY(scaffoldGeometry, adjustment) {
      let contentBottom = scaffoldGeometry.contentBottom;
      let bottomContentHeight = dart.notNull(scaffoldGeometry.scaffoldSize.height) - dart.notNull(contentBottom);
      let bottomSheetHeight = scaffoldGeometry.bottomSheetSize.height;
      let fabHeight = scaffoldGeometry.floatingActionButtonSize.height;
      let snackBarHeight = scaffoldGeometry.snackBarSize.height;
      let safeMargin = math.max(doubleL(), 16, dart.notNull(scaffoldGeometry.minViewPadding.bottom) - bottomContentHeight);
      let fabY = dart.notNull(contentBottom) - dart.notNull(fabHeight) - safeMargin;
      if (dart.notNull(snackBarHeight) > 0.0) fabY = math.min(doubleL(), fabY, dart.notNull(contentBottom) - dart.notNull(snackBarHeight) - dart.notNull(fabHeight) - 16);
      if (dart.notNull(bottomSheetHeight) > 0.0) fabY = math.min(doubleL(), fabY, dart.notNull(contentBottom) - dart.notNull(bottomSheetHeight) - dart.notNull(fabHeight) / 2.0);
      return fabY + dart.notNull(adjustment);
    }
  };
  dart.addTypeTests(floating_action_button_location.FabFloatOffsetY);
  dart.addTypeCaches(floating_action_button_location.FabFloatOffsetY);
  floating_action_button_location.FabFloatOffsetY[dart.implements] = () => [floating_action_button_location.StandardFabLocation];
  dart.setMethodSignature(floating_action_button_location.FabFloatOffsetY, () => ({
    __proto__: dart.getMethods(floating_action_button_location.FabFloatOffsetY.__proto__),
    getOffsetY: dart.fnType(dart.legacy(core.double), [dart.legacy(scaffold$.ScaffoldPrelayoutGeometry), dart.legacy(core.double)])
  }));
  dart.setLibraryUri(floating_action_button_location.FabFloatOffsetY, L8);
  floating_action_button_location.FabDockedOffsetY = class FabDockedOffsetY extends floating_action_button_location.StandardFabLocation {};
  floating_action_button_location.FabDockedOffsetY[dart.mixinOn] = StandardFabLocation => class FabDockedOffsetY extends StandardFabLocation {
    getOffsetY(scaffoldGeometry, adjustment) {
      let contentBottom = scaffoldGeometry.contentBottom;
      let contentMargin = dart.notNull(scaffoldGeometry.scaffoldSize.height) - dart.notNull(contentBottom);
      let bottomViewPadding = scaffoldGeometry.minViewPadding.bottom;
      let bottomSheetHeight = scaffoldGeometry.bottomSheetSize.height;
      let fabHeight = scaffoldGeometry.floatingActionButtonSize.height;
      let snackBarHeight = scaffoldGeometry.snackBarSize.height;
      let safeMargin = dart.notNull(bottomViewPadding) > contentMargin ? bottomViewPadding : 0.0;
      let fabY = dart.notNull(contentBottom) - dart.notNull(fabHeight) / 2.0 - dart.notNull(safeMargin);
      if (dart.notNull(snackBarHeight) > 0.0) fabY = math.min(doubleL(), fabY, dart.notNull(contentBottom) - dart.notNull(snackBarHeight) - dart.notNull(fabHeight) - 16);
      if (dart.notNull(bottomSheetHeight) > 0.0) fabY = math.min(doubleL(), fabY, dart.notNull(contentBottom) - dart.notNull(bottomSheetHeight) - dart.notNull(fabHeight) / 2.0);
      let maxFabY = dart.notNull(scaffoldGeometry.scaffoldSize.height) - dart.notNull(fabHeight) - dart.notNull(safeMargin);
      return math.min(doubleL(), maxFabY, fabY);
    }
  };
  dart.addTypeTests(floating_action_button_location.FabDockedOffsetY);
  dart.addTypeCaches(floating_action_button_location.FabDockedOffsetY);
  floating_action_button_location.FabDockedOffsetY[dart.implements] = () => [floating_action_button_location.StandardFabLocation];
  dart.setMethodSignature(floating_action_button_location.FabDockedOffsetY, () => ({
    __proto__: dart.getMethods(floating_action_button_location.FabDockedOffsetY.__proto__),
    getOffsetY: dart.fnType(dart.legacy(core.double), [dart.legacy(scaffold$.ScaffoldPrelayoutGeometry), dart.legacy(core.double)])
  }));
  dart.setLibraryUri(floating_action_button_location.FabDockedOffsetY, L8);
  var _name$2 = dart.privateName(ui, "_name");
  var C237;
  var C238;
  floating_action_button_location.FabStartOffsetX = class FabStartOffsetX extends floating_action_button_location.StandardFabLocation {};
  floating_action_button_location.FabStartOffsetX[dart.mixinOn] = StandardFabLocation => class FabStartOffsetX extends StandardFabLocation {
    getOffsetX(scaffoldGeometry, adjustment) {
      if (!(scaffoldGeometry.textDirection != null)) dart.assertFailed(null, L9, 497, 12, "scaffoldGeometry.textDirection != null");
      switch (scaffoldGeometry.textDirection) {
        case C237 || CT.C237:
        {
          return floating_action_button_location.StandardFabLocation._rightOffsetX(scaffoldGeometry, adjustment);
        }
        case C238 || CT.C238:
        {
          return floating_action_button_location.StandardFabLocation._leftOffsetX(scaffoldGeometry, adjustment);
        }
      }
      return null;
    }
  };
  dart.addTypeTests(floating_action_button_location.FabStartOffsetX);
  dart.addTypeCaches(floating_action_button_location.FabStartOffsetX);
  floating_action_button_location.FabStartOffsetX[dart.implements] = () => [floating_action_button_location.StandardFabLocation];
  dart.setMethodSignature(floating_action_button_location.FabStartOffsetX, () => ({
    __proto__: dart.getMethods(floating_action_button_location.FabStartOffsetX.__proto__),
    getOffsetX: dart.fnType(dart.legacy(core.double), [dart.legacy(scaffold$.ScaffoldPrelayoutGeometry), dart.legacy(core.double)])
  }));
  dart.setLibraryUri(floating_action_button_location.FabStartOffsetX, L8);
  floating_action_button_location.FabCenterOffsetX = class FabCenterOffsetX extends floating_action_button_location.StandardFabLocation {};
  floating_action_button_location.FabCenterOffsetX[dart.mixinOn] = StandardFabLocation => class FabCenterOffsetX extends StandardFabLocation {
    getOffsetX(scaffoldGeometry, adjustment) {
      return (dart.notNull(scaffoldGeometry.scaffoldSize.width) - dart.notNull(scaffoldGeometry.floatingActionButtonSize.width)) / 2.0;
    }
  };
  dart.addTypeTests(floating_action_button_location.FabCenterOffsetX);
  dart.addTypeCaches(floating_action_button_location.FabCenterOffsetX);
  floating_action_button_location.FabCenterOffsetX[dart.implements] = () => [floating_action_button_location.StandardFabLocation];
  dart.setMethodSignature(floating_action_button_location.FabCenterOffsetX, () => ({
    __proto__: dart.getMethods(floating_action_button_location.FabCenterOffsetX.__proto__),
    getOffsetX: dart.fnType(dart.legacy(core.double), [dart.legacy(scaffold$.ScaffoldPrelayoutGeometry), dart.legacy(core.double)])
  }));
  dart.setLibraryUri(floating_action_button_location.FabCenterOffsetX, L8);
  floating_action_button_location.FabEndOffsetX = class FabEndOffsetX extends floating_action_button_location.StandardFabLocation {};
  floating_action_button_location.FabEndOffsetX[dart.mixinOn] = StandardFabLocation => class FabEndOffsetX extends StandardFabLocation {
    getOffsetX(scaffoldGeometry, adjustment) {
      if (!(scaffoldGeometry.textDirection != null)) dart.assertFailed(null, L9, 522, 12, "scaffoldGeometry.textDirection != null");
      switch (scaffoldGeometry.textDirection) {
        case C237 || CT.C237:
        {
          return floating_action_button_location.StandardFabLocation._leftOffsetX(scaffoldGeometry, adjustment);
        }
        case C238 || CT.C238:
        {
          return floating_action_button_location.StandardFabLocation._rightOffsetX(scaffoldGeometry, adjustment);
        }
      }
      return null;
    }
  };
  dart.addTypeTests(floating_action_button_location.FabEndOffsetX);
  dart.addTypeCaches(floating_action_button_location.FabEndOffsetX);
  floating_action_button_location.FabEndOffsetX[dart.implements] = () => [floating_action_button_location.StandardFabLocation];
  dart.setMethodSignature(floating_action_button_location.FabEndOffsetX, () => ({
    __proto__: dart.getMethods(floating_action_button_location.FabEndOffsetX.__proto__),
    getOffsetX: dart.fnType(dart.legacy(core.double), [dart.legacy(scaffold$.ScaffoldPrelayoutGeometry), dart.legacy(core.double)])
  }));
  dart.setLibraryUri(floating_action_button_location.FabEndOffsetX, L8);
  floating_action_button_location.FabMiniOffsetAdjustment = class FabMiniOffsetAdjustment extends floating_action_button_location.StandardFabLocation {};
  floating_action_button_location.FabMiniOffsetAdjustment[dart.mixinOn] = StandardFabLocation => class FabMiniOffsetAdjustment extends StandardFabLocation {
    isMini() {
      return true;
    }
  };
  dart.addTypeTests(floating_action_button_location.FabMiniOffsetAdjustment);
  dart.addTypeCaches(floating_action_button_location.FabMiniOffsetAdjustment);
  floating_action_button_location.FabMiniOffsetAdjustment[dart.implements] = () => [floating_action_button_location.StandardFabLocation];
  dart.setLibraryUri(floating_action_button_location.FabMiniOffsetAdjustment, L8);
  const StandardFabLocation_FabStartOffsetX$36 = class StandardFabLocation_FabStartOffsetX extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabStartOffsetX$36.new = function() {
    StandardFabLocation_FabStartOffsetX$36.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabStartOffsetX$36.prototype;
  dart.applyMixin(StandardFabLocation_FabStartOffsetX$36, floating_action_button_location.FabStartOffsetX);
  const StandardFabLocation_FabTopOffsetY$36 = class StandardFabLocation_FabTopOffsetY extends StandardFabLocation_FabStartOffsetX$36 {};
  (StandardFabLocation_FabTopOffsetY$36.new = function() {
    StandardFabLocation_FabTopOffsetY$36.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabTopOffsetY$36.prototype;
  dart.applyMixin(StandardFabLocation_FabTopOffsetY$36, floating_action_button_location.FabTopOffsetY);
  floating_action_button_location._StartTopFabLocation = class _StartTopFabLocation extends StandardFabLocation_FabTopOffsetY$36 {
    toString() {
      return "FloatingActionButtonLocation.startTop";
    }
  };
  (floating_action_button_location._StartTopFabLocation.new = function() {
    floating_action_button_location._StartTopFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._StartTopFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._StartTopFabLocation);
  dart.addTypeCaches(floating_action_button_location._StartTopFabLocation);
  dart.setLibraryUri(floating_action_button_location._StartTopFabLocation, L8);
  dart.defineExtensionMethods(floating_action_button_location._StartTopFabLocation, ['toString']);
  const StandardFabLocation_FabMiniOffsetAdjustment$36 = class StandardFabLocation_FabMiniOffsetAdjustment extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabMiniOffsetAdjustment$36.new = function() {
    StandardFabLocation_FabMiniOffsetAdjustment$36.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabMiniOffsetAdjustment$36.prototype;
  dart.applyMixin(StandardFabLocation_FabMiniOffsetAdjustment$36, floating_action_button_location.FabMiniOffsetAdjustment);
  const StandardFabLocation_FabStartOffsetX$36$ = class StandardFabLocation_FabStartOffsetX extends StandardFabLocation_FabMiniOffsetAdjustment$36 {};
  (StandardFabLocation_FabStartOffsetX$36$.new = function() {
    StandardFabLocation_FabStartOffsetX$36$.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabStartOffsetX$36$.prototype;
  dart.applyMixin(StandardFabLocation_FabStartOffsetX$36$, floating_action_button_location.FabStartOffsetX);
  const StandardFabLocation_FabTopOffsetY$36$ = class StandardFabLocation_FabTopOffsetY extends StandardFabLocation_FabStartOffsetX$36$ {};
  (StandardFabLocation_FabTopOffsetY$36$.new = function() {
    StandardFabLocation_FabTopOffsetY$36$.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabTopOffsetY$36$.prototype;
  dart.applyMixin(StandardFabLocation_FabTopOffsetY$36$, floating_action_button_location.FabTopOffsetY);
  floating_action_button_location._MiniStartTopFabLocation = class _MiniStartTopFabLocation extends StandardFabLocation_FabTopOffsetY$36$ {
    toString() {
      return "FloatingActionButtonLocation.miniStartTop";
    }
  };
  (floating_action_button_location._MiniStartTopFabLocation.new = function() {
    floating_action_button_location._MiniStartTopFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._MiniStartTopFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._MiniStartTopFabLocation);
  dart.addTypeCaches(floating_action_button_location._MiniStartTopFabLocation);
  dart.setLibraryUri(floating_action_button_location._MiniStartTopFabLocation, L8);
  dart.defineExtensionMethods(floating_action_button_location._MiniStartTopFabLocation, ['toString']);
  const StandardFabLocation_FabCenterOffsetX$36 = class StandardFabLocation_FabCenterOffsetX extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabCenterOffsetX$36.new = function() {
    StandardFabLocation_FabCenterOffsetX$36.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabCenterOffsetX$36.prototype;
  dart.applyMixin(StandardFabLocation_FabCenterOffsetX$36, floating_action_button_location.FabCenterOffsetX);
  const StandardFabLocation_FabTopOffsetY$36$0 = class StandardFabLocation_FabTopOffsetY extends StandardFabLocation_FabCenterOffsetX$36 {};
  (StandardFabLocation_FabTopOffsetY$36$0.new = function() {
    StandardFabLocation_FabTopOffsetY$36$0.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabTopOffsetY$36$0.prototype;
  dart.applyMixin(StandardFabLocation_FabTopOffsetY$36$0, floating_action_button_location.FabTopOffsetY);
  floating_action_button_location._CenterTopFabLocation = class _CenterTopFabLocation extends StandardFabLocation_FabTopOffsetY$36$0 {
    toString() {
      return "FloatingActionButtonLocation.centerTop";
    }
  };
  (floating_action_button_location._CenterTopFabLocation.new = function() {
    floating_action_button_location._CenterTopFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._CenterTopFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._CenterTopFabLocation);
  dart.addTypeCaches(floating_action_button_location._CenterTopFabLocation);
  dart.setLibraryUri(floating_action_button_location._CenterTopFabLocation, L8);
  dart.defineExtensionMethods(floating_action_button_location._CenterTopFabLocation, ['toString']);
  const StandardFabLocation_FabMiniOffsetAdjustment$36$ = class StandardFabLocation_FabMiniOffsetAdjustment extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabMiniOffsetAdjustment$36$.new = function() {
    StandardFabLocation_FabMiniOffsetAdjustment$36$.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabMiniOffsetAdjustment$36$.prototype;
  dart.applyMixin(StandardFabLocation_FabMiniOffsetAdjustment$36$, floating_action_button_location.FabMiniOffsetAdjustment);
  const StandardFabLocation_FabCenterOffsetX$36$ = class StandardFabLocation_FabCenterOffsetX extends StandardFabLocation_FabMiniOffsetAdjustment$36$ {};
  (StandardFabLocation_FabCenterOffsetX$36$.new = function() {
    StandardFabLocation_FabCenterOffsetX$36$.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabCenterOffsetX$36$.prototype;
  dart.applyMixin(StandardFabLocation_FabCenterOffsetX$36$, floating_action_button_location.FabCenterOffsetX);
  const StandardFabLocation_FabTopOffsetY$36$1 = class StandardFabLocation_FabTopOffsetY extends StandardFabLocation_FabCenterOffsetX$36$ {};
  (StandardFabLocation_FabTopOffsetY$36$1.new = function() {
    StandardFabLocation_FabTopOffsetY$36$1.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabTopOffsetY$36$1.prototype;
  dart.applyMixin(StandardFabLocation_FabTopOffsetY$36$1, floating_action_button_location.FabTopOffsetY);
  floating_action_button_location._MiniCenterTopFabLocation = class _MiniCenterTopFabLocation extends StandardFabLocation_FabTopOffsetY$36$1 {
    toString() {
      return "FloatingActionButtonLocation.miniCenterTop";
    }
  };
  (floating_action_button_location._MiniCenterTopFabLocation.new = function() {
    floating_action_button_location._MiniCenterTopFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._MiniCenterTopFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._MiniCenterTopFabLocation);
  dart.addTypeCaches(floating_action_button_location._MiniCenterTopFabLocation);
  dart.setLibraryUri(floating_action_button_location._MiniCenterTopFabLocation, L8);
  dart.defineExtensionMethods(floating_action_button_location._MiniCenterTopFabLocation, ['toString']);
  const StandardFabLocation_FabEndOffsetX$36 = class StandardFabLocation_FabEndOffsetX extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabEndOffsetX$36.new = function() {
    StandardFabLocation_FabEndOffsetX$36.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabEndOffsetX$36.prototype;
  dart.applyMixin(StandardFabLocation_FabEndOffsetX$36, floating_action_button_location.FabEndOffsetX);
  const StandardFabLocation_FabTopOffsetY$36$2 = class StandardFabLocation_FabTopOffsetY extends StandardFabLocation_FabEndOffsetX$36 {};
  (StandardFabLocation_FabTopOffsetY$36$2.new = function() {
    StandardFabLocation_FabTopOffsetY$36$2.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabTopOffsetY$36$2.prototype;
  dart.applyMixin(StandardFabLocation_FabTopOffsetY$36$2, floating_action_button_location.FabTopOffsetY);
  floating_action_button_location._EndTopFabLocation = class _EndTopFabLocation extends StandardFabLocation_FabTopOffsetY$36$2 {
    toString() {
      return "FloatingActionButtonLocation.endTop";
    }
  };
  (floating_action_button_location._EndTopFabLocation.new = function() {
    floating_action_button_location._EndTopFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._EndTopFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._EndTopFabLocation);
  dart.addTypeCaches(floating_action_button_location._EndTopFabLocation);
  dart.setLibraryUri(floating_action_button_location._EndTopFabLocation, L8);
  dart.defineExtensionMethods(floating_action_button_location._EndTopFabLocation, ['toString']);
  const StandardFabLocation_FabMiniOffsetAdjustment$36$0 = class StandardFabLocation_FabMiniOffsetAdjustment extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabMiniOffsetAdjustment$36$0.new = function() {
    StandardFabLocation_FabMiniOffsetAdjustment$36$0.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabMiniOffsetAdjustment$36$0.prototype;
  dart.applyMixin(StandardFabLocation_FabMiniOffsetAdjustment$36$0, floating_action_button_location.FabMiniOffsetAdjustment);
  const StandardFabLocation_FabEndOffsetX$36$ = class StandardFabLocation_FabEndOffsetX extends StandardFabLocation_FabMiniOffsetAdjustment$36$0 {};
  (StandardFabLocation_FabEndOffsetX$36$.new = function() {
    StandardFabLocation_FabEndOffsetX$36$.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabEndOffsetX$36$.prototype;
  dart.applyMixin(StandardFabLocation_FabEndOffsetX$36$, floating_action_button_location.FabEndOffsetX);
  const StandardFabLocation_FabTopOffsetY$36$3 = class StandardFabLocation_FabTopOffsetY extends StandardFabLocation_FabEndOffsetX$36$ {};
  (StandardFabLocation_FabTopOffsetY$36$3.new = function() {
    StandardFabLocation_FabTopOffsetY$36$3.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabTopOffsetY$36$3.prototype;
  dart.applyMixin(StandardFabLocation_FabTopOffsetY$36$3, floating_action_button_location.FabTopOffsetY);
  floating_action_button_location._MiniEndTopFabLocation = class _MiniEndTopFabLocation extends StandardFabLocation_FabTopOffsetY$36$3 {
    toString() {
      return "FloatingActionButtonLocation.miniEndTop";
    }
  };
  (floating_action_button_location._MiniEndTopFabLocation.new = function() {
    floating_action_button_location._MiniEndTopFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._MiniEndTopFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._MiniEndTopFabLocation);
  dart.addTypeCaches(floating_action_button_location._MiniEndTopFabLocation);
  dart.setLibraryUri(floating_action_button_location._MiniEndTopFabLocation, L8);
  dart.defineExtensionMethods(floating_action_button_location._MiniEndTopFabLocation, ['toString']);
  const StandardFabLocation_FabStartOffsetX$36$0 = class StandardFabLocation_FabStartOffsetX extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabStartOffsetX$36$0.new = function() {
    StandardFabLocation_FabStartOffsetX$36$0.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabStartOffsetX$36$0.prototype;
  dart.applyMixin(StandardFabLocation_FabStartOffsetX$36$0, floating_action_button_location.FabStartOffsetX);
  const StandardFabLocation_FabFloatOffsetY$36 = class StandardFabLocation_FabFloatOffsetY extends StandardFabLocation_FabStartOffsetX$36$0 {};
  (StandardFabLocation_FabFloatOffsetY$36.new = function() {
    StandardFabLocation_FabFloatOffsetY$36.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabFloatOffsetY$36.prototype;
  dart.applyMixin(StandardFabLocation_FabFloatOffsetY$36, floating_action_button_location.FabFloatOffsetY);
  floating_action_button_location._StartFloatFabLocation = class _StartFloatFabLocation extends StandardFabLocation_FabFloatOffsetY$36 {
    toString() {
      return "FloatingActionButtonLocation.startFloat";
    }
  };
  (floating_action_button_location._StartFloatFabLocation.new = function() {
    floating_action_button_location._StartFloatFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._StartFloatFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._StartFloatFabLocation);
  dart.addTypeCaches(floating_action_button_location._StartFloatFabLocation);
  dart.setLibraryUri(floating_action_button_location._StartFloatFabLocation, L8);
  dart.defineExtensionMethods(floating_action_button_location._StartFloatFabLocation, ['toString']);
  const StandardFabLocation_FabMiniOffsetAdjustment$36$1 = class StandardFabLocation_FabMiniOffsetAdjustment extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabMiniOffsetAdjustment$36$1.new = function() {
    StandardFabLocation_FabMiniOffsetAdjustment$36$1.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabMiniOffsetAdjustment$36$1.prototype;
  dart.applyMixin(StandardFabLocation_FabMiniOffsetAdjustment$36$1, floating_action_button_location.FabMiniOffsetAdjustment);
  const StandardFabLocation_FabStartOffsetX$36$1 = class StandardFabLocation_FabStartOffsetX extends StandardFabLocation_FabMiniOffsetAdjustment$36$1 {};
  (StandardFabLocation_FabStartOffsetX$36$1.new = function() {
    StandardFabLocation_FabStartOffsetX$36$1.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabStartOffsetX$36$1.prototype;
  dart.applyMixin(StandardFabLocation_FabStartOffsetX$36$1, floating_action_button_location.FabStartOffsetX);
  const StandardFabLocation_FabFloatOffsetY$36$ = class StandardFabLocation_FabFloatOffsetY extends StandardFabLocation_FabStartOffsetX$36$1 {};
  (StandardFabLocation_FabFloatOffsetY$36$.new = function() {
    StandardFabLocation_FabFloatOffsetY$36$.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabFloatOffsetY$36$.prototype;
  dart.applyMixin(StandardFabLocation_FabFloatOffsetY$36$, floating_action_button_location.FabFloatOffsetY);
  floating_action_button_location._MiniStartFloatFabLocation = class _MiniStartFloatFabLocation extends StandardFabLocation_FabFloatOffsetY$36$ {
    toString() {
      return "FloatingActionButtonLocation.miniStartFloat";
    }
  };
  (floating_action_button_location._MiniStartFloatFabLocation.new = function() {
    floating_action_button_location._MiniStartFloatFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._MiniStartFloatFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._MiniStartFloatFabLocation);
  dart.addTypeCaches(floating_action_button_location._MiniStartFloatFabLocation);
  dart.setLibraryUri(floating_action_button_location._MiniStartFloatFabLocation, L8);
  dart.defineExtensionMethods(floating_action_button_location._MiniStartFloatFabLocation, ['toString']);
  const StandardFabLocation_FabCenterOffsetX$36$0 = class StandardFabLocation_FabCenterOffsetX extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabCenterOffsetX$36$0.new = function() {
    StandardFabLocation_FabCenterOffsetX$36$0.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabCenterOffsetX$36$0.prototype;
  dart.applyMixin(StandardFabLocation_FabCenterOffsetX$36$0, floating_action_button_location.FabCenterOffsetX);
  const StandardFabLocation_FabFloatOffsetY$36$0 = class StandardFabLocation_FabFloatOffsetY extends StandardFabLocation_FabCenterOffsetX$36$0 {};
  (StandardFabLocation_FabFloatOffsetY$36$0.new = function() {
    StandardFabLocation_FabFloatOffsetY$36$0.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabFloatOffsetY$36$0.prototype;
  dart.applyMixin(StandardFabLocation_FabFloatOffsetY$36$0, floating_action_button_location.FabFloatOffsetY);
  floating_action_button_location._CenterFloatFabLocation = class _CenterFloatFabLocation extends StandardFabLocation_FabFloatOffsetY$36$0 {
    toString() {
      return "FloatingActionButtonLocation.centerFloat";
    }
  };
  (floating_action_button_location._CenterFloatFabLocation.new = function() {
    floating_action_button_location._CenterFloatFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._CenterFloatFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._CenterFloatFabLocation);
  dart.addTypeCaches(floating_action_button_location._CenterFloatFabLocation);
  dart.setLibraryUri(floating_action_button_location._CenterFloatFabLocation, L8);
  dart.defineExtensionMethods(floating_action_button_location._CenterFloatFabLocation, ['toString']);
  const StandardFabLocation_FabMiniOffsetAdjustment$36$2 = class StandardFabLocation_FabMiniOffsetAdjustment extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabMiniOffsetAdjustment$36$2.new = function() {
    StandardFabLocation_FabMiniOffsetAdjustment$36$2.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabMiniOffsetAdjustment$36$2.prototype;
  dart.applyMixin(StandardFabLocation_FabMiniOffsetAdjustment$36$2, floating_action_button_location.FabMiniOffsetAdjustment);
  const StandardFabLocation_FabCenterOffsetX$36$1 = class StandardFabLocation_FabCenterOffsetX extends StandardFabLocation_FabMiniOffsetAdjustment$36$2 {};
  (StandardFabLocation_FabCenterOffsetX$36$1.new = function() {
    StandardFabLocation_FabCenterOffsetX$36$1.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabCenterOffsetX$36$1.prototype;
  dart.applyMixin(StandardFabLocation_FabCenterOffsetX$36$1, floating_action_button_location.FabCenterOffsetX);
  const StandardFabLocation_FabFloatOffsetY$36$1 = class StandardFabLocation_FabFloatOffsetY extends StandardFabLocation_FabCenterOffsetX$36$1 {};
  (StandardFabLocation_FabFloatOffsetY$36$1.new = function() {
    StandardFabLocation_FabFloatOffsetY$36$1.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabFloatOffsetY$36$1.prototype;
  dart.applyMixin(StandardFabLocation_FabFloatOffsetY$36$1, floating_action_button_location.FabFloatOffsetY);
  floating_action_button_location._MiniCenterFloatFabLocation = class _MiniCenterFloatFabLocation extends StandardFabLocation_FabFloatOffsetY$36$1 {
    toString() {
      return "FloatingActionButtonLocation.miniCenterFloat";
    }
  };
  (floating_action_button_location._MiniCenterFloatFabLocation.new = function() {
    floating_action_button_location._MiniCenterFloatFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._MiniCenterFloatFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._MiniCenterFloatFabLocation);
  dart.addTypeCaches(floating_action_button_location._MiniCenterFloatFabLocation);
  dart.setLibraryUri(floating_action_button_location._MiniCenterFloatFabLocation, L8);
  dart.defineExtensionMethods(floating_action_button_location._MiniCenterFloatFabLocation, ['toString']);
  const StandardFabLocation_FabEndOffsetX$36$0 = class StandardFabLocation_FabEndOffsetX extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabEndOffsetX$36$0.new = function() {
    StandardFabLocation_FabEndOffsetX$36$0.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabEndOffsetX$36$0.prototype;
  dart.applyMixin(StandardFabLocation_FabEndOffsetX$36$0, floating_action_button_location.FabEndOffsetX);
  const StandardFabLocation_FabFloatOffsetY$36$2 = class StandardFabLocation_FabFloatOffsetY extends StandardFabLocation_FabEndOffsetX$36$0 {};
  (StandardFabLocation_FabFloatOffsetY$36$2.new = function() {
    StandardFabLocation_FabFloatOffsetY$36$2.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabFloatOffsetY$36$2.prototype;
  dart.applyMixin(StandardFabLocation_FabFloatOffsetY$36$2, floating_action_button_location.FabFloatOffsetY);
  floating_action_button_location._EndFloatFabLocation = class _EndFloatFabLocation extends StandardFabLocation_FabFloatOffsetY$36$2 {
    toString() {
      return "FloatingActionButtonLocation.endFloat";
    }
  };
  (floating_action_button_location._EndFloatFabLocation.new = function() {
    floating_action_button_location._EndFloatFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._EndFloatFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._EndFloatFabLocation);
  dart.addTypeCaches(floating_action_button_location._EndFloatFabLocation);
  dart.setLibraryUri(floating_action_button_location._EndFloatFabLocation, L8);
  dart.defineExtensionMethods(floating_action_button_location._EndFloatFabLocation, ['toString']);
  const StandardFabLocation_FabMiniOffsetAdjustment$36$3 = class StandardFabLocation_FabMiniOffsetAdjustment extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabMiniOffsetAdjustment$36$3.new = function() {
    StandardFabLocation_FabMiniOffsetAdjustment$36$3.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabMiniOffsetAdjustment$36$3.prototype;
  dart.applyMixin(StandardFabLocation_FabMiniOffsetAdjustment$36$3, floating_action_button_location.FabMiniOffsetAdjustment);
  const StandardFabLocation_FabEndOffsetX$36$1 = class StandardFabLocation_FabEndOffsetX extends StandardFabLocation_FabMiniOffsetAdjustment$36$3 {};
  (StandardFabLocation_FabEndOffsetX$36$1.new = function() {
    StandardFabLocation_FabEndOffsetX$36$1.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabEndOffsetX$36$1.prototype;
  dart.applyMixin(StandardFabLocation_FabEndOffsetX$36$1, floating_action_button_location.FabEndOffsetX);
  const StandardFabLocation_FabFloatOffsetY$36$3 = class StandardFabLocation_FabFloatOffsetY extends StandardFabLocation_FabEndOffsetX$36$1 {};
  (StandardFabLocation_FabFloatOffsetY$36$3.new = function() {
    StandardFabLocation_FabFloatOffsetY$36$3.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabFloatOffsetY$36$3.prototype;
  dart.applyMixin(StandardFabLocation_FabFloatOffsetY$36$3, floating_action_button_location.FabFloatOffsetY);
  floating_action_button_location._MiniEndFloatFabLocation = class _MiniEndFloatFabLocation extends StandardFabLocation_FabFloatOffsetY$36$3 {
    toString() {
      return "FloatingActionButtonLocation.miniEndFloat";
    }
  };
  (floating_action_button_location._MiniEndFloatFabLocation.new = function() {
    floating_action_button_location._MiniEndFloatFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._MiniEndFloatFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._MiniEndFloatFabLocation);
  dart.addTypeCaches(floating_action_button_location._MiniEndFloatFabLocation);
  dart.setLibraryUri(floating_action_button_location._MiniEndFloatFabLocation, L8);
  dart.defineExtensionMethods(floating_action_button_location._MiniEndFloatFabLocation, ['toString']);
  const StandardFabLocation_FabStartOffsetX$36$2 = class StandardFabLocation_FabStartOffsetX extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabStartOffsetX$36$2.new = function() {
    StandardFabLocation_FabStartOffsetX$36$2.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabStartOffsetX$36$2.prototype;
  dart.applyMixin(StandardFabLocation_FabStartOffsetX$36$2, floating_action_button_location.FabStartOffsetX);
  const StandardFabLocation_FabDockedOffsetY$36 = class StandardFabLocation_FabDockedOffsetY extends StandardFabLocation_FabStartOffsetX$36$2 {};
  (StandardFabLocation_FabDockedOffsetY$36.new = function() {
    StandardFabLocation_FabDockedOffsetY$36.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabDockedOffsetY$36.prototype;
  dart.applyMixin(StandardFabLocation_FabDockedOffsetY$36, floating_action_button_location.FabDockedOffsetY);
  floating_action_button_location._StartDockedFabLocation = class _StartDockedFabLocation extends StandardFabLocation_FabDockedOffsetY$36 {
    toString() {
      return "FloatingActionButtonLocation.startDocked";
    }
  };
  (floating_action_button_location._StartDockedFabLocation.new = function() {
    floating_action_button_location._StartDockedFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._StartDockedFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._StartDockedFabLocation);
  dart.addTypeCaches(floating_action_button_location._StartDockedFabLocation);
  dart.setLibraryUri(floating_action_button_location._StartDockedFabLocation, L8);
  dart.defineExtensionMethods(floating_action_button_location._StartDockedFabLocation, ['toString']);
  const StandardFabLocation_FabMiniOffsetAdjustment$36$4 = class StandardFabLocation_FabMiniOffsetAdjustment extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabMiniOffsetAdjustment$36$4.new = function() {
    StandardFabLocation_FabMiniOffsetAdjustment$36$4.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabMiniOffsetAdjustment$36$4.prototype;
  dart.applyMixin(StandardFabLocation_FabMiniOffsetAdjustment$36$4, floating_action_button_location.FabMiniOffsetAdjustment);
  const StandardFabLocation_FabStartOffsetX$36$3 = class StandardFabLocation_FabStartOffsetX extends StandardFabLocation_FabMiniOffsetAdjustment$36$4 {};
  (StandardFabLocation_FabStartOffsetX$36$3.new = function() {
    StandardFabLocation_FabStartOffsetX$36$3.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabStartOffsetX$36$3.prototype;
  dart.applyMixin(StandardFabLocation_FabStartOffsetX$36$3, floating_action_button_location.FabStartOffsetX);
  const StandardFabLocation_FabDockedOffsetY$36$ = class StandardFabLocation_FabDockedOffsetY extends StandardFabLocation_FabStartOffsetX$36$3 {};
  (StandardFabLocation_FabDockedOffsetY$36$.new = function() {
    StandardFabLocation_FabDockedOffsetY$36$.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabDockedOffsetY$36$.prototype;
  dart.applyMixin(StandardFabLocation_FabDockedOffsetY$36$, floating_action_button_location.FabDockedOffsetY);
  floating_action_button_location._MiniStartDockedFabLocation = class _MiniStartDockedFabLocation extends StandardFabLocation_FabDockedOffsetY$36$ {
    toString() {
      return "FloatingActionButtonLocation.miniStartDocked";
    }
  };
  (floating_action_button_location._MiniStartDockedFabLocation.new = function() {
    floating_action_button_location._MiniStartDockedFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._MiniStartDockedFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._MiniStartDockedFabLocation);
  dart.addTypeCaches(floating_action_button_location._MiniStartDockedFabLocation);
  dart.setLibraryUri(floating_action_button_location._MiniStartDockedFabLocation, L8);
  dart.defineExtensionMethods(floating_action_button_location._MiniStartDockedFabLocation, ['toString']);
  const StandardFabLocation_FabCenterOffsetX$36$2 = class StandardFabLocation_FabCenterOffsetX extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabCenterOffsetX$36$2.new = function() {
    StandardFabLocation_FabCenterOffsetX$36$2.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabCenterOffsetX$36$2.prototype;
  dart.applyMixin(StandardFabLocation_FabCenterOffsetX$36$2, floating_action_button_location.FabCenterOffsetX);
  const StandardFabLocation_FabDockedOffsetY$36$0 = class StandardFabLocation_FabDockedOffsetY extends StandardFabLocation_FabCenterOffsetX$36$2 {};
  (StandardFabLocation_FabDockedOffsetY$36$0.new = function() {
    StandardFabLocation_FabDockedOffsetY$36$0.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabDockedOffsetY$36$0.prototype;
  dart.applyMixin(StandardFabLocation_FabDockedOffsetY$36$0, floating_action_button_location.FabDockedOffsetY);
  floating_action_button_location._CenterDockedFabLocation = class _CenterDockedFabLocation extends StandardFabLocation_FabDockedOffsetY$36$0 {
    toString() {
      return "FloatingActionButtonLocation.centerDocked";
    }
  };
  (floating_action_button_location._CenterDockedFabLocation.new = function() {
    floating_action_button_location._CenterDockedFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._CenterDockedFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._CenterDockedFabLocation);
  dart.addTypeCaches(floating_action_button_location._CenterDockedFabLocation);
  dart.setLibraryUri(floating_action_button_location._CenterDockedFabLocation, L8);
  dart.defineExtensionMethods(floating_action_button_location._CenterDockedFabLocation, ['toString']);
  const StandardFabLocation_FabMiniOffsetAdjustment$36$5 = class StandardFabLocation_FabMiniOffsetAdjustment extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabMiniOffsetAdjustment$36$5.new = function() {
    StandardFabLocation_FabMiniOffsetAdjustment$36$5.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabMiniOffsetAdjustment$36$5.prototype;
  dart.applyMixin(StandardFabLocation_FabMiniOffsetAdjustment$36$5, floating_action_button_location.FabMiniOffsetAdjustment);
  const StandardFabLocation_FabCenterOffsetX$36$3 = class StandardFabLocation_FabCenterOffsetX extends StandardFabLocation_FabMiniOffsetAdjustment$36$5 {};
  (StandardFabLocation_FabCenterOffsetX$36$3.new = function() {
    StandardFabLocation_FabCenterOffsetX$36$3.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabCenterOffsetX$36$3.prototype;
  dart.applyMixin(StandardFabLocation_FabCenterOffsetX$36$3, floating_action_button_location.FabCenterOffsetX);
  const StandardFabLocation_FabDockedOffsetY$36$1 = class StandardFabLocation_FabDockedOffsetY extends StandardFabLocation_FabCenterOffsetX$36$3 {};
  (StandardFabLocation_FabDockedOffsetY$36$1.new = function() {
    StandardFabLocation_FabDockedOffsetY$36$1.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabDockedOffsetY$36$1.prototype;
  dart.applyMixin(StandardFabLocation_FabDockedOffsetY$36$1, floating_action_button_location.FabDockedOffsetY);
  floating_action_button_location._MiniCenterDockedFabLocation = class _MiniCenterDockedFabLocation extends StandardFabLocation_FabDockedOffsetY$36$1 {
    toString() {
      return "FloatingActionButtonLocation.miniCenterDocked";
    }
  };
  (floating_action_button_location._MiniCenterDockedFabLocation.new = function() {
    floating_action_button_location._MiniCenterDockedFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._MiniCenterDockedFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._MiniCenterDockedFabLocation);
  dart.addTypeCaches(floating_action_button_location._MiniCenterDockedFabLocation);
  dart.setLibraryUri(floating_action_button_location._MiniCenterDockedFabLocation, L8);
  dart.defineExtensionMethods(floating_action_button_location._MiniCenterDockedFabLocation, ['toString']);
  const StandardFabLocation_FabEndOffsetX$36$2 = class StandardFabLocation_FabEndOffsetX extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabEndOffsetX$36$2.new = function() {
    StandardFabLocation_FabEndOffsetX$36$2.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabEndOffsetX$36$2.prototype;
  dart.applyMixin(StandardFabLocation_FabEndOffsetX$36$2, floating_action_button_location.FabEndOffsetX);
  const StandardFabLocation_FabDockedOffsetY$36$2 = class StandardFabLocation_FabDockedOffsetY extends StandardFabLocation_FabEndOffsetX$36$2 {};
  (StandardFabLocation_FabDockedOffsetY$36$2.new = function() {
    StandardFabLocation_FabDockedOffsetY$36$2.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabDockedOffsetY$36$2.prototype;
  dart.applyMixin(StandardFabLocation_FabDockedOffsetY$36$2, floating_action_button_location.FabDockedOffsetY);
  floating_action_button_location._EndDockedFabLocation = class _EndDockedFabLocation extends StandardFabLocation_FabDockedOffsetY$36$2 {
    toString() {
      return "FloatingActionButtonLocation.endDocked";
    }
  };
  (floating_action_button_location._EndDockedFabLocation.new = function() {
    floating_action_button_location._EndDockedFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._EndDockedFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._EndDockedFabLocation);
  dart.addTypeCaches(floating_action_button_location._EndDockedFabLocation);
  dart.setLibraryUri(floating_action_button_location._EndDockedFabLocation, L8);
  dart.defineExtensionMethods(floating_action_button_location._EndDockedFabLocation, ['toString']);
  const StandardFabLocation_FabMiniOffsetAdjustment$36$6 = class StandardFabLocation_FabMiniOffsetAdjustment extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabMiniOffsetAdjustment$36$6.new = function() {
    StandardFabLocation_FabMiniOffsetAdjustment$36$6.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabMiniOffsetAdjustment$36$6.prototype;
  dart.applyMixin(StandardFabLocation_FabMiniOffsetAdjustment$36$6, floating_action_button_location.FabMiniOffsetAdjustment);
  const StandardFabLocation_FabEndOffsetX$36$3 = class StandardFabLocation_FabEndOffsetX extends StandardFabLocation_FabMiniOffsetAdjustment$36$6 {};
  (StandardFabLocation_FabEndOffsetX$36$3.new = function() {
    StandardFabLocation_FabEndOffsetX$36$3.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabEndOffsetX$36$3.prototype;
  dart.applyMixin(StandardFabLocation_FabEndOffsetX$36$3, floating_action_button_location.FabEndOffsetX);
  const StandardFabLocation_FabDockedOffsetY$36$3 = class StandardFabLocation_FabDockedOffsetY extends StandardFabLocation_FabEndOffsetX$36$3 {};
  (StandardFabLocation_FabDockedOffsetY$36$3.new = function() {
    StandardFabLocation_FabDockedOffsetY$36$3.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabDockedOffsetY$36$3.prototype;
  dart.applyMixin(StandardFabLocation_FabDockedOffsetY$36$3, floating_action_button_location.FabDockedOffsetY);
  floating_action_button_location._MiniEndDockedFabLocation = class _MiniEndDockedFabLocation extends StandardFabLocation_FabDockedOffsetY$36$3 {
    toString() {
      return "FloatingActionButtonLocation.miniEndDocked";
    }
  };
  (floating_action_button_location._MiniEndDockedFabLocation.new = function() {
    floating_action_button_location._MiniEndDockedFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._MiniEndDockedFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._MiniEndDockedFabLocation);
  dart.addTypeCaches(floating_action_button_location._MiniEndDockedFabLocation);
  dart.setLibraryUri(floating_action_button_location._MiniEndDockedFabLocation, L8);
  dart.defineExtensionMethods(floating_action_button_location._MiniEndDockedFabLocation, ['toString']);
  var C239;
  floating_action_button_location.FloatingActionButtonAnimator = class FloatingActionButtonAnimator extends core.Object {
    getAnimationRestart(previousValue) {
      return 0.0;
    }
    toString() {
      return object$.objectRuntimeType(this, "FloatingActionButtonAnimator");
    }
  };
  (floating_action_button_location.FloatingActionButtonAnimator.new = function() {
    ;
  }).prototype = floating_action_button_location.FloatingActionButtonAnimator.prototype;
  dart.addTypeTests(floating_action_button_location.FloatingActionButtonAnimator);
  dart.addTypeCaches(floating_action_button_location.FloatingActionButtonAnimator);
  dart.setMethodSignature(floating_action_button_location.FloatingActionButtonAnimator, () => ({
    __proto__: dart.getMethods(floating_action_button_location.FloatingActionButtonAnimator.__proto__),
    getAnimationRestart: dart.fnType(dart.legacy(core.double), [dart.legacy(core.double)]),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setLibraryUri(floating_action_button_location.FloatingActionButtonAnimator, L8);
  dart.defineExtensionMethods(floating_action_button_location.FloatingActionButtonAnimator, ['toString']);
  dart.defineLazy(floating_action_button_location.FloatingActionButtonAnimator, {
    /*floating_action_button_location.FloatingActionButtonAnimator.scaling*/get scaling() {
      return C239 || CT.C239;
    }
  }, true);
  var C241;
  var C240;
  var C242;
  floating_action_button_location._ScalingFabMotionAnimator = class _ScalingFabMotionAnimator extends floating_action_button_location.FloatingActionButtonAnimator {
    getOffset(opts) {
      let begin = opts && 'begin' in opts ? opts.begin : null;
      let end = opts && 'end' in opts ? opts.end : null;
      let progress = opts && 'progress' in opts ? opts.progress : null;
      if (dart.notNull(progress) < 0.5) {
        return begin;
      } else {
        return end;
      }
    }
    getScaleAnimation(opts) {
      let parent = opts && 'parent' in opts ? opts.parent : null;
      let curve = C240 || CT.C240;
      return new (_AnimationSwapOfdoubleL()).new(new animations.ReverseAnimation.new(parent.drive(doubleL(), new tween.CurveTween.new({curve: curve.flipped}))), parent.drive(doubleL(), new tween.CurveTween.new({curve: curve})), parent, 0.5);
    }
    getRotationAnimation(opts) {
      let parent = opts && 'parent' in opts ? opts.parent : null;
      return new (_AnimationSwapOfdoubleL()).new(parent.drive(doubleL(), floating_action_button_location._ScalingFabMotionAnimator._rotationTween), new animations.ReverseAnimation.new(parent.drive(doubleL(), floating_action_button_location._ScalingFabMotionAnimator._thresholdCenterTween)), parent, 0.5);
    }
    getAnimationRestart(previousValue) {
      return math.min(doubleL(), 1.0 - dart.notNull(previousValue), previousValue);
    }
  };
  (floating_action_button_location._ScalingFabMotionAnimator.new = function() {
    floating_action_button_location._ScalingFabMotionAnimator.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._ScalingFabMotionAnimator.prototype;
  dart.addTypeTests(floating_action_button_location._ScalingFabMotionAnimator);
  dart.addTypeCaches(floating_action_button_location._ScalingFabMotionAnimator);
  dart.setMethodSignature(floating_action_button_location._ScalingFabMotionAnimator, () => ({
    __proto__: dart.getMethods(floating_action_button_location._ScalingFabMotionAnimator.__proto__),
    getOffset: dart.fnType(dart.legacy(ui.Offset), [], {begin: dart.legacy(ui.Offset), end: dart.legacy(ui.Offset), progress: dart.legacy(core.double)}, {}),
    getScaleAnimation: dart.fnType(dart.legacy(animation.Animation$(dart.legacy(core.double))), [], {parent: dart.legacy(animation.Animation$(dart.legacy(core.double)))}, {}),
    getRotationAnimation: dart.fnType(dart.legacy(animation.Animation$(dart.legacy(core.double))), [], {parent: dart.legacy(animation.Animation$(dart.legacy(core.double)))}, {})
  }));
  dart.setLibraryUri(floating_action_button_location._ScalingFabMotionAnimator, L8);
  dart.defineLazy(floating_action_button_location._ScalingFabMotionAnimator, {
    /*floating_action_button_location._ScalingFabMotionAnimator._rotationTween*/get _rotationTween() {
      return new (TweenOfdoubleL()).new({begin: 1.0 - 0.125 * 2.0, end: 1.0});
    },
    /*floating_action_button_location._ScalingFabMotionAnimator._thresholdCenterTween*/get _thresholdCenterTween() {
      return new tween.CurveTween.new({curve: C242 || CT.C242});
    }
  }, true);
  const _is__AnimationSwap_default = Symbol('_is__AnimationSwap_default');
  floating_action_button_location._AnimationSwap$ = dart.generic(T => {
    class _AnimationSwap extends animations.CompoundAnimation$(dart.legacy(T)) {
      get value() {
        return dart.notNull(this.parent.value) < dart.notNull(this.swapThreshold) ? this.first.value : this.next.value;
      }
    }
    (_AnimationSwap.new = function(first, next, parent, swapThreshold) {
      this.parent = parent;
      this.swapThreshold = swapThreshold;
      _AnimationSwap.__proto__.new.call(this, {first: first, next: next});
      ;
    }).prototype = _AnimationSwap.prototype;
    dart.addTypeTests(_AnimationSwap);
    _AnimationSwap.prototype[_is__AnimationSwap_default] = true;
    dart.addTypeCaches(_AnimationSwap);
    dart.setGetterSignature(_AnimationSwap, () => ({
      __proto__: dart.getGetters(_AnimationSwap.__proto__),
      value: dart.legacy(T)
    }));
    dart.setLibraryUri(_AnimationSwap, L8);
    dart.setFieldSignature(_AnimationSwap, () => ({
      __proto__: dart.getFields(_AnimationSwap.__proto__),
      parent: dart.finalFieldType(dart.legacy(animation.Animation$(dart.legacy(core.double)))),
      swapThreshold: dart.finalFieldType(dart.legacy(core.double))
    }));
    return _AnimationSwap;
  });
  floating_action_button_location._AnimationSwap = floating_action_button_location._AnimationSwap$();
  dart.addTypeTests(floating_action_button_location._AnimationSwap, _is__AnimationSwap_default);
  var C243;
  dart.defineLazy(floating_action_button_location, {
    /*floating_action_button_location.kFloatingActionButtonMargin*/get kFloatingActionButtonMargin() {
      return 16;
    },
    /*floating_action_button_location.kFloatingActionButtonSegue*/get kFloatingActionButtonSegue() {
      return C243 || CT.C243;
    },
    /*floating_action_button_location.kFloatingActionButtonTurnInterval*/get kFloatingActionButtonTurnInterval() {
      return 0.125;
    },
    /*floating_action_button_location.kMiniButtonOffsetAdjustment*/get kMiniButtonOffsetAdjustment() {
      return 4;
    }
  }, true);
  var message$ = dart.privateName(tooltip, "Tooltip.message");
  var height$ = dart.privateName(tooltip, "Tooltip.height");
  var padding$1 = dart.privateName(tooltip, "Tooltip.padding");
  var margin$0 = dart.privateName(tooltip, "Tooltip.margin");
  var verticalOffset$ = dart.privateName(tooltip, "Tooltip.verticalOffset");
  var preferBelow$ = dart.privateName(tooltip, "Tooltip.preferBelow");
  var excludeFromSemantics$ = dart.privateName(tooltip, "Tooltip.excludeFromSemantics");
  var child$ = dart.privateName(tooltip, "Tooltip.child");
  var decoration$ = dart.privateName(tooltip, "Tooltip.decoration");
  var textStyle$ = dart.privateName(tooltip, "Tooltip.textStyle");
  var waitDuration$ = dart.privateName(tooltip, "Tooltip.waitDuration");
  var showDuration$ = dart.privateName(tooltip, "Tooltip.showDuration");
  tooltip.Tooltip = class Tooltip extends framework.StatefulWidget {
    get message() {
      return this[message$];
    }
    set message(value) {
      super.message = value;
    }
    get height() {
      return this[height$];
    }
    set height(value) {
      super.height = value;
    }
    get padding() {
      return this[padding$1];
    }
    set padding(value) {
      super.padding = value;
    }
    get margin() {
      return this[margin$0];
    }
    set margin(value) {
      super.margin = value;
    }
    get verticalOffset() {
      return this[verticalOffset$];
    }
    set verticalOffset(value) {
      super.verticalOffset = value;
    }
    get preferBelow() {
      return this[preferBelow$];
    }
    set preferBelow(value) {
      super.preferBelow = value;
    }
    get excludeFromSemantics() {
      return this[excludeFromSemantics$];
    }
    set excludeFromSemantics(value) {
      super.excludeFromSemantics = value;
    }
    get child() {
      return this[child$];
    }
    set child(value) {
      super.child = value;
    }
    get decoration() {
      return this[decoration$];
    }
    set decoration(value) {
      super.decoration = value;
    }
    get textStyle() {
      return this[textStyle$];
    }
    set textStyle(value) {
      super.textStyle = value;
    }
    get waitDuration() {
      return this[waitDuration$];
    }
    set waitDuration(value) {
      super.waitDuration = value;
    }
    get showDuration() {
      return this[showDuration$];
    }
    set showDuration(value) {
      super.showDuration = value;
    }
    createState() {
      return new tooltip._TooltipState.new();
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new diagnostics.StringProperty.new("message", this.message, {showName: false}));
      properties.add(new diagnostics.DoubleProperty.new("height", this.height, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfEdgeInsetsGeometryL()).new("padding", this.padding, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfEdgeInsetsGeometryL()).new("margin", this.margin, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("vertical offset", this.verticalOffset, {defaultValue: null}));
      properties.add(new diagnostics.FlagProperty.new("position", {value: this.preferBelow, ifTrue: "below", ifFalse: "above", showName: true, defaultValue: null}));
      properties.add(new diagnostics.FlagProperty.new("semantics", {value: this.excludeFromSemantics, ifTrue: "excluded", showName: true, defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfDurationL()).new("wait duration", this.waitDuration, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfDurationL()).new("show duration", this.showDuration, {defaultValue: null}));
    }
  };
  (tooltip.Tooltip.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let message = opts && 'message' in opts ? opts.message : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let margin = opts && 'margin' in opts ? opts.margin : null;
    let verticalOffset = opts && 'verticalOffset' in opts ? opts.verticalOffset : null;
    let preferBelow = opts && 'preferBelow' in opts ? opts.preferBelow : null;
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : null;
    let decoration = opts && 'decoration' in opts ? opts.decoration : null;
    let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
    let waitDuration = opts && 'waitDuration' in opts ? opts.waitDuration : null;
    let showDuration = opts && 'showDuration' in opts ? opts.showDuration : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[message$] = message;
    this[height$] = height;
    this[padding$1] = padding;
    this[margin$0] = margin;
    this[verticalOffset$] = verticalOffset;
    this[preferBelow$] = preferBelow;
    this[excludeFromSemantics$] = excludeFromSemantics;
    this[decoration$] = decoration;
    this[textStyle$] = textStyle;
    this[waitDuration$] = waitDuration;
    this[showDuration$] = showDuration;
    this[child$] = child;
    if (!(message != null)) dart.assertFailed(null, L10, 65, 15, "message != null");
    tooltip.Tooltip.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = tooltip.Tooltip.prototype;
  dart.addTypeTests(tooltip.Tooltip);
  dart.addTypeCaches(tooltip.Tooltip);
  dart.setMethodSignature(tooltip.Tooltip, () => ({
    __proto__: dart.getMethods(tooltip.Tooltip.__proto__),
    createState: dart.fnType(dart.legacy(tooltip._TooltipState), [])
  }));
  dart.setLibraryUri(tooltip.Tooltip, L11);
  dart.setFieldSignature(tooltip.Tooltip, () => ({
    __proto__: dart.getFields(tooltip.Tooltip.__proto__),
    message: dart.finalFieldType(dart.legacy(core.String)),
    height: dart.finalFieldType(dart.legacy(core.double)),
    padding: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsetsGeometry)),
    margin: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsetsGeometry)),
    verticalOffset: dart.finalFieldType(dart.legacy(core.double)),
    preferBelow: dart.finalFieldType(dart.legacy(core.bool)),
    excludeFromSemantics: dart.finalFieldType(dart.legacy(core.bool)),
    child: dart.finalFieldType(dart.legacy(framework.Widget)),
    decoration: dart.finalFieldType(dart.legacy(decoration.Decoration)),
    textStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    waitDuration: dart.finalFieldType(dart.legacy(core.Duration)),
    showDuration: dart.finalFieldType(dart.legacy(core.Duration))
  }));
  var _controller = dart.privateName(tooltip, "_controller");
  var _entry = dart.privateName(tooltip, "_entry");
  var _hideTimer = dart.privateName(tooltip, "_hideTimer");
  var _showTimer = dart.privateName(tooltip, "_showTimer");
  var _mouseIsConnected = dart.privateName(tooltip, "_mouseIsConnected");
  var _longPressActivated = dart.privateName(tooltip, "_longPressActivated");
  var _handleStatusChanged = dart.privateName(tooltip, "_handleStatusChanged");
  var _handleMouseTrackerChange = dart.privateName(tooltip, "_handleMouseTrackerChange");
  var _handlePointerEvent = dart.privateName(tooltip, "_handlePointerEvent");
  var _hideTooltip = dart.privateName(tooltip, "_hideTooltip");
  var _removeEntry = dart.privateName(tooltip, "_removeEntry");
  var _showTooltip = dart.privateName(tooltip, "_showTooltip");
  var _createNewEntry = dart.privateName(tooltip, "_createNewEntry");
  var C246;
  var C247;
  var C248;
  var C249;
  var C250;
  var C251;
  var C252;
  var C253;
  var C254;
  var C255;
  var C245;
  var C244;
  var C258;
  var C259;
  var C257;
  var C256;
  var _handleLongPress = dart.privateName(tooltip, "_handleLongPress");
  var Radius_y = dart.privateName(ui, "Radius.y");
  var Radius_x = dart.privateName(ui, "Radius.x");
  var C261;
  var BorderRadius_bottomRight = dart.privateName(border_radius, "BorderRadius.bottomRight");
  var BorderRadius_bottomLeft = dart.privateName(border_radius, "BorderRadius.bottomLeft");
  var BorderRadius_topRight = dart.privateName(border_radius, "BorderRadius.topRight");
  var BorderRadius_topLeft = dart.privateName(border_radius, "BorderRadius.topLeft");
  var C260;
  var C264;
  var C265;
  var C263;
  var C262;
  var C268;
  var C269;
  var C270;
  var C271;
  var C267;
  var C266;
  var C274;
  var C275;
  var C276;
  var C273;
  var C272;
  var C277;
  var C278;
  var C279;
  var C280;
  var C281;
  var C282;
  const State_SingleTickerProviderStateMixin$36 = class State_SingleTickerProviderStateMixin extends framework.State$(dart.legacy(tooltip.Tooltip)) {};
  (State_SingleTickerProviderStateMixin$36.new = function() {
    ticker_provider.SingleTickerProviderStateMixin$(dart.legacy(tooltip.Tooltip))[dart.mixinNew].call(this);
    State_SingleTickerProviderStateMixin$36.__proto__.new.call(this);
  }).prototype = State_SingleTickerProviderStateMixin$36.prototype;
  dart.applyMixin(State_SingleTickerProviderStateMixin$36, ticker_provider.SingleTickerProviderStateMixin$(dart.legacy(tooltip.Tooltip)));
  tooltip._TooltipState = class _TooltipState extends State_SingleTickerProviderStateMixin$36 {
    initState() {
      let t1;
      super.initState();
      this[_mouseIsConnected] = binding.RendererBinding.instance.mouseTracker.mouseIsConnected;
      this[_controller] = (t1 = new animation_controller.AnimationController.new({duration: tooltip._TooltipState._fadeInDuration, reverseDuration: tooltip._TooltipState._fadeOutDuration, vsync: this}), (() => {
        t1.addStatusListener(dart.bind(this, _handleStatusChanged));
        return t1;
      })());
      binding.RendererBinding.instance.mouseTracker.addListener(dart.bind(this, _handleMouseTrackerChange));
      binding$.GestureBinding.instance.pointerRouter.addGlobalRoute(dart.bind(this, _handlePointerEvent));
    }
    [_handleMouseTrackerChange]() {
      if (!dart.test(this.mounted)) {
        return;
      }
      let mouseIsConnected = binding.RendererBinding.instance.mouseTracker.mouseIsConnected;
      if (!dart.equals(mouseIsConnected, this[_mouseIsConnected])) {
        this.setState(dart.fn(() => {
          this[_mouseIsConnected] = mouseIsConnected;
        }, VoidToNullN()));
      }
    }
    [_handleStatusChanged](status) {
      if (status == animation.AnimationStatus.dismissed) {
        this[_hideTooltip]({immediately: true});
      }
    }
    [_hideTooltip](opts) {
      let t1;
      let immediately = opts && 'immediately' in opts ? opts.immediately : false;
      t1 = this[_showTimer];
      t1 == null ? null : t1.cancel();
      this[_showTimer] = null;
      if (dart.test(immediately)) {
        this[_removeEntry]();
        return;
      }
      if (dart.test(this[_longPressActivated])) {
        this[_hideTimer] == null ? this[_hideTimer] = async.Timer.new(this.showDuration, dart.bind(this[_controller], 'reverse')) : null;
      } else {
        this[_controller].reverse();
      }
      this[_longPressActivated] = false;
    }
    [_showTooltip](opts) {
      let t1;
      let immediately = opts && 'immediately' in opts ? opts.immediately : false;
      t1 = this[_hideTimer];
      t1 == null ? null : t1.cancel();
      this[_hideTimer] = null;
      if (dart.test(immediately)) {
        this.ensureTooltipVisible();
        return;
      }
      this[_showTimer] == null ? this[_showTimer] = async.Timer.new(this.waitDuration, dart.bind(this, 'ensureTooltipVisible')) : null;
    }
    ensureTooltipVisible() {
      let t1, t1$;
      t1 = this[_showTimer];
      t1 == null ? null : t1.cancel();
      this[_showTimer] = null;
      if (this[_entry] != null) {
        t1$ = this[_hideTimer];
        t1$ == null ? null : t1$.cancel();
        this[_hideTimer] = null;
        this[_controller].forward();
        return false;
      }
      this[_createNewEntry]();
      this[_controller].forward();
      return true;
    }
    [_createNewEntry]() {
      let box = RenderBoxL().as(this.context.findRenderObject());
      let target = box.localToGlobal(box.size.center(ui.Offset.zero));
      let overlay = new basic.Directionality.new({textDirection: basic.Directionality.of(this.context), child: new tooltip._TooltipOverlay.new({message: this.widget.message, height: this.height, padding: this.padding, margin: this.margin, decoration: this.decoration, textStyle: this.textStyle, animation: new animations.CurvedAnimation.new({parent: this[_controller], curve: curves.Curves.fastOutSlowIn}), target: target, verticalOffset: this.verticalOffset, preferBelow: this.preferBelow, $creationLocationd_0dea112b090073317d4: C244 || CT.C244}), $creationLocationd_0dea112b090073317d4: C256 || CT.C256});
      this[_entry] = new overlay$.OverlayEntry.new({builder: dart.fn(context => overlay, BuildContextLToWidgetL())});
      overlay$.Overlay.of(this.context, {debugRequiredFor: this.widget}).insert(this[_entry]);
      semantics_service.SemanticsService.tooltip(this.widget.message);
    }
    [_removeEntry]() {
      let t1, t1$, t1$0;
      t1 = this[_hideTimer];
      t1 == null ? null : t1.cancel();
      this[_hideTimer] = null;
      t1$ = this[_showTimer];
      t1$ == null ? null : t1$.cancel();
      this[_showTimer] = null;
      t1$0 = this[_entry];
      t1$0 == null ? null : t1$0.remove();
      this[_entry] = null;
    }
    [_handlePointerEvent](event) {
      if (this[_entry] == null) {
        return;
      }
      if (PointerUpEventL().is(event) || PointerCancelEventL().is(event)) {
        this[_hideTooltip]();
      } else if (PointerDownEventL().is(event)) {
        this[_hideTooltip]({immediately: true});
      }
    }
    deactivate() {
      let t1;
      if (this[_entry] != null) {
        this[_hideTooltip]({immediately: true});
      }
      t1 = this[_showTimer];
      t1 == null ? null : t1.cancel();
      super.deactivate();
    }
    dispose() {
      binding$.GestureBinding.instance.pointerRouter.removeGlobalRoute(dart.bind(this, _handlePointerEvent));
      binding.RendererBinding.instance.mouseTracker.removeListener(dart.bind(this, _handleMouseTrackerChange));
      if (this[_entry] != null) this[_removeEntry]();
      this[_controller].dispose();
      super.dispose();
    }
    [_handleLongPress]() {
      this[_longPressActivated] = true;
      let tooltipCreated = this.ensureTooltipVisible();
      if (dart.test(tooltipCreated)) feedback.Feedback.forLongPress(this.context);
    }
    build(context) {
      let t1, t1$, t1$0, t1$1, t1$2, t1$3, t1$4, t1$5, t1$6, t1$7, t1$8, t1$9, t1$10, t1$11, t1$12, t1$13, t1$14, t1$15, t1$16, t1$17;
      if (!(overlay$.Overlay.of(context, {debugRequiredFor: this.widget}) != null)) dart.assertFailed(null, L10, 363, 12, "Overlay.of(context, debugRequiredFor: widget) != null");
      let theme = theme$.Theme.of(context);
      let tooltipTheme = tooltip_theme.TooltipTheme.of(context);
      let defaultTextStyle = null;
      let defaultDecoration = null;
      if (dart.equals(theme.brightness, ui.Brightness.dark)) {
        defaultTextStyle = theme.textTheme.bodyText2.copyWith({color: colors$.Colors.black});
        defaultDecoration = new box_decoration.BoxDecoration.new({color: colors$.Colors.white.withOpacity(0.9), borderRadius: C260 || CT.C260});
      } else {
        defaultTextStyle = theme.textTheme.bodyText2.copyWith({color: colors$.Colors.white});
        defaultDecoration = new box_decoration.BoxDecoration.new({color: colors$.Colors.grey._get(700).withOpacity(0.9), borderRadius: C260 || CT.C260});
      }
      this.height = (t1$ = (t1 = this.widget.height, t1 == null ? tooltipTheme.height : t1), t1$ == null ? 32 : t1$);
      this.padding = (t1$1 = (t1$0 = this.widget.padding, t1$0 == null ? tooltipTheme.padding : t1$0), t1$1 == null ? tooltip._TooltipState._defaultPadding : t1$1);
      this.margin = (t1$3 = (t1$2 = this.widget.margin, t1$2 == null ? tooltipTheme.margin : t1$2), t1$3 == null ? tooltip._TooltipState._defaultMargin : t1$3);
      this.verticalOffset = (t1$5 = (t1$4 = this.widget.verticalOffset, t1$4 == null ? tooltipTheme.verticalOffset : t1$4), t1$5 == null ? 24 : t1$5);
      this.preferBelow = (t1$7 = (t1$6 = this.widget.preferBelow, t1$6 == null ? tooltipTheme.preferBelow : t1$6), t1$7 == null ? true : t1$7);
      this.excludeFromSemantics = (t1$9 = (t1$8 = this.widget.excludeFromSemantics, t1$8 == null ? tooltipTheme.excludeFromSemantics : t1$8), t1$9 == null ? false : t1$9);
      this.decoration = (t1$11 = (t1$10 = this.widget.decoration, t1$10 == null ? tooltipTheme.decoration : t1$10), t1$11 == null ? defaultDecoration : t1$11);
      this.textStyle = (t1$13 = (t1$12 = this.widget.textStyle, t1$12 == null ? tooltipTheme.textStyle : t1$12), t1$13 == null ? defaultTextStyle : t1$13);
      this.waitDuration = (t1$15 = (t1$14 = this.widget.waitDuration, t1$14 == null ? tooltipTheme.waitDuration : t1$14), t1$15 == null ? tooltip._TooltipState._defaultWaitDuration : t1$15);
      this.showDuration = (t1$17 = (t1$16 = this.widget.showDuration, t1$16 == null ? tooltipTheme.showDuration : t1$16), t1$17 == null ? tooltip._TooltipState._defaultShowDuration : t1$17);
      let result = new gesture_detector.GestureDetector.new({behavior: proxy_box.HitTestBehavior.opaque, onLongPress: dart.bind(this, _handleLongPress), excludeFromSemantics: true, child: new basic.Semantics.new({label: dart.test(this.excludeFromSemantics) ? null : this.widget.message, child: this.widget.child, $creationLocationd_0dea112b090073317d4: C262 || CT.C262}), $creationLocationd_0dea112b090073317d4: C266 || CT.C266});
      if (dart.test(this[_mouseIsConnected])) {
        result = new basic.MouseRegion.new({onEnter: dart.fn(event => this[_showTooltip](), PointerEnterEventLTovoid()), onExit: dart.fn(event => this[_hideTooltip](), PointerExitEventLTovoid()), child: result, $creationLocationd_0dea112b090073317d4: C272 || CT.C272});
      }
      return result;
    }
  };
  (tooltip._TooltipState.new = function() {
    this.height = null;
    this.padding = null;
    this.margin = null;
    this.decoration = null;
    this.textStyle = null;
    this.verticalOffset = null;
    this.preferBelow = null;
    this.excludeFromSemantics = null;
    this[_controller] = null;
    this[_entry] = null;
    this[_hideTimer] = null;
    this[_showTimer] = null;
    this.showDuration = null;
    this.waitDuration = null;
    this[_mouseIsConnected] = null;
    this[_longPressActivated] = false;
    tooltip._TooltipState.__proto__.new.call(this);
    ;
  }).prototype = tooltip._TooltipState.prototype;
  dart.addTypeTests(tooltip._TooltipState);
  dart.addTypeCaches(tooltip._TooltipState);
  dart.setMethodSignature(tooltip._TooltipState, () => ({
    __proto__: dart.getMethods(tooltip._TooltipState.__proto__),
    [_handleMouseTrackerChange]: dart.fnType(dart.void, []),
    [_handleStatusChanged]: dart.fnType(dart.void, [dart.legacy(animation.AnimationStatus)]),
    [_hideTooltip]: dart.fnType(dart.void, [], {immediately: dart.legacy(core.bool)}, {}),
    [_showTooltip]: dart.fnType(dart.void, [], {immediately: dart.legacy(core.bool)}, {}),
    ensureTooltipVisible: dart.fnType(dart.legacy(core.bool), []),
    [_createNewEntry]: dart.fnType(dart.void, []),
    [_removeEntry]: dart.fnType(dart.void, []),
    [_handlePointerEvent]: dart.fnType(dart.void, [dart.legacy(events.PointerEvent)]),
    [_handleLongPress]: dart.fnType(dart.void, []),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(tooltip._TooltipState, L11);
  dart.setFieldSignature(tooltip._TooltipState, () => ({
    __proto__: dart.getFields(tooltip._TooltipState.__proto__),
    height: dart.fieldType(dart.legacy(core.double)),
    padding: dart.fieldType(dart.legacy(edge_insets.EdgeInsetsGeometry)),
    margin: dart.fieldType(dart.legacy(edge_insets.EdgeInsetsGeometry)),
    decoration: dart.fieldType(dart.legacy(decoration.Decoration)),
    textStyle: dart.fieldType(dart.legacy(text_style.TextStyle)),
    verticalOffset: dart.fieldType(dart.legacy(core.double)),
    preferBelow: dart.fieldType(dart.legacy(core.bool)),
    excludeFromSemantics: dart.fieldType(dart.legacy(core.bool)),
    [_controller]: dart.fieldType(dart.legacy(animation_controller.AnimationController)),
    [_entry]: dart.fieldType(dart.legacy(overlay$.OverlayEntry)),
    [_hideTimer]: dart.fieldType(dart.legacy(async.Timer)),
    [_showTimer]: dart.fieldType(dart.legacy(async.Timer)),
    showDuration: dart.fieldType(dart.legacy(core.Duration)),
    waitDuration: dart.fieldType(dart.legacy(core.Duration)),
    [_mouseIsConnected]: dart.fieldType(dart.legacy(core.bool)),
    [_longPressActivated]: dart.fieldType(dart.legacy(core.bool))
  }));
  dart.defineLazy(tooltip._TooltipState, {
    /*tooltip._TooltipState._defaultTooltipHeight*/get _defaultTooltipHeight() {
      return 32;
    },
    /*tooltip._TooltipState._defaultVerticalOffset*/get _defaultVerticalOffset() {
      return 24;
    },
    /*tooltip._TooltipState._defaultPreferBelow*/get _defaultPreferBelow() {
      return true;
    },
    /*tooltip._TooltipState._defaultPadding*/get _defaultPadding() {
      return C277 || CT.C277;
    },
    /*tooltip._TooltipState._defaultMargin*/get _defaultMargin() {
      return C278 || CT.C278;
    },
    /*tooltip._TooltipState._fadeInDuration*/get _fadeInDuration() {
      return C279 || CT.C279;
    },
    /*tooltip._TooltipState._fadeOutDuration*/get _fadeOutDuration() {
      return C280 || CT.C280;
    },
    /*tooltip._TooltipState._defaultShowDuration*/get _defaultShowDuration() {
      return C281 || CT.C281;
    },
    /*tooltip._TooltipState._defaultWaitDuration*/get _defaultWaitDuration() {
      return C282 || CT.C282;
    },
    /*tooltip._TooltipState._defaultExcludeFromSemantics*/get _defaultExcludeFromSemantics() {
      return false;
    }
  }, true);
  tooltip._TooltipPositionDelegate = class _TooltipPositionDelegate extends shifted_box.SingleChildLayoutDelegate {
    getConstraintsForChild(constraints) {
      return constraints.loosen();
    }
    getPositionForChild(size, childSize) {
      return geometry.positionDependentBox({size: size, childSize: childSize, target: this.target, verticalOffset: this.verticalOffset, preferBelow: this.preferBelow});
    }
    shouldRelayout(oldDelegate) {
      _TooltipPositionDelegateL().as(oldDelegate);
      return !dart.equals(this.target, oldDelegate.target) || this.verticalOffset != oldDelegate.verticalOffset || !dart.equals(this.preferBelow, oldDelegate.preferBelow);
    }
  };
  (tooltip._TooltipPositionDelegate.new = function(opts) {
    let target = opts && 'target' in opts ? opts.target : null;
    let verticalOffset = opts && 'verticalOffset' in opts ? opts.verticalOffset : null;
    let preferBelow = opts && 'preferBelow' in opts ? opts.preferBelow : null;
    this.target = target;
    this.verticalOffset = verticalOffset;
    this.preferBelow = preferBelow;
    if (!(target != null)) dart.assertFailed(null, L10, 430, 15, "target != null");
    if (!(verticalOffset != null)) dart.assertFailed(null, L10, 431, 15, "verticalOffset != null");
    if (!(preferBelow != null)) dart.assertFailed(null, L10, 432, 15, "preferBelow != null");
    tooltip._TooltipPositionDelegate.__proto__.new.call(this);
    ;
  }).prototype = tooltip._TooltipPositionDelegate.prototype;
  dart.addTypeTests(tooltip._TooltipPositionDelegate);
  dart.addTypeCaches(tooltip._TooltipPositionDelegate);
  dart.setMethodSignature(tooltip._TooltipPositionDelegate, () => ({
    __proto__: dart.getMethods(tooltip._TooltipPositionDelegate.__proto__),
    shouldRelayout: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)])
  }));
  dart.setLibraryUri(tooltip._TooltipPositionDelegate, L11);
  dart.setFieldSignature(tooltip._TooltipPositionDelegate, () => ({
    __proto__: dart.getFields(tooltip._TooltipPositionDelegate.__proto__),
    target: dart.finalFieldType(dart.legacy(ui.Offset)),
    verticalOffset: dart.finalFieldType(dart.legacy(core.double)),
    preferBelow: dart.finalFieldType(dart.legacy(core.bool))
  }));
  var C285;
  var C286;
  var C284;
  var C283;
  var C289;
  var C290;
  var C291;
  var C288;
  var C287;
  var C294;
  var C295;
  var C296;
  var C297;
  var C293;
  var C292;
  var C300;
  var C301;
  var C299;
  var C298;
  var C304;
  var C305;
  var C303;
  var C302;
  var C308;
  var C309;
  var C307;
  var C306;
  var C312;
  var C313;
  var C311;
  var C310;
  var C316;
  var C315;
  var C314;
  var C319;
  var C318;
  var C317;
  var message$0 = dart.privateName(tooltip, "_TooltipOverlay.message");
  var height$0 = dart.privateName(tooltip, "_TooltipOverlay.height");
  var padding$2 = dart.privateName(tooltip, "_TooltipOverlay.padding");
  var margin$1 = dart.privateName(tooltip, "_TooltipOverlay.margin");
  var decoration$0 = dart.privateName(tooltip, "_TooltipOverlay.decoration");
  var textStyle$0 = dart.privateName(tooltip, "_TooltipOverlay.textStyle");
  var animation$0 = dart.privateName(tooltip, "_TooltipOverlay.animation");
  var target$ = dart.privateName(tooltip, "_TooltipOverlay.target");
  var verticalOffset$0 = dart.privateName(tooltip, "_TooltipOverlay.verticalOffset");
  var preferBelow$0 = dart.privateName(tooltip, "_TooltipOverlay.preferBelow");
  tooltip._TooltipOverlay = class _TooltipOverlay extends framework.StatelessWidget {
    get message() {
      return this[message$0];
    }
    set message(value) {
      super.message = value;
    }
    get height() {
      return this[height$0];
    }
    set height(value) {
      super.height = value;
    }
    get padding() {
      return this[padding$2];
    }
    set padding(value) {
      super.padding = value;
    }
    get margin() {
      return this[margin$1];
    }
    set margin(value) {
      super.margin = value;
    }
    get decoration() {
      return this[decoration$0];
    }
    set decoration(value) {
      super.decoration = value;
    }
    get textStyle() {
      return this[textStyle$0];
    }
    set textStyle(value) {
      super.textStyle = value;
    }
    get animation() {
      return this[animation$0];
    }
    set animation(value) {
      super.animation = value;
    }
    get target() {
      return this[target$];
    }
    set target(value) {
      super.target = value;
    }
    get verticalOffset() {
      return this[verticalOffset$0];
    }
    set verticalOffset(value) {
      super.verticalOffset = value;
    }
    get preferBelow() {
      return this[preferBelow$0];
    }
    set preferBelow(value) {
      super.preferBelow = value;
    }
    build(context) {
      return new basic.Positioned.fill({child: new basic.IgnorePointer.new({child: new basic.CustomSingleChildLayout.new({delegate: new tooltip._TooltipPositionDelegate.new({target: this.target, verticalOffset: this.verticalOffset, preferBelow: this.preferBelow}), child: new transitions.FadeTransition.new({opacity: this.animation, child: new basic.ConstrainedBox.new({constraints: new box.BoxConstraints.new({minHeight: this.height}), child: new text$.DefaultTextStyle.new({style: theme$.Theme.of(context).textTheme.bodyText2, child: new container.Container.new({decoration: this.decoration, padding: this.padding, margin: this.margin, child: new basic.Center.new({widthFactor: 1.0, heightFactor: 1.0, child: new text$.Text.new(this.message, {style: this.textStyle, $creationLocationd_0dea112b090073317d4: C283 || CT.C283}), $creationLocationd_0dea112b090073317d4: C287 || CT.C287}), $creationLocationd_0dea112b090073317d4: C292 || CT.C292}), $creationLocationd_0dea112b090073317d4: C298 || CT.C298}), $creationLocationd_0dea112b090073317d4: C302 || CT.C302}), $creationLocationd_0dea112b090073317d4: C306 || CT.C306}), $creationLocationd_0dea112b090073317d4: C310 || CT.C310}), $creationLocationd_0dea112b090073317d4: C314 || CT.C314}), $creationLocationd_0dea112b090073317d4: C317 || CT.C317});
    }
  };
  (tooltip._TooltipOverlay.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let message = opts && 'message' in opts ? opts.message : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let margin = opts && 'margin' in opts ? opts.margin : null;
    let decoration = opts && 'decoration' in opts ? opts.decoration : null;
    let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
    let animation = opts && 'animation' in opts ? opts.animation : null;
    let target = opts && 'target' in opts ? opts.target : null;
    let verticalOffset = opts && 'verticalOffset' in opts ? opts.verticalOffset : null;
    let preferBelow = opts && 'preferBelow' in opts ? opts.preferBelow : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[message$0] = message;
    this[height$0] = height;
    this[padding$2] = padding;
    this[margin$1] = margin;
    this[decoration$0] = decoration;
    this[textStyle$0] = textStyle;
    this[animation$0] = animation;
    this[target$] = target;
    this[verticalOffset$0] = verticalOffset;
    this[preferBelow$0] = preferBelow;
    tooltip._TooltipOverlay.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = tooltip._TooltipOverlay.prototype;
  dart.addTypeTests(tooltip._TooltipOverlay);
  dart.addTypeCaches(tooltip._TooltipOverlay);
  dart.setMethodSignature(tooltip._TooltipOverlay, () => ({
    __proto__: dart.getMethods(tooltip._TooltipOverlay.__proto__),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(tooltip._TooltipOverlay, L11);
  dart.setFieldSignature(tooltip._TooltipOverlay, () => ({
    __proto__: dart.getFields(tooltip._TooltipOverlay.__proto__),
    message: dart.finalFieldType(dart.legacy(core.String)),
    height: dart.finalFieldType(dart.legacy(core.double)),
    padding: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsetsGeometry)),
    margin: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsetsGeometry)),
    decoration: dart.finalFieldType(dart.legacy(decoration.Decoration)),
    textStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    animation: dart.finalFieldType(dart.legacy(animation.Animation$(dart.legacy(core.double)))),
    target: dart.finalFieldType(dart.legacy(ui.Offset)),
    verticalOffset: dart.finalFieldType(dart.legacy(core.double)),
    preferBelow: dart.finalFieldType(dart.legacy(core.bool))
  }));
  floating_action_button._DefaultHeroTag = class _DefaultHeroTag extends core.Object {
    toString() {
      return "<default FloatingActionButton tag>";
    }
  };
  (floating_action_button._DefaultHeroTag.new = function() {
    ;
  }).prototype = floating_action_button._DefaultHeroTag.prototype;
  dart.addTypeTests(floating_action_button._DefaultHeroTag);
  dart.addTypeCaches(floating_action_button._DefaultHeroTag);
  dart.setMethodSignature(floating_action_button._DefaultHeroTag, () => ({
    __proto__: dart.getMethods(floating_action_button._DefaultHeroTag.__proto__),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setLibraryUri(floating_action_button._DefaultHeroTag, L12);
  dart.defineExtensionMethods(floating_action_button._DefaultHeroTag, ['toString']);
  var C320;
  var C321;
  var C325;
  var C324;
  var C323;
  var SingleChildRenderObjectWidget_child = dart.privateName(framework, "SingleChildRenderObjectWidget.child");
  var SizedBox_height = dart.privateName(basic, "SizedBox.height");
  var SizedBox_width = dart.privateName(basic, "SizedBox.width");
  var C322;
  var C329;
  var C328;
  var C327;
  var C326;
  var C333;
  var C332;
  var C331;
  var C330;
  var C337;
  var C336;
  var C335;
  var C334;
  var C341;
  var C340;
  var C339;
  var C338;
  var C344;
  var C345;
  var C343;
  var C342;
  var C348;
  var C347;
  var C346;
  var _sizeConstraints = dart.privateName(floating_action_button, "_sizeConstraints");
  var C351;
  var C352;
  var C353;
  var C354;
  var C355;
  var C356;
  var C357;
  var C358;
  var C359;
  var C360;
  var C361;
  var C362;
  var C363;
  var C364;
  var C365;
  var C366;
  var C367;
  var C368;
  var C369;
  var C350;
  var C349;
  var C372;
  var C373;
  var C371;
  var C370;
  var C376;
  var C377;
  var C375;
  var C374;
  var C380;
  var C379;
  var C378;
  var child$0 = dart.privateName(floating_action_button, "FloatingActionButton.child");
  var tooltip$0 = dart.privateName(floating_action_button, "FloatingActionButton.tooltip");
  var foregroundColor$ = dart.privateName(floating_action_button, "FloatingActionButton.foregroundColor");
  var backgroundColor$0 = dart.privateName(floating_action_button, "FloatingActionButton.backgroundColor");
  var focusColor$0 = dart.privateName(floating_action_button, "FloatingActionButton.focusColor");
  var hoverColor$0 = dart.privateName(floating_action_button, "FloatingActionButton.hoverColor");
  var splashColor$0 = dart.privateName(floating_action_button, "FloatingActionButton.splashColor");
  var heroTag$ = dart.privateName(floating_action_button, "FloatingActionButton.heroTag");
  var onPressed$3 = dart.privateName(floating_action_button, "FloatingActionButton.onPressed");
  var mouseCursor$0 = dart.privateName(floating_action_button, "FloatingActionButton.mouseCursor");
  var elevation$0 = dart.privateName(floating_action_button, "FloatingActionButton.elevation");
  var focusElevation$ = dart.privateName(floating_action_button, "FloatingActionButton.focusElevation");
  var hoverElevation$ = dart.privateName(floating_action_button, "FloatingActionButton.hoverElevation");
  var highlightElevation$ = dart.privateName(floating_action_button, "FloatingActionButton.highlightElevation");
  var disabledElevation$ = dart.privateName(floating_action_button, "FloatingActionButton.disabledElevation");
  var mini$ = dart.privateName(floating_action_button, "FloatingActionButton.mini");
  var shape$0 = dart.privateName(floating_action_button, "FloatingActionButton.shape");
  var clipBehavior$ = dart.privateName(floating_action_button, "FloatingActionButton.clipBehavior");
  var isExtended$ = dart.privateName(floating_action_button, "FloatingActionButton.isExtended");
  var focusNode$0 = dart.privateName(floating_action_button, "FloatingActionButton.focusNode");
  var autofocus$0 = dart.privateName(floating_action_button, "FloatingActionButton.autofocus");
  var materialTapTargetSize$ = dart.privateName(floating_action_button, "FloatingActionButton.materialTapTargetSize");
  var _sizeConstraints$ = dart.privateName(floating_action_button, "FloatingActionButton._sizeConstraints");
  var _name$3 = dart.privateName(borders, "_name");
  var C383;
  var BorderSide_style = dart.privateName(borders, "BorderSide.style");
  var BorderSide_width = dart.privateName(borders, "BorderSide.width");
  var Color_value = dart.privateName(ui, "Color.value");
  var C384;
  var BorderSide_color = dart.privateName(borders, "BorderSide.color");
  var C382;
  var OutlinedBorder_side = dart.privateName(borders, "OutlinedBorder.side");
  var C381;
  var C385;
  floating_action_button.FloatingActionButton = class FloatingActionButton extends framework.StatelessWidget {
    get child() {
      return this[child$0];
    }
    set child(value) {
      super.child = value;
    }
    get tooltip() {
      return this[tooltip$0];
    }
    set tooltip(value) {
      super.tooltip = value;
    }
    get foregroundColor() {
      return this[foregroundColor$];
    }
    set foregroundColor(value) {
      super.foregroundColor = value;
    }
    get backgroundColor() {
      return this[backgroundColor$0];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get focusColor() {
      return this[focusColor$0];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get hoverColor() {
      return this[hoverColor$0];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get splashColor() {
      return this[splashColor$0];
    }
    set splashColor(value) {
      super.splashColor = value;
    }
    get heroTag() {
      return this[heroTag$];
    }
    set heroTag(value) {
      super.heroTag = value;
    }
    get onPressed() {
      return this[onPressed$3];
    }
    set onPressed(value) {
      super.onPressed = value;
    }
    get mouseCursor() {
      return this[mouseCursor$0];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get elevation() {
      return this[elevation$0];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get focusElevation() {
      return this[focusElevation$];
    }
    set focusElevation(value) {
      super.focusElevation = value;
    }
    get hoverElevation() {
      return this[hoverElevation$];
    }
    set hoverElevation(value) {
      super.hoverElevation = value;
    }
    get highlightElevation() {
      return this[highlightElevation$];
    }
    set highlightElevation(value) {
      super.highlightElevation = value;
    }
    get disabledElevation() {
      return this[disabledElevation$];
    }
    set disabledElevation(value) {
      super.disabledElevation = value;
    }
    get mini() {
      return this[mini$];
    }
    set mini(value) {
      super.mini = value;
    }
    get shape() {
      return this[shape$0];
    }
    set shape(value) {
      super.shape = value;
    }
    get clipBehavior() {
      return this[clipBehavior$];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get isExtended() {
      return this[isExtended$];
    }
    set isExtended(value) {
      super.isExtended = value;
    }
    get focusNode() {
      return this[focusNode$0];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    get autofocus() {
      return this[autofocus$0];
    }
    set autofocus(value) {
      super.autofocus = value;
    }
    get materialTapTargetSize() {
      return this[materialTapTargetSize$];
    }
    set materialTapTargetSize(value) {
      super.materialTapTargetSize = value;
    }
    get [_sizeConstraints]() {
      return this[_sizeConstraints$];
    }
    set [_sizeConstraints](value) {
      super[_sizeConstraints] = value;
    }
    build(context) {
      let t1, t1$, t1$0, t1$1, t1$2, t1$3, t1$4, t1$5, t1$6, t1$7, t1$8, t1$9, t1$10, t1$11, t1$12, t1$13, t1$14, t1$15, t1$16, t1$17, t1$18, t1$19, t1$20;
      let theme = theme$.Theme.of(context);
      let floatingActionButtonTheme = theme.floatingActionButtonTheme;
      if (this.foregroundColor == null && floatingActionButtonTheme.foregroundColor == null) {
        let accentIsDark = dart.equals(theme.accentColorBrightness, ui.Brightness.dark);
        let defaultAccentIconThemeColor = accentIsDark ? colors$.Colors.white : colors$.Colors.black;
        if (!dart.equals(theme.accentIconTheme.color, defaultAccentIconThemeColor)) {
          print.debugPrint("Warning: " + "The support for configuring the foreground color of " + "FloatingActionButtons using ThemeData.accentIconTheme " + "has been deprecated. Please use ThemeData.floatingActionButtonTheme " + "instead. See " + "https://flutter.dev/go/remove-fab-accent-theme-dependency. " + "This feature was deprecated after v1.13.2.");
        }
      }
      let foregroundColor = (t1$ = (t1 = this.foregroundColor, t1 == null ? floatingActionButtonTheme.foregroundColor : t1), t1$ == null ? theme.colorScheme.onSecondary : t1$);
      let backgroundColor = (t1$1 = (t1$0 = this.backgroundColor, t1$0 == null ? floatingActionButtonTheme.backgroundColor : t1$0), t1$1 == null ? theme.colorScheme.secondary : t1$1);
      let focusColor = (t1$3 = (t1$2 = this.focusColor, t1$2 == null ? floatingActionButtonTheme.focusColor : t1$2), t1$3 == null ? theme.focusColor : t1$3);
      let hoverColor = (t1$5 = (t1$4 = this.hoverColor, t1$4 == null ? floatingActionButtonTheme.hoverColor : t1$4), t1$5 == null ? theme.hoverColor : t1$5);
      let splashColor = (t1$7 = (t1$6 = this.splashColor, t1$6 == null ? floatingActionButtonTheme.splashColor : t1$6), t1$7 == null ? theme.splashColor : t1$7);
      let elevation = (t1$9 = (t1$8 = this.elevation, t1$8 == null ? floatingActionButtonTheme.elevation : t1$8), t1$9 == null ? 6 : t1$9);
      let focusElevation = (t1$11 = (t1$10 = this.focusElevation, t1$10 == null ? floatingActionButtonTheme.focusElevation : t1$10), t1$11 == null ? 8 : t1$11);
      let hoverElevation = (t1$13 = (t1$12 = this.hoverElevation, t1$12 == null ? floatingActionButtonTheme.hoverElevation : t1$12), t1$13 == null ? 10 : t1$13);
      let disabledElevation = (t1$15 = (t1$14 = this.disabledElevation, t1$14 == null ? floatingActionButtonTheme.disabledElevation : t1$14), t1$15 == null ? elevation : t1$15);
      let highlightElevation = (t1$17 = (t1$16 = this.highlightElevation, t1$16 == null ? floatingActionButtonTheme.highlightElevation : t1$16), t1$17 == null ? 12 : t1$17);
      let materialTapTargetSize = (t1$18 = this.materialTapTargetSize, t1$18 == null ? theme.materialTapTargetSize : t1$18);
      let textStyle = theme.textTheme.button.copyWith({color: foregroundColor, letterSpacing: 1.2});
      let shape = (t1$20 = (t1$19 = this.shape, t1$19 == null ? floatingActionButtonTheme.shape : t1$19), t1$20 == null ? dart.test(this.isExtended) ? floating_action_button.FloatingActionButton._defaultExtendedShape : floating_action_button.FloatingActionButton._defaultShape : t1$20);
      let result = new button.RawMaterialButton.new({onPressed: this.onPressed, mouseCursor: this.mouseCursor, elevation: elevation, focusElevation: focusElevation, hoverElevation: hoverElevation, highlightElevation: highlightElevation, disabledElevation: disabledElevation, constraints: this[_sizeConstraints], materialTapTargetSize: materialTapTargetSize, fillColor: backgroundColor, focusColor: focusColor, hoverColor: hoverColor, splashColor: splashColor, textStyle: textStyle, shape: shape, clipBehavior: this.clipBehavior, focusNode: this.focusNode, autofocus: this.autofocus, child: this.child, $creationLocationd_0dea112b090073317d4: C349 || CT.C349});
      if (this.tooltip != null) {
        result = new tooltip.Tooltip.new({message: this.tooltip, child: result, $creationLocationd_0dea112b090073317d4: C370 || CT.C370});
      }
      if (this.heroTag != null) {
        result = new heroes.Hero.new({tag: this.heroTag, child: result, $creationLocationd_0dea112b090073317d4: C374 || CT.C374});
      }
      return new basic.MergeSemantics.new({child: result, $creationLocationd_0dea112b090073317d4: C378 || CT.C378});
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (ObjectFlagPropertyOfVoidToLvoid()).new("onPressed", this.onPressed, {ifNull: "disabled"}));
      properties.add(new diagnostics.StringProperty.new("tooltip", this.tooltip, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("foregroundColor", this.foregroundColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("backgroundColor", this.backgroundColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("focusColor", this.focusColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("hoverColor", this.hoverColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("splashColor", this.splashColor, {defaultValue: null}));
      properties.add(new (ObjectFlagPropertyOfObjectL()).new("heroTag", this.heroTag, {ifPresent: "hero"}));
      properties.add(new diagnostics.DoubleProperty.new("elevation", this.elevation, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("focusElevation", this.focusElevation, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("hoverElevation", this.hoverElevation, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("highlightElevation", this.highlightElevation, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("disabledElevation", this.disabledElevation, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfShapeBorderL()).new("shape", this.shape, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfFocusNodeL()).new("focusNode", this.focusNode, {defaultValue: null}));
      properties.add(new diagnostics.FlagProperty.new("isExtended", {value: this.isExtended, ifTrue: "extended"}));
      properties.add(new (DiagnosticsPropertyOfMaterialTapTargetSizeL()).new("materialTapTargetSize", this.materialTapTargetSize, {defaultValue: null}));
    }
  };
  (floating_action_button.FloatingActionButton.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let tooltip = opts && 'tooltip' in opts ? opts.tooltip : null;
    let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let heroTag = opts && 'heroTag' in opts ? opts.heroTag : C320 || CT.C320;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let focusElevation = opts && 'focusElevation' in opts ? opts.focusElevation : null;
    let hoverElevation = opts && 'hoverElevation' in opts ? opts.hoverElevation : null;
    let highlightElevation = opts && 'highlightElevation' in opts ? opts.highlightElevation : null;
    let disabledElevation = opts && 'disabledElevation' in opts ? opts.disabledElevation : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let mini = opts && 'mini' in opts ? opts.mini : false;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C321 || CT.C321;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let isExtended = opts && 'isExtended' in opts ? opts.isExtended : false;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$0] = child;
    this[tooltip$0] = tooltip;
    this[foregroundColor$] = foregroundColor;
    this[backgroundColor$0] = backgroundColor;
    this[focusColor$0] = focusColor;
    this[hoverColor$0] = hoverColor;
    this[splashColor$0] = splashColor;
    this[heroTag$] = heroTag;
    this[elevation$0] = elevation;
    this[focusElevation$] = focusElevation;
    this[hoverElevation$] = hoverElevation;
    this[highlightElevation$] = highlightElevation;
    this[disabledElevation$] = disabledElevation;
    this[onPressed$3] = onPressed;
    this[mouseCursor$0] = mouseCursor;
    this[mini$] = mini;
    this[shape$0] = shape;
    this[clipBehavior$] = clipBehavior;
    this[focusNode$0] = focusNode;
    this[autofocus$0] = autofocus;
    this[materialTapTargetSize$] = materialTapTargetSize;
    this[isExtended$] = isExtended;
    if (!(elevation == null || dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, L13, 155, 15, "elevation == null || elevation >= 0.0");
    if (!(focusElevation == null || dart.notNull(focusElevation) >= 0.0)) dart.assertFailed(null, L13, 156, 15, "focusElevation == null || focusElevation >= 0.0");
    if (!(hoverElevation == null || dart.notNull(hoverElevation) >= 0.0)) dart.assertFailed(null, L13, 157, 15, "hoverElevation == null || hoverElevation >= 0.0");
    if (!(highlightElevation == null || dart.notNull(highlightElevation) >= 0.0)) dart.assertFailed(null, L13, 158, 15, "highlightElevation == null || highlightElevation >= 0.0");
    if (!(disabledElevation == null || dart.notNull(disabledElevation) >= 0.0)) dart.assertFailed(null, L13, 159, 15, "disabledElevation == null || disabledElevation >= 0.0");
    if (!(mini != null)) dart.assertFailed(null, L13, 160, 15, "mini != null");
    if (!(clipBehavior != null)) dart.assertFailed(null, L13, 161, 15, "clipBehavior != null");
    if (!(isExtended != null)) dart.assertFailed(null, L13, 162, 15, "isExtended != null");
    if (!(autofocus != null)) dart.assertFailed(null, L13, 163, 15, "autofocus != null");
    this[_sizeConstraints$] = dart.test(mini) ? floating_action_button._kMiniSizeConstraints : floating_action_button._kSizeConstraints;
    floating_action_button.FloatingActionButton.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = floating_action_button.FloatingActionButton.prototype;
  (floating_action_button.FloatingActionButton.extended = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let tooltip = opts && 'tooltip' in opts ? opts.tooltip : null;
    let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let heroTag = opts && 'heroTag' in opts ? opts.heroTag : C320 || CT.C320;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let focusElevation = opts && 'focusElevation' in opts ? opts.focusElevation : null;
    let hoverElevation = opts && 'hoverElevation' in opts ? opts.hoverElevation : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let highlightElevation = opts && 'highlightElevation' in opts ? opts.highlightElevation : null;
    let disabledElevation = opts && 'disabledElevation' in opts ? opts.disabledElevation : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : C2 || CT.C2;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let isExtended = opts && 'isExtended' in opts ? opts.isExtended : true;
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C321 || CT.C321;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    let label = opts && 'label' in opts ? opts.label : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[tooltip$0] = tooltip;
    this[foregroundColor$] = foregroundColor;
    this[backgroundColor$0] = backgroundColor;
    this[focusColor$0] = focusColor;
    this[hoverColor$0] = hoverColor;
    this[heroTag$] = heroTag;
    this[elevation$0] = elevation;
    this[focusElevation$] = focusElevation;
    this[hoverElevation$] = hoverElevation;
    this[splashColor$0] = splashColor;
    this[highlightElevation$] = highlightElevation;
    this[disabledElevation$] = disabledElevation;
    this[onPressed$3] = onPressed;
    this[mouseCursor$0] = mouseCursor;
    this[shape$0] = shape;
    this[isExtended$] = isExtended;
    this[materialTapTargetSize$] = materialTapTargetSize;
    this[clipBehavior$] = clipBehavior;
    this[focusNode$0] = focusNode;
    this[autofocus$0] = autofocus;
    if (!(elevation == null || dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, L13, 197, 15, "elevation == null || elevation >= 0.0");
    if (!(focusElevation == null || dart.notNull(focusElevation) >= 0.0)) dart.assertFailed(null, L13, 198, 15, "focusElevation == null || focusElevation >= 0.0");
    if (!(hoverElevation == null || dart.notNull(hoverElevation) >= 0.0)) dart.assertFailed(null, L13, 199, 15, "hoverElevation == null || hoverElevation >= 0.0");
    if (!(highlightElevation == null || dart.notNull(highlightElevation) >= 0.0)) dart.assertFailed(null, L13, 200, 15, "highlightElevation == null || highlightElevation >= 0.0");
    if (!(disabledElevation == null || dart.notNull(disabledElevation) >= 0.0)) dart.assertFailed(null, L13, 201, 15, "disabledElevation == null || disabledElevation >= 0.0");
    if (!(isExtended != null)) dart.assertFailed(null, L13, 202, 15, "isExtended != null");
    if (!(clipBehavior != null)) dart.assertFailed(null, L13, 203, 15, "clipBehavior != null");
    if (!(autofocus != null)) dart.assertFailed(null, L13, 204, 15, "autofocus != null");
    this[_sizeConstraints$] = floating_action_button._kExtendedSizeConstraints;
    this[mini$] = false;
    this[child$0] = new floating_action_button._ChildOverflowBox.new({child: new basic.Row.new({mainAxisSize: flex.MainAxisSize.min, children: icon == null ? JSArrayOfWidgetL().of([C322 || CT.C322, label, C326 || CT.C326]) : JSArrayOfWidgetL().of([C330 || CT.C330, icon, C334 || CT.C334, label, C338 || CT.C338]), $creationLocationd_0dea112b090073317d4: C342 || CT.C342}), $creationLocationd_0dea112b090073317d4: C346 || CT.C346});
    floating_action_button.FloatingActionButton.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = floating_action_button.FloatingActionButton.prototype;
  dart.addTypeTests(floating_action_button.FloatingActionButton);
  dart.addTypeCaches(floating_action_button.FloatingActionButton);
  dart.setMethodSignature(floating_action_button.FloatingActionButton, () => ({
    __proto__: dart.getMethods(floating_action_button.FloatingActionButton.__proto__),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(floating_action_button.FloatingActionButton, L12);
  dart.setFieldSignature(floating_action_button.FloatingActionButton, () => ({
    __proto__: dart.getFields(floating_action_button.FloatingActionButton.__proto__),
    child: dart.finalFieldType(dart.legacy(framework.Widget)),
    tooltip: dart.finalFieldType(dart.legacy(core.String)),
    foregroundColor: dart.finalFieldType(dart.legacy(ui.Color)),
    backgroundColor: dart.finalFieldType(dart.legacy(ui.Color)),
    focusColor: dart.finalFieldType(dart.legacy(ui.Color)),
    hoverColor: dart.finalFieldType(dart.legacy(ui.Color)),
    splashColor: dart.finalFieldType(dart.legacy(ui.Color)),
    heroTag: dart.finalFieldType(dart.legacy(core.Object)),
    onPressed: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, []))),
    mouseCursor: dart.finalFieldType(dart.legacy(mouse_cursor.MouseCursor)),
    elevation: dart.finalFieldType(dart.legacy(core.double)),
    focusElevation: dart.finalFieldType(dart.legacy(core.double)),
    hoverElevation: dart.finalFieldType(dart.legacy(core.double)),
    highlightElevation: dart.finalFieldType(dart.legacy(core.double)),
    disabledElevation: dart.finalFieldType(dart.legacy(core.double)),
    mini: dart.finalFieldType(dart.legacy(core.bool)),
    shape: dart.finalFieldType(dart.legacy(borders.ShapeBorder)),
    clipBehavior: dart.finalFieldType(dart.legacy(ui.Clip)),
    isExtended: dart.finalFieldType(dart.legacy(core.bool)),
    focusNode: dart.finalFieldType(dart.legacy(focus_manager.FocusNode)),
    autofocus: dart.finalFieldType(dart.legacy(core.bool)),
    materialTapTargetSize: dart.finalFieldType(dart.legacy(theme_data.MaterialTapTargetSize)),
    [_sizeConstraints]: dart.finalFieldType(dart.legacy(box.BoxConstraints))
  }));
  dart.defineLazy(floating_action_button.FloatingActionButton, {
    /*floating_action_button.FloatingActionButton._defaultElevation*/get _defaultElevation() {
      return 6;
    },
    /*floating_action_button.FloatingActionButton._defaultFocusElevation*/get _defaultFocusElevation() {
      return 8;
    },
    /*floating_action_button.FloatingActionButton._defaultHoverElevation*/get _defaultHoverElevation() {
      return 10;
    },
    /*floating_action_button.FloatingActionButton._defaultHighlightElevation*/get _defaultHighlightElevation() {
      return 12;
    },
    /*floating_action_button.FloatingActionButton._defaultShape*/get _defaultShape() {
      return C381 || CT.C381;
    },
    /*floating_action_button.FloatingActionButton._defaultExtendedShape*/get _defaultExtendedShape() {
      return C385 || CT.C385;
    }
  }, true);
  floating_action_button._ChildOverflowBox = class _ChildOverflowBox extends framework.SingleChildRenderObjectWidget {
    createRenderObject(context) {
      return new floating_action_button._RenderChildOverflowBox.new({textDirection: basic.Directionality.of(context)});
    }
    updateRenderObject(context, renderObject) {
      _RenderChildOverflowBoxL().as(renderObject);
      renderObject.textDirection = basic.Directionality.of(context);
    }
  };
  (floating_action_button._ChildOverflowBox.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    floating_action_button._ChildOverflowBox.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = floating_action_button._ChildOverflowBox.prototype;
  dart.addTypeTests(floating_action_button._ChildOverflowBox);
  dart.addTypeCaches(floating_action_button._ChildOverflowBox);
  dart.setMethodSignature(floating_action_button._ChildOverflowBox, () => ({
    __proto__: dart.getMethods(floating_action_button._ChildOverflowBox.__proto__),
    createRenderObject: dart.fnType(dart.legacy(floating_action_button._RenderChildOverflowBox), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(floating_action_button._ChildOverflowBox, L12);
  var C386;
  floating_action_button._RenderChildOverflowBox = class _RenderChildOverflowBox extends shifted_box.RenderAligningShiftedBox {
    computeMinIntrinsicWidth(height) {
      return 0.0;
    }
    computeMinIntrinsicHeight(width) {
      return 0.0;
    }
    performLayout() {
      let constraints = this.constraints;
      if (this.child != null) {
        this.child.layout(C386 || CT.C386, {parentUsesSize: true});
        this.size = new ui.Size.new(math.max(doubleL(), constraints.minWidth, math.min(doubleL(), constraints.maxWidth, this.child.size.width)), math.max(doubleL(), constraints.minHeight, math.min(doubleL(), constraints.maxHeight, this.child.size.height)));
        this.alignChild();
      } else {
        this.size = constraints.biggest;
      }
    }
  };
  (floating_action_button._RenderChildOverflowBox.new = function(opts) {
    let child = opts && 'child' in opts ? opts.child : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    floating_action_button._RenderChildOverflowBox.__proto__.new.call(this, {child: child, alignment: alignment.Alignment.center, textDirection: textDirection});
    ;
  }).prototype = floating_action_button._RenderChildOverflowBox.prototype;
  dart.addTypeTests(floating_action_button._RenderChildOverflowBox);
  dart.addTypeCaches(floating_action_button._RenderChildOverflowBox);
  dart.setLibraryUri(floating_action_button._RenderChildOverflowBox, L12);
  var C387;
  var C388;
  var C389;
  dart.defineLazy(floating_action_button, {
    /*floating_action_button._kSizeConstraints*/get _kSizeConstraints() {
      return C387 || CT.C387;
    },
    /*floating_action_button._kMiniSizeConstraints*/get _kMiniSizeConstraints() {
      return C388 || CT.C388;
    },
    /*floating_action_button._kExtendedSizeConstraints*/get _kExtendedSizeConstraints() {
      return C389 || CT.C389;
    }
  }, true);
  var _name$4 = dart.privateName(flexible_space_bar, "_name");
  var C390;
  var C391;
  var C392;
  var C393;
  flexible_space_bar.CollapseMode = class CollapseMode extends core.Object {
    toString() {
      return this[_name$4];
    }
  };
  (flexible_space_bar.CollapseMode.new = function(index, _name) {
    this.index = index;
    this[_name$4] = _name;
    ;
  }).prototype = flexible_space_bar.CollapseMode.prototype;
  dart.addTypeTests(flexible_space_bar.CollapseMode);
  dart.addTypeCaches(flexible_space_bar.CollapseMode);
  dart.setMethodSignature(flexible_space_bar.CollapseMode, () => ({
    __proto__: dart.getMethods(flexible_space_bar.CollapseMode.__proto__),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setLibraryUri(flexible_space_bar.CollapseMode, L14);
  dart.setFieldSignature(flexible_space_bar.CollapseMode, () => ({
    __proto__: dart.getFields(flexible_space_bar.CollapseMode.__proto__),
    index: dart.finalFieldType(dart.legacy(core.int)),
    [_name$4]: dart.finalFieldType(dart.legacy(core.String))
  }));
  dart.defineExtensionMethods(flexible_space_bar.CollapseMode, ['toString']);
  flexible_space_bar.CollapseMode.parallax = C390 || CT.C390;
  flexible_space_bar.CollapseMode.pin = C391 || CT.C391;
  flexible_space_bar.CollapseMode.none = C392 || CT.C392;
  flexible_space_bar.CollapseMode.values = C393 || CT.C393;
  var C394;
  var C395;
  var C396;
  var C397;
  flexible_space_bar.StretchMode = class StretchMode extends core.Object {
    toString() {
      return this[_name$4];
    }
  };
  (flexible_space_bar.StretchMode.new = function(index, _name) {
    this.index = index;
    this[_name$4] = _name;
    ;
  }).prototype = flexible_space_bar.StretchMode.prototype;
  dart.addTypeTests(flexible_space_bar.StretchMode);
  dart.addTypeCaches(flexible_space_bar.StretchMode);
  dart.setMethodSignature(flexible_space_bar.StretchMode, () => ({
    __proto__: dart.getMethods(flexible_space_bar.StretchMode.__proto__),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setLibraryUri(flexible_space_bar.StretchMode, L14);
  dart.setFieldSignature(flexible_space_bar.StretchMode, () => ({
    __proto__: dart.getFields(flexible_space_bar.StretchMode.__proto__),
    index: dart.finalFieldType(dart.legacy(core.int)),
    [_name$4]: dart.finalFieldType(dart.legacy(core.String))
  }));
  dart.defineExtensionMethods(flexible_space_bar.StretchMode, ['toString']);
  flexible_space_bar.StretchMode.zoomBackground = C394 || CT.C394;
  flexible_space_bar.StretchMode.blurBackground = C395 || CT.C395;
  flexible_space_bar.StretchMode.fadeTitle = C396 || CT.C396;
  flexible_space_bar.StretchMode.values = C397 || CT.C397;
  var C398;
  var C401;
  var C402;
  var C403;
  var C404;
  var C405;
  var C400;
  var C399;
  var title$ = dart.privateName(flexible_space_bar, "FlexibleSpaceBar.title");
  var background$ = dart.privateName(flexible_space_bar, "FlexibleSpaceBar.background");
  var centerTitle$ = dart.privateName(flexible_space_bar, "FlexibleSpaceBar.centerTitle");
  var collapseMode$ = dart.privateName(flexible_space_bar, "FlexibleSpaceBar.collapseMode");
  var stretchModes$ = dart.privateName(flexible_space_bar, "FlexibleSpaceBar.stretchModes");
  var titlePadding$ = dart.privateName(flexible_space_bar, "FlexibleSpaceBar.titlePadding");
  flexible_space_bar.FlexibleSpaceBar = class FlexibleSpaceBar extends framework.StatefulWidget {
    get title() {
      return this[title$];
    }
    set title(value) {
      super.title = value;
    }
    get background() {
      return this[background$];
    }
    set background(value) {
      super.background = value;
    }
    get centerTitle() {
      return this[centerTitle$];
    }
    set centerTitle(value) {
      super.centerTitle = value;
    }
    get collapseMode() {
      return this[collapseMode$];
    }
    set collapseMode(value) {
      super.collapseMode = value;
    }
    get stretchModes() {
      return this[stretchModes$];
    }
    set stretchModes(value) {
      super.stretchModes = value;
    }
    get titlePadding() {
      return this[titlePadding$];
    }
    set titlePadding(value) {
      super.titlePadding = value;
    }
    static createSettings(opts) {
      let t1, t1$, t1$0;
      let toolbarOpacity = opts && 'toolbarOpacity' in opts ? opts.toolbarOpacity : null;
      let minExtent = opts && 'minExtent' in opts ? opts.minExtent : null;
      let maxExtent = opts && 'maxExtent' in opts ? opts.maxExtent : null;
      let currentExtent = opts && 'currentExtent' in opts ? opts.currentExtent : null;
      let child = opts && 'child' in opts ? opts.child : null;
      if (!(currentExtent != null)) dart.assertFailed(null, L15, 220, 12, "currentExtent != null");
      return new flexible_space_bar.FlexibleSpaceBarSettings.new({toolbarOpacity: (t1 = toolbarOpacity, t1 == null ? 1.0 : t1), minExtent: (t1$ = minExtent, t1$ == null ? currentExtent : t1$), maxExtent: (t1$0 = maxExtent, t1$0 == null ? currentExtent : t1$0), currentExtent: currentExtent, child: child, $creationLocationd_0dea112b090073317d4: C399 || CT.C399});
    }
    createState() {
      return new flexible_space_bar._FlexibleSpaceBarState.new();
    }
  };
  (flexible_space_bar.FlexibleSpaceBar.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let title = opts && 'title' in opts ? opts.title : null;
    let background = opts && 'background' in opts ? opts.background : null;
    let centerTitle = opts && 'centerTitle' in opts ? opts.centerTitle : null;
    let titlePadding = opts && 'titlePadding' in opts ? opts.titlePadding : null;
    let collapseMode = opts && 'collapseMode' in opts ? opts.collapseMode : C390 || CT.C390;
    let stretchModes = opts && 'stretchModes' in opts ? opts.stretchModes : C398 || CT.C398;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[title$] = title;
    this[background$] = background;
    this[centerTitle$] = centerTitle;
    this[titlePadding$] = titlePadding;
    this[collapseMode$] = collapseMode;
    this[stretchModes$] = stretchModes;
    if (!(collapseMode != null)) dart.assertFailed(null, L15, 155, 15, "collapseMode != null");
    flexible_space_bar.FlexibleSpaceBar.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = flexible_space_bar.FlexibleSpaceBar.prototype;
  dart.addTypeTests(flexible_space_bar.FlexibleSpaceBar);
  dart.addTypeCaches(flexible_space_bar.FlexibleSpaceBar);
  dart.setMethodSignature(flexible_space_bar.FlexibleSpaceBar, () => ({
    __proto__: dart.getMethods(flexible_space_bar.FlexibleSpaceBar.__proto__),
    createState: dart.fnType(dart.legacy(flexible_space_bar._FlexibleSpaceBarState), [])
  }));
  dart.setLibraryUri(flexible_space_bar.FlexibleSpaceBar, L14);
  dart.setFieldSignature(flexible_space_bar.FlexibleSpaceBar, () => ({
    __proto__: dart.getFields(flexible_space_bar.FlexibleSpaceBar.__proto__),
    title: dart.finalFieldType(dart.legacy(framework.Widget)),
    background: dart.finalFieldType(dart.legacy(framework.Widget)),
    centerTitle: dart.finalFieldType(dart.legacy(core.bool)),
    collapseMode: dart.finalFieldType(dart.legacy(flexible_space_bar.CollapseMode)),
    stretchModes: dart.finalFieldType(dart.legacy(core.List$(dart.legacy(flexible_space_bar.StretchMode)))),
    titlePadding: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsetsGeometry))
  }));
  var _getEffectiveCenterTitle = dart.privateName(flexible_space_bar, "_getEffectiveCenterTitle");
  var _getTitleAlignment = dart.privateName(flexible_space_bar, "_getTitleAlignment");
  var _getCollapsePadding = dart.privateName(flexible_space_bar, "_getCollapsePadding");
  var C408;
  var C409;
  var C407;
  var C406;
  var C412;
  var C413;
  var C414;
  var C415;
  var C416;
  var C411;
  var C410;
  var C419;
  var C418;
  var C417;
  var C422;
  var C423;
  var C421;
  var C420;
  var C426;
  var C425;
  var C424;
  var C429;
  var C430;
  var C428;
  var C427;
  var C433;
  var C434;
  var C432;
  var C431;
  var C437;
  var C438;
  var C439;
  var C436;
  var C435;
  var C442;
  var C441;
  var C440;
  var C445;
  var C446;
  var C444;
  var C443;
  var C449;
  var C450;
  var C448;
  var C447;
  var C453;
  var C454;
  var C455;
  var C452;
  var C451;
  var C458;
  var C459;
  var C457;
  var C456;
  var C462;
  var C461;
  var C460;
  var C465;
  var C464;
  var C463;
  var C468;
  var C467;
  var C466;
  flexible_space_bar._FlexibleSpaceBarState = class _FlexibleSpaceBarState extends framework.State$(dart.legacy(flexible_space_bar.FlexibleSpaceBar)) {
    [_getEffectiveCenterTitle](theme) {
      if (this.widget.centerTitle != null) return this.widget.centerTitle;
      if (!(theme.platform != null)) dart.assertFailed(null, L15, 238, 12, "theme.platform != null");
      switch (theme.platform) {
        case C44 || CT.C44:
        case C45 || CT.C45:
        case C46 || CT.C46:
        case C47 || CT.C47:
        {
          return false;
        }
        case C48 || CT.C48:
        case C49 || CT.C49:
        {
          return true;
        }
      }
      return null;
    }
    [_getTitleAlignment](effectiveCenterTitle) {
      if (dart.test(effectiveCenterTitle)) return alignment.Alignment.bottomCenter;
      let textDirection = basic.Directionality.of(this.context);
      if (!(textDirection != null)) dart.assertFailed(null, L15, 256, 12, "textDirection != null");
      switch (textDirection) {
        case C237 || CT.C237:
        {
          return alignment.Alignment.bottomRight;
        }
        case C238 || CT.C238:
        {
          return alignment.Alignment.bottomLeft;
        }
      }
      return null;
    }
    [_getCollapsePadding](t, settings) {
      switch (this.widget.collapseMode) {
        case C391 || CT.C391:
        {
          return -(dart.notNull(settings.maxExtent) - dart.notNull(settings.currentExtent));
        }
        case C392 || CT.C392:
        {
          return 0.0;
        }
        case C390 || CT.C390:
        {
          let deltaExtent = dart.notNull(settings.maxExtent) - dart.notNull(settings.minExtent);
          return -dart.notNull(new (TweenOfdoubleL()).new({begin: 0.0, end: deltaExtent / 4.0}).transform(t));
        }
      }
      return null;
    }
    build(context) {
      return new layout_builder.LayoutBuilder.new({builder: dart.fn((context, constraints) => {
          let t1, t1$;
          let settings = context.dependOnInheritedWidgetOfExactType(FlexibleSpaceBarSettingsL());
          if (!(settings != null)) dart.assertFailed("A FlexibleSpaceBar must be wrapped in the widget returned by FlexibleSpaceBar.createSettings().", L15, 285, 11, "settings != null");
          let children = JSArrayOfWidgetL().of([]);
          let deltaExtent = dart.notNull(settings.maxExtent) - dart.notNull(settings.minExtent);
          let t = (1.0 - (dart.notNull(settings.currentExtent) - dart.notNull(settings.minExtent)) / deltaExtent)[$clamp](0.0, 1.0);
          if (this.widget.background != null) {
            let fadeStart = math.max(doubleL(), 0.0, 1.0 - 56 / deltaExtent);
            if (!(fadeStart <= 1)) dart.assertFailed(null, L15, 301, 18, "fadeStart <= fadeEnd");
            let opacity = 1.0 - dart.notNull(new curves.Interval.new(fadeStart, 1).transform(t));
            if (opacity > 0.0) {
              let height = settings.maxExtent;
              if (dart.test(this.widget.stretchModes[$contains](flexible_space_bar.StretchMode.zoomBackground)) && dart.notNull(constraints.maxHeight) > dart.notNull(height)) {
                height = constraints.maxHeight;
              }
              children[$add](new basic.Positioned.new({top: this[_getCollapsePadding](t, settings), left: 0.0, right: 0.0, height: height, child: new basic.Opacity.new({opacity: opacity, child: this.widget.background, $creationLocationd_0dea112b090073317d4: C406 || CT.C406}), $creationLocationd_0dea112b090073317d4: C410 || CT.C410}));
              if (dart.test(this.widget.stretchModes[$contains](flexible_space_bar.StretchMode.blurBackground)) && dart.notNull(constraints.maxHeight) > dart.notNull(settings.maxExtent)) {
                let blurAmount = (dart.notNull(constraints.maxHeight) - dart.notNull(settings.maxExtent)) / 10;
                children[$add](new basic.Positioned.fill({child: new basic.BackdropFilter.new({child: new container.Container.new({color: colors$.Colors.transparent, $creationLocationd_0dea112b090073317d4: C417 || CT.C417}), filter: ui.ImageFilter.blur({sigmaX: blurAmount, sigmaY: blurAmount}), $creationLocationd_0dea112b090073317d4: C420 || CT.C420}), $creationLocationd_0dea112b090073317d4: C424 || CT.C424}));
              }
            }
          }
          if (this.widget.title != null) {
            let theme = theme$.Theme.of(context);
            let title = null;
            switch (theme.platform) {
              case C48 || CT.C48:
              case C49 || CT.C49:
              {
                title = this.widget.title;
                break;
              }
              case C44 || CT.C44:
              case C45 || CT.C45:
              case C46 || CT.C46:
              case C47 || CT.C47:
              {
                title = new basic.Semantics.new({namesRoute: true, child: this.widget.title, $creationLocationd_0dea112b090073317d4: C427 || CT.C427});
                break;
              }
            }
            if (dart.test(this.widget.stretchModes[$contains](flexible_space_bar.StretchMode.fadeTitle)) && dart.notNull(constraints.maxHeight) > dart.notNull(settings.maxExtent)) {
              let stretchOpacity = 1 - ((dart.notNull(constraints.maxHeight) - dart.notNull(settings.maxExtent)) / 100)[$clamp](0.0, 1.0);
              title = new basic.Opacity.new({opacity: stretchOpacity, child: title, $creationLocationd_0dea112b090073317d4: C431 || CT.C431});
            }
            let opacity = settings.toolbarOpacity;
            if (dart.notNull(opacity) > 0.0) {
              let titleStyle = theme.primaryTextTheme.headline6;
              titleStyle = titleStyle.copyWith({color: titleStyle.color.withOpacity(opacity)});
              let effectiveCenterTitle = this[_getEffectiveCenterTitle](theme);
              let padding = (t1 = this.widget.titlePadding, t1 == null ? new edge_insets.EdgeInsetsDirectional.only({start: dart.test(effectiveCenterTitle) ? 0.0 : 72.0, bottom: 16.0}) : t1);
              let scaleValue = new (TweenOfdoubleL()).new({begin: 1.5, end: 1.0}).transform(t);
              let scaleTransform = (t1$ = vector_math_64.Matrix4.identity(), (() => {
                t1$.scale(scaleValue, scaleValue, 1.0);
                return t1$;
              })());
              let titleAlignment = this[_getTitleAlignment](effectiveCenterTitle);
              children[$add](new container.Container.new({padding: padding, child: new basic.Transform.new({alignment: titleAlignment, transform: scaleTransform, child: new basic.Align.new({alignment: titleAlignment, child: new text$.DefaultTextStyle.new({style: titleStyle, child: new layout_builder.LayoutBuilder.new({builder: dart.fn((context, constraints) => new container.Container.new({width: dart.notNull(constraints.maxWidth) / dart.notNull(scaleValue), alignment: titleAlignment, child: title, $creationLocationd_0dea112b090073317d4: C435 || CT.C435}), BuildContextLAndBoxConstraintsLToContainerL()), $creationLocationd_0dea112b090073317d4: C440 || CT.C440}), $creationLocationd_0dea112b090073317d4: C443 || CT.C443}), $creationLocationd_0dea112b090073317d4: C447 || CT.C447}), $creationLocationd_0dea112b090073317d4: C451 || CT.C451}), $creationLocationd_0dea112b090073317d4: C456 || CT.C456}));
            }
          }
          return new basic.ClipRect.new({child: new basic.Stack.new({children: children, $creationLocationd_0dea112b090073317d4: C460 || CT.C460}), $creationLocationd_0dea112b090073317d4: C463 || CT.C463});
        }, BuildContextLAndBoxConstraintsLToClipRectL()), $creationLocationd_0dea112b090073317d4: C466 || CT.C466});
    }
  };
  (flexible_space_bar._FlexibleSpaceBarState.new = function() {
    flexible_space_bar._FlexibleSpaceBarState.__proto__.new.call(this);
    ;
  }).prototype = flexible_space_bar._FlexibleSpaceBarState.prototype;
  dart.addTypeTests(flexible_space_bar._FlexibleSpaceBarState);
  dart.addTypeCaches(flexible_space_bar._FlexibleSpaceBarState);
  dart.setMethodSignature(flexible_space_bar._FlexibleSpaceBarState, () => ({
    __proto__: dart.getMethods(flexible_space_bar._FlexibleSpaceBarState.__proto__),
    [_getEffectiveCenterTitle]: dart.fnType(dart.legacy(core.bool), [dart.legacy(theme_data.ThemeData)]),
    [_getTitleAlignment]: dart.fnType(dart.legacy(alignment.Alignment), [dart.legacy(core.bool)]),
    [_getCollapsePadding]: dart.fnType(dart.legacy(core.double), [dart.legacy(core.double), dart.legacy(flexible_space_bar.FlexibleSpaceBarSettings)]),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(flexible_space_bar._FlexibleSpaceBarState, L14);
  var toolbarOpacity$ = dart.privateName(flexible_space_bar, "FlexibleSpaceBarSettings.toolbarOpacity");
  var minExtent$ = dart.privateName(flexible_space_bar, "FlexibleSpaceBarSettings.minExtent");
  var maxExtent$ = dart.privateName(flexible_space_bar, "FlexibleSpaceBarSettings.maxExtent");
  var currentExtent$ = dart.privateName(flexible_space_bar, "FlexibleSpaceBarSettings.currentExtent");
  flexible_space_bar.FlexibleSpaceBarSettings = class FlexibleSpaceBarSettings extends framework.InheritedWidget {
    get toolbarOpacity() {
      return this[toolbarOpacity$];
    }
    set toolbarOpacity(value) {
      super.toolbarOpacity = value;
    }
    get minExtent() {
      return this[minExtent$];
    }
    set minExtent(value) {
      super.minExtent = value;
    }
    get maxExtent() {
      return this[maxExtent$];
    }
    set maxExtent(value) {
      super.maxExtent = value;
    }
    get currentExtent() {
      return this[currentExtent$];
    }
    set currentExtent(value) {
      super.currentExtent = value;
    }
    updateShouldNotify(oldWidget) {
      FlexibleSpaceBarSettingsL().as(oldWidget);
      return this.toolbarOpacity != oldWidget.toolbarOpacity || this.minExtent != oldWidget.minExtent || this.maxExtent != oldWidget.maxExtent || this.currentExtent != oldWidget.currentExtent;
    }
  };
  (flexible_space_bar.FlexibleSpaceBarSettings.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let toolbarOpacity = opts && 'toolbarOpacity' in opts ? opts.toolbarOpacity : null;
    let minExtent = opts && 'minExtent' in opts ? opts.minExtent : null;
    let maxExtent = opts && 'maxExtent' in opts ? opts.maxExtent : null;
    let currentExtent = opts && 'currentExtent' in opts ? opts.currentExtent : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[toolbarOpacity$] = toolbarOpacity;
    this[minExtent$] = minExtent;
    this[maxExtent$] = maxExtent;
    this[currentExtent$] = currentExtent;
    if (!(toolbarOpacity != null)) dart.assertFailed(null, L15, 441, 15, "toolbarOpacity != null");
    if (!(minExtent != null && dart.notNull(minExtent) >= 0)) dart.assertFailed(null, L15, 442, 15, "minExtent != null && minExtent >= 0");
    if (!(maxExtent != null && dart.notNull(maxExtent) >= 0)) dart.assertFailed(null, L15, 443, 15, "maxExtent != null && maxExtent >= 0");
    if (!(currentExtent != null && dart.notNull(currentExtent) >= 0)) dart.assertFailed(null, L15, 444, 15, "currentExtent != null && currentExtent >= 0");
    if (!(dart.notNull(toolbarOpacity) >= 0.0)) dart.assertFailed(null, L15, 445, 15, "toolbarOpacity >= 0.0");
    if (!(dart.notNull(minExtent) <= dart.notNull(maxExtent))) dart.assertFailed(null, L15, 446, 15, "minExtent <= maxExtent");
    if (!(dart.notNull(minExtent) <= dart.notNull(currentExtent))) dart.assertFailed(null, L15, 447, 15, "minExtent <= currentExtent");
    if (!(dart.notNull(currentExtent) <= dart.notNull(maxExtent))) dart.assertFailed(null, L15, 448, 15, "currentExtent <= maxExtent");
    flexible_space_bar.FlexibleSpaceBarSettings.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = flexible_space_bar.FlexibleSpaceBarSettings.prototype;
  dart.addTypeTests(flexible_space_bar.FlexibleSpaceBarSettings);
  dart.addTypeCaches(flexible_space_bar.FlexibleSpaceBarSettings);
  dart.setMethodSignature(flexible_space_bar.FlexibleSpaceBarSettings, () => ({
    __proto__: dart.getMethods(flexible_space_bar.FlexibleSpaceBarSettings.__proto__),
    updateShouldNotify: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)])
  }));
  dart.setLibraryUri(flexible_space_bar.FlexibleSpaceBarSettings, L14);
  dart.setFieldSignature(flexible_space_bar.FlexibleSpaceBarSettings, () => ({
    __proto__: dart.getFields(flexible_space_bar.FlexibleSpaceBarSettings.__proto__),
    toolbarOpacity: dart.finalFieldType(dart.legacy(core.double)),
    minExtent: dart.finalFieldType(dart.legacy(core.double)),
    maxExtent: dart.finalFieldType(dart.legacy(core.double)),
    currentExtent: dart.finalFieldType(dart.legacy(core.double))
  }));
  var _name$5 = dart.privateName(list_tile, "_name");
  var C469;
  var C470;
  var C471;
  list_tile.ListTileStyle = class ListTileStyle extends core.Object {
    toString() {
      return this[_name$5];
    }
  };
  (list_tile.ListTileStyle.new = function(index, _name) {
    this.index = index;
    this[_name$5] = _name;
    ;
  }).prototype = list_tile.ListTileStyle.prototype;
  dart.addTypeTests(list_tile.ListTileStyle);
  dart.addTypeCaches(list_tile.ListTileStyle);
  dart.setMethodSignature(list_tile.ListTileStyle, () => ({
    __proto__: dart.getMethods(list_tile.ListTileStyle.__proto__),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setLibraryUri(list_tile.ListTileStyle, L16);
  dart.setFieldSignature(list_tile.ListTileStyle, () => ({
    __proto__: dart.getFields(list_tile.ListTileStyle.__proto__),
    index: dart.finalFieldType(dart.legacy(core.int)),
    [_name$5]: dart.finalFieldType(dart.legacy(core.String))
  }));
  dart.defineExtensionMethods(list_tile.ListTileStyle, ['toString']);
  list_tile.ListTileStyle.list = C469 || CT.C469;
  list_tile.ListTileStyle.drawer = C470 || CT.C470;
  list_tile.ListTileStyle.values = C471 || CT.C471;
  var C474;
  var C475;
  var C476;
  var C477;
  var C478;
  var C479;
  var C480;
  var C481;
  var C482;
  var C483;
  var C484;
  var C473;
  var C472;
  var C487;
  var C486;
  var C485;
  var C489;
  var ProxyWidget_child = dart.privateName(framework, "ProxyWidget.child");
  var ListTileTheme_selectedTileColor = dart.privateName(list_tile, "ListTileTheme.selectedTileColor");
  var ListTileTheme_tileColor = dart.privateName(list_tile, "ListTileTheme.tileColor");
  var ListTileTheme_contentPadding = dart.privateName(list_tile, "ListTileTheme.contentPadding");
  var ListTileTheme_textColor = dart.privateName(list_tile, "ListTileTheme.textColor");
  var ListTileTheme_iconColor = dart.privateName(list_tile, "ListTileTheme.iconColor");
  var ListTileTheme_selectedColor = dart.privateName(list_tile, "ListTileTheme.selectedColor");
  var ListTileTheme_style = dart.privateName(list_tile, "ListTileTheme.style");
  var ListTileTheme_shape = dart.privateName(list_tile, "ListTileTheme.shape");
  var ListTileTheme_dense = dart.privateName(list_tile, "ListTileTheme.dense");
  var C488;
  var C492;
  var C493;
  var C494;
  var C495;
  var C496;
  var C497;
  var C498;
  var C499;
  var C500;
  var C501;
  var C491;
  var C490;
  list_tile.ListTileTheme = class ListTileTheme extends inherited_theme.InheritedTheme {
    get dense() {
      return this[dense$];
    }
    set dense(value) {
      super.dense = value;
    }
    get shape() {
      return this[shape$1];
    }
    set shape(value) {
      super.shape = value;
    }
    get style() {
      return this[style$];
    }
    set style(value) {
      super.style = value;
    }
    get selectedColor() {
      return this[selectedColor$];
    }
    set selectedColor(value) {
      super.selectedColor = value;
    }
    get iconColor() {
      return this[iconColor$];
    }
    set iconColor(value) {
      super.iconColor = value;
    }
    get textColor() {
      return this[textColor$0];
    }
    set textColor(value) {
      super.textColor = value;
    }
    get contentPadding() {
      return this[contentPadding$];
    }
    set contentPadding(value) {
      super.contentPadding = value;
    }
    get tileColor() {
      return this[tileColor$];
    }
    set tileColor(value) {
      super.tileColor = value;
    }
    get selectedTileColor() {
      return this[selectedTileColor$];
    }
    set selectedTileColor(value) {
      super.selectedTileColor = value;
    }
    static merge(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let dense = opts && 'dense' in opts ? opts.dense : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let style = opts && 'style' in opts ? opts.style : null;
      let selectedColor = opts && 'selectedColor' in opts ? opts.selectedColor : null;
      let iconColor = opts && 'iconColor' in opts ? opts.iconColor : null;
      let textColor = opts && 'textColor' in opts ? opts.textColor : null;
      let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : null;
      let tileColor = opts && 'tileColor' in opts ? opts.tileColor : null;
      let selectedTileColor = opts && 'selectedTileColor' in opts ? opts.selectedTileColor : null;
      let child = opts && 'child' in opts ? opts.child : null;
      if (!(child != null)) dart.assertFailed(null, L17, 77, 12, "child != null");
      return new basic.Builder.new({builder: dart.fn(context => {
          let t1, t1$, t1$0, t1$1, t1$2, t1$3, t1$4, t1$5, t1$6;
          let parent = list_tile.ListTileTheme.of(context);
          return new list_tile.ListTileTheme.new({key: key, dense: (t1 = dense, t1 == null ? parent.dense : t1), shape: (t1$ = shape, t1$ == null ? parent.shape : t1$), style: (t1$0 = style, t1$0 == null ? parent.style : t1$0), selectedColor: (t1$1 = selectedColor, t1$1 == null ? parent.selectedColor : t1$1), iconColor: (t1$2 = iconColor, t1$2 == null ? parent.iconColor : t1$2), textColor: (t1$3 = textColor, t1$3 == null ? parent.textColor : t1$3), contentPadding: (t1$4 = contentPadding, t1$4 == null ? parent.contentPadding : t1$4), tileColor: (t1$5 = tileColor, t1$5 == null ? parent.tileColor : t1$5), selectedTileColor: (t1$6 = selectedTileColor, t1$6 == null ? parent.selectedTileColor : t1$6), child: child, $creationLocationd_0dea112b090073317d4: C472 || CT.C472});
        }, BuildContextLToListTileThemeL()), $creationLocationd_0dea112b090073317d4: C485 || CT.C485});
    }
    static of(context) {
      let t1;
      let result = context.dependOnInheritedWidgetOfExactType(ListTileThemeL());
      t1 = result;
      return t1 == null ? C488 || CT.C488 : t1;
    }
    wrap(context, child) {
      let ancestorTheme = context.findAncestorWidgetOfExactType(ListTileThemeL());
      return this === ancestorTheme ? child : new list_tile.ListTileTheme.new({dense: this.dense, shape: this.shape, style: this.style, selectedColor: this.selectedColor, iconColor: this.iconColor, textColor: this.textColor, contentPadding: this.contentPadding, tileColor: this.tileColor, selectedTileColor: this.selectedTileColor, child: child, $creationLocationd_0dea112b090073317d4: C490 || CT.C490});
    }
    updateShouldNotify(oldWidget) {
      ListTileThemeL().as(oldWidget);
      return !dart.equals(this.dense, oldWidget.dense) || !dart.equals(this.shape, oldWidget.shape) || this.style != oldWidget.style || !dart.equals(this.selectedColor, oldWidget.selectedColor) || !dart.equals(this.iconColor, oldWidget.iconColor) || !dart.equals(this.textColor, oldWidget.textColor) || !dart.equals(this.contentPadding, oldWidget.contentPadding) || !dart.equals(this.tileColor, oldWidget.tileColor) || !dart.equals(this.selectedTileColor, oldWidget.selectedTileColor);
    }
  };
  (list_tile.ListTileTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let dense = opts && 'dense' in opts ? opts.dense : false;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let style = opts && 'style' in opts ? opts.style : C469 || CT.C469;
    let selectedColor = opts && 'selectedColor' in opts ? opts.selectedColor : null;
    let iconColor = opts && 'iconColor' in opts ? opts.iconColor : null;
    let textColor = opts && 'textColor' in opts ? opts.textColor : null;
    let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : null;
    let tileColor = opts && 'tileColor' in opts ? opts.tileColor : null;
    let selectedTileColor = opts && 'selectedTileColor' in opts ? opts.selectedTileColor : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[dense$] = dense;
    this[shape$1] = shape;
    this[style$] = style;
    this[selectedColor$] = selectedColor;
    this[iconColor$] = iconColor;
    this[textColor$0] = textColor;
    this[contentPadding$] = contentPadding;
    this[tileColor$] = tileColor;
    this[selectedTileColor$] = selectedTileColor;
    list_tile.ListTileTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = list_tile.ListTileTheme.prototype;
  dart.addTypeTests(list_tile.ListTileTheme);
  dart.addTypeCaches(list_tile.ListTileTheme);
  const dense$ = ListTileTheme_dense;
  const shape$1 = ListTileTheme_shape;
  const style$ = ListTileTheme_style;
  const selectedColor$ = ListTileTheme_selectedColor;
  const iconColor$ = ListTileTheme_iconColor;
  const textColor$0 = ListTileTheme_textColor;
  const contentPadding$ = ListTileTheme_contentPadding;
  const tileColor$ = ListTileTheme_tileColor;
  const selectedTileColor$ = ListTileTheme_selectedTileColor;
  dart.setMethodSignature(list_tile.ListTileTheme, () => ({
    __proto__: dart.getMethods(list_tile.ListTileTheme.__proto__),
    wrap: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext), dart.legacy(framework.Widget)]),
    updateShouldNotify: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)])
  }));
  dart.setLibraryUri(list_tile.ListTileTheme, L16);
  dart.setFieldSignature(list_tile.ListTileTheme, () => ({
    __proto__: dart.getFields(list_tile.ListTileTheme.__proto__),
    dense: dart.finalFieldType(dart.legacy(core.bool)),
    shape: dart.finalFieldType(dart.legacy(borders.ShapeBorder)),
    style: dart.finalFieldType(dart.legacy(list_tile.ListTileStyle)),
    selectedColor: dart.finalFieldType(dart.legacy(ui.Color)),
    iconColor: dart.finalFieldType(dart.legacy(ui.Color)),
    textColor: dart.finalFieldType(dart.legacy(ui.Color)),
    contentPadding: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsetsGeometry)),
    tileColor: dart.finalFieldType(dart.legacy(ui.Color)),
    selectedTileColor: dart.finalFieldType(dart.legacy(ui.Color))
  }));
  var C502;
  var C503;
  var C504;
  var C505;
  list_tile.ListTileControlAffinity = class ListTileControlAffinity extends core.Object {
    toString() {
      return this[_name$5];
    }
  };
  (list_tile.ListTileControlAffinity.new = function(index, _name) {
    this.index = index;
    this[_name$5] = _name;
    ;
  }).prototype = list_tile.ListTileControlAffinity.prototype;
  dart.addTypeTests(list_tile.ListTileControlAffinity);
  dart.addTypeCaches(list_tile.ListTileControlAffinity);
  dart.setMethodSignature(list_tile.ListTileControlAffinity, () => ({
    __proto__: dart.getMethods(list_tile.ListTileControlAffinity.__proto__),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setLibraryUri(list_tile.ListTileControlAffinity, L16);
  dart.setFieldSignature(list_tile.ListTileControlAffinity, () => ({
    __proto__: dart.getFields(list_tile.ListTileControlAffinity.__proto__),
    index: dart.finalFieldType(dart.legacy(core.int)),
    [_name$5]: dart.finalFieldType(dart.legacy(core.String))
  }));
  dart.defineExtensionMethods(list_tile.ListTileControlAffinity, ['toString']);
  list_tile.ListTileControlAffinity.leading = C502 || CT.C502;
  list_tile.ListTileControlAffinity.trailing = C503 || CT.C503;
  list_tile.ListTileControlAffinity.platform = C504 || CT.C504;
  list_tile.ListTileControlAffinity.values = C505 || CT.C505;
  var C508;
  var C509;
  var C510;
  var C507;
  var C506;
  var C511;
  var C512;
  var _iconColor = dart.privateName(list_tile, "_iconColor");
  var _textColor = dart.privateName(list_tile, "_textColor");
  var _isDenseLayout = dart.privateName(list_tile, "_isDenseLayout");
  var _titleTextStyle = dart.privateName(list_tile, "_titleTextStyle");
  var _subtitleTextStyle = dart.privateName(list_tile, "_subtitleTextStyle");
  var _tileBackgroundColor = dart.privateName(list_tile, "_tileBackgroundColor");
  var C514;
  var C513;
  var C517;
  var C518;
  var C519;
  var C516;
  var C515;
  var C522;
  var C523;
  var C524;
  var C521;
  var C520;
  var C527;
  var C528;
  var C529;
  var C530;
  var C531;
  var C532;
  var C533;
  var C534;
  var C535;
  var C536;
  var C526;
  var C525;
  var C539;
  var C540;
  var C541;
  var C542;
  var C538;
  var C537;
  var C545;
  var C546;
  var C544;
  var C543;
  var C549;
  var C550;
  var C551;
  var C548;
  var C547;
  var C554;
  var C555;
  var C556;
  var C557;
  var C558;
  var C559;
  var C560;
  var C561;
  var C562;
  var C563;
  var C553;
  var C552;
  var leading$ = dart.privateName(list_tile, "ListTile.leading");
  var title$0 = dart.privateName(list_tile, "ListTile.title");
  var subtitle$ = dart.privateName(list_tile, "ListTile.subtitle");
  var trailing$ = dart.privateName(list_tile, "ListTile.trailing");
  var isThreeLine$ = dart.privateName(list_tile, "ListTile.isThreeLine");
  var dense$0 = dart.privateName(list_tile, "ListTile.dense");
  var visualDensity$0 = dart.privateName(list_tile, "ListTile.visualDensity");
  var shape$2 = dart.privateName(list_tile, "ListTile.shape");
  var contentPadding$0 = dart.privateName(list_tile, "ListTile.contentPadding");
  var enabled$ = dart.privateName(list_tile, "ListTile.enabled");
  var onTap$ = dart.privateName(list_tile, "ListTile.onTap");
  var onLongPress$ = dart.privateName(list_tile, "ListTile.onLongPress");
  var mouseCursor$1 = dart.privateName(list_tile, "ListTile.mouseCursor");
  var selected$ = dart.privateName(list_tile, "ListTile.selected");
  var focusColor$1 = dart.privateName(list_tile, "ListTile.focusColor");
  var hoverColor$1 = dart.privateName(list_tile, "ListTile.hoverColor");
  var focusNode$1 = dart.privateName(list_tile, "ListTile.focusNode");
  var autofocus$1 = dart.privateName(list_tile, "ListTile.autofocus");
  var tileColor$0 = dart.privateName(list_tile, "ListTile.tileColor");
  var selectedTileColor$0 = dart.privateName(list_tile, "ListTile.selectedTileColor");
  list_tile.ListTile = class ListTile extends framework.StatelessWidget {
    get leading() {
      return this[leading$];
    }
    set leading(value) {
      super.leading = value;
    }
    get title() {
      return this[title$0];
    }
    set title(value) {
      super.title = value;
    }
    get subtitle() {
      return this[subtitle$];
    }
    set subtitle(value) {
      super.subtitle = value;
    }
    get trailing() {
      return this[trailing$];
    }
    set trailing(value) {
      super.trailing = value;
    }
    get isThreeLine() {
      return this[isThreeLine$];
    }
    set isThreeLine(value) {
      super.isThreeLine = value;
    }
    get dense() {
      return this[dense$0];
    }
    set dense(value) {
      super.dense = value;
    }
    get visualDensity() {
      return this[visualDensity$0];
    }
    set visualDensity(value) {
      super.visualDensity = value;
    }
    get shape() {
      return this[shape$2];
    }
    set shape(value) {
      super.shape = value;
    }
    get contentPadding() {
      return this[contentPadding$0];
    }
    set contentPadding(value) {
      super.contentPadding = value;
    }
    get enabled() {
      return this[enabled$];
    }
    set enabled(value) {
      super.enabled = value;
    }
    get onTap() {
      return this[onTap$];
    }
    set onTap(value) {
      super.onTap = value;
    }
    get onLongPress() {
      return this[onLongPress$];
    }
    set onLongPress(value) {
      super.onLongPress = value;
    }
    get mouseCursor() {
      return this[mouseCursor$1];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get selected() {
      return this[selected$];
    }
    set selected(value) {
      super.selected = value;
    }
    get focusColor() {
      return this[focusColor$1];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get hoverColor() {
      return this[hoverColor$1];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get focusNode() {
      return this[focusNode$1];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    get autofocus() {
      return this[autofocus$1];
    }
    set autofocus(value) {
      super.autofocus = value;
    }
    get tileColor() {
      return this[tileColor$0];
    }
    set tileColor(value) {
      super.tileColor = value;
    }
    get selectedTileColor() {
      return this[selectedTileColor$0];
    }
    set selectedTileColor(value) {
      super.selectedTileColor = value;
    }
    static divideTiles(opts) {
      let context = opts && 'context' in opts ? opts.context : null;
      let tiles = opts && 'tiles' in opts ? opts.tiles : null;
      let color = opts && 'color' in opts ? opts.color : null;
      return new (SyncIterableOfWidgetL()).new(function* divideTiles() {
        if (!(tiles != null)) dart.assertFailed(null, L17, 883, 12, "tiles != null");
        if (!(color != null || context != null)) dart.assertFailed(null, L17, 884, 12, "color != null || context != null");
        let iterator = tiles[$iterator];
        let isNotEmpty = iterator.moveNext();
        let decoration = new box_decoration.BoxDecoration.new({border: new box_border.Border.new({bottom: divider.Divider.createBorderSide(context, {color: color})})});
        let tile = iterator.current;
        while (dart.test(iterator.moveNext())) {
          yield new container.DecoratedBox.new({position: proxy_box.DecorationPosition.foreground, decoration: decoration, child: tile, $creationLocationd_0dea112b090073317d4: C506 || CT.C506});
          tile = iterator.current;
        }
        if (dart.test(isNotEmpty)) yield tile;
      });
    }
    [_iconColor](theme, tileTheme) {
      let t1, t1$;
      if (!dart.test(this.enabled)) return theme.disabledColor;
      if (dart.test(this.selected) && (t1 = tileTheme, t1 == null ? null : t1.selectedColor) != null) return tileTheme.selectedColor;
      if (!dart.test(this.selected) && (t1$ = tileTheme, t1$ == null ? null : t1$.iconColor) != null) return tileTheme.iconColor;
      switch (theme.brightness) {
        case C511 || CT.C511:
        {
          return dart.test(this.selected) ? theme.primaryColor : colors$.Colors.black45;
        }
        case C512 || CT.C512:
        {
          return dart.test(this.selected) ? theme.accentColor : null;
        }
      }
      if (!(theme.brightness != null)) dart.assertFailed(null, L17, 924, 12, "theme.brightness != null");
      return null;
    }
    [_textColor](theme, tileTheme, defaultColor) {
      let t1, t1$;
      if (!dart.test(this.enabled)) return theme.disabledColor;
      if (dart.test(this.selected) && (t1 = tileTheme, t1 == null ? null : t1.selectedColor) != null) return tileTheme.selectedColor;
      if (!dart.test(this.selected) && (t1$ = tileTheme, t1$ == null ? null : t1$.textColor) != null) return tileTheme.textColor;
      if (dart.test(this.selected)) {
        switch (theme.brightness) {
          case C511 || CT.C511:
          {
            return theme.primaryColor;
          }
          case C512 || CT.C512:
          {
            return theme.accentColor;
          }
        }
      }
      return defaultColor;
    }
    [_isDenseLayout](tileTheme) {
      let t2, t1, t1$;
      t1$ = (t1 = this.dense, t1 == null ? (t2 = tileTheme, t2 == null ? null : t2.dense) : t1);
      return t1$ == null ? false : t1$;
    }
    [_titleTextStyle](theme, tileTheme) {
      let style = null;
      if (tileTheme != null) {
        switch (tileTheme.style) {
          case C470 || CT.C470:
          {
            style = theme.textTheme.bodyText1;
            break;
          }
          case C469 || CT.C469:
          {
            style = theme.textTheme.subtitle1;
            break;
          }
        }
      } else {
        style = theme.textTheme.subtitle1;
      }
      let color = this[_textColor](theme, tileTheme, style.color);
      return dart.test(this[_isDenseLayout](tileTheme)) ? style.copyWith({fontSize: 13.0, color: color}) : style.copyWith({color: color});
    }
    [_subtitleTextStyle](theme, tileTheme) {
      let style = theme.textTheme.bodyText2;
      let color = this[_textColor](theme, tileTheme, theme.textTheme.caption.color);
      return dart.test(this[_isDenseLayout](tileTheme)) ? style.copyWith({color: color, fontSize: 12.0}) : style.copyWith({color: color});
    }
    [_tileBackgroundColor](tileTheme) {
      let t1, t1$;
      if (!dart.test(this.selected)) {
        if (this.tileColor != null) return this.tileColor;
        if ((t1 = tileTheme, t1 == null ? null : t1.tileColor) != null) return tileTheme.tileColor;
      }
      if (dart.test(this.selected)) {
        if (this.selectedTileColor != null) return this.selectedTileColor;
        if ((t1$ = tileTheme, t1$ == null ? null : t1$.selectedTileColor) != null) return tileTheme.selectedTileColor;
      }
      return colors$.Colors.transparent;
    }
    build(context) {
      let t1, t1$, t2, t2$, t1$0, t1$1, t1$2, t2$0, t2$1, t2$2;
      if (!dart.test(debug$0.debugCheckHasMaterial(context))) dart.assertFailed(null, L17, 1001, 12, "debugCheckHasMaterial(context)");
      let theme = theme$.Theme.of(context);
      let tileTheme = list_tile.ListTileTheme.of(context);
      let iconThemeData = null;
      if (this.leading != null || this.trailing != null) iconThemeData = new icon_theme_data.IconThemeData.new({color: this[_iconColor](theme, tileTheme)});
      let leadingIcon = null;
      if (this.leading != null) {
        leadingIcon = icon_theme.IconTheme.merge({data: iconThemeData, child: this.leading});
      }
      let titleStyle = this[_titleTextStyle](theme, tileTheme);
      let titleText = new implicit_animations.AnimatedDefaultTextStyle.new({style: titleStyle, duration: constants.kThemeChangeDuration, child: (t1 = this.title, t1 == null ? C513 || CT.C513 : t1), $creationLocationd_0dea112b090073317d4: C515 || CT.C515});
      let subtitleText = null;
      let subtitleStyle = null;
      if (this.subtitle != null) {
        subtitleStyle = this[_subtitleTextStyle](theme, tileTheme);
        subtitleText = new implicit_animations.AnimatedDefaultTextStyle.new({style: subtitleStyle, duration: constants.kThemeChangeDuration, child: this.subtitle, $creationLocationd_0dea112b090073317d4: C520 || CT.C520});
      }
      let trailingIcon = null;
      if (this.trailing != null) {
        trailingIcon = icon_theme.IconTheme.merge({data: iconThemeData, child: this.trailing});
      }
      let _defaultContentPadding = C277 || CT.C277;
      let textDirection = basic.Directionality.of(context);
      let resolvedContentPadding = (t1$1 = (t1$0 = (t1$ = this.contentPadding, t1$ == null ? null : t1$.resolve(textDirection)), t1$0 == null ? (t2$ = (t2 = tileTheme, t2 == null ? null : t2.contentPadding), t2$ == null ? null : t2$.resolve(textDirection)) : t1$0), t1$1 == null ? _defaultContentPadding : t1$1);
      let effectiveMouseCursor = material_state.MaterialStateProperty.resolveAs(MouseCursorL(), (t1$2 = this.mouseCursor, t1$2 == null ? material_state.MaterialStateMouseCursor.clickable : t1$2), (() => {
        let t1 = new (_HashSetOfMaterialStateL()).new();
        if (!dart.test(this.enabled) || this.onTap == null && this.onLongPress == null) t1.add(material_state.MaterialState.disabled);
        if (dart.test(this.selected)) t1.add(material_state.MaterialState.selected);
        return t1;
      })());
      return new ink_well.InkWell.new({customBorder: (t2$0 = this.shape, t2$0 == null ? tileTheme.shape : t2$0), onTap: dart.test(this.enabled) ? this.onTap : null, onLongPress: dart.test(this.enabled) ? this.onLongPress : null, mouseCursor: effectiveMouseCursor, canRequestFocus: this.enabled, focusNode: this.focusNode, focusColor: this.focusColor, hoverColor: this.hoverColor, autofocus: this.autofocus, child: new basic.Semantics.new({selected: this.selected, enabled: this.enabled, child: new basic.ColoredBox.new({color: this[_tileBackgroundColor](tileTheme), child: new safe_area.SafeArea.new({top: false, bottom: false, minimum: resolvedContentPadding, child: new list_tile._ListTile.new({leading: leadingIcon, title: titleText, subtitle: subtitleText, trailing: trailingIcon, isDense: this[_isDenseLayout](tileTheme), visualDensity: (t2$1 = this.visualDensity, t2$1 == null ? theme.visualDensity : t2$1), isThreeLine: this.isThreeLine, textDirection: textDirection, titleBaselineType: titleStyle.textBaseline, subtitleBaselineType: (t2$2 = subtitleStyle, t2$2 == null ? null : t2$2.textBaseline), $creationLocationd_0dea112b090073317d4: C525 || CT.C525}), $creationLocationd_0dea112b090073317d4: C537 || CT.C537}), $creationLocationd_0dea112b090073317d4: C543 || CT.C543}), $creationLocationd_0dea112b090073317d4: C547 || CT.C547}), $creationLocationd_0dea112b090073317d4: C552 || CT.C552});
    }
  };
  (list_tile.ListTile.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let leading = opts && 'leading' in opts ? opts.leading : null;
    let title = opts && 'title' in opts ? opts.title : null;
    let subtitle = opts && 'subtitle' in opts ? opts.subtitle : null;
    let trailing = opts && 'trailing' in opts ? opts.trailing : null;
    let isThreeLine = opts && 'isThreeLine' in opts ? opts.isThreeLine : false;
    let dense = opts && 'dense' in opts ? opts.dense : null;
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : null;
    let enabled = opts && 'enabled' in opts ? opts.enabled : true;
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let selected = opts && 'selected' in opts ? opts.selected : false;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    let tileColor = opts && 'tileColor' in opts ? opts.tileColor : null;
    let selectedTileColor = opts && 'selectedTileColor' in opts ? opts.selectedTileColor : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[leading$] = leading;
    this[title$0] = title;
    this[subtitle$] = subtitle;
    this[trailing$] = trailing;
    this[isThreeLine$] = isThreeLine;
    this[dense$0] = dense;
    this[visualDensity$0] = visualDensity;
    this[shape$2] = shape;
    this[contentPadding$0] = contentPadding;
    this[enabled$] = enabled;
    this[onTap$] = onTap;
    this[onLongPress$] = onLongPress;
    this[mouseCursor$1] = mouseCursor;
    this[selected$] = selected;
    this[focusColor$1] = focusColor;
    this[hoverColor$1] = hoverColor;
    this[focusNode$1] = focusNode;
    this[autofocus$1] = autofocus;
    this[tileColor$0] = tileColor;
    this[selectedTileColor$0] = selectedTileColor;
    if (!(isThreeLine != null)) dart.assertFailed(null, L17, 685, 15, "isThreeLine != null");
    if (!(enabled != null)) dart.assertFailed(null, L17, 686, 15, "enabled != null");
    if (!(selected != null)) dart.assertFailed(null, L17, 687, 15, "selected != null");
    if (!(autofocus != null)) dart.assertFailed(null, L17, 688, 15, "autofocus != null");
    if (!(!dart.test(isThreeLine) || subtitle != null)) dart.assertFailed(null, L17, 689, 15, "!isThreeLine || subtitle != null");
    list_tile.ListTile.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = list_tile.ListTile.prototype;
  dart.addTypeTests(list_tile.ListTile);
  dart.addTypeCaches(list_tile.ListTile);
  dart.setMethodSignature(list_tile.ListTile, () => ({
    __proto__: dart.getMethods(list_tile.ListTile.__proto__),
    [_iconColor]: dart.fnType(dart.legacy(ui.Color), [dart.legacy(theme_data.ThemeData), dart.legacy(list_tile.ListTileTheme)]),
    [_textColor]: dart.fnType(dart.legacy(ui.Color), [dart.legacy(theme_data.ThemeData), dart.legacy(list_tile.ListTileTheme), dart.legacy(ui.Color)]),
    [_isDenseLayout]: dart.fnType(dart.legacy(core.bool), [dart.legacy(list_tile.ListTileTheme)]),
    [_titleTextStyle]: dart.fnType(dart.legacy(text_style.TextStyle), [dart.legacy(theme_data.ThemeData), dart.legacy(list_tile.ListTileTheme)]),
    [_subtitleTextStyle]: dart.fnType(dart.legacy(text_style.TextStyle), [dart.legacy(theme_data.ThemeData), dart.legacy(list_tile.ListTileTheme)]),
    [_tileBackgroundColor]: dart.fnType(dart.legacy(ui.Color), [dart.legacy(list_tile.ListTileTheme)]),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(list_tile.ListTile, L16);
  dart.setFieldSignature(list_tile.ListTile, () => ({
    __proto__: dart.getFields(list_tile.ListTile.__proto__),
    leading: dart.finalFieldType(dart.legacy(framework.Widget)),
    title: dart.finalFieldType(dart.legacy(framework.Widget)),
    subtitle: dart.finalFieldType(dart.legacy(framework.Widget)),
    trailing: dart.finalFieldType(dart.legacy(framework.Widget)),
    isThreeLine: dart.finalFieldType(dart.legacy(core.bool)),
    dense: dart.finalFieldType(dart.legacy(core.bool)),
    visualDensity: dart.finalFieldType(dart.legacy(theme_data.VisualDensity)),
    shape: dart.finalFieldType(dart.legacy(borders.ShapeBorder)),
    contentPadding: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsetsGeometry)),
    enabled: dart.finalFieldType(dart.legacy(core.bool)),
    onTap: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, []))),
    onLongPress: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, []))),
    mouseCursor: dart.finalFieldType(dart.legacy(mouse_cursor.MouseCursor)),
    selected: dart.finalFieldType(dart.legacy(core.bool)),
    focusColor: dart.finalFieldType(dart.legacy(ui.Color)),
    hoverColor: dart.finalFieldType(dart.legacy(ui.Color)),
    focusNode: dart.finalFieldType(dart.legacy(focus_manager.FocusNode)),
    autofocus: dart.finalFieldType(dart.legacy(core.bool)),
    tileColor: dart.finalFieldType(dart.legacy(ui.Color)),
    selectedTileColor: dart.finalFieldType(dart.legacy(ui.Color))
  }));
  var C564;
  var C565;
  var C566;
  var C567;
  var C568;
  list_tile._ListTileSlot = class _ListTileSlot extends core.Object {
    toString() {
      return this[_name$5];
    }
  };
  (list_tile._ListTileSlot.new = function(index, _name) {
    this.index = index;
    this[_name$5] = _name;
    ;
  }).prototype = list_tile._ListTileSlot.prototype;
  dart.addTypeTests(list_tile._ListTileSlot);
  dart.addTypeCaches(list_tile._ListTileSlot);
  dart.setMethodSignature(list_tile._ListTileSlot, () => ({
    __proto__: dart.getMethods(list_tile._ListTileSlot.__proto__),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setLibraryUri(list_tile._ListTileSlot, L16);
  dart.setFieldSignature(list_tile._ListTileSlot, () => ({
    __proto__: dart.getFields(list_tile._ListTileSlot.__proto__),
    index: dart.finalFieldType(dart.legacy(core.int)),
    [_name$5]: dart.finalFieldType(dart.legacy(core.String))
  }));
  dart.defineExtensionMethods(list_tile._ListTileSlot, ['toString']);
  list_tile._ListTileSlot.leading = C564 || CT.C564;
  list_tile._ListTileSlot.title = C565 || CT.C565;
  list_tile._ListTileSlot.subtitle = C566 || CT.C566;
  list_tile._ListTileSlot.trailing = C567 || CT.C567;
  list_tile._ListTileSlot.values = C568 || CT.C568;
  var leading$0 = dart.privateName(list_tile, "_ListTile.leading");
  var title$1 = dart.privateName(list_tile, "_ListTile.title");
  var subtitle$0 = dart.privateName(list_tile, "_ListTile.subtitle");
  var trailing$0 = dart.privateName(list_tile, "_ListTile.trailing");
  var isThreeLine$0 = dart.privateName(list_tile, "_ListTile.isThreeLine");
  var isDense$ = dart.privateName(list_tile, "_ListTile.isDense");
  var visualDensity$1 = dart.privateName(list_tile, "_ListTile.visualDensity");
  var textDirection$ = dart.privateName(list_tile, "_ListTile.textDirection");
  var titleBaselineType$ = dart.privateName(list_tile, "_ListTile.titleBaselineType");
  var subtitleBaselineType$ = dart.privateName(list_tile, "_ListTile.subtitleBaselineType");
  list_tile._ListTile = class _ListTile extends framework.RenderObjectWidget {
    get leading() {
      return this[leading$0];
    }
    set leading(value) {
      super.leading = value;
    }
    get title() {
      return this[title$1];
    }
    set title(value) {
      super.title = value;
    }
    get subtitle() {
      return this[subtitle$0];
    }
    set subtitle(value) {
      super.subtitle = value;
    }
    get trailing() {
      return this[trailing$0];
    }
    set trailing(value) {
      super.trailing = value;
    }
    get isThreeLine() {
      return this[isThreeLine$0];
    }
    set isThreeLine(value) {
      super.isThreeLine = value;
    }
    get isDense() {
      return this[isDense$];
    }
    set isDense(value) {
      super.isDense = value;
    }
    get visualDensity() {
      return this[visualDensity$1];
    }
    set visualDensity(value) {
      super.visualDensity = value;
    }
    get textDirection() {
      return this[textDirection$];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
    get titleBaselineType() {
      return this[titleBaselineType$];
    }
    set titleBaselineType(value) {
      super.titleBaselineType = value;
    }
    get subtitleBaselineType() {
      return this[subtitleBaselineType$];
    }
    set subtitleBaselineType(value) {
      super.subtitleBaselineType = value;
    }
    createElement() {
      return new list_tile._ListTileElement.new(this);
    }
    createRenderObject(context) {
      return new list_tile._RenderListTile.new({isThreeLine: this.isThreeLine, isDense: this.isDense, visualDensity: this.visualDensity, textDirection: this.textDirection, titleBaselineType: this.titleBaselineType, subtitleBaselineType: this.subtitleBaselineType});
    }
    updateRenderObject(context, renderObject) {
      let t2;
      _RenderListTileL().as(renderObject);
      t2 = renderObject;
      (() => {
        t2.isThreeLine = this.isThreeLine;
        t2.isDense = this.isDense;
        t2.visualDensity = this.visualDensity;
        t2.textDirection = this.textDirection;
        t2.titleBaselineType = this.titleBaselineType;
        t2.subtitleBaselineType = this.subtitleBaselineType;
        return t2;
      })();
    }
  };
  (list_tile._ListTile.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let leading = opts && 'leading' in opts ? opts.leading : null;
    let title = opts && 'title' in opts ? opts.title : null;
    let subtitle = opts && 'subtitle' in opts ? opts.subtitle : null;
    let trailing = opts && 'trailing' in opts ? opts.trailing : null;
    let isThreeLine = opts && 'isThreeLine' in opts ? opts.isThreeLine : null;
    let isDense = opts && 'isDense' in opts ? opts.isDense : null;
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let titleBaselineType = opts && 'titleBaselineType' in opts ? opts.titleBaselineType : null;
    let subtitleBaselineType = opts && 'subtitleBaselineType' in opts ? opts.subtitleBaselineType : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[leading$0] = leading;
    this[title$1] = title;
    this[subtitle$0] = subtitle;
    this[trailing$0] = trailing;
    this[isThreeLine$0] = isThreeLine;
    this[isDense$] = isDense;
    this[visualDensity$1] = visualDensity;
    this[textDirection$] = textDirection;
    this[titleBaselineType$] = titleBaselineType;
    this[subtitleBaselineType$] = subtitleBaselineType;
    if (!(isThreeLine != null)) dart.assertFailed(null, L17, 1116, 15, "isThreeLine != null");
    if (!(isDense != null)) dart.assertFailed(null, L17, 1117, 15, "isDense != null");
    if (!(visualDensity != null)) dart.assertFailed(null, L17, 1118, 15, "visualDensity != null");
    if (!(textDirection != null)) dart.assertFailed(null, L17, 1119, 15, "textDirection != null");
    if (!(titleBaselineType != null)) dart.assertFailed(null, L17, 1120, 15, "titleBaselineType != null");
    list_tile._ListTile.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = list_tile._ListTile.prototype;
  dart.addTypeTests(list_tile._ListTile);
  dart.addTypeCaches(list_tile._ListTile);
  dart.setMethodSignature(list_tile._ListTile, () => ({
    __proto__: dart.getMethods(list_tile._ListTile.__proto__),
    createElement: dart.fnType(dart.legacy(list_tile._ListTileElement), []),
    createRenderObject: dart.fnType(dart.legacy(list_tile._RenderListTile), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(list_tile._ListTile, L16);
  dart.setFieldSignature(list_tile._ListTile, () => ({
    __proto__: dart.getFields(list_tile._ListTile.__proto__),
    leading: dart.finalFieldType(dart.legacy(framework.Widget)),
    title: dart.finalFieldType(dart.legacy(framework.Widget)),
    subtitle: dart.finalFieldType(dart.legacy(framework.Widget)),
    trailing: dart.finalFieldType(dart.legacy(framework.Widget)),
    isThreeLine: dart.finalFieldType(dart.legacy(core.bool)),
    isDense: dart.finalFieldType(dart.legacy(core.bool)),
    visualDensity: dart.finalFieldType(dart.legacy(theme_data.VisualDensity)),
    textDirection: dart.finalFieldType(dart.legacy(ui.TextDirection)),
    titleBaselineType: dart.finalFieldType(dart.legacy(ui.TextBaseline)),
    subtitleBaselineType: dart.finalFieldType(dart.legacy(ui.TextBaseline))
  }));
  var _mountChild = dart.privateName(list_tile, "_mountChild");
  var _updateChild = dart.privateName(list_tile, "_updateChild");
  var _updateRenderObject = dart.privateName(list_tile, "_updateRenderObject");
  list_tile._ListTileElement = class _ListTileElement extends framework.RenderObjectElement {
    get widget() {
      return _ListTileL().as(super.widget);
    }
    get renderObject() {
      return _RenderListTileL().as(super.renderObject);
    }
    visitChildren(visitor) {
      this.slotToChild[$values][$forEach](visitor);
    }
    forgetChild(child) {
      if (!dart.test(this.slotToChild[$values][$contains](child))) dart.assertFailed(null, L17, 1180, 12, "slotToChild.values.contains(child)");
      if (!dart.test(this.childToSlot[$keys][$contains](child))) dart.assertFailed(null, L17, 1181, 12, "childToSlot.keys.contains(child)");
      let slot = this.childToSlot[$_get](child);
      this.childToSlot[$remove](child);
      this.slotToChild[$remove](slot);
      super.forgetChild(child);
    }
    [_mountChild](widget, slot) {
      let oldChild = this.slotToChild[$_get](slot);
      let newChild = this.updateChild(oldChild, widget, slot);
      if (oldChild != null) {
        this.slotToChild[$remove](slot);
        this.childToSlot[$remove](oldChild);
      }
      if (newChild != null) {
        this.slotToChild[$_set](slot, newChild);
        this.childToSlot[$_set](newChild, slot);
      }
    }
    mount(parent, newSlot) {
      super.mount(parent, newSlot);
      this[_mountChild](this.widget.leading, list_tile._ListTileSlot.leading);
      this[_mountChild](this.widget.title, list_tile._ListTileSlot.title);
      this[_mountChild](this.widget.subtitle, list_tile._ListTileSlot.subtitle);
      this[_mountChild](this.widget.trailing, list_tile._ListTileSlot.trailing);
    }
    [_updateChild](widget, slot) {
      let oldChild = this.slotToChild[$_get](slot);
      let newChild = this.updateChild(oldChild, widget, slot);
      if (oldChild != null) {
        this.childToSlot[$remove](oldChild);
        this.slotToChild[$remove](slot);
      }
      if (newChild != null) {
        this.slotToChild[$_set](slot, newChild);
        this.childToSlot[$_set](newChild, slot);
      }
    }
    update(newWidget) {
      _ListTileL().as(newWidget);
      super.update(newWidget);
      if (!dart.equals(this.widget, newWidget)) dart.assertFailed(null, L17, 1226, 12, "widget == newWidget");
      this[_updateChild](this.widget.leading, list_tile._ListTileSlot.leading);
      this[_updateChild](this.widget.title, list_tile._ListTileSlot.title);
      this[_updateChild](this.widget.subtitle, list_tile._ListTileSlot.subtitle);
      this[_updateChild](this.widget.trailing, list_tile._ListTileSlot.trailing);
    }
    [_updateRenderObject](child, slot) {
      switch (slot) {
        case C564 || CT.C564:
        {
          this.renderObject.leading = child;
          break;
        }
        case C565 || CT.C565:
        {
          this.renderObject.title = child;
          break;
        }
        case C566 || CT.C566:
        {
          this.renderObject.subtitle = child;
          break;
        }
        case C567 || CT.C567:
        {
          this.renderObject.trailing = child;
          break;
        }
      }
    }
    insertChildRenderObject(child, slotValue) {
      RenderObjectL().as(child);
      if (!RenderBoxL().is(child)) dart.assertFailed(null, L17, 1252, 12, "child is RenderBox");
      if (!_ListTileSlotL().is(slotValue)) dart.assertFailed(null, L17, 1253, 12, "slotValue is _ListTileSlot");
      let slot = _ListTileSlotL().as(slotValue);
      this[_updateRenderObject](RenderBoxL().as(child), slot);
      if (!dart.test(this.renderObject.childToSlot[$keys][$contains](child))) dart.assertFailed(null, L17, 1256, 12, "renderObject.childToSlot.keys.contains(child)");
      if (!dart.test(this.renderObject.slotToChild[$keys][$contains](slot))) dart.assertFailed(null, L17, 1257, 12, "renderObject.slotToChild.keys.contains(slot)");
    }
    removeChildRenderObject(child) {
      RenderObjectL().as(child);
      if (!RenderBoxL().is(child)) dart.assertFailed(null, L17, 1262, 12, "child is RenderBox");
      if (!dart.test(this.renderObject.childToSlot[$keys][$contains](child))) dart.assertFailed(null, L17, 1263, 12, "renderObject.childToSlot.keys.contains(child)");
      this[_updateRenderObject](null, this.renderObject.childToSlot[$_get](child));
      if (!!dart.test(this.renderObject.childToSlot[$keys][$contains](child))) dart.assertFailed(null, L17, 1265, 12, "!renderObject.childToSlot.keys.contains(child)");
      if (!!dart.test(this.renderObject.slotToChild[$keys][$contains](this.slot))) dart.assertFailed(null, L17, 1266, 12, "!renderObject.slotToChild.keys.contains(slot)");
    }
    moveChildRenderObject(child, slotValue) {
      RenderObjectL().as(child);
      if (!false) dart.assertFailed("not reachable", L17, 1271, 12, "false");
    }
  };
  (list_tile._ListTileElement.new = function(widget) {
    this.slotToChild = new (LinkedMapOf_ListTileSlotL$ElementL()).new();
    this.childToSlot = new (LinkedMapOfElementL$_ListTileSlotL()).new();
    list_tile._ListTileElement.__proto__.new.call(this, widget);
    ;
  }).prototype = list_tile._ListTileElement.prototype;
  dart.addTypeTests(list_tile._ListTileElement);
  dart.addTypeCaches(list_tile._ListTileElement);
  dart.setMethodSignature(list_tile._ListTileElement, () => ({
    __proto__: dart.getMethods(list_tile._ListTileElement.__proto__),
    [_mountChild]: dart.fnType(dart.void, [dart.legacy(framework.Widget), dart.legacy(list_tile._ListTileSlot)]),
    [_updateChild]: dart.fnType(dart.void, [dart.legacy(framework.Widget), dart.legacy(list_tile._ListTileSlot)]),
    [_updateRenderObject]: dart.fnType(dart.void, [dart.legacy(box.RenderBox), dart.legacy(list_tile._ListTileSlot)]),
    insertChildRenderObject: dart.fnType(dart.void, [dart.legacy(core.Object), dart.legacy(core.Object)]),
    removeChildRenderObject: dart.fnType(dart.void, [dart.legacy(core.Object)]),
    moveChildRenderObject: dart.fnType(dart.void, [dart.legacy(core.Object), dart.legacy(core.Object)])
  }));
  dart.setGetterSignature(list_tile._ListTileElement, () => ({
    __proto__: dart.getGetters(list_tile._ListTileElement.__proto__),
    widget: dart.legacy(list_tile._ListTile),
    renderObject: dart.legacy(list_tile._RenderListTile)
  }));
  dart.setLibraryUri(list_tile._ListTileElement, L16);
  dart.setFieldSignature(list_tile._ListTileElement, () => ({
    __proto__: dart.getFields(list_tile._ListTileElement.__proto__),
    slotToChild: dart.finalFieldType(dart.legacy(core.Map$(dart.legacy(list_tile._ListTileSlot), dart.legacy(framework.Element)))),
    childToSlot: dart.finalFieldType(dart.legacy(core.Map$(dart.legacy(framework.Element), dart.legacy(list_tile._ListTileSlot))))
  }));
  var _leading = dart.privateName(list_tile, "_leading");
  var _title = dart.privateName(list_tile, "_title");
  var _subtitle = dart.privateName(list_tile, "_subtitle");
  var _trailing = dart.privateName(list_tile, "_trailing");
  var _isDense = dart.privateName(list_tile, "_isDense");
  var _visualDensity = dart.privateName(list_tile, "_visualDensity");
  var _isThreeLine = dart.privateName(list_tile, "_isThreeLine");
  var _textDirection = dart.privateName(list_tile, "_textDirection");
  var _titleBaselineType = dart.privateName(list_tile, "_titleBaselineType");
  var _subtitleBaselineType = dart.privateName(list_tile, "_subtitleBaselineType");
  var _horizontalTitleGap = dart.privateName(list_tile, "_horizontalTitleGap");
  var _children = dart.privateName(list_tile, "_children");
  var _defaultTileHeight = dart.privateName(list_tile, "_defaultTileHeight");
  list_tile._RenderListTile = class _RenderListTile extends box.RenderBox {
    get [_horizontalTitleGap]() {
      return 16.0 + dart.notNull(this.visualDensity.horizontal) * 2.0;
    }
    [_updateChild](oldChild, newChild, slot) {
      if (oldChild != null) {
        this.dropChild(oldChild);
        this.childToSlot[$remove](oldChild);
        this.slotToChild[$remove](slot);
      }
      if (newChild != null) {
        this.childToSlot[$_set](newChild, slot);
        this.slotToChild[$_set](slot, newChild);
        this.adoptChild(newChild);
      }
      return newChild;
    }
    get leading() {
      return this[_leading];
    }
    set leading(value) {
      this[_leading] = this[_updateChild](this[_leading], value, list_tile._ListTileSlot.leading);
    }
    get title() {
      return this[_title];
    }
    set title(value) {
      this[_title] = this[_updateChild](this[_title], value, list_tile._ListTileSlot.title);
    }
    get subtitle() {
      return this[_subtitle];
    }
    set subtitle(value) {
      this[_subtitle] = this[_updateChild](this[_subtitle], value, list_tile._ListTileSlot.subtitle);
    }
    get trailing() {
      return this[_trailing];
    }
    set trailing(value) {
      this[_trailing] = this[_updateChild](this[_trailing], value, list_tile._ListTileSlot.trailing);
    }
    get [_children]() {
      return new (SyncIterableOfRenderBoxL()).new((function* _children() {
        if (this.leading != null) yield this.leading;
        if (this.title != null) yield this.title;
        if (this.subtitle != null) yield this.subtitle;
        if (this.trailing != null) yield this.trailing;
      }).bind(this));
    }
    get isDense() {
      return this[_isDense];
    }
    set isDense(value) {
      if (!(value != null)) dart.assertFailed(null, L17, 1357, 12, "value != null");
      if (dart.equals(this[_isDense], value)) return;
      this[_isDense] = value;
      this.markNeedsLayout();
    }
    get visualDensity() {
      return this[_visualDensity];
    }
    set visualDensity(value) {
      if (!(value != null)) dart.assertFailed(null, L17, 1367, 12, "value != null");
      if (dart.equals(this[_visualDensity], value)) return;
      this[_visualDensity] = value;
      this.markNeedsLayout();
    }
    get isThreeLine() {
      return this[_isThreeLine];
    }
    set isThreeLine(value) {
      if (!(value != null)) dart.assertFailed(null, L17, 1377, 12, "value != null");
      if (dart.equals(this[_isThreeLine], value)) return;
      this[_isThreeLine] = value;
      this.markNeedsLayout();
    }
    get textDirection() {
      return this[_textDirection];
    }
    set textDirection(value) {
      if (!(value != null)) dart.assertFailed(null, L17, 1387, 12, "value != null");
      if (dart.equals(this[_textDirection], value)) return;
      this[_textDirection] = value;
      this.markNeedsLayout();
    }
    get titleBaselineType() {
      return this[_titleBaselineType];
    }
    set titleBaselineType(value) {
      if (!(value != null)) dart.assertFailed(null, L17, 1397, 12, "value != null");
      if (dart.equals(this[_titleBaselineType], value)) return;
      this[_titleBaselineType] = value;
      this.markNeedsLayout();
    }
    get subtitleBaselineType() {
      return this[_subtitleBaselineType];
    }
    set subtitleBaselineType(value) {
      if (dart.equals(this[_subtitleBaselineType], value)) return;
      this[_subtitleBaselineType] = value;
      this.markNeedsLayout();
    }
    attach(owner) {
      PipelineOwnerL().as(owner);
      super.attach(owner);
      for (let child of this[_children])
        child.attach(owner);
    }
    detach() {
      super.detach();
      for (let child of this[_children])
        child.detach();
    }
    redepthChildren() {
      this[_children][$forEach](dart.bind(this, 'redepthChild'));
    }
    visitChildren(visitor) {
      this[_children][$forEach](visitor);
    }
    debugDescribeChildren() {
      let value = JSArrayOfDiagnosticsNodeL().of([]);
      function add(child, name) {
        if (child != null) value[$add](child.toDiagnosticsNode({name: name}));
      }
      dart.fn(add, RenderBoxLAndStringLTovoid());
      add(this.leading, "leading");
      add(this.title, "title");
      add(this.subtitle, "subtitle");
      add(this.trailing, "trailing");
      return value;
    }
    get sizedByParent() {
      return false;
    }
    static _minWidth(box, height) {
      return box == null ? 0.0 : box.getMinIntrinsicWidth(height);
    }
    static _maxWidth(box, height) {
      return box == null ? 0.0 : box.getMaxIntrinsicWidth(height);
    }
    computeMinIntrinsicWidth(height) {
      let leadingWidth = this.leading != null ? math.max(doubleL(), this.leading.getMinIntrinsicWidth(height), 40) + dart.notNull(this[_horizontalTitleGap]) : 0.0;
      return leadingWidth + math.max(numL(), list_tile._RenderListTile._minWidth(this.title, height), list_tile._RenderListTile._minWidth(this.subtitle, height)) + dart.notNull(list_tile._RenderListTile._maxWidth(this.trailing, height));
    }
    computeMaxIntrinsicWidth(height) {
      let leadingWidth = this.leading != null ? math.max(doubleL(), this.leading.getMaxIntrinsicWidth(height), 40) + dart.notNull(this[_horizontalTitleGap]) : 0.0;
      return leadingWidth + math.max(numL(), list_tile._RenderListTile._maxWidth(this.title, height), list_tile._RenderListTile._maxWidth(this.subtitle, height)) + dart.notNull(list_tile._RenderListTile._maxWidth(this.trailing, height));
    }
    get [_defaultTileHeight]() {
      let hasSubtitle = this.subtitle != null;
      let isTwoLine = !dart.test(this.isThreeLine) && hasSubtitle;
      let isOneLine = !dart.test(this.isThreeLine) && !hasSubtitle;
      let baseDensity = this.visualDensity.baseSizeAdjustment;
      if (isOneLine) return (dart.test(this.isDense) ? 48.0 : 56.0) + dart.notNull(baseDensity.dy);
      if (isTwoLine) return (dart.test(this.isDense) ? 64.0 : 72.0) + dart.notNull(baseDensity.dy);
      return (dart.test(this.isDense) ? 76.0 : 88.0) + dart.notNull(baseDensity.dy);
    }
    computeMinIntrinsicHeight(width) {
      let t2, t2$;
      return math.max(doubleL(), this[_defaultTileHeight], dart.notNull(this.title.getMinIntrinsicHeight(width)) + dart.notNull((t2$ = (t2 = this.subtitle, t2 == null ? null : t2.getMinIntrinsicHeight(width)), t2$ == null ? 0.0 : t2$)));
    }
    computeMaxIntrinsicHeight(width) {
      return this.computeMinIntrinsicHeight(width);
    }
    computeDistanceToActualBaseline(baseline) {
      if (!(this.title != null)) dart.assertFailed(null, L17, 1510, 12, "title != null");
      let parentData = BoxParentDataL().as(this.title.parentData);
      return dart.notNull(parentData.offset.dy) + dart.notNull(this.title.getDistanceToActualBaseline(baseline));
    }
    static _boxBaseline(box, baseline) {
      return box.getDistanceToBaseline(baseline);
    }
    static _layoutBox(box, constraints) {
      if (box == null) return ui.Size.zero;
      box.layout(constraints, {parentUsesSize: true});
      return box.size;
    }
    static _positionBox(box, offset) {
      let parentData = BoxParentDataL().as(box.parentData);
      parentData.offset = offset;
    }
    performLayout() {
      let constraints = this.constraints;
      let hasLeading = this.leading != null;
      let hasSubtitle = this.subtitle != null;
      let hasTrailing = this.trailing != null;
      let isTwoLine = !dart.test(this.isThreeLine) && hasSubtitle;
      let isOneLine = !dart.test(this.isThreeLine) && !hasSubtitle;
      let densityAdjustment = this.visualDensity.baseSizeAdjustment;
      let maxIconHeightConstraint = new box.BoxConstraints.new({maxHeight: (dart.test(this.isDense) ? 48.0 : 56.0) + dart.notNull(densityAdjustment.dy)});
      let looseConstraints = constraints.loosen();
      let iconConstraints = looseConstraints.enforce(maxIconHeightConstraint);
      let tileWidth = looseConstraints.maxWidth;
      let leadingSize = list_tile._RenderListTile._layoutBox(this.leading, iconConstraints);
      let trailingSize = list_tile._RenderListTile._layoutBox(this.trailing, iconConstraints);
      if (!(tileWidth != leadingSize.width)) dart.assertFailed("Leading widget consumes entire tile width. Please use a sized widget, " + "or consider replacing ListTile with a custom widget " + "(see https://api.flutter.dev/flutter/material/ListTile-class.html#material.ListTile.4)", L17, 1558, 7, "tileWidth != leadingSize.width");
      if (!(tileWidth != trailingSize.width)) dart.assertFailed("Trailing widget consumes entire tile width. Please use a sized widget, " + "or consider replacing ListTile with a custom widget " + "(see https://api.flutter.dev/flutter/material/ListTile-class.html#material.ListTile.4)", L17, 1564, 7, "tileWidth != trailingSize.width");
      let titleStart = hasLeading ? math.max(doubleL(), 40, leadingSize.width) + dart.notNull(this[_horizontalTitleGap]) : 0.0;
      let adjustedTrailingWidth = hasTrailing ? math.max(doubleL(), dart.notNull(trailingSize.width) + dart.notNull(this[_horizontalTitleGap]), 32.0) : 0.0;
      let textConstraints = looseConstraints.tighten({width: dart.notNull(tileWidth) - titleStart - adjustedTrailingWidth});
      let titleSize = list_tile._RenderListTile._layoutBox(this.title, textConstraints);
      let subtitleSize = list_tile._RenderListTile._layoutBox(this.subtitle, textConstraints);
      let titleBaseline = null;
      let subtitleBaseline = null;
      if (isTwoLine) {
        titleBaseline = dart.test(this.isDense) ? 28.0 : 32.0;
        subtitleBaseline = dart.test(this.isDense) ? 48.0 : 52.0;
      } else if (dart.test(this.isThreeLine)) {
        titleBaseline = dart.test(this.isDense) ? 22.0 : 28.0;
        subtitleBaseline = dart.test(this.isDense) ? 42.0 : 48.0;
      } else {
        if (!isOneLine) dart.assertFailed(null, L17, 1591, 14, "isOneLine");
      }
      let defaultTileHeight = this[_defaultTileHeight];
      let tileHeight = null;
      let titleY = null;
      let subtitleY = null;
      if (!hasSubtitle) {
        tileHeight = math.max(doubleL(), defaultTileHeight, dart.notNull(titleSize.height) + 2.0 * 4);
        titleY = (dart.notNull(tileHeight) - dart.notNull(titleSize.height)) / 2.0;
      } else {
        if (!(this.subtitleBaselineType != null)) dart.assertFailed(null, L17, 1603, 14, "subtitleBaselineType != null");
        titleY = dart.notNull(titleBaseline) - dart.notNull(list_tile._RenderListTile._boxBaseline(this.title, this.titleBaselineType));
        subtitleY = dart.notNull(subtitleBaseline) - dart.notNull(list_tile._RenderListTile._boxBaseline(this.subtitle, this.subtitleBaselineType)) + dart.notNull(this.visualDensity.vertical) * 2.0;
        tileHeight = defaultTileHeight;
        let titleOverlap = dart.notNull(titleY) + dart.notNull(titleSize.height) - dart.notNull(subtitleY);
        if (titleOverlap > 0.0) {
          titleY = dart.notNull(titleY) - titleOverlap / 2.0;
          subtitleY = dart.notNull(subtitleY) + titleOverlap / 2.0;
        }
        if (dart.notNull(titleY) < 4 || dart.notNull(subtitleY) + dart.notNull(subtitleSize.height) + 4 > dart.notNull(tileHeight)) {
          tileHeight = dart.notNull(titleSize.height) + dart.notNull(subtitleSize.height) + 2.0 * 4;
          titleY = 4;
          subtitleY = dart.notNull(titleSize.height) + 4;
        }
      }
      let leadingY = null;
      let trailingY = null;
      if (dart.notNull(tileHeight) > 72.0) {
        leadingY = 16.0;
        trailingY = 16.0;
      } else {
        leadingY = math.min(doubleL(), (dart.notNull(tileHeight) - dart.notNull(leadingSize.height)) / 2.0, 16.0);
        trailingY = (dart.notNull(tileHeight) - dart.notNull(trailingSize.height)) / 2.0;
      }
      switch (this.textDirection) {
        case C237 || CT.C237:
        {
          {
            if (hasLeading) list_tile._RenderListTile._positionBox(this.leading, new ui.Offset.new(dart.notNull(tileWidth) - dart.notNull(leadingSize.width), leadingY));
            list_tile._RenderListTile._positionBox(this.title, new ui.Offset.new(adjustedTrailingWidth, titleY));
            if (hasSubtitle) list_tile._RenderListTile._positionBox(this.subtitle, new ui.Offset.new(adjustedTrailingWidth, subtitleY));
            if (hasTrailing) list_tile._RenderListTile._positionBox(this.trailing, new ui.Offset.new(0.0, trailingY));
            break;
          }
        }
        case C238 || CT.C238:
        {
          {
            if (hasLeading) list_tile._RenderListTile._positionBox(this.leading, new ui.Offset.new(0.0, leadingY));
            list_tile._RenderListTile._positionBox(this.title, new ui.Offset.new(titleStart, titleY));
            if (hasSubtitle) list_tile._RenderListTile._positionBox(this.subtitle, new ui.Offset.new(titleStart, subtitleY));
            if (hasTrailing) list_tile._RenderListTile._positionBox(this.trailing, new ui.Offset.new(dart.notNull(tileWidth) - dart.notNull(trailingSize.width), trailingY));
            break;
          }
        }
      }
      this.size = constraints.constrain(new ui.Size.new(tileWidth, tileHeight));
      if (!(this.size.width == constraints.constrainWidth(tileWidth))) dart.assertFailed(null, L17, 1671, 12, "size.width == constraints.constrainWidth(tileWidth)");
      if (!(this.size.height == constraints.constrainHeight(tileHeight))) dart.assertFailed(null, L17, 1672, 12, "size.height == constraints.constrainHeight(tileHeight)");
    }
    paint(context, offset) {
      function doPaint(child) {
        if (child != null) {
          let parentData = BoxParentDataL().as(child.parentData);
          context.paintChild(child, parentData.offset['+'](offset));
        }
      }
      dart.fn(doPaint, RenderBoxLTovoid());
      doPaint(this.leading);
      doPaint(this.title);
      doPaint(this.subtitle);
      doPaint(this.trailing);
    }
    hitTestSelf(position) {
      return true;
    }
    hitTestChildren(result, opts) {
      let position = opts && 'position' in opts ? opts.position : null;
      if (!(position != null)) dart.assertFailed(null, L17, 1694, 12, "position != null");
      for (let child of this[_children]) {
        let parentData = BoxParentDataL().as(child.parentData);
        let isHit = result.addWithPaintOffset({offset: parentData.offset, position: position, hitTest: dart.fn((result, transformed) => {
            if (!dart.equals(transformed, position['-'](parentData.offset))) dart.assertFailed(null, L17, 1701, 18, "transformed == position - parentData.offset");
            return child.hitTest(result, {position: transformed});
          }, BoxHitTestResultLAndOffsetLToboolL())});
        if (dart.test(isHit)) return true;
      }
      return false;
    }
  };
  (list_tile._RenderListTile.new = function(opts) {
    let isDense = opts && 'isDense' in opts ? opts.isDense : null;
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    let isThreeLine = opts && 'isThreeLine' in opts ? opts.isThreeLine : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let titleBaselineType = opts && 'titleBaselineType' in opts ? opts.titleBaselineType : null;
    let subtitleBaselineType = opts && 'subtitleBaselineType' in opts ? opts.subtitleBaselineType : null;
    this.slotToChild = new (LinkedMapOf_ListTileSlotL$RenderBoxL()).new();
    this.childToSlot = new (LinkedMapOfRenderBoxL$_ListTileSlotL()).new();
    this[_leading] = null;
    this[_title] = null;
    this[_subtitle] = null;
    this[_trailing] = null;
    if (!(isDense != null)) dart.assertFailed(null, L17, 1283, 15, "isDense != null");
    if (!(visualDensity != null)) dart.assertFailed(null, L17, 1284, 15, "visualDensity != null");
    if (!(isThreeLine != null)) dart.assertFailed(null, L17, 1285, 15, "isThreeLine != null");
    if (!(textDirection != null)) dart.assertFailed(null, L17, 1286, 15, "textDirection != null");
    if (!(titleBaselineType != null)) dart.assertFailed(null, L17, 1287, 15, "titleBaselineType != null");
    this[_isDense] = isDense;
    this[_visualDensity] = visualDensity;
    this[_isThreeLine] = isThreeLine;
    this[_textDirection] = textDirection;
    this[_titleBaselineType] = titleBaselineType;
    this[_subtitleBaselineType] = subtitleBaselineType;
    list_tile._RenderListTile.__proto__.new.call(this);
    ;
  }).prototype = list_tile._RenderListTile.prototype;
  dart.addTypeTests(list_tile._RenderListTile);
  dart.addTypeCaches(list_tile._RenderListTile);
  dart.setMethodSignature(list_tile._RenderListTile, () => ({
    __proto__: dart.getMethods(list_tile._RenderListTile.__proto__),
    [_updateChild]: dart.fnType(dart.legacy(box.RenderBox), [dart.legacy(box.RenderBox), dart.legacy(box.RenderBox), dart.legacy(list_tile._ListTileSlot)])
  }));
  dart.setGetterSignature(list_tile._RenderListTile, () => ({
    __proto__: dart.getGetters(list_tile._RenderListTile.__proto__),
    [_horizontalTitleGap]: dart.legacy(core.double),
    leading: dart.legacy(box.RenderBox),
    title: dart.legacy(box.RenderBox),
    subtitle: dart.legacy(box.RenderBox),
    trailing: dart.legacy(box.RenderBox),
    [_children]: dart.legacy(core.Iterable$(dart.legacy(box.RenderBox))),
    isDense: dart.legacy(core.bool),
    visualDensity: dart.legacy(theme_data.VisualDensity),
    isThreeLine: dart.legacy(core.bool),
    textDirection: dart.legacy(ui.TextDirection),
    titleBaselineType: dart.legacy(ui.TextBaseline),
    subtitleBaselineType: dart.legacy(ui.TextBaseline),
    [_defaultTileHeight]: dart.legacy(core.double)
  }));
  dart.setSetterSignature(list_tile._RenderListTile, () => ({
    __proto__: dart.getSetters(list_tile._RenderListTile.__proto__),
    leading: dart.legacy(box.RenderBox),
    title: dart.legacy(box.RenderBox),
    subtitle: dart.legacy(box.RenderBox),
    trailing: dart.legacy(box.RenderBox),
    isDense: dart.legacy(core.bool),
    visualDensity: dart.legacy(theme_data.VisualDensity),
    isThreeLine: dart.legacy(core.bool),
    textDirection: dart.legacy(ui.TextDirection),
    titleBaselineType: dart.legacy(ui.TextBaseline),
    subtitleBaselineType: dart.legacy(ui.TextBaseline)
  }));
  dart.setLibraryUri(list_tile._RenderListTile, L16);
  dart.setFieldSignature(list_tile._RenderListTile, () => ({
    __proto__: dart.getFields(list_tile._RenderListTile.__proto__),
    slotToChild: dart.finalFieldType(dart.legacy(core.Map$(dart.legacy(list_tile._ListTileSlot), dart.legacy(box.RenderBox)))),
    childToSlot: dart.finalFieldType(dart.legacy(core.Map$(dart.legacy(box.RenderBox), dart.legacy(list_tile._ListTileSlot)))),
    [_leading]: dart.fieldType(dart.legacy(box.RenderBox)),
    [_title]: dart.fieldType(dart.legacy(box.RenderBox)),
    [_subtitle]: dart.fieldType(dart.legacy(box.RenderBox)),
    [_trailing]: dart.fieldType(dart.legacy(box.RenderBox)),
    [_isDense]: dart.fieldType(dart.legacy(core.bool)),
    [_visualDensity]: dart.fieldType(dart.legacy(theme_data.VisualDensity)),
    [_isThreeLine]: dart.fieldType(dart.legacy(core.bool)),
    [_textDirection]: dart.fieldType(dart.legacy(ui.TextDirection)),
    [_titleBaselineType]: dart.fieldType(dart.legacy(ui.TextBaseline)),
    [_subtitleBaselineType]: dart.fieldType(dart.legacy(ui.TextBaseline))
  }));
  dart.defineLazy(list_tile._RenderListTile, {
    /*list_tile._RenderListTile._minLeadingWidth*/get _minLeadingWidth() {
      return 40;
    },
    /*list_tile._RenderListTile._minVerticalPadding*/get _minVerticalPadding() {
      return 4;
    }
  }, true);
  var _name$6 = dart.privateName(drawer, "_name");
  var C569;
  var C570;
  var C571;
  drawer.DrawerAlignment = class DrawerAlignment extends core.Object {
    toString() {
      return this[_name$6];
    }
  };
  (drawer.DrawerAlignment.new = function(index, _name) {
    this.index = index;
    this[_name$6] = _name;
    ;
  }).prototype = drawer.DrawerAlignment.prototype;
  dart.addTypeTests(drawer.DrawerAlignment);
  dart.addTypeCaches(drawer.DrawerAlignment);
  dart.setMethodSignature(drawer.DrawerAlignment, () => ({
    __proto__: dart.getMethods(drawer.DrawerAlignment.__proto__),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setLibraryUri(drawer.DrawerAlignment, L18);
  dart.setFieldSignature(drawer.DrawerAlignment, () => ({
    __proto__: dart.getFields(drawer.DrawerAlignment.__proto__),
    index: dart.finalFieldType(dart.legacy(core.int)),
    [_name$6]: dart.finalFieldType(dart.legacy(core.String))
  }));
  dart.defineExtensionMethods(drawer.DrawerAlignment, ['toString']);
  drawer.DrawerAlignment.start = C569 || CT.C569;
  drawer.DrawerAlignment.end = C570 || CT.C570;
  drawer.DrawerAlignment.values = C571 || CT.C571;
  var C572;
  var C575;
  var C576;
  var C574;
  var C573;
  var C579;
  var C580;
  var C578;
  var C577;
  var C583;
  var C584;
  var C585;
  var C586;
  var C587;
  var C582;
  var C581;
  var elevation$1 = dart.privateName(drawer, "Drawer.elevation");
  var child$1 = dart.privateName(drawer, "Drawer.child");
  var semanticLabel$ = dart.privateName(drawer, "Drawer.semanticLabel");
  drawer.Drawer = class Drawer extends framework.StatelessWidget {
    get elevation() {
      return this[elevation$1];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get child() {
      return this[child$1];
    }
    set child(value) {
      super.child = value;
    }
    get semanticLabel() {
      return this[semanticLabel$];
    }
    set semanticLabel(value) {
      super.semanticLabel = value;
    }
    build(context) {
      let t3, t2;
      if (!dart.test(debug$0.debugCheckHasMaterialLocalizations(context))) dart.assertFailed(null, L19, 180, 12, "debugCheckHasMaterialLocalizations(context)");
      let label = this.semanticLabel;
      switch (theme$.Theme.of(context).platform) {
        case C48 || CT.C48:
        case C49 || CT.C49:
        {
          label = this.semanticLabel;
          break;
        }
        case C44 || CT.C44:
        case C45 || CT.C45:
        case C46 || CT.C46:
        case C47 || CT.C47:
        {
          label = (t2 = this.semanticLabel, t2 == null ? (t3 = material_localizations.MaterialLocalizations.of(context), t3 == null ? null : t3.drawerLabel) : t2);
        }
      }
      return new basic.Semantics.new({scopesRoute: true, namesRoute: true, explicitChildNodes: true, label: label, child: new basic.ConstrainedBox.new({constraints: C572 || CT.C572, child: new material.Material.new({elevation: this.elevation, child: this.child, $creationLocationd_0dea112b090073317d4: C573 || CT.C573}), $creationLocationd_0dea112b090073317d4: C577 || CT.C577}), $creationLocationd_0dea112b090073317d4: C581 || CT.C581});
    }
  };
  (drawer.Drawer.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : 16;
    let child = opts && 'child' in opts ? opts.child : null;
    let semanticLabel = opts && 'semanticLabel' in opts ? opts.semanticLabel : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[elevation$1] = elevation;
    this[child$1] = child;
    this[semanticLabel$] = semanticLabel;
    if (!(elevation != null && dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, L19, 148, 15, "elevation != null && elevation >= 0.0");
    drawer.Drawer.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = drawer.Drawer.prototype;
  dart.addTypeTests(drawer.Drawer);
  dart.addTypeCaches(drawer.Drawer);
  dart.setMethodSignature(drawer.Drawer, () => ({
    __proto__: dart.getMethods(drawer.Drawer.__proto__),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(drawer.Drawer, L18);
  dart.setFieldSignature(drawer.Drawer, () => ({
    __proto__: dart.getFields(drawer.Drawer.__proto__),
    elevation: dart.finalFieldType(dart.legacy(core.double)),
    child: dart.finalFieldType(dart.legacy(framework.Widget)),
    semanticLabel: dart.finalFieldType(dart.legacy(core.String))
  }));
  var _name$7 = dart.privateName(recognizer, "_name");
  var C588;
  var child$2 = dart.privateName(drawer, "DrawerController.child");
  var alignment$0 = dart.privateName(drawer, "DrawerController.alignment");
  var drawerCallback$ = dart.privateName(drawer, "DrawerController.drawerCallback");
  var dragStartBehavior$ = dart.privateName(drawer, "DrawerController.dragStartBehavior");
  var scrimColor$ = dart.privateName(drawer, "DrawerController.scrimColor");
  var enableOpenDragGesture$ = dart.privateName(drawer, "DrawerController.enableOpenDragGesture");
  var edgeDragWidth$ = dart.privateName(drawer, "DrawerController.edgeDragWidth");
  drawer.DrawerController = class DrawerController extends framework.StatefulWidget {
    get child() {
      return this[child$2];
    }
    set child(value) {
      super.child = value;
    }
    get alignment() {
      return this[alignment$0];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get drawerCallback() {
      return this[drawerCallback$];
    }
    set drawerCallback(value) {
      super.drawerCallback = value;
    }
    get dragStartBehavior() {
      return this[dragStartBehavior$];
    }
    set dragStartBehavior(value) {
      super.dragStartBehavior = value;
    }
    get scrimColor() {
      return this[scrimColor$];
    }
    set scrimColor(value) {
      super.scrimColor = value;
    }
    get enableOpenDragGesture() {
      return this[enableOpenDragGesture$];
    }
    set enableOpenDragGesture(value) {
      super.enableOpenDragGesture = value;
    }
    get edgeDragWidth() {
      return this[edgeDragWidth$];
    }
    set edgeDragWidth(value) {
      super.edgeDragWidth = value;
    }
    createState() {
      return new drawer.DrawerControllerState.new();
    }
  };
  (drawer.DrawerController.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : null;
    let drawerCallback = opts && 'drawerCallback' in opts ? opts.drawerCallback : null;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C588 || CT.C588;
    let scrimColor = opts && 'scrimColor' in opts ? opts.scrimColor : null;
    let edgeDragWidth = opts && 'edgeDragWidth' in opts ? opts.edgeDragWidth : null;
    let enableOpenDragGesture = opts && 'enableOpenDragGesture' in opts ? opts.enableOpenDragGesture : true;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$2] = child;
    this[alignment$0] = alignment;
    this[drawerCallback$] = drawerCallback;
    this[dragStartBehavior$] = dragStartBehavior;
    this[scrimColor$] = scrimColor;
    this[edgeDragWidth$] = edgeDragWidth;
    this[enableOpenDragGesture$] = enableOpenDragGesture;
    if (!(child != null)) dart.assertFailed(null, L19, 242, 15, "child != null");
    if (!(dragStartBehavior != null)) dart.assertFailed(null, L19, 243, 15, "dragStartBehavior != null");
    if (!(alignment != null)) dart.assertFailed(null, L19, 244, 15, "alignment != null");
    drawer.DrawerController.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = drawer.DrawerController.prototype;
  dart.addTypeTests(drawer.DrawerController);
  dart.addTypeCaches(drawer.DrawerController);
  dart.setMethodSignature(drawer.DrawerController, () => ({
    __proto__: dart.getMethods(drawer.DrawerController.__proto__),
    createState: dart.fnType(dart.legacy(drawer.DrawerControllerState), [])
  }));
  dart.setLibraryUri(drawer.DrawerController, L18);
  dart.setFieldSignature(drawer.DrawerController, () => ({
    __proto__: dart.getFields(drawer.DrawerController.__proto__),
    child: dart.finalFieldType(dart.legacy(framework.Widget)),
    alignment: dart.finalFieldType(dart.legacy(drawer.DrawerAlignment)),
    drawerCallback: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, [dart.legacy(core.bool)]))),
    dragStartBehavior: dart.finalFieldType(dart.legacy(recognizer.DragStartBehavior)),
    scrimColor: dart.finalFieldType(dart.legacy(ui.Color)),
    enableOpenDragGesture: dart.finalFieldType(dart.legacy(core.bool)),
    edgeDragWidth: dart.finalFieldType(dart.legacy(core.double))
  }));
  var _historyEntry = dart.privateName(drawer, "_historyEntry");
  var _focusScopeNode = dart.privateName(drawer, "_focusScopeNode");
  var _controller$ = dart.privateName(drawer, "_controller");
  var _drawerKey = dart.privateName(drawer, "_drawerKey");
  var _previouslyOpened = dart.privateName(drawer, "_previouslyOpened");
  var _scrimColorTween = dart.privateName(drawer, "_scrimColorTween");
  var _gestureDetectorKey = dart.privateName(drawer, "_gestureDetectorKey");
  var _buildScrimColorTween = dart.privateName(drawer, "_buildScrimColorTween");
  var _animationChanged = dart.privateName(drawer, "_animationChanged");
  var _animationStatusChanged = dart.privateName(drawer, "_animationStatusChanged");
  var _handleHistoryEntryRemoved = dart.privateName(drawer, "_handleHistoryEntryRemoved");
  var _ensureHistoryEntry = dart.privateName(drawer, "_ensureHistoryEntry");
  var _handleDragDown = dart.privateName(drawer, "_handleDragDown");
  var _handleDragCancel = dart.privateName(drawer, "_handleDragCancel");
  var _width = dart.privateName(drawer, "_width");
  var _move = dart.privateName(drawer, "_move");
  var _settle = dart.privateName(drawer, "_settle");
  var _drawerOuterAlignment = dart.privateName(drawer, "_drawerOuterAlignment");
  var _drawerInnerAlignment = dart.privateName(drawer, "_drawerInnerAlignment");
  var C591;
  var C590;
  var C589;
  var C594;
  var C595;
  var C596;
  var C597;
  var C598;
  var C599;
  var C600;
  var C593;
  var C592;
  var C603;
  var C604;
  var C602;
  var C601;
  var C606;
  var C605;
  var C609;
  var C608;
  var C607;
  var C612;
  var C613;
  var C611;
  var C610;
  var C616;
  var C617;
  var C615;
  var C614;
  var C620;
  var C621;
  var C619;
  var C618;
  var C624;
  var C625;
  var C623;
  var C622;
  var C628;
  var C627;
  var C626;
  var C631;
  var C632;
  var C633;
  var C630;
  var C629;
  var C636;
  var C635;
  var C634;
  var C639;
  var C640;
  var C641;
  var C638;
  var C637;
  var C644;
  var C645;
  var C643;
  var C642;
  var C648;
  var C647;
  var C646;
  var C651;
  var C650;
  var C649;
  var C654;
  var C655;
  var C656;
  var C657;
  var C658;
  var C659;
  var C660;
  var C661;
  var C653;
  var C652;
  var _buildDrawer = dart.privateName(drawer, "_buildDrawer");
  var C664;
  var C665;
  var C663;
  var C662;
  const State_SingleTickerProviderStateMixin$36$ = class State_SingleTickerProviderStateMixin extends framework.State$(dart.legacy(drawer.DrawerController)) {};
  (State_SingleTickerProviderStateMixin$36$.new = function() {
    ticker_provider.SingleTickerProviderStateMixin$(dart.legacy(drawer.DrawerController))[dart.mixinNew].call(this);
    State_SingleTickerProviderStateMixin$36$.__proto__.new.call(this);
  }).prototype = State_SingleTickerProviderStateMixin$36$.prototype;
  dart.applyMixin(State_SingleTickerProviderStateMixin$36$, ticker_provider.SingleTickerProviderStateMixin$(dart.legacy(drawer.DrawerController)));
  drawer.DrawerControllerState = class DrawerControllerState extends State_SingleTickerProviderStateMixin$36$ {
    initState() {
      let t2;
      super.initState();
      this[_scrimColorTween] = this[_buildScrimColorTween]();
      this[_controller$] = (t2 = new animation_controller.AnimationController.new({duration: drawer._kBaseSettleDuration, vsync: this}), (() => {
        t2.addListener(dart.bind(this, _animationChanged));
        t2.addStatusListener(dart.bind(this, _animationStatusChanged));
        return t2;
      })());
    }
    dispose() {
      let t2;
      t2 = this[_historyEntry];
      t2 == null ? null : t2.remove();
      this[_controller$].dispose();
      super.dispose();
    }
    didUpdateWidget(oldWidget) {
      DrawerControllerL().as(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.scrimColor, oldWidget.scrimColor)) this[_scrimColorTween] = this[_buildScrimColorTween]();
    }
    [_animationChanged]() {
      this.setState(dart.fn(() => {
      }, VoidToNullN()));
    }
    [_ensureHistoryEntry]() {
      if (this[_historyEntry] == null) {
        let route = routes.ModalRoute.of(ObjectL(), this.context);
        if (route != null) {
          this[_historyEntry] = new routes.LocalHistoryEntry.new({onRemove: dart.bind(this, _handleHistoryEntryRemoved)});
          route.addLocalHistoryEntry(this[_historyEntry]);
          focus_scope.FocusScope.of(this.context).setFirstFocus(this[_focusScopeNode]);
        }
      }
    }
    [_animationStatusChanged](status) {
      let t2;
      switch (status) {
        case C120 || CT.C120:
        {
          this[_ensureHistoryEntry]();
          break;
        }
        case C121 || CT.C121:
        {
          t2 = this[_historyEntry];
          t2 == null ? null : t2.remove();
          this[_historyEntry] = null;
          break;
        }
        case C119 || CT.C119:
        {
          break;
        }
        case C122 || CT.C122:
        {
          break;
        }
      }
    }
    [_handleHistoryEntryRemoved]() {
      this[_historyEntry] = null;
      this.close();
    }
    [_handleDragDown](details) {
      this[_controller$].stop();
      this[_ensureHistoryEntry]();
    }
    [_handleDragCancel]() {
      if (dart.test(this[_controller$].isDismissed) || dart.test(this[_controller$].isAnimating)) return;
      if (dart.notNull(this[_controller$].value) < 0.5) {
        this.close();
      } else {
        this.open();
      }
    }
    get [_width]() {
      let t2;
      let box = RenderBoxL().as((t2 = this[_drawerKey].currentContext, t2 == null ? null : t2.findRenderObject()));
      if (box != null) return box.size.width;
      return 304;
    }
    [_move](details) {
      let t2, t2$, t3, t2$0;
      let delta = dart.notNull(details.primaryDelta) / dart.notNull(this[_width]);
      switch (this.widget.alignment) {
        case C569 || CT.C569:
        {
          break;
        }
        case C570 || CT.C570:
        {
          delta = -delta;
          break;
        }
      }
      switch (basic.Directionality.of(this.context)) {
        case C237 || CT.C237:
        {
          t2 = this[_controller$];
          t2.value = dart.notNull(t2.value) - delta;
          break;
        }
        case C238 || CT.C238:
        {
          t2$ = this[_controller$];
          t2$.value = dart.notNull(t2$.value) + delta;
          break;
        }
      }
      let opened = dart.notNull(this[_controller$].value) > 0.5;
      if (!opened[$_equals](this[_previouslyOpened]) && this.widget.drawerCallback != null) {
        t2$0 = this.widget;
        t3 = opened;
        t2$0.drawerCallback(t3);
      }
      this[_previouslyOpened] = opened;
    }
    [_settle](details) {
      let t3, t2, t3$, t2$;
      if (dart.test(this[_controller$].isDismissed)) return;
      if (details.velocity.pixelsPerSecond.dx[$abs]() >= 365) {
        let visualVelocity = dart.notNull(details.velocity.pixelsPerSecond.dx) / dart.notNull(this[_width]);
        switch (this.widget.alignment) {
          case C569 || CT.C569:
          {
            break;
          }
          case C570 || CT.C570:
          {
            visualVelocity = -visualVelocity;
            break;
          }
        }
        switch (basic.Directionality.of(this.context)) {
          case C237 || CT.C237:
          {
            this[_controller$].fling({velocity: -visualVelocity});
            if (this.widget.drawerCallback != null) {
              t2 = this.widget;
              t3 = visualVelocity < 0.0;
              t2.drawerCallback(t3);
            }
            break;
          }
          case C238 || CT.C238:
          {
            this[_controller$].fling({velocity: visualVelocity});
            if (this.widget.drawerCallback != null) {
              t2$ = this.widget;
              t3$ = visualVelocity > 0.0;
              t2$.drawerCallback(t3$);
            }
            break;
          }
        }
      } else if (dart.notNull(this[_controller$].value) < 0.5) {
        this.close();
      } else {
        this.open();
      }
    }
    open() {
      let t3, t2;
      this[_controller$].fling({velocity: 1.0});
      if (this.widget.drawerCallback != null) {
        t2 = this.widget;
        t3 = true;
        t2.drawerCallback(t3);
      }
    }
    close() {
      let t3, t2;
      this[_controller$].fling({velocity: -1.0});
      if (this.widget.drawerCallback != null) {
        t2 = this.widget;
        t3 = false;
        t2.drawerCallback(t3);
      }
    }
    [_buildScrimColorTween]() {
      let t2;
      return new tween.ColorTween.new({begin: colors$.Colors.transparent, end: (t2 = this.widget.scrimColor, t2 == null ? colors$.Colors.black54 : t2)});
    }
    get [_drawerOuterAlignment]() {
      if (!(this.widget.alignment != null)) dart.assertFailed(null, L19, 483, 12, "widget.alignment != null");
      switch (this.widget.alignment) {
        case C569 || CT.C569:
        {
          return alignment.AlignmentDirectional.centerStart;
        }
        case C570 || CT.C570:
        {
          return alignment.AlignmentDirectional.centerEnd;
        }
      }
      return null;
    }
    get [_drawerInnerAlignment]() {
      if (!(this.widget.alignment != null)) dart.assertFailed(null, L19, 494, 12, "widget.alignment != null");
      switch (this.widget.alignment) {
        case C569 || CT.C569:
        {
          return alignment.AlignmentDirectional.centerEnd;
        }
        case C570 || CT.C570:
        {
          return alignment.AlignmentDirectional.centerStart;
        }
      }
      return null;
    }
    [_buildDrawer](context) {
      let t2;
      let drawerIsStart = this.widget.alignment == drawer.DrawerAlignment.start;
      let padding = media_query.MediaQuery.of(context).padding;
      let textDirection = basic.Directionality.of(context);
      let dragAreaWidth = this.widget.edgeDragWidth;
      if (this.widget.edgeDragWidth == null) {
        switch (textDirection) {
          case C238 || CT.C238:
          {
            dragAreaWidth = 20 + dart.notNull(drawerIsStart ? padding.left : padding.right);
            break;
          }
          case C237 || CT.C237:
          {
            dragAreaWidth = 20 + dart.notNull(drawerIsStart ? padding.right : padding.left);
            break;
          }
        }
      }
      if (this[_controller$].status == animation.AnimationStatus.dismissed) {
        if (dart.test(this.widget.enableOpenDragGesture)) {
          return new basic.Align.new({alignment: this[_drawerOuterAlignment], child: new gesture_detector.GestureDetector.new({key: this[_gestureDetectorKey], onHorizontalDragUpdate: dart.bind(this, _move), onHorizontalDragEnd: dart.bind(this, _settle), behavior: proxy_box.HitTestBehavior.translucent, excludeFromSemantics: true, dragStartBehavior: this.widget.dragStartBehavior, child: new container.Container.new({width: dragAreaWidth, $creationLocationd_0dea112b090073317d4: C589 || CT.C589}), $creationLocationd_0dea112b090073317d4: C592 || CT.C592}), $creationLocationd_0dea112b090073317d4: C601 || CT.C601});
        } else {
          return C605 || CT.C605;
        }
      } else {
        let platformHasBackButton = null;
        switch (theme$.Theme.of(context).platform) {
          case C44 || CT.C44:
          {
            platformHasBackButton = true;
            break;
          }
          case C48 || CT.C48:
          case C49 || CT.C49:
          case C45 || CT.C45:
          case C46 || CT.C46:
          case C47 || CT.C47:
          {
            platformHasBackButton = false;
            break;
          }
        }
        if (!(platformHasBackButton != null)) dart.assertFailed(null, L19, 554, 14, "platformHasBackButton != null");
        return new gesture_detector.GestureDetector.new({key: this[_gestureDetectorKey], onHorizontalDragDown: dart.bind(this, _handleDragDown), onHorizontalDragUpdate: dart.bind(this, _move), onHorizontalDragEnd: dart.bind(this, _settle), onHorizontalDragCancel: dart.bind(this, _handleDragCancel), excludeFromSemantics: true, dragStartBehavior: this.widget.dragStartBehavior, child: new basic.RepaintBoundary.new({child: new basic.Stack.new({children: JSArrayOfWidgetL().of([new basic.BlockSemantics.new({child: new basic.ExcludeSemantics.new({excluding: platformHasBackButton, child: new gesture_detector.GestureDetector.new({onTap: dart.bind(this, 'close'), child: new basic.Semantics.new({label: (t2 = material_localizations.MaterialLocalizations.of(context), t2 == null ? null : t2.modalBarrierDismissLabel), child: new basic.MouseRegion.new({opaque: true, child: new container.Container.new({color: this[_scrimColorTween].evaluate(this[_controller$]), $creationLocationd_0dea112b090073317d4: C607 || CT.C607}), $creationLocationd_0dea112b090073317d4: C610 || CT.C610}), $creationLocationd_0dea112b090073317d4: C614 || CT.C614}), $creationLocationd_0dea112b090073317d4: C618 || CT.C618}), $creationLocationd_0dea112b090073317d4: C622 || CT.C622}), $creationLocationd_0dea112b090073317d4: C626 || CT.C626}), new basic.Align.new({alignment: this[_drawerOuterAlignment], child: new basic.Align.new({alignment: this[_drawerInnerAlignment], widthFactor: this[_controller$].value, child: new basic.RepaintBoundary.new({child: new focus_scope.FocusScope.new({key: this[_drawerKey], node: this[_focusScopeNode], child: this.widget.child, $creationLocationd_0dea112b090073317d4: C629 || CT.C629}), $creationLocationd_0dea112b090073317d4: C634 || CT.C634}), $creationLocationd_0dea112b090073317d4: C637 || CT.C637}), $creationLocationd_0dea112b090073317d4: C642 || CT.C642})]), $creationLocationd_0dea112b090073317d4: C646 || CT.C646}), $creationLocationd_0dea112b090073317d4: C649 || CT.C649}), $creationLocationd_0dea112b090073317d4: C652 || CT.C652});
      }
    }
    build(context) {
      if (!dart.test(debug$0.debugCheckHasMaterialLocalizations(context))) dart.assertFailed(null, L19, 606, 12, "debugCheckHasMaterialLocalizations(context)");
      return new list_tile.ListTileTheme.new({style: list_tile.ListTileStyle.drawer, child: this[_buildDrawer](context), $creationLocationd_0dea112b090073317d4: C662 || CT.C662});
    }
  };
  (drawer.DrawerControllerState.new = function() {
    this[_historyEntry] = null;
    this[_focusScopeNode] = new focus_manager.FocusScopeNode.new();
    this[_controller$] = null;
    this[_drawerKey] = GlobalKeyOfStateLOfStatefulWidgetL().new();
    this[_previouslyOpened] = false;
    this[_scrimColorTween] = null;
    this[_gestureDetectorKey] = GlobalKeyOfStateLOfStatefulWidgetL().new();
    drawer.DrawerControllerState.__proto__.new.call(this);
    ;
  }).prototype = drawer.DrawerControllerState.prototype;
  dart.addTypeTests(drawer.DrawerControllerState);
  dart.addTypeCaches(drawer.DrawerControllerState);
  dart.setMethodSignature(drawer.DrawerControllerState, () => ({
    __proto__: dart.getMethods(drawer.DrawerControllerState.__proto__),
    [_animationChanged]: dart.fnType(dart.void, []),
    [_ensureHistoryEntry]: dart.fnType(dart.void, []),
    [_animationStatusChanged]: dart.fnType(dart.void, [dart.legacy(animation.AnimationStatus)]),
    [_handleHistoryEntryRemoved]: dart.fnType(dart.void, []),
    [_handleDragDown]: dart.fnType(dart.void, [dart.legacy(drag_details.DragDownDetails)]),
    [_handleDragCancel]: dart.fnType(dart.void, []),
    [_move]: dart.fnType(dart.void, [dart.legacy(drag_details.DragUpdateDetails)]),
    [_settle]: dart.fnType(dart.void, [dart.legacy(drag_details.DragEndDetails)]),
    open: dart.fnType(dart.void, []),
    close: dart.fnType(dart.void, []),
    [_buildScrimColorTween]: dart.fnType(dart.legacy(tween.ColorTween), []),
    [_buildDrawer]: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)]),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setGetterSignature(drawer.DrawerControllerState, () => ({
    __proto__: dart.getGetters(drawer.DrawerControllerState.__proto__),
    [_width]: dart.legacy(core.double),
    [_drawerOuterAlignment]: dart.legacy(alignment.AlignmentDirectional),
    [_drawerInnerAlignment]: dart.legacy(alignment.AlignmentDirectional)
  }));
  dart.setLibraryUri(drawer.DrawerControllerState, L18);
  dart.setFieldSignature(drawer.DrawerControllerState, () => ({
    __proto__: dart.getFields(drawer.DrawerControllerState.__proto__),
    [_historyEntry]: dart.fieldType(dart.legacy(routes.LocalHistoryEntry)),
    [_focusScopeNode]: dart.finalFieldType(dart.legacy(focus_manager.FocusScopeNode)),
    [_controller$]: dart.fieldType(dart.legacy(animation_controller.AnimationController)),
    [_drawerKey]: dart.finalFieldType(dart.legacy(framework.GlobalKey$(dart.legacy(framework.State$(dart.legacy(framework.StatefulWidget)))))),
    [_previouslyOpened]: dart.fieldType(dart.legacy(core.bool)),
    [_scrimColorTween]: dart.fieldType(dart.legacy(tween.ColorTween)),
    [_gestureDetectorKey]: dart.finalFieldType(dart.legacy(framework.GlobalKey$(dart.legacy(framework.State$(dart.legacy(framework.StatefulWidget))))))
  }));
  var C666;
  dart.defineLazy(drawer, {
    /*drawer._kWidth*/get _kWidth() {
      return 304;
    },
    /*drawer._kEdgeDragWidth*/get _kEdgeDragWidth() {
      return 20;
    },
    /*drawer._kMinFlingVelocity*/get _kMinFlingVelocity() {
      return 365;
    },
    /*drawer._kBaseSettleDuration*/get _kBaseSettleDuration() {
      return C666 || CT.C666;
    }
  }, true);
  var C669;
  var C670;
  var C671;
  var C668;
  var C667;
  var C674;
  var C673;
  var C672;
  var C677;
  var C678;
  var C676;
  var C675;
  var height$1 = dart.privateName(divider, "Divider.height");
  var thickness$ = dart.privateName(divider, "Divider.thickness");
  var indent$ = dart.privateName(divider, "Divider.indent");
  var endIndent$ = dart.privateName(divider, "Divider.endIndent");
  var color$2 = dart.privateName(divider, "Divider.color");
  divider.Divider = class Divider extends framework.StatelessWidget {
    get height() {
      return this[height$1];
    }
    set height(value) {
      super.height = value;
    }
    get thickness() {
      return this[thickness$];
    }
    set thickness(value) {
      super.thickness = value;
    }
    get indent() {
      return this[indent$];
    }
    set indent(value) {
      super.indent = value;
    }
    get endIndent() {
      return this[endIndent$];
    }
    set endIndent(value) {
      super.endIndent = value;
    }
    get color() {
      return this[color$2];
    }
    set color(value) {
      super.color = value;
    }
    static createBorderSide(context, opts) {
      let t3, t2, t2$, t2$0;
      let color = opts && 'color' in opts ? opts.color : null;
      let width = opts && 'width' in opts ? opts.width : null;
      let effectiveColor = (t2 = color, t2 == null ? context != null ? (t3 = divider_theme.DividerTheme.of(context).color, t3 == null ? theme$.Theme.of(context).dividerColor : t3) : null : t2);
      let effectiveWidth = (t2$0 = (t2$ = width, t2$ == null ? context != null ? divider_theme.DividerTheme.of(context).thickness : null : t2$), t2$0 == null ? 0.0 : t2$0);
      if (effectiveColor == null) {
        return new borders.BorderSide.new({width: effectiveWidth});
      }
      return new borders.BorderSide.new({color: effectiveColor, width: effectiveWidth});
    }
    build(context) {
      let t2, t2$, t2$0, t2$1, t2$2, t2$3, t2$4, t2$5;
      let dividerTheme = divider_theme.DividerTheme.of(context);
      let height = (t2$ = (t2 = this.height, t2 == null ? dividerTheme.space : t2), t2$ == null ? 16.0 : t2$);
      let thickness = (t2$1 = (t2$0 = this.thickness, t2$0 == null ? dividerTheme.thickness : t2$0), t2$1 == null ? 0.0 : t2$1);
      let indent = (t2$3 = (t2$2 = this.indent, t2$2 == null ? dividerTheme.indent : t2$2), t2$3 == null ? 0.0 : t2$3);
      let endIndent = (t2$5 = (t2$4 = this.endIndent, t2$4 == null ? dividerTheme.endIndent : t2$4), t2$5 == null ? 0.0 : t2$5);
      return new basic.SizedBox.new({height: height, child: new basic.Center.new({child: new container.Container.new({height: thickness, margin: new edge_insets.EdgeInsetsDirectional.only({start: indent, end: endIndent}), decoration: new box_decoration.BoxDecoration.new({border: new box_border.Border.new({bottom: divider.Divider.createBorderSide(context, {color: this.color, width: thickness})})}), $creationLocationd_0dea112b090073317d4: C667 || CT.C667}), $creationLocationd_0dea112b090073317d4: C672 || CT.C672}), $creationLocationd_0dea112b090073317d4: C675 || CT.C675});
    }
  };
  (divider.Divider.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let thickness = opts && 'thickness' in opts ? opts.thickness : null;
    let indent = opts && 'indent' in opts ? opts.indent : null;
    let endIndent = opts && 'endIndent' in opts ? opts.endIndent : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[height$1] = height;
    this[thickness$] = thickness;
    this[indent$] = indent;
    this[endIndent$] = endIndent;
    this[color$2] = color;
    if (!(height == null || dart.notNull(height) >= 0.0)) dart.assertFailed(null, L20, 89, 15, "height == null || height >= 0.0");
    if (!(thickness == null || dart.notNull(thickness) >= 0.0)) dart.assertFailed(null, L20, 90, 15, "thickness == null || thickness >= 0.0");
    if (!(indent == null || dart.notNull(indent) >= 0.0)) dart.assertFailed(null, L20, 91, 15, "indent == null || indent >= 0.0");
    if (!(endIndent == null || dart.notNull(endIndent) >= 0.0)) dart.assertFailed(null, L20, 92, 15, "endIndent == null || endIndent >= 0.0");
    divider.Divider.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = divider.Divider.prototype;
  dart.addTypeTests(divider.Divider);
  dart.addTypeCaches(divider.Divider);
  dart.setMethodSignature(divider.Divider, () => ({
    __proto__: dart.getMethods(divider.Divider.__proto__),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(divider.Divider, L21);
  dart.setFieldSignature(divider.Divider, () => ({
    __proto__: dart.getFields(divider.Divider.__proto__),
    height: dart.finalFieldType(dart.legacy(core.double)),
    thickness: dart.finalFieldType(dart.legacy(core.double)),
    indent: dart.finalFieldType(dart.legacy(core.double)),
    endIndent: dart.finalFieldType(dart.legacy(core.double)),
    color: dart.finalFieldType(dart.legacy(ui.Color))
  }));
  var C681;
  var C682;
  var C683;
  var C680;
  var C679;
  var C686;
  var C685;
  var C684;
  var C689;
  var C690;
  var C688;
  var C687;
  var width$0 = dart.privateName(divider, "VerticalDivider.width");
  var thickness$0 = dart.privateName(divider, "VerticalDivider.thickness");
  var indent$0 = dart.privateName(divider, "VerticalDivider.indent");
  var endIndent$0 = dart.privateName(divider, "VerticalDivider.endIndent");
  var color$3 = dart.privateName(divider, "VerticalDivider.color");
  divider.VerticalDivider = class VerticalDivider extends framework.StatelessWidget {
    get width() {
      return this[width$0];
    }
    set width(value) {
      super.width = value;
    }
    get thickness() {
      return this[thickness$0];
    }
    set thickness(value) {
      super.thickness = value;
    }
    get indent() {
      return this[indent$0];
    }
    set indent(value) {
      super.indent = value;
    }
    get endIndent() {
      return this[endIndent$0];
    }
    set endIndent(value) {
      super.endIndent = value;
    }
    get color() {
      return this[color$3];
    }
    set color(value) {
      super.color = value;
    }
    build(context) {
      let t2, t2$, t2$0, t2$1, t2$2, t2$3, t2$4, t2$5;
      let dividerTheme = divider_theme.DividerTheme.of(context);
      let width = (t2$ = (t2 = this.width, t2 == null ? dividerTheme.space : t2), t2$ == null ? 16.0 : t2$);
      let thickness = (t2$1 = (t2$0 = this.thickness, t2$0 == null ? dividerTheme.thickness : t2$0), t2$1 == null ? 0.0 : t2$1);
      let indent = (t2$3 = (t2$2 = this.indent, t2$2 == null ? dividerTheme.indent : t2$2), t2$3 == null ? 0.0 : t2$3);
      let endIndent = (t2$5 = (t2$4 = this.endIndent, t2$4 == null ? dividerTheme.endIndent : t2$4), t2$5 == null ? 0.0 : t2$5);
      return new basic.SizedBox.new({width: width, child: new basic.Center.new({child: new container.Container.new({width: thickness, margin: new edge_insets.EdgeInsetsDirectional.only({top: indent, bottom: endIndent}), decoration: new box_decoration.BoxDecoration.new({border: new box_border.Border.new({left: divider.Divider.createBorderSide(context, {color: this.color, width: thickness})})}), $creationLocationd_0dea112b090073317d4: C679 || CT.C679}), $creationLocationd_0dea112b090073317d4: C684 || CT.C684}), $creationLocationd_0dea112b090073317d4: C687 || CT.C687});
    }
  };
  (divider.VerticalDivider.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let width = opts && 'width' in opts ? opts.width : null;
    let thickness = opts && 'thickness' in opts ? opts.thickness : null;
    let indent = opts && 'indent' in opts ? opts.indent : null;
    let endIndent = opts && 'endIndent' in opts ? opts.endIndent : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[width$0] = width;
    this[thickness$0] = thickness;
    this[indent$0] = indent;
    this[endIndent$0] = endIndent;
    this[color$3] = color;
    if (!(width == null || dart.notNull(width) >= 0.0)) dart.assertFailed(null, L20, 240, 15, "width == null || width >= 0.0");
    if (!(thickness == null || dart.notNull(thickness) >= 0.0)) dart.assertFailed(null, L20, 241, 15, "thickness == null || thickness >= 0.0");
    if (!(indent == null || dart.notNull(indent) >= 0.0)) dart.assertFailed(null, L20, 242, 15, "indent == null || indent >= 0.0");
    if (!(endIndent == null || dart.notNull(endIndent) >= 0.0)) dart.assertFailed(null, L20, 243, 15, "endIndent == null || endIndent >= 0.0");
    divider.VerticalDivider.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = divider.VerticalDivider.prototype;
  dart.addTypeTests(divider.VerticalDivider);
  dart.addTypeCaches(divider.VerticalDivider);
  dart.setMethodSignature(divider.VerticalDivider, () => ({
    __proto__: dart.getMethods(divider.VerticalDivider.__proto__),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(divider.VerticalDivider, L21);
  dart.setFieldSignature(divider.VerticalDivider, () => ({
    __proto__: dart.getFields(divider.VerticalDivider.__proto__),
    width: dart.finalFieldType(dart.legacy(core.double)),
    thickness: dart.finalFieldType(dart.legacy(core.double)),
    indent: dart.finalFieldType(dart.legacy(core.double)),
    endIndent: dart.finalFieldType(dart.legacy(core.double)),
    color: dart.finalFieldType(dart.legacy(ui.Color))
  }));
  var C691;
  var C692;
  var C693;
  var C694;
  var C697;
  var C698;
  var C699;
  var C700;
  var C701;
  var C702;
  var C696;
  var C695;
  var C705;
  var C706;
  var C704;
  var C703;
  var C709;
  var C708;
  var C707;
  var C712;
  var C713;
  var C714;
  var C715;
  var C716;
  var C717;
  var C711;
  var C710;
  var C720;
  var C721;
  var C722;
  var C723;
  var C719;
  var C718;
  var backgroundColor$1 = dart.privateName(dialog, "Dialog.backgroundColor");
  var elevation$2 = dart.privateName(dialog, "Dialog.elevation");
  var insetAnimationDuration$ = dart.privateName(dialog, "Dialog.insetAnimationDuration");
  var insetAnimationCurve$ = dart.privateName(dialog, "Dialog.insetAnimationCurve");
  var insetPadding$ = dart.privateName(dialog, "Dialog.insetPadding");
  var clipBehavior$0 = dart.privateName(dialog, "Dialog.clipBehavior");
  var shape$3 = dart.privateName(dialog, "Dialog.shape");
  var child$3 = dart.privateName(dialog, "Dialog.child");
  var RoundedRectangleBorder_borderRadius = dart.privateName(rounded_rectangle_border, "RoundedRectangleBorder.borderRadius");
  var C724;
  dialog.Dialog = class Dialog extends framework.StatelessWidget {
    get backgroundColor() {
      return this[backgroundColor$1];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get elevation() {
      return this[elevation$2];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get insetAnimationDuration() {
      return this[insetAnimationDuration$];
    }
    set insetAnimationDuration(value) {
      super.insetAnimationDuration = value;
    }
    get insetAnimationCurve() {
      return this[insetAnimationCurve$];
    }
    set insetAnimationCurve(value) {
      super.insetAnimationCurve = value;
    }
    get insetPadding() {
      return this[insetPadding$];
    }
    set insetPadding(value) {
      super.insetPadding = value;
    }
    get clipBehavior() {
      return this[clipBehavior$0];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get shape() {
      return this[shape$3];
    }
    set shape(value) {
      super.shape = value;
    }
    get child() {
      return this[child$3];
    }
    set child(value) {
      super.child = value;
    }
    build(context) {
      let t2, t2$, t2$0, t2$1, t2$2, t2$3, t2$4;
      let dialogTheme = dialog_theme.DialogTheme.of(context);
      let effectivePadding = media_query.MediaQuery.of(context).viewInsets['+']((t2 = this.insetPadding, t2 == null ? C278 || CT.C278 : t2));
      return new implicit_animations.AnimatedPadding.new({padding: effectivePadding, duration: this.insetAnimationDuration, curve: this.insetAnimationCurve, child: media_query.MediaQuery.removeViewInsets({removeLeft: true, removeTop: true, removeRight: true, removeBottom: true, context: context, child: new basic.Center.new({child: new basic.ConstrainedBox.new({constraints: C694 || CT.C694, child: new material.Material.new({color: (t2$0 = (t2$ = this.backgroundColor, t2$ == null ? dialogTheme.backgroundColor : t2$), t2$0 == null ? theme$.Theme.of(context).dialogBackgroundColor : t2$0), elevation: (t2$2 = (t2$1 = this.elevation, t2$1 == null ? dialogTheme.elevation : t2$1), t2$2 == null ? 24 : t2$2), shape: (t2$4 = (t2$3 = this.shape, t2$3 == null ? dialogTheme.shape : t2$3), t2$4 == null ? dialog.Dialog._defaultDialogShape : t2$4), type: material.MaterialType.card, clipBehavior: this.clipBehavior, child: this.child, $creationLocationd_0dea112b090073317d4: C695 || CT.C695}), $creationLocationd_0dea112b090073317d4: C703 || CT.C703}), $creationLocationd_0dea112b090073317d4: C707 || CT.C707}), $creationLocationd_0dea112b090073317d4: C710 || CT.C710}), $creationLocationd_0dea112b090073317d4: C718 || CT.C718});
    }
  };
  (dialog.Dialog.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let insetAnimationDuration = opts && 'insetAnimationDuration' in opts ? opts.insetAnimationDuration : C691 || CT.C691;
    let insetAnimationCurve = opts && 'insetAnimationCurve' in opts ? opts.insetAnimationCurve : C692 || CT.C692;
    let insetPadding = opts && 'insetPadding' in opts ? opts.insetPadding : C693 || CT.C693;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C321 || CT.C321;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[backgroundColor$1] = backgroundColor;
    this[elevation$2] = elevation;
    this[insetAnimationDuration$] = insetAnimationDuration;
    this[insetAnimationCurve$] = insetAnimationCurve;
    this[insetPadding$] = insetPadding;
    this[clipBehavior$0] = clipBehavior;
    this[shape$3] = shape;
    this[child$3] = child;
    if (!(clipBehavior != null)) dart.assertFailed(null, L22, 56, 15, "clipBehavior != null");
    dialog.Dialog.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = dialog.Dialog.prototype;
  dart.addTypeTests(dialog.Dialog);
  dart.addTypeCaches(dialog.Dialog);
  dart.setMethodSignature(dialog.Dialog, () => ({
    __proto__: dart.getMethods(dialog.Dialog.__proto__),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(dialog.Dialog, L23);
  dart.setFieldSignature(dialog.Dialog, () => ({
    __proto__: dart.getFields(dialog.Dialog.__proto__),
    backgroundColor: dart.finalFieldType(dart.legacy(ui.Color)),
    elevation: dart.finalFieldType(dart.legacy(core.double)),
    insetAnimationDuration: dart.finalFieldType(dart.legacy(core.Duration)),
    insetAnimationCurve: dart.finalFieldType(dart.legacy(curves.Curve)),
    insetPadding: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsets)),
    clipBehavior: dart.finalFieldType(dart.legacy(ui.Clip)),
    shape: dart.finalFieldType(dart.legacy(borders.ShapeBorder)),
    child: dart.finalFieldType(dart.legacy(framework.Widget))
  }));
  dart.defineLazy(dialog.Dialog, {
    /*dialog.Dialog._defaultDialogShape*/get _defaultDialogShape() {
      return C724 || CT.C724;
    },
    /*dialog.Dialog._defaultElevation*/get _defaultElevation() {
      return 24;
    }
  }, true);
  var C725;
  var C728;
  var C729;
  var C730;
  var C727;
  var C726;
  var C733;
  var C734;
  var C732;
  var C731;
  var C737;
  var C738;
  var C736;
  var C735;
  var C741;
  var C742;
  var C740;
  var C739;
  var C745;
  var C746;
  var C744;
  var C743;
  var C749;
  var C750;
  var C751;
  var C752;
  var C748;
  var C747;
  var C755;
  var C756;
  var C754;
  var C753;
  var C759;
  var C760;
  var C761;
  var C758;
  var C757;
  var C764;
  var C763;
  var C762;
  var C767;
  var C766;
  var C765;
  var C770;
  var C769;
  var C768;
  var C773;
  var C774;
  var C775;
  var C772;
  var C771;
  var C778;
  var C777;
  var C776;
  var C781;
  var C782;
  var C783;
  var C780;
  var C779;
  var C786;
  var C787;
  var C788;
  var C789;
  var C790;
  var C791;
  var C785;
  var C784;
  var title$2 = dart.privateName(dialog, "AlertDialog.title");
  var titlePadding$0 = dart.privateName(dialog, "AlertDialog.titlePadding");
  var titleTextStyle$ = dart.privateName(dialog, "AlertDialog.titleTextStyle");
  var content$0 = dart.privateName(dialog, "AlertDialog.content");
  var contentPadding$1 = dart.privateName(dialog, "AlertDialog.contentPadding");
  var contentTextStyle$ = dart.privateName(dialog, "AlertDialog.contentTextStyle");
  var actions$ = dart.privateName(dialog, "AlertDialog.actions");
  var actionsPadding$ = dart.privateName(dialog, "AlertDialog.actionsPadding");
  var actionsOverflowDirection$ = dart.privateName(dialog, "AlertDialog.actionsOverflowDirection");
  var actionsOverflowButtonSpacing$ = dart.privateName(dialog, "AlertDialog.actionsOverflowButtonSpacing");
  var buttonPadding$ = dart.privateName(dialog, "AlertDialog.buttonPadding");
  var backgroundColor$2 = dart.privateName(dialog, "AlertDialog.backgroundColor");
  var elevation$3 = dart.privateName(dialog, "AlertDialog.elevation");
  var semanticLabel$0 = dart.privateName(dialog, "AlertDialog.semanticLabel");
  var insetPadding$0 = dart.privateName(dialog, "AlertDialog.insetPadding");
  var clipBehavior$1 = dart.privateName(dialog, "AlertDialog.clipBehavior");
  var shape$4 = dart.privateName(dialog, "AlertDialog.shape");
  var scrollable$ = dart.privateName(dialog, "AlertDialog.scrollable");
  dialog.AlertDialog = class AlertDialog extends framework.StatelessWidget {
    get title() {
      return this[title$2];
    }
    set title(value) {
      super.title = value;
    }
    get titlePadding() {
      return this[titlePadding$0];
    }
    set titlePadding(value) {
      super.titlePadding = value;
    }
    get titleTextStyle() {
      return this[titleTextStyle$];
    }
    set titleTextStyle(value) {
      super.titleTextStyle = value;
    }
    get content() {
      return this[content$0];
    }
    set content(value) {
      super.content = value;
    }
    get contentPadding() {
      return this[contentPadding$1];
    }
    set contentPadding(value) {
      super.contentPadding = value;
    }
    get contentTextStyle() {
      return this[contentTextStyle$];
    }
    set contentTextStyle(value) {
      super.contentTextStyle = value;
    }
    get actions() {
      return this[actions$];
    }
    set actions(value) {
      super.actions = value;
    }
    get actionsPadding() {
      return this[actionsPadding$];
    }
    set actionsPadding(value) {
      super.actionsPadding = value;
    }
    get actionsOverflowDirection() {
      return this[actionsOverflowDirection$];
    }
    set actionsOverflowDirection(value) {
      super.actionsOverflowDirection = value;
    }
    get actionsOverflowButtonSpacing() {
      return this[actionsOverflowButtonSpacing$];
    }
    set actionsOverflowButtonSpacing(value) {
      super.actionsOverflowButtonSpacing = value;
    }
    get buttonPadding() {
      return this[buttonPadding$];
    }
    set buttonPadding(value) {
      super.buttonPadding = value;
    }
    get backgroundColor() {
      return this[backgroundColor$2];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get elevation() {
      return this[elevation$3];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get semanticLabel() {
      return this[semanticLabel$0];
    }
    set semanticLabel(value) {
      super.semanticLabel = value;
    }
    get insetPadding() {
      return this[insetPadding$0];
    }
    set insetPadding(value) {
      super.insetPadding = value;
    }
    get clipBehavior() {
      return this[clipBehavior$1];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get shape() {
      return this[shape$4];
    }
    set shape(value) {
      super.shape = value;
    }
    get scrollable() {
      return this[scrollable$];
    }
    set scrollable(value) {
      super.scrollable = value;
    }
    build(context) {
      let t3, t2, t2$, t2$0, t2$1, t2$2, t2$3, t2$4;
      if (!dart.test(debug$0.debugCheckHasMaterialLocalizations(context))) dart.assertFailed(null, L22, 454, 12, "debugCheckHasMaterialLocalizations(context)");
      let theme = theme$.Theme.of(context);
      let dialogTheme = dialog_theme.DialogTheme.of(context);
      let label = this.semanticLabel;
      if (this.title == null) {
        switch (theme.platform) {
          case C48 || CT.C48:
          case C49 || CT.C49:
          {
            label = this.semanticLabel;
            break;
          }
          case C44 || CT.C44:
          case C45 || CT.C45:
          case C46 || CT.C46:
          case C47 || CT.C47:
          {
            label = (t2 = this.semanticLabel, t2 == null ? (t3 = material_localizations.MaterialLocalizations.of(context), t3 == null ? null : t3.alertDialogLabel) : t2);
          }
        }
      }
      let paddingScaleFactor = dialog._paddingScaleFactor(media_query.MediaQuery.of(context).textScaleFactor);
      let textDirection = basic.Directionality.of(context);
      let titleWidget = null;
      let contentWidget = null;
      let actionsWidget = null;
      if (this.title != null) {
        let defaultTitlePadding = new edge_insets.EdgeInsets.fromLTRB(24.0, 24.0, 24.0, this.content == null ? 20.0 : 0.0);
        let effectiveTitlePadding = (t2$0 = (t2$ = this.titlePadding, t2$ == null ? null : t2$.resolve(textDirection)), t2$0 == null ? defaultTitlePadding : t2$0);
        titleWidget = new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({left: dart.notNull(effectiveTitlePadding.left) * dart.notNull(paddingScaleFactor), right: dart.notNull(effectiveTitlePadding.right) * dart.notNull(paddingScaleFactor), top: dart.notNull(effectiveTitlePadding.top) * dart.notNull(paddingScaleFactor), bottom: effectiveTitlePadding.bottom}), child: new text$.DefaultTextStyle.new({style: (t2$2 = (t2$1 = this.titleTextStyle, t2$1 == null ? dialogTheme.titleTextStyle : t2$1), t2$2 == null ? theme.textTheme.headline6 : t2$2), child: new basic.Semantics.new({child: this.title, namesRoute: true, container: true, $creationLocationd_0dea112b090073317d4: C726 || CT.C726}), $creationLocationd_0dea112b090073317d4: C731 || CT.C731}), $creationLocationd_0dea112b090073317d4: C735 || CT.C735});
      }
      if (this.content != null) {
        let effectiveContentPadding = this.contentPadding.resolve(textDirection);
        contentWidget = new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({left: dart.notNull(effectiveContentPadding.left) * dart.notNull(paddingScaleFactor), right: dart.notNull(effectiveContentPadding.right) * dart.notNull(paddingScaleFactor), top: this.title == null ? dart.notNull(effectiveContentPadding.top) * dart.notNull(paddingScaleFactor) : effectiveContentPadding.top, bottom: effectiveContentPadding.bottom}), child: new text$.DefaultTextStyle.new({style: (t2$4 = (t2$3 = this.contentTextStyle, t2$3 == null ? dialogTheme.contentTextStyle : t2$3), t2$4 == null ? theme.textTheme.subtitle1 : t2$4), child: this.content, $creationLocationd_0dea112b090073317d4: C739 || CT.C739}), $creationLocationd_0dea112b090073317d4: C743 || CT.C743});
      }
      if (this.actions != null) {
        actionsWidget = new basic.Padding.new({padding: this.actionsPadding, child: new button_bar.ButtonBar.new({buttonPadding: this.buttonPadding, overflowDirection: this.actionsOverflowDirection, overflowButtonSpacing: this.actionsOverflowButtonSpacing, children: this.actions, $creationLocationd_0dea112b090073317d4: C747 || CT.C747}), $creationLocationd_0dea112b090073317d4: C753 || CT.C753});
      }
      let columnChildren = null;
      if (dart.test(this.scrollable)) {
        columnChildren = (() => {
          let t2 = JSArrayOfWidgetL().of([]);
          if (this.title != null || this.content != null) t2[$add](new basic.Flexible.new({child: new single_child_scroll_view.SingleChildScrollView.new({child: new basic.Column.new({mainAxisSize: flex.MainAxisSize.min, crossAxisAlignment: flex.CrossAxisAlignment.stretch, children: (() => {
                  let t3 = JSArrayOfWidgetL().of([]);
                  if (this.title != null) t3[$add](titleWidget);
                  if (this.content != null) t3[$add](contentWidget);
                  return t3;
                })(), $creationLocationd_0dea112b090073317d4: C757 || CT.C757}), $creationLocationd_0dea112b090073317d4: C762 || CT.C762}), $creationLocationd_0dea112b090073317d4: C765 || CT.C765}));
          if (this.actions != null) t2[$add](actionsWidget);
          return t2;
        })();
      } else {
        columnChildren = (() => {
          let t4 = JSArrayOfWidgetL().of([]);
          if (this.title != null) t4[$add](titleWidget);
          if (this.content != null) t4[$add](new basic.Flexible.new({child: contentWidget, $creationLocationd_0dea112b090073317d4: C768 || CT.C768}));
          if (this.actions != null) t4[$add](actionsWidget);
          return t4;
        })();
      }
      let dialogChild = new basic.IntrinsicWidth.new({child: new basic.Column.new({mainAxisSize: flex.MainAxisSize.min, crossAxisAlignment: flex.CrossAxisAlignment.stretch, children: columnChildren, $creationLocationd_0dea112b090073317d4: C771 || CT.C771}), $creationLocationd_0dea112b090073317d4: C776 || CT.C776});
      if (label != null) dialogChild = new basic.Semantics.new({namesRoute: true, label: label, child: dialogChild, $creationLocationd_0dea112b090073317d4: C779 || CT.C779});
      return new dialog.Dialog.new({backgroundColor: this.backgroundColor, elevation: this.elevation, insetPadding: this.insetPadding, clipBehavior: this.clipBehavior, shape: this.shape, child: dialogChild, $creationLocationd_0dea112b090073317d4: C784 || CT.C784});
    }
  };
  (dialog.AlertDialog.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let title = opts && 'title' in opts ? opts.title : null;
    let titlePadding = opts && 'titlePadding' in opts ? opts.titlePadding : null;
    let titleTextStyle = opts && 'titleTextStyle' in opts ? opts.titleTextStyle : null;
    let content = opts && 'content' in opts ? opts.content : null;
    let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : C725 || CT.C725;
    let contentTextStyle = opts && 'contentTextStyle' in opts ? opts.contentTextStyle : null;
    let actions = opts && 'actions' in opts ? opts.actions : null;
    let actionsPadding = opts && 'actionsPadding' in opts ? opts.actionsPadding : C278 || CT.C278;
    let actionsOverflowDirection = opts && 'actionsOverflowDirection' in opts ? opts.actionsOverflowDirection : null;
    let actionsOverflowButtonSpacing = opts && 'actionsOverflowButtonSpacing' in opts ? opts.actionsOverflowButtonSpacing : null;
    let buttonPadding = opts && 'buttonPadding' in opts ? opts.buttonPadding : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let semanticLabel = opts && 'semanticLabel' in opts ? opts.semanticLabel : null;
    let insetPadding = opts && 'insetPadding' in opts ? opts.insetPadding : C693 || CT.C693;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C321 || CT.C321;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let scrollable = opts && 'scrollable' in opts ? opts.scrollable : false;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[title$2] = title;
    this[titlePadding$0] = titlePadding;
    this[titleTextStyle$] = titleTextStyle;
    this[content$0] = content;
    this[contentPadding$1] = contentPadding;
    this[contentTextStyle$] = contentTextStyle;
    this[actions$] = actions;
    this[actionsPadding$] = actionsPadding;
    this[actionsOverflowDirection$] = actionsOverflowDirection;
    this[actionsOverflowButtonSpacing$] = actionsOverflowButtonSpacing;
    this[buttonPadding$] = buttonPadding;
    this[backgroundColor$2] = backgroundColor;
    this[elevation$3] = elevation;
    this[semanticLabel$0] = semanticLabel;
    this[insetPadding$0] = insetPadding;
    this[clipBehavior$1] = clipBehavior;
    this[shape$4] = shape;
    this[scrollable$] = scrollable;
    if (!(contentPadding != null)) dart.assertFailed(null, L22, 260, 15, "contentPadding != null");
    if (!(clipBehavior != null)) dart.assertFailed(null, L22, 261, 15, "clipBehavior != null");
    dialog.AlertDialog.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = dialog.AlertDialog.prototype;
  dart.addTypeTests(dialog.AlertDialog);
  dart.addTypeCaches(dialog.AlertDialog);
  dart.setMethodSignature(dialog.AlertDialog, () => ({
    __proto__: dart.getMethods(dialog.AlertDialog.__proto__),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(dialog.AlertDialog, L23);
  dart.setFieldSignature(dialog.AlertDialog, () => ({
    __proto__: dart.getFields(dialog.AlertDialog.__proto__),
    title: dart.finalFieldType(dart.legacy(framework.Widget)),
    titlePadding: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsetsGeometry)),
    titleTextStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    content: dart.finalFieldType(dart.legacy(framework.Widget)),
    contentPadding: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsetsGeometry)),
    contentTextStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    actions: dart.finalFieldType(dart.legacy(core.List$(dart.legacy(framework.Widget)))),
    actionsPadding: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsetsGeometry)),
    actionsOverflowDirection: dart.finalFieldType(dart.legacy(basic_types.VerticalDirection)),
    actionsOverflowButtonSpacing: dart.finalFieldType(dart.legacy(core.double)),
    buttonPadding: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsetsGeometry)),
    backgroundColor: dart.finalFieldType(dart.legacy(ui.Color)),
    elevation: dart.finalFieldType(dart.legacy(core.double)),
    semanticLabel: dart.finalFieldType(dart.legacy(core.String)),
    insetPadding: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsets)),
    clipBehavior: dart.finalFieldType(dart.legacy(ui.Clip)),
    shape: dart.finalFieldType(dart.legacy(borders.ShapeBorder)),
    scrollable: dart.finalFieldType(dart.legacy(core.bool))
  }));
  var C792;
  var C795;
  var C796;
  var C794;
  var C793;
  var C799;
  var C800;
  var C798;
  var C797;
  var onPressed$4 = dart.privateName(dialog, "SimpleDialogOption.onPressed");
  var child$4 = dart.privateName(dialog, "SimpleDialogOption.child");
  var padding$3 = dart.privateName(dialog, "SimpleDialogOption.padding");
  dialog.SimpleDialogOption = class SimpleDialogOption extends framework.StatelessWidget {
    get onPressed() {
      return this[onPressed$4];
    }
    set onPressed(value) {
      super.onPressed = value;
    }
    get child() {
      return this[child$4];
    }
    set child(value) {
      super.child = value;
    }
    get padding() {
      return this[padding$3];
    }
    set padding(value) {
      super.padding = value;
    }
    build(context) {
      let t5;
      return new ink_well.InkWell.new({onTap: this.onPressed, child: new basic.Padding.new({padding: (t5 = this.padding, t5 == null ? C792 || CT.C792 : t5), child: this.child, $creationLocationd_0dea112b090073317d4: C793 || CT.C793}), $creationLocationd_0dea112b090073317d4: C797 || CT.C797});
    }
  };
  (dialog.SimpleDialogOption.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[onPressed$4] = onPressed;
    this[padding$3] = padding;
    this[child$4] = child;
    dialog.SimpleDialogOption.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = dialog.SimpleDialogOption.prototype;
  dart.addTypeTests(dialog.SimpleDialogOption);
  dart.addTypeCaches(dialog.SimpleDialogOption);
  dart.setMethodSignature(dialog.SimpleDialogOption, () => ({
    __proto__: dart.getMethods(dialog.SimpleDialogOption.__proto__),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(dialog.SimpleDialogOption, L23);
  dart.setFieldSignature(dialog.SimpleDialogOption, () => ({
    __proto__: dart.getFields(dialog.SimpleDialogOption.__proto__),
    onPressed: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, []))),
    child: dart.finalFieldType(dart.legacy(framework.Widget)),
    padding: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsets))
  }));
  var C801;
  var C802;
  var C805;
  var C806;
  var C804;
  var C803;
  var C809;
  var C810;
  var C808;
  var C807;
  var C813;
  var C814;
  var C812;
  var C811;
  var C817;
  var C816;
  var C815;
  var C820;
  var C821;
  var C819;
  var C818;
  var C824;
  var C823;
  var C822;
  var C827;
  var C828;
  var C829;
  var C826;
  var C825;
  var C832;
  var C833;
  var C831;
  var C830;
  var C836;
  var C837;
  var C835;
  var C834;
  var C840;
  var C841;
  var C842;
  var C839;
  var C838;
  var C845;
  var C846;
  var C847;
  var C848;
  var C844;
  var C843;
  var title$3 = dart.privateName(dialog, "SimpleDialog.title");
  var titlePadding$1 = dart.privateName(dialog, "SimpleDialog.titlePadding");
  var titleTextStyle$0 = dart.privateName(dialog, "SimpleDialog.titleTextStyle");
  var children$ = dart.privateName(dialog, "SimpleDialog.children");
  var contentPadding$2 = dart.privateName(dialog, "SimpleDialog.contentPadding");
  var backgroundColor$3 = dart.privateName(dialog, "SimpleDialog.backgroundColor");
  var elevation$4 = dart.privateName(dialog, "SimpleDialog.elevation");
  var semanticLabel$1 = dart.privateName(dialog, "SimpleDialog.semanticLabel");
  var shape$5 = dart.privateName(dialog, "SimpleDialog.shape");
  dialog.SimpleDialog = class SimpleDialog extends framework.StatelessWidget {
    get title() {
      return this[title$3];
    }
    set title(value) {
      super.title = value;
    }
    get titlePadding() {
      return this[titlePadding$1];
    }
    set titlePadding(value) {
      super.titlePadding = value;
    }
    get titleTextStyle() {
      return this[titleTextStyle$0];
    }
    set titleTextStyle(value) {
      super.titleTextStyle = value;
    }
    get children() {
      return this[children$];
    }
    set children(value) {
      super.children = value;
    }
    get contentPadding() {
      return this[contentPadding$2];
    }
    set contentPadding(value) {
      super.contentPadding = value;
    }
    get backgroundColor() {
      return this[backgroundColor$3];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get elevation() {
      return this[elevation$4];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get semanticLabel() {
      return this[semanticLabel$1];
    }
    set semanticLabel(value) {
      super.semanticLabel = value;
    }
    get shape() {
      return this[shape$5];
    }
    set shape(value) {
      super.shape = value;
    }
    build(context) {
      let t6, t5, t5$, t5$0;
      if (!dart.test(debug$0.debugCheckHasMaterialLocalizations(context))) dart.assertFailed(null, L22, 816, 12, "debugCheckHasMaterialLocalizations(context)");
      let theme = theme$.Theme.of(context);
      let label = this.semanticLabel;
      if (this.title == null) {
        switch (theme.platform) {
          case C49 || CT.C49:
          case C48 || CT.C48:
          {
            label = this.semanticLabel;
            break;
          }
          case C44 || CT.C44:
          case C45 || CT.C45:
          case C46 || CT.C46:
          case C47 || CT.C47:
          {
            label = (t5 = this.semanticLabel, t5 == null ? (t6 = material_localizations.MaterialLocalizations.of(context), t6 == null ? null : t6.dialogLabel) : t5);
          }
        }
      }
      let paddingScaleFactor = dialog._paddingScaleFactor(media_query.MediaQuery.of(context).textScaleFactor);
      let textDirection = basic.Directionality.of(context);
      let titleWidget = null;
      if (this.title != null) {
        let effectiveTitlePadding = this.titlePadding.resolve(textDirection);
        titleWidget = new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({left: dart.notNull(effectiveTitlePadding.left) * dart.notNull(paddingScaleFactor), right: dart.notNull(effectiveTitlePadding.right) * dart.notNull(paddingScaleFactor), top: dart.notNull(effectiveTitlePadding.top) * dart.notNull(paddingScaleFactor), bottom: this.children == null ? dart.notNull(effectiveTitlePadding.bottom) * dart.notNull(paddingScaleFactor) : effectiveTitlePadding.bottom}), child: new text$.DefaultTextStyle.new({style: (t5$0 = (t5$ = this.titleTextStyle, t5$ == null ? dialog_theme.DialogTheme.of(context).titleTextStyle : t5$), t5$0 == null ? theme.textTheme.headline6 : t5$0), child: new basic.Semantics.new({namesRoute: true, child: this.title, $creationLocationd_0dea112b090073317d4: C803 || CT.C803}), $creationLocationd_0dea112b090073317d4: C807 || CT.C807}), $creationLocationd_0dea112b090073317d4: C811 || CT.C811});
      }
      let contentWidget = null;
      if (this.children != null) {
        let effectiveContentPadding = this.contentPadding.resolve(textDirection);
        contentWidget = new basic.Flexible.new({child: new single_child_scroll_view.SingleChildScrollView.new({padding: new edge_insets.EdgeInsets.only({left: dart.notNull(effectiveContentPadding.left) * dart.notNull(paddingScaleFactor), right: dart.notNull(effectiveContentPadding.right) * dart.notNull(paddingScaleFactor), top: this.title == null ? dart.notNull(effectiveContentPadding.top) * dart.notNull(paddingScaleFactor) : effectiveContentPadding.top, bottom: dart.notNull(effectiveContentPadding.bottom) * dart.notNull(paddingScaleFactor)}), child: new basic.ListBody.new({children: this.children, $creationLocationd_0dea112b090073317d4: C815 || CT.C815}), $creationLocationd_0dea112b090073317d4: C818 || CT.C818}), $creationLocationd_0dea112b090073317d4: C822 || CT.C822});
      }
      let dialogChild = new basic.IntrinsicWidth.new({stepWidth: 56.0, child: new basic.ConstrainedBox.new({constraints: C694 || CT.C694, child: new basic.Column.new({mainAxisSize: flex.MainAxisSize.min, crossAxisAlignment: flex.CrossAxisAlignment.stretch, children: (() => {
              let t5 = JSArrayOfWidgetL().of([]);
              if (this.title != null) t5[$add](titleWidget);
              if (this.children != null) t5[$add](contentWidget);
              return t5;
            })(), $creationLocationd_0dea112b090073317d4: C825 || CT.C825}), $creationLocationd_0dea112b090073317d4: C830 || CT.C830}), $creationLocationd_0dea112b090073317d4: C834 || CT.C834});
      if (label != null) dialogChild = new basic.Semantics.new({namesRoute: true, label: label, child: dialogChild, $creationLocationd_0dea112b090073317d4: C838 || CT.C838});
      return new dialog.Dialog.new({backgroundColor: this.backgroundColor, elevation: this.elevation, shape: this.shape, child: dialogChild, $creationLocationd_0dea112b090073317d4: C843 || CT.C843});
    }
  };
  (dialog.SimpleDialog.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let title = opts && 'title' in opts ? opts.title : null;
    let titlePadding = opts && 'titlePadding' in opts ? opts.titlePadding : C801 || CT.C801;
    let titleTextStyle = opts && 'titleTextStyle' in opts ? opts.titleTextStyle : null;
    let children = opts && 'children' in opts ? opts.children : null;
    let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : C802 || CT.C802;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let semanticLabel = opts && 'semanticLabel' in opts ? opts.semanticLabel : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[title$3] = title;
    this[titlePadding$1] = titlePadding;
    this[titleTextStyle$0] = titleTextStyle;
    this[children$] = children;
    this[contentPadding$2] = contentPadding;
    this[backgroundColor$3] = backgroundColor;
    this[elevation$4] = elevation;
    this[semanticLabel$1] = semanticLabel;
    this[shape$5] = shape;
    if (!(titlePadding != null)) dart.assertFailed(null, L22, 744, 15, "titlePadding != null");
    if (!(contentPadding != null)) dart.assertFailed(null, L22, 745, 15, "contentPadding != null");
    dialog.SimpleDialog.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = dialog.SimpleDialog.prototype;
  dart.addTypeTests(dialog.SimpleDialog);
  dart.addTypeCaches(dialog.SimpleDialog);
  dart.setMethodSignature(dialog.SimpleDialog, () => ({
    __proto__: dart.getMethods(dialog.SimpleDialog.__proto__),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(dialog.SimpleDialog, L23);
  dart.setFieldSignature(dialog.SimpleDialog, () => ({
    __proto__: dart.getFields(dialog.SimpleDialog.__proto__),
    title: dart.finalFieldType(dart.legacy(framework.Widget)),
    titlePadding: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsetsGeometry)),
    titleTextStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    children: dart.finalFieldType(dart.legacy(core.List$(dart.legacy(framework.Widget)))),
    contentPadding: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsetsGeometry)),
    backgroundColor: dart.finalFieldType(dart.legacy(ui.Color)),
    elevation: dart.finalFieldType(dart.legacy(core.double)),
    semanticLabel: dart.finalFieldType(dart.legacy(core.String)),
    shape: dart.finalFieldType(dart.legacy(borders.ShapeBorder))
  }));
  var C851;
  var C852;
  var C850;
  var C849;
  var C855;
  var C854;
  var C853;
  var C858;
  var C859;
  var C857;
  var C856;
  var C862;
  var C861;
  var C860;
  var C865;
  var C864;
  var C863;
  var C866;
  dialog._buildMaterialDialogTransitions = function _buildMaterialDialogTransitions(context, animation, secondaryAnimation, child) {
    return new transitions.FadeTransition.new({opacity: new animations.CurvedAnimation.new({parent: animation, curve: curves.Curves.easeOut}), child: child, $creationLocationd_0dea112b090073317d4: C849 || CT.C849});
  };
  dialog.showDialog = function showDialog(T, opts) {
    let t6;
    let context = opts && 'context' in opts ? opts.context : null;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    let barrierDismissible = opts && 'barrierDismissible' in opts ? opts.barrierDismissible : true;
    let barrierColor = opts && 'barrierColor' in opts ? opts.barrierColor : null;
    let useSafeArea = opts && 'useSafeArea' in opts ? opts.useSafeArea : true;
    let useRootNavigator = opts && 'useRootNavigator' in opts ? opts.useRootNavigator : true;
    let routeSettings = opts && 'routeSettings' in opts ? opts.routeSettings : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (!(child == null || builder == null)) dart.assertFailed(null, L22, 983, 10, "child == null || builder == null");
    if (!(barrierDismissible != null)) dart.assertFailed(null, L22, 984, 10, "barrierDismissible != null");
    if (!(useSafeArea != null)) dart.assertFailed(null, L22, 985, 10, "useSafeArea != null");
    if (!(useRootNavigator != null)) dart.assertFailed(null, L22, 986, 10, "useRootNavigator != null");
    if (!dart.test(debug$0.debugCheckHasMaterialLocalizations(context))) dart.assertFailed(null, L22, 987, 10, "debugCheckHasMaterialLocalizations(context)");
    let theme = theme$.Theme.of(context, {shadowThemeOnly: true});
    return routes.showGeneralDialog(dart.legacy(T), {context: context, pageBuilder: dart.fn((buildContext, animation, secondaryAnimation) => {
        let t6;
        let pageChild = (t6 = child, t6 == null ? new basic.Builder.new({builder: builder, $creationLocationd_0dea112b090073317d4: C853 || CT.C853}) : t6);
        let dialog = new basic.Builder.new({builder: dart.fn(context => theme != null ? new theme$.Theme.new({data: theme, child: pageChild, $creationLocationd_0dea112b090073317d4: C856 || CT.C856}) : pageChild, BuildContextLToWidgetL()), $creationLocationd_0dea112b090073317d4: C860 || CT.C860});
        if (dart.test(useSafeArea)) {
          dialog = new safe_area.SafeArea.new({child: dialog, $creationLocationd_0dea112b090073317d4: C863 || CT.C863});
        }
        return dialog;
      }, BuildContextLAndAnimationLOfdoubleLAndAnimationLOfdoubleLToWidgetL()), barrierDismissible: barrierDismissible, barrierLabel: material_localizations.MaterialLocalizations.of(context).modalBarrierDismissLabel, barrierColor: (t6 = barrierColor, t6 == null ? colors$.Colors.black54 : t6), transitionDuration: C279 || CT.C279, transitionBuilder: C866 || CT.C866, useRootNavigator: useRootNavigator, routeSettings: routeSettings});
  };
  dialog._paddingScaleFactor = function _paddingScaleFactor(textScaleFactor) {
    let clampedTextScaleFactor = textScaleFactor[$clamp](1.0, 2.0)[$toDouble]();
    return ui.lerpDouble(1.0, 1.0 / 3.0, clampedTextScaleFactor - 1.0);
  };
  dart.defineLazy(dialog, {
    /*dialog._defaultInsetPadding*/get _defaultInsetPadding() {
      return C693 || CT.C693;
    }
  }, true);
  var C869;
  var C870;
  var C871;
  var C872;
  var C873;
  var C874;
  var C875;
  var C876;
  var C877;
  var C878;
  var C879;
  var C880;
  var C881;
  var C882;
  var C883;
  var C884;
  var C885;
  var C886;
  var C887;
  var C888;
  var C889;
  var C890;
  var C891;
  var C892;
  var C893;
  var C868;
  var C867;
  var C896;
  var C897;
  var C898;
  var C899;
  var C900;
  var C901;
  var C902;
  var C903;
  var C904;
  var C905;
  var C906;
  var C907;
  var C908;
  var C909;
  var C910;
  var C911;
  var C912;
  var C913;
  var C914;
  var C915;
  var C916;
  var C917;
  var C918;
  var C919;
  var C920;
  var C921;
  var C895;
  var C894;
  var onPressed$5 = dart.privateName(material_button, "MaterialButton.onPressed");
  var onLongPress$0 = dart.privateName(material_button, "MaterialButton.onLongPress");
  var onHighlightChanged$ = dart.privateName(material_button, "MaterialButton.onHighlightChanged");
  var mouseCursor$2 = dart.privateName(material_button, "MaterialButton.mouseCursor");
  var textTheme$ = dart.privateName(material_button, "MaterialButton.textTheme");
  var textColor$1 = dart.privateName(material_button, "MaterialButton.textColor");
  var disabledTextColor$0 = dart.privateName(material_button, "MaterialButton.disabledTextColor");
  var color$4 = dart.privateName(material_button, "MaterialButton.color");
  var disabledColor$0 = dart.privateName(material_button, "MaterialButton.disabledColor");
  var splashColor$1 = dart.privateName(material_button, "MaterialButton.splashColor");
  var focusColor$2 = dart.privateName(material_button, "MaterialButton.focusColor");
  var hoverColor$2 = dart.privateName(material_button, "MaterialButton.hoverColor");
  var highlightColor$0 = dart.privateName(material_button, "MaterialButton.highlightColor");
  var elevation$5 = dart.privateName(material_button, "MaterialButton.elevation");
  var hoverElevation$0 = dart.privateName(material_button, "MaterialButton.hoverElevation");
  var focusElevation$0 = dart.privateName(material_button, "MaterialButton.focusElevation");
  var highlightElevation$0 = dart.privateName(material_button, "MaterialButton.highlightElevation");
  var disabledElevation$0 = dart.privateName(material_button, "MaterialButton.disabledElevation");
  var colorBrightness$ = dart.privateName(material_button, "MaterialButton.colorBrightness");
  var child$5 = dart.privateName(material_button, "MaterialButton.child");
  var padding$4 = dart.privateName(material_button, "MaterialButton.padding");
  var visualDensity$2 = dart.privateName(material_button, "MaterialButton.visualDensity");
  var shape$6 = dart.privateName(material_button, "MaterialButton.shape");
  var clipBehavior$2 = dart.privateName(material_button, "MaterialButton.clipBehavior");
  var focusNode$2 = dart.privateName(material_button, "MaterialButton.focusNode");
  var autofocus$2 = dart.privateName(material_button, "MaterialButton.autofocus");
  var animationDuration$ = dart.privateName(material_button, "MaterialButton.animationDuration");
  var materialTapTargetSize$0 = dart.privateName(material_button, "MaterialButton.materialTapTargetSize");
  var minWidth$ = dart.privateName(material_button, "MaterialButton.minWidth");
  var height$2 = dart.privateName(material_button, "MaterialButton.height");
  var enableFeedback$0 = dart.privateName(material_button, "MaterialButton.enableFeedback");
  material_button.MaterialButton = class MaterialButton extends framework.StatelessWidget {
    get onPressed() {
      return this[onPressed$5];
    }
    set onPressed(value) {
      super.onPressed = value;
    }
    get onLongPress() {
      return this[onLongPress$0];
    }
    set onLongPress(value) {
      super.onLongPress = value;
    }
    get onHighlightChanged() {
      return this[onHighlightChanged$];
    }
    set onHighlightChanged(value) {
      super.onHighlightChanged = value;
    }
    get mouseCursor() {
      return this[mouseCursor$2];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get textTheme() {
      return this[textTheme$];
    }
    set textTheme(value) {
      super.textTheme = value;
    }
    get textColor() {
      return this[textColor$1];
    }
    set textColor(value) {
      super.textColor = value;
    }
    get disabledTextColor() {
      return this[disabledTextColor$0];
    }
    set disabledTextColor(value) {
      super.disabledTextColor = value;
    }
    get color() {
      return this[color$4];
    }
    set color(value) {
      super.color = value;
    }
    get disabledColor() {
      return this[disabledColor$0];
    }
    set disabledColor(value) {
      super.disabledColor = value;
    }
    get splashColor() {
      return this[splashColor$1];
    }
    set splashColor(value) {
      super.splashColor = value;
    }
    get focusColor() {
      return this[focusColor$2];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get hoverColor() {
      return this[hoverColor$2];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get highlightColor() {
      return this[highlightColor$0];
    }
    set highlightColor(value) {
      super.highlightColor = value;
    }
    get elevation() {
      return this[elevation$5];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get hoverElevation() {
      return this[hoverElevation$0];
    }
    set hoverElevation(value) {
      super.hoverElevation = value;
    }
    get focusElevation() {
      return this[focusElevation$0];
    }
    set focusElevation(value) {
      super.focusElevation = value;
    }
    get highlightElevation() {
      return this[highlightElevation$0];
    }
    set highlightElevation(value) {
      super.highlightElevation = value;
    }
    get disabledElevation() {
      return this[disabledElevation$0];
    }
    set disabledElevation(value) {
      super.disabledElevation = value;
    }
    get colorBrightness() {
      return this[colorBrightness$];
    }
    set colorBrightness(value) {
      super.colorBrightness = value;
    }
    get child() {
      return this[child$5];
    }
    set child(value) {
      super.child = value;
    }
    get padding() {
      return this[padding$4];
    }
    set padding(value) {
      super.padding = value;
    }
    get visualDensity() {
      return this[visualDensity$2];
    }
    set visualDensity(value) {
      super.visualDensity = value;
    }
    get shape() {
      return this[shape$6];
    }
    set shape(value) {
      super.shape = value;
    }
    get clipBehavior() {
      return this[clipBehavior$2];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get focusNode() {
      return this[focusNode$2];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    get autofocus() {
      return this[autofocus$2];
    }
    set autofocus(value) {
      super.autofocus = value;
    }
    get animationDuration() {
      return this[animationDuration$];
    }
    set animationDuration(value) {
      super.animationDuration = value;
    }
    get materialTapTargetSize() {
      return this[materialTapTargetSize$0];
    }
    set materialTapTargetSize(value) {
      super.materialTapTargetSize = value;
    }
    get minWidth() {
      return this[minWidth$];
    }
    set minWidth(value) {
      super.minWidth = value;
    }
    get height() {
      return this[height$2];
    }
    set height(value) {
      super.height = value;
    }
    get enableFeedback() {
      return this[enableFeedback$0];
    }
    set enableFeedback(value) {
      super.enableFeedback = value;
    }
    get enabled() {
      return this.onPressed != null || this.onLongPress != null;
    }
    build(context) {
      let t6, t6$, t6$0, t6$1, t6$2, t6$3, t6$4, t6$5, t6$6;
      let theme = theme$.Theme.of(context);
      let buttonTheme = button_theme.ButtonTheme.of(context);
      return new button.RawMaterialButton.new({onPressed: this.onPressed, onLongPress: this.onLongPress, enableFeedback: this.enableFeedback, onHighlightChanged: this.onHighlightChanged, mouseCursor: this.mouseCursor, fillColor: buttonTheme.getFillColor(this), textStyle: theme.textTheme.button.copyWith({color: buttonTheme.getTextColor(this)}), focusColor: (t6$ = (t6 = this.focusColor, t6 == null ? buttonTheme.getFocusColor(this) : t6), t6$ == null ? theme.focusColor : t6$), hoverColor: (t6$1 = (t6$0 = this.hoverColor, t6$0 == null ? buttonTheme.getHoverColor(this) : t6$0), t6$1 == null ? theme.hoverColor : t6$1), highlightColor: (t6$2 = this.highlightColor, t6$2 == null ? theme.highlightColor : t6$2), splashColor: (t6$3 = this.splashColor, t6$3 == null ? theme.splashColor : t6$3), elevation: buttonTheme.getElevation(this), focusElevation: buttonTheme.getFocusElevation(this), hoverElevation: buttonTheme.getHoverElevation(this), highlightElevation: buttonTheme.getHighlightElevation(this), padding: buttonTheme.getPadding(this), visualDensity: (t6$4 = this.visualDensity, t6$4 == null ? theme.visualDensity : t6$4), constraints: buttonTheme.getConstraints(this).copyWith({minWidth: this.minWidth, minHeight: this.height}), shape: buttonTheme.getShape(this), clipBehavior: this.clipBehavior, focusNode: this.focusNode, autofocus: this.autofocus, animationDuration: buttonTheme.getAnimationDuration(this), child: this.child, materialTapTargetSize: (t6$5 = this.materialTapTargetSize, t6$5 == null ? theme.materialTapTargetSize : t6$5), disabledElevation: (t6$6 = this.disabledElevation, t6$6 == null ? 0.0 : t6$6), $creationLocationd_0dea112b090073317d4: C894 || CT.C894});
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new diagnostics.FlagProperty.new("enabled", {value: this.enabled, ifFalse: "disabled"}));
      properties.add(new (DiagnosticsPropertyOfButtonTextThemeL()).new("textTheme", this.textTheme, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("textColor", this.textColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("disabledTextColor", this.disabledTextColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("disabledColor", this.disabledColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("focusColor", this.focusColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("hoverColor", this.hoverColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("highlightColor", this.highlightColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("splashColor", this.splashColor, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfBrightnessL()).new("colorBrightness", this.colorBrightness, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfEdgeInsetsGeometryL()).new("padding", this.padding, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfVisualDensityL()).new("visualDensity", this.visualDensity, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfShapeBorderL()).new("shape", this.shape, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfFocusNodeL()).new("focusNode", this.focusNode, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfMaterialTapTargetSizeL()).new("materialTapTargetSize", this.materialTapTargetSize, {defaultValue: null}));
    }
  };
  (material_button.MaterialButton.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let onHighlightChanged = opts && 'onHighlightChanged' in opts ? opts.onHighlightChanged : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
    let textColor = opts && 'textColor' in opts ? opts.textColor : null;
    let disabledTextColor = opts && 'disabledTextColor' in opts ? opts.disabledTextColor : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let colorBrightness = opts && 'colorBrightness' in opts ? opts.colorBrightness : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let focusElevation = opts && 'focusElevation' in opts ? opts.focusElevation : null;
    let hoverElevation = opts && 'hoverElevation' in opts ? opts.hoverElevation : null;
    let highlightElevation = opts && 'highlightElevation' in opts ? opts.highlightElevation : null;
    let disabledElevation = opts && 'disabledElevation' in opts ? opts.disabledElevation : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C321 || CT.C321;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : null;
    let minWidth = opts && 'minWidth' in opts ? opts.minWidth : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : true;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[onPressed$5] = onPressed;
    this[onLongPress$0] = onLongPress;
    this[onHighlightChanged$] = onHighlightChanged;
    this[mouseCursor$2] = mouseCursor;
    this[textTheme$] = textTheme;
    this[textColor$1] = textColor;
    this[disabledTextColor$0] = disabledTextColor;
    this[color$4] = color;
    this[disabledColor$0] = disabledColor;
    this[focusColor$2] = focusColor;
    this[hoverColor$2] = hoverColor;
    this[highlightColor$0] = highlightColor;
    this[splashColor$1] = splashColor;
    this[colorBrightness$] = colorBrightness;
    this[elevation$5] = elevation;
    this[focusElevation$0] = focusElevation;
    this[hoverElevation$0] = hoverElevation;
    this[highlightElevation$0] = highlightElevation;
    this[disabledElevation$0] = disabledElevation;
    this[padding$4] = padding;
    this[visualDensity$2] = visualDensity;
    this[shape$6] = shape;
    this[clipBehavior$2] = clipBehavior;
    this[focusNode$2] = focusNode;
    this[autofocus$2] = autofocus;
    this[materialTapTargetSize$0] = materialTapTargetSize;
    this[animationDuration$] = animationDuration;
    this[minWidth$] = minWidth;
    this[height$2] = height;
    this[enableFeedback$0] = enableFeedback;
    this[child$5] = child;
    if (!(clipBehavior != null)) dart.assertFailed(null, L25, 86, 15, "clipBehavior != null");
    if (!(autofocus != null)) dart.assertFailed(null, L25, 87, 15, "autofocus != null");
    if (!(elevation == null || dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, L25, 88, 15, "elevation == null || elevation >= 0.0");
    if (!(focusElevation == null || dart.notNull(focusElevation) >= 0.0)) dart.assertFailed(null, L25, 89, 15, "focusElevation == null || focusElevation >= 0.0");
    if (!(hoverElevation == null || dart.notNull(hoverElevation) >= 0.0)) dart.assertFailed(null, L25, 90, 15, "hoverElevation == null || hoverElevation >= 0.0");
    if (!(highlightElevation == null || dart.notNull(highlightElevation) >= 0.0)) dart.assertFailed(null, L25, 91, 15, "highlightElevation == null || highlightElevation >= 0.0");
    if (!(disabledElevation == null || dart.notNull(disabledElevation) >= 0.0)) dart.assertFailed(null, L25, 92, 15, "disabledElevation == null || disabledElevation >= 0.0");
    material_button.MaterialButton.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = material_button.MaterialButton.prototype;
  dart.addTypeTests(material_button.MaterialButton);
  dart.addTypeCaches(material_button.MaterialButton);
  dart.setMethodSignature(material_button.MaterialButton, () => ({
    __proto__: dart.getMethods(material_button.MaterialButton.__proto__),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setGetterSignature(material_button.MaterialButton, () => ({
    __proto__: dart.getGetters(material_button.MaterialButton.__proto__),
    enabled: dart.legacy(core.bool)
  }));
  dart.setLibraryUri(material_button.MaterialButton, L26);
  dart.setFieldSignature(material_button.MaterialButton, () => ({
    __proto__: dart.getFields(material_button.MaterialButton.__proto__),
    onPressed: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, []))),
    onLongPress: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, []))),
    onHighlightChanged: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, [dart.legacy(core.bool)]))),
    mouseCursor: dart.finalFieldType(dart.legacy(mouse_cursor.MouseCursor)),
    textTheme: dart.finalFieldType(dart.legacy(button_theme.ButtonTextTheme)),
    textColor: dart.finalFieldType(dart.legacy(ui.Color)),
    disabledTextColor: dart.finalFieldType(dart.legacy(ui.Color)),
    color: dart.finalFieldType(dart.legacy(ui.Color)),
    disabledColor: dart.finalFieldType(dart.legacy(ui.Color)),
    splashColor: dart.finalFieldType(dart.legacy(ui.Color)),
    focusColor: dart.finalFieldType(dart.legacy(ui.Color)),
    hoverColor: dart.finalFieldType(dart.legacy(ui.Color)),
    highlightColor: dart.finalFieldType(dart.legacy(ui.Color)),
    elevation: dart.finalFieldType(dart.legacy(core.double)),
    hoverElevation: dart.finalFieldType(dart.legacy(core.double)),
    focusElevation: dart.finalFieldType(dart.legacy(core.double)),
    highlightElevation: dart.finalFieldType(dart.legacy(core.double)),
    disabledElevation: dart.finalFieldType(dart.legacy(core.double)),
    colorBrightness: dart.finalFieldType(dart.legacy(ui.Brightness)),
    child: dart.finalFieldType(dart.legacy(framework.Widget)),
    padding: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsetsGeometry)),
    visualDensity: dart.finalFieldType(dart.legacy(theme_data.VisualDensity)),
    shape: dart.finalFieldType(dart.legacy(borders.ShapeBorder)),
    clipBehavior: dart.finalFieldType(dart.legacy(ui.Clip)),
    focusNode: dart.finalFieldType(dart.legacy(focus_manager.FocusNode)),
    autofocus: dart.finalFieldType(dart.legacy(core.bool)),
    animationDuration: dart.finalFieldType(dart.legacy(core.Duration)),
    materialTapTargetSize: dart.finalFieldType(dart.legacy(theme_data.MaterialTapTargetSize)),
    minWidth: dart.finalFieldType(dart.legacy(core.double)),
    height: dart.finalFieldType(dart.legacy(core.double)),
    enableFeedback: dart.finalFieldType(dart.legacy(core.bool))
  }));
  raised_button.RaisedButton = class RaisedButton extends material_button.MaterialButton {
    build(context) {
      let t6;
      let theme = theme$.Theme.of(context);
      let buttonTheme = button_theme.ButtonTheme.of(context);
      return new button.RawMaterialButton.new({onPressed: this.onPressed, onLongPress: this.onLongPress, onHighlightChanged: this.onHighlightChanged, mouseCursor: this.mouseCursor, clipBehavior: this.clipBehavior, fillColor: buttonTheme.getFillColor(this), textStyle: theme.textTheme.button.copyWith({color: buttonTheme.getTextColor(this)}), focusColor: buttonTheme.getFocusColor(this), hoverColor: buttonTheme.getHoverColor(this), highlightColor: buttonTheme.getHighlightColor(this), splashColor: buttonTheme.getSplashColor(this), elevation: buttonTheme.getElevation(this), focusElevation: buttonTheme.getFocusElevation(this), hoverElevation: buttonTheme.getHoverElevation(this), highlightElevation: buttonTheme.getHighlightElevation(this), disabledElevation: buttonTheme.getDisabledElevation(this), padding: buttonTheme.getPadding(this), visualDensity: (t6 = this.visualDensity, t6 == null ? theme.visualDensity : t6), constraints: buttonTheme.getConstraints(this), shape: buttonTheme.getShape(this), focusNode: this.focusNode, autofocus: this.autofocus, animationDuration: buttonTheme.getAnimationDuration(this), materialTapTargetSize: buttonTheme.getMaterialTapTargetSize(this), child: this.child, $creationLocationd_0dea112b090073317d4: C867 || CT.C867});
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfdoubleL()).new("elevation", this.elevation, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfdoubleL()).new("focusElevation", this.focusElevation, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfdoubleL()).new("hoverElevation", this.hoverElevation, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfdoubleL()).new("highlightElevation", this.highlightElevation, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfdoubleL()).new("disabledElevation", this.disabledElevation, {defaultValue: null}));
    }
  };
  (raised_button.RaisedButton.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let onHighlightChanged = opts && 'onHighlightChanged' in opts ? opts.onHighlightChanged : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
    let textColor = opts && 'textColor' in opts ? opts.textColor : null;
    let disabledTextColor = opts && 'disabledTextColor' in opts ? opts.disabledTextColor : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let colorBrightness = opts && 'colorBrightness' in opts ? opts.colorBrightness : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let focusElevation = opts && 'focusElevation' in opts ? opts.focusElevation : null;
    let hoverElevation = opts && 'hoverElevation' in opts ? opts.hoverElevation : null;
    let highlightElevation = opts && 'highlightElevation' in opts ? opts.highlightElevation : null;
    let disabledElevation = opts && 'disabledElevation' in opts ? opts.disabledElevation : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C321 || CT.C321;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    if (!(autofocus != null)) dart.assertFailed(null, L24, 141, 15, "autofocus != null");
    if (!(elevation == null || dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, L24, 142, 15, "elevation == null || elevation >= 0.0");
    if (!(focusElevation == null || dart.notNull(focusElevation) >= 0.0)) dart.assertFailed(null, L24, 143, 15, "focusElevation == null || focusElevation >= 0.0");
    if (!(hoverElevation == null || dart.notNull(hoverElevation) >= 0.0)) dart.assertFailed(null, L24, 144, 15, "hoverElevation == null || hoverElevation >= 0.0");
    if (!(highlightElevation == null || dart.notNull(highlightElevation) >= 0.0)) dart.assertFailed(null, L24, 145, 15, "highlightElevation == null || highlightElevation >= 0.0");
    if (!(disabledElevation == null || dart.notNull(disabledElevation) >= 0.0)) dart.assertFailed(null, L24, 146, 15, "disabledElevation == null || disabledElevation >= 0.0");
    if (!(clipBehavior != null)) dart.assertFailed(null, L24, 147, 15, "clipBehavior != null");
    raised_button.RaisedButton.__proto__.new.call(this, {key: key, onPressed: onPressed, onLongPress: onLongPress, onHighlightChanged: onHighlightChanged, mouseCursor: mouseCursor, textTheme: textTheme, textColor: textColor, disabledTextColor: disabledTextColor, color: color, disabledColor: disabledColor, focusColor: focusColor, hoverColor: hoverColor, highlightColor: highlightColor, splashColor: splashColor, colorBrightness: colorBrightness, elevation: elevation, focusElevation: focusElevation, hoverElevation: hoverElevation, highlightElevation: highlightElevation, disabledElevation: disabledElevation, padding: padding, visualDensity: visualDensity, shape: shape, clipBehavior: clipBehavior, focusNode: focusNode, autofocus: autofocus, materialTapTargetSize: materialTapTargetSize, animationDuration: animationDuration, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = raised_button.RaisedButton.prototype;
  dart.addTypeTests(raised_button.RaisedButton);
  dart.addTypeCaches(raised_button.RaisedButton);
  dart.setLibraryUri(raised_button.RaisedButton, L27);
  var C925;
  var C924;
  var C923;
  var C922;
  var C928;
  var C929;
  var C927;
  var C926;
  material_button.MaterialButtonWithIconMixin = class MaterialButtonWithIconMixin extends core.Object {};
  material_button.MaterialButtonWithIconMixin[dart.mixinOn] = Object => class MaterialButtonWithIconMixin extends Object {};
  (material_button.MaterialButtonWithIconMixin[dart.mixinNew] = function() {
  }).prototype = material_button.MaterialButtonWithIconMixin.prototype;
  dart.addTypeTests(material_button.MaterialButtonWithIconMixin);
  dart.addTypeCaches(material_button.MaterialButtonWithIconMixin);
  material_button.MaterialButtonWithIconMixin[dart.implements] = () => [core.Object];
  dart.setLibraryUri(material_button.MaterialButtonWithIconMixin, L26);
  const RaisedButton_MaterialButtonWithIconMixin$36 = class RaisedButton_MaterialButtonWithIconMixin extends raised_button.RaisedButton {};
  (RaisedButton_MaterialButtonWithIconMixin$36.new = function(opts) {
    RaisedButton_MaterialButtonWithIconMixin$36.__proto__.new.call(this, opts);
  }).prototype = RaisedButton_MaterialButtonWithIconMixin$36.prototype;
  dart.applyMixin(RaisedButton_MaterialButtonWithIconMixin$36, material_button.MaterialButtonWithIconMixin);
  raised_button._RaisedButtonWithIcon = class _RaisedButtonWithIcon extends RaisedButton_MaterialButtonWithIconMixin$36 {};
  (raised_button._RaisedButtonWithIcon.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let onHighlightChanged = opts && 'onHighlightChanged' in opts ? opts.onHighlightChanged : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
    let textColor = opts && 'textColor' in opts ? opts.textColor : null;
    let disabledTextColor = opts && 'disabledTextColor' in opts ? opts.disabledTextColor : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let colorBrightness = opts && 'colorBrightness' in opts ? opts.colorBrightness : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let highlightElevation = opts && 'highlightElevation' in opts ? opts.highlightElevation : null;
    let disabledElevation = opts && 'disabledElevation' in opts ? opts.disabledElevation : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C321 || CT.C321;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : null;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    let label = opts && 'label' in opts ? opts.label : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    if (!(elevation == null || dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, L24, 295, 15, "elevation == null || elevation >= 0.0");
    if (!(highlightElevation == null || dart.notNull(highlightElevation) >= 0.0)) dart.assertFailed(null, L24, 296, 15, "highlightElevation == null || highlightElevation >= 0.0");
    if (!(disabledElevation == null || dart.notNull(disabledElevation) >= 0.0)) dart.assertFailed(null, L24, 297, 15, "disabledElevation == null || disabledElevation >= 0.0");
    if (!(clipBehavior != null)) dart.assertFailed(null, L24, 298, 15, "clipBehavior != null");
    if (!(icon != null)) dart.assertFailed(null, L24, 299, 15, "icon != null");
    if (!(label != null)) dart.assertFailed(null, L24, 300, 15, "label != null");
    if (!(autofocus != null)) dart.assertFailed(null, L24, 301, 15, "autofocus != null");
    raised_button._RaisedButtonWithIcon.__proto__.new.call(this, {key: key, onPressed: onPressed, onLongPress: onLongPress, onHighlightChanged: onHighlightChanged, mouseCursor: mouseCursor, textTheme: textTheme, textColor: textColor, disabledTextColor: disabledTextColor, color: color, disabledColor: disabledColor, focusColor: focusColor, hoverColor: hoverColor, highlightColor: highlightColor, splashColor: splashColor, colorBrightness: colorBrightness, elevation: elevation, highlightElevation: highlightElevation, disabledElevation: disabledElevation, shape: shape, clipBehavior: clipBehavior, focusNode: focusNode, autofocus: autofocus, padding: padding, materialTapTargetSize: materialTapTargetSize, animationDuration: animationDuration, child: new basic.Row.new({mainAxisSize: flex.MainAxisSize.min, children: JSArrayOfWidgetL().of([icon, C922 || CT.C922, label]), $creationLocationd_0dea112b090073317d4: C926 || CT.C926}), $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = raised_button._RaisedButtonWithIcon.prototype;
  dart.addTypeTests(raised_button._RaisedButtonWithIcon);
  dart.addTypeCaches(raised_button._RaisedButtonWithIcon);
  dart.setLibraryUri(raised_button._RaisedButtonWithIcon, L27);
  var C932;
  var C933;
  var C934;
  var C935;
  var C936;
  var C937;
  var C938;
  var C939;
  var C940;
  var C941;
  var C942;
  var C943;
  var C944;
  var C945;
  var C946;
  var C947;
  var C948;
  var C949;
  var C950;
  var C951;
  var C952;
  var C953;
  var C954;
  var C931;
  var C930;
  var highlightedBorderColor$ = dart.privateName(outline_button, "OutlineButton.highlightedBorderColor");
  var disabledBorderColor$ = dart.privateName(outline_button, "OutlineButton.disabledBorderColor");
  var borderSide$ = dart.privateName(outline_button, "OutlineButton.borderSide");
  outline_button.OutlineButton = class OutlineButton extends material_button.MaterialButton {
    get highlightedBorderColor() {
      return this[highlightedBorderColor$];
    }
    set highlightedBorderColor(value) {
      super.highlightedBorderColor = value;
    }
    get disabledBorderColor() {
      return this[disabledBorderColor$];
    }
    set disabledBorderColor(value) {
      super.disabledBorderColor = value;
    }
    get borderSide() {
      return this[borderSide$];
    }
    set borderSide(value) {
      super.borderSide = value;
    }
    build(context) {
      let t6;
      let buttonTheme = button_theme.ButtonTheme.of(context);
      return new outline_button._OutlineButton.new({autofocus: this.autofocus, onPressed: this.onPressed, onLongPress: this.onLongPress, mouseCursor: this.mouseCursor, brightness: buttonTheme.getBrightness(this), textTheme: this.textTheme, textColor: buttonTheme.getTextColor(this), disabledTextColor: buttonTheme.getDisabledTextColor(this), color: this.color, focusColor: buttonTheme.getFocusColor(this), hoverColor: buttonTheme.getHoverColor(this), highlightColor: buttonTheme.getHighlightColor(this), splashColor: buttonTheme.getSplashColor(this), highlightElevation: buttonTheme.getHighlightElevation(this), borderSide: this.borderSide, disabledBorderColor: this.disabledBorderColor, highlightedBorderColor: (t6 = this.highlightedBorderColor, t6 == null ? buttonTheme.colorScheme.primary : t6), padding: buttonTheme.getPadding(this), visualDensity: this.visualDensity, shape: buttonTheme.getShape(this), clipBehavior: this.clipBehavior, focusNode: this.focusNode, materialTapTargetSize: this.materialTapTargetSize, child: this.child, $creationLocationd_0dea112b090073317d4: C930 || CT.C930});
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfBorderSideL()).new("borderSide", this.borderSide, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("disabledBorderColor", this.disabledBorderColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("highlightedBorderColor", this.highlightedBorderColor, {defaultValue: null}));
    }
  };
  (outline_button.OutlineButton.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
    let textColor = opts && 'textColor' in opts ? opts.textColor : null;
    let disabledTextColor = opts && 'disabledTextColor' in opts ? opts.disabledTextColor : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let highlightElevation = opts && 'highlightElevation' in opts ? opts.highlightElevation : null;
    let borderSide = opts && 'borderSide' in opts ? opts.borderSide : null;
    let disabledBorderColor = opts && 'disabledBorderColor' in opts ? opts.disabledBorderColor : null;
    let highlightedBorderColor = opts && 'highlightedBorderColor' in opts ? opts.highlightedBorderColor : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C321 || CT.C321;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[borderSide$] = borderSide;
    this[disabledBorderColor$] = disabledBorderColor;
    this[highlightedBorderColor$] = highlightedBorderColor;
    if (!(highlightElevation == null || dart.notNull(highlightElevation) >= 0.0)) dart.assertFailed(null, L28, 106, 15, "highlightElevation == null || highlightElevation >= 0.0");
    if (!(clipBehavior != null)) dart.assertFailed(null, L28, 107, 15, "clipBehavior != null");
    if (!(autofocus != null)) dart.assertFailed(null, L28, 108, 15, "autofocus != null");
    outline_button.OutlineButton.__proto__.new.call(this, {key: key, onPressed: onPressed, onLongPress: onLongPress, mouseCursor: mouseCursor, textTheme: textTheme, textColor: textColor, disabledTextColor: disabledTextColor, color: color, focusColor: focusColor, hoverColor: hoverColor, highlightColor: highlightColor, splashColor: splashColor, highlightElevation: highlightElevation, padding: padding, visualDensity: visualDensity, shape: shape, clipBehavior: clipBehavior, focusNode: focusNode, materialTapTargetSize: materialTapTargetSize, autofocus: autofocus, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = outline_button.OutlineButton.prototype;
  dart.addTypeTests(outline_button.OutlineButton);
  dart.addTypeCaches(outline_button.OutlineButton);
  dart.setLibraryUri(outline_button.OutlineButton, L29);
  dart.setFieldSignature(outline_button.OutlineButton, () => ({
    __proto__: dart.getFields(outline_button.OutlineButton.__proto__),
    highlightedBorderColor: dart.finalFieldType(dart.legacy(ui.Color)),
    disabledBorderColor: dart.finalFieldType(dart.legacy(ui.Color)),
    borderSide: dart.finalFieldType(dart.legacy(borders.BorderSide))
  }));
  var C958;
  var C957;
  var C956;
  var C955;
  var C961;
  var C962;
  var C960;
  var C959;
  const OutlineButton_MaterialButtonWithIconMixin$36 = class OutlineButton_MaterialButtonWithIconMixin extends outline_button.OutlineButton {};
  (OutlineButton_MaterialButtonWithIconMixin$36.new = function(opts) {
    OutlineButton_MaterialButtonWithIconMixin$36.__proto__.new.call(this, opts);
  }).prototype = OutlineButton_MaterialButtonWithIconMixin$36.prototype;
  dart.applyMixin(OutlineButton_MaterialButtonWithIconMixin$36, material_button.MaterialButtonWithIconMixin);
  outline_button._OutlineButtonWithIcon = class _OutlineButtonWithIcon extends OutlineButton_MaterialButtonWithIconMixin$36 {};
  (outline_button._OutlineButtonWithIcon.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
    let textColor = opts && 'textColor' in opts ? opts.textColor : null;
    let disabledTextColor = opts && 'disabledTextColor' in opts ? opts.disabledTextColor : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let highlightElevation = opts && 'highlightElevation' in opts ? opts.highlightElevation : null;
    let highlightedBorderColor = opts && 'highlightedBorderColor' in opts ? opts.highlightedBorderColor : null;
    let disabledBorderColor = opts && 'disabledBorderColor' in opts ? opts.disabledBorderColor : null;
    let borderSide = opts && 'borderSide' in opts ? opts.borderSide : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C321 || CT.C321;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    let label = opts && 'label' in opts ? opts.label : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    if (!(highlightElevation == null || dart.notNull(highlightElevation) >= 0.0)) dart.assertFailed(null, L28, 270, 15, "highlightElevation == null || highlightElevation >= 0.0");
    if (!(clipBehavior != null)) dart.assertFailed(null, L28, 271, 15, "clipBehavior != null");
    if (!(autofocus != null)) dart.assertFailed(null, L28, 272, 15, "autofocus != null");
    if (!(icon != null)) dart.assertFailed(null, L28, 273, 15, "icon != null");
    if (!(label != null)) dart.assertFailed(null, L28, 274, 15, "label != null");
    outline_button._OutlineButtonWithIcon.__proto__.new.call(this, {key: key, onPressed: onPressed, onLongPress: onLongPress, mouseCursor: mouseCursor, textTheme: textTheme, textColor: textColor, disabledTextColor: disabledTextColor, color: color, focusColor: focusColor, hoverColor: hoverColor, highlightColor: highlightColor, splashColor: splashColor, highlightElevation: highlightElevation, disabledBorderColor: disabledBorderColor, highlightedBorderColor: highlightedBorderColor, borderSide: borderSide, padding: padding, visualDensity: visualDensity, shape: shape, clipBehavior: clipBehavior, focusNode: focusNode, autofocus: autofocus, materialTapTargetSize: materialTapTargetSize, child: new basic.Row.new({mainAxisSize: flex.MainAxisSize.min, children: JSArrayOfWidgetL().of([icon, C955 || CT.C955, label]), $creationLocationd_0dea112b090073317d4: C959 || CT.C959}), $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = outline_button._OutlineButtonWithIcon.prototype;
  dart.addTypeTests(outline_button._OutlineButtonWithIcon);
  dart.addTypeCaches(outline_button._OutlineButtonWithIcon);
  dart.setLibraryUri(outline_button._OutlineButtonWithIcon, L29);
  var onPressed$6 = dart.privateName(outline_button, "_OutlineButton.onPressed");
  var onLongPress$1 = dart.privateName(outline_button, "_OutlineButton.onLongPress");
  var mouseCursor$3 = dart.privateName(outline_button, "_OutlineButton.mouseCursor");
  var brightness$ = dart.privateName(outline_button, "_OutlineButton.brightness");
  var textTheme$0 = dart.privateName(outline_button, "_OutlineButton.textTheme");
  var textColor$2 = dart.privateName(outline_button, "_OutlineButton.textColor");
  var disabledTextColor$1 = dart.privateName(outline_button, "_OutlineButton.disabledTextColor");
  var color$5 = dart.privateName(outline_button, "_OutlineButton.color");
  var splashColor$2 = dart.privateName(outline_button, "_OutlineButton.splashColor");
  var focusColor$3 = dart.privateName(outline_button, "_OutlineButton.focusColor");
  var hoverColor$3 = dart.privateName(outline_button, "_OutlineButton.hoverColor");
  var highlightColor$1 = dart.privateName(outline_button, "_OutlineButton.highlightColor");
  var highlightElevation$1 = dart.privateName(outline_button, "_OutlineButton.highlightElevation");
  var borderSide$0 = dart.privateName(outline_button, "_OutlineButton.borderSide");
  var disabledBorderColor$0 = dart.privateName(outline_button, "_OutlineButton.disabledBorderColor");
  var highlightedBorderColor$0 = dart.privateName(outline_button, "_OutlineButton.highlightedBorderColor");
  var padding$5 = dart.privateName(outline_button, "_OutlineButton.padding");
  var visualDensity$3 = dart.privateName(outline_button, "_OutlineButton.visualDensity");
  var shape$7 = dart.privateName(outline_button, "_OutlineButton.shape");
  var clipBehavior$3 = dart.privateName(outline_button, "_OutlineButton.clipBehavior");
  var focusNode$3 = dart.privateName(outline_button, "_OutlineButton.focusNode");
  var autofocus$3 = dart.privateName(outline_button, "_OutlineButton.autofocus");
  var child$6 = dart.privateName(outline_button, "_OutlineButton.child");
  var materialTapTargetSize$1 = dart.privateName(outline_button, "_OutlineButton.materialTapTargetSize");
  outline_button._OutlineButton = class _OutlineButton extends framework.StatefulWidget {
    get onPressed() {
      return this[onPressed$6];
    }
    set onPressed(value) {
      super.onPressed = value;
    }
    get onLongPress() {
      return this[onLongPress$1];
    }
    set onLongPress(value) {
      super.onLongPress = value;
    }
    get mouseCursor() {
      return this[mouseCursor$3];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get brightness() {
      return this[brightness$];
    }
    set brightness(value) {
      super.brightness = value;
    }
    get textTheme() {
      return this[textTheme$0];
    }
    set textTheme(value) {
      super.textTheme = value;
    }
    get textColor() {
      return this[textColor$2];
    }
    set textColor(value) {
      super.textColor = value;
    }
    get disabledTextColor() {
      return this[disabledTextColor$1];
    }
    set disabledTextColor(value) {
      super.disabledTextColor = value;
    }
    get color() {
      return this[color$5];
    }
    set color(value) {
      super.color = value;
    }
    get splashColor() {
      return this[splashColor$2];
    }
    set splashColor(value) {
      super.splashColor = value;
    }
    get focusColor() {
      return this[focusColor$3];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get hoverColor() {
      return this[hoverColor$3];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get highlightColor() {
      return this[highlightColor$1];
    }
    set highlightColor(value) {
      super.highlightColor = value;
    }
    get highlightElevation() {
      return this[highlightElevation$1];
    }
    set highlightElevation(value) {
      super.highlightElevation = value;
    }
    get borderSide() {
      return this[borderSide$0];
    }
    set borderSide(value) {
      super.borderSide = value;
    }
    get disabledBorderColor() {
      return this[disabledBorderColor$0];
    }
    set disabledBorderColor(value) {
      super.disabledBorderColor = value;
    }
    get highlightedBorderColor() {
      return this[highlightedBorderColor$0];
    }
    set highlightedBorderColor(value) {
      super.highlightedBorderColor = value;
    }
    get padding() {
      return this[padding$5];
    }
    set padding(value) {
      super.padding = value;
    }
    get visualDensity() {
      return this[visualDensity$3];
    }
    set visualDensity(value) {
      super.visualDensity = value;
    }
    get shape() {
      return this[shape$7];
    }
    set shape(value) {
      super.shape = value;
    }
    get clipBehavior() {
      return this[clipBehavior$3];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get focusNode() {
      return this[focusNode$3];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    get autofocus() {
      return this[autofocus$3];
    }
    set autofocus(value) {
      super.autofocus = value;
    }
    get child() {
      return this[child$6];
    }
    set child(value) {
      super.child = value;
    }
    get materialTapTargetSize() {
      return this[materialTapTargetSize$1];
    }
    set materialTapTargetSize(value) {
      super.materialTapTargetSize = value;
    }
    get enabled() {
      return this.onPressed != null || this.onLongPress != null;
    }
    createState() {
      return new outline_button._OutlineButtonState.new();
    }
  };
  (outline_button._OutlineButton.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let brightness = opts && 'brightness' in opts ? opts.brightness : null;
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
    let textColor = opts && 'textColor' in opts ? opts.textColor : null;
    let disabledTextColor = opts && 'disabledTextColor' in opts ? opts.disabledTextColor : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let highlightElevation = opts && 'highlightElevation' in opts ? opts.highlightElevation : null;
    let borderSide = opts && 'borderSide' in opts ? opts.borderSide : null;
    let disabledBorderColor = opts && 'disabledBorderColor' in opts ? opts.disabledBorderColor : null;
    let highlightedBorderColor = opts && 'highlightedBorderColor' in opts ? opts.highlightedBorderColor : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C321 || CT.C321;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    let child = opts && 'child' in opts ? opts.child : null;
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[onPressed$6] = onPressed;
    this[onLongPress$1] = onLongPress;
    this[mouseCursor$3] = mouseCursor;
    this[brightness$] = brightness;
    this[textTheme$0] = textTheme;
    this[textColor$2] = textColor;
    this[disabledTextColor$1] = disabledTextColor;
    this[color$5] = color;
    this[focusColor$3] = focusColor;
    this[hoverColor$3] = hoverColor;
    this[highlightColor$1] = highlightColor;
    this[splashColor$2] = splashColor;
    this[highlightElevation$1] = highlightElevation;
    this[borderSide$0] = borderSide;
    this[disabledBorderColor$0] = disabledBorderColor;
    this[highlightedBorderColor$0] = highlightedBorderColor;
    this[padding$5] = padding;
    this[visualDensity$3] = visualDensity;
    this[shape$7] = shape;
    this[clipBehavior$3] = clipBehavior;
    this[focusNode$3] = focusNode;
    this[autofocus$3] = autofocus;
    this[child$6] = child;
    this[materialTapTargetSize$1] = materialTapTargetSize;
    if (!(highlightElevation != null && dart.notNull(highlightElevation) >= 0.0)) dart.assertFailed(null, L28, 337, 15, "highlightElevation != null && highlightElevation >= 0.0");
    if (!(highlightedBorderColor != null)) dart.assertFailed(null, L28, 338, 15, "highlightedBorderColor != null");
    if (!(clipBehavior != null)) dart.assertFailed(null, L28, 339, 15, "clipBehavior != null");
    if (!(autofocus != null)) dart.assertFailed(null, L28, 340, 15, "autofocus != null");
    outline_button._OutlineButton.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = outline_button._OutlineButton.prototype;
  dart.addTypeTests(outline_button._OutlineButton);
  dart.addTypeCaches(outline_button._OutlineButton);
  dart.setMethodSignature(outline_button._OutlineButton, () => ({
    __proto__: dart.getMethods(outline_button._OutlineButton.__proto__),
    createState: dart.fnType(dart.legacy(outline_button._OutlineButtonState), [])
  }));
  dart.setGetterSignature(outline_button._OutlineButton, () => ({
    __proto__: dart.getGetters(outline_button._OutlineButton.__proto__),
    enabled: dart.legacy(core.bool)
  }));
  dart.setLibraryUri(outline_button._OutlineButton, L29);
  dart.setFieldSignature(outline_button._OutlineButton, () => ({
    __proto__: dart.getFields(outline_button._OutlineButton.__proto__),
    onPressed: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, []))),
    onLongPress: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, []))),
    mouseCursor: dart.finalFieldType(dart.legacy(mouse_cursor.MouseCursor)),
    brightness: dart.finalFieldType(dart.legacy(ui.Brightness)),
    textTheme: dart.finalFieldType(dart.legacy(button_theme.ButtonTextTheme)),
    textColor: dart.finalFieldType(dart.legacy(ui.Color)),
    disabledTextColor: dart.finalFieldType(dart.legacy(ui.Color)),
    color: dart.finalFieldType(dart.legacy(ui.Color)),
    splashColor: dart.finalFieldType(dart.legacy(ui.Color)),
    focusColor: dart.finalFieldType(dart.legacy(ui.Color)),
    hoverColor: dart.finalFieldType(dart.legacy(ui.Color)),
    highlightColor: dart.finalFieldType(dart.legacy(ui.Color)),
    highlightElevation: dart.finalFieldType(dart.legacy(core.double)),
    borderSide: dart.finalFieldType(dart.legacy(borders.BorderSide)),
    disabledBorderColor: dart.finalFieldType(dart.legacy(ui.Color)),
    highlightedBorderColor: dart.finalFieldType(dart.legacy(ui.Color)),
    padding: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsetsGeometry)),
    visualDensity: dart.finalFieldType(dart.legacy(theme_data.VisualDensity)),
    shape: dart.finalFieldType(dart.legacy(borders.ShapeBorder)),
    clipBehavior: dart.finalFieldType(dart.legacy(ui.Clip)),
    focusNode: dart.finalFieldType(dart.legacy(focus_manager.FocusNode)),
    autofocus: dart.finalFieldType(dart.legacy(core.bool)),
    child: dart.finalFieldType(dart.legacy(framework.Widget)),
    materialTapTargetSize: dart.finalFieldType(dart.legacy(theme_data.MaterialTapTargetSize))
  }));
  var _controller$0 = dart.privateName(outline_button, "_controller");
  var _fillAnimation = dart.privateName(outline_button, "_fillAnimation");
  var _elevationAnimation = dart.privateName(outline_button, "_elevationAnimation");
  var _pressed = dart.privateName(outline_button, "_pressed");
  var C963;
  var C965;
  var C964;
  var C966;
  var _handleHighlightChanged = dart.privateName(outline_button, "_handleHighlightChanged");
  var _getFillColor = dart.privateName(outline_button, "_getFillColor");
  var _outlineColor = dart.privateName(outline_button, "_outlineColor");
  var _getOutline = dart.privateName(outline_button, "_getOutline");
  var _getHighlightElevation = dart.privateName(outline_button, "_getHighlightElevation");
  var C969;
  var C970;
  var C971;
  var C972;
  var C973;
  var C974;
  var C975;
  var C976;
  var C977;
  var C978;
  var C979;
  var C980;
  var C981;
  var C982;
  var C983;
  var C984;
  var C985;
  var C986;
  var C987;
  var C988;
  var C989;
  var C990;
  var C991;
  var C992;
  var C993;
  var C994;
  var C968;
  var C967;
  var C997;
  var C998;
  var C996;
  var C995;
  const State_SingleTickerProviderStateMixin$36$0 = class State_SingleTickerProviderStateMixin extends framework.State$(dart.legacy(outline_button._OutlineButton)) {};
  (State_SingleTickerProviderStateMixin$36$0.new = function() {
    ticker_provider.SingleTickerProviderStateMixin$(dart.legacy(outline_button._OutlineButton))[dart.mixinNew].call(this);
    State_SingleTickerProviderStateMixin$36$0.__proto__.new.call(this);
  }).prototype = State_SingleTickerProviderStateMixin$36$0.prototype;
  dart.applyMixin(State_SingleTickerProviderStateMixin$36$0, ticker_provider.SingleTickerProviderStateMixin$(dart.legacy(outline_button._OutlineButton)));
  outline_button._OutlineButtonState = class _OutlineButtonState extends State_SingleTickerProviderStateMixin$36$0 {
    initState() {
      super.initState();
      this[_controller$0] = new animation_controller.AnimationController.new({duration: outline_button._kPressDuration, vsync: this});
      this[_fillAnimation] = new animations.CurvedAnimation.new({parent: this[_controller$0], curve: C963 || CT.C963});
      this[_elevationAnimation] = new animations.CurvedAnimation.new({parent: this[_controller$0], curve: C964 || CT.C964, reverseCurve: C966 || CT.C966});
    }
    didUpdateWidget(oldWidget) {
      _OutlineButtonL().as(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (dart.test(this[_pressed]) && !dart.test(this.widget.enabled)) {
        this[_pressed] = false;
        this[_controller$0].reverse();
      }
    }
    [_handleHighlightChanged](value) {
      if (dart.equals(this[_pressed], value)) return;
      this.setState(dart.fn(() => {
        this[_pressed] = value;
        if (dart.test(value))
          this[_controller$0].forward();
        else
          this[_controller$0].reverse();
      }, VoidToNullN()));
    }
    dispose() {
      this[_controller$0].dispose();
      super.dispose();
    }
    [_getFillColor]() {
      let t6;
      if (this.widget.highlightElevation == null || this.widget.highlightElevation === 0.0) return colors$.Colors.transparent;
      let color = (t6 = this.widget.color, t6 == null ? theme$.Theme.of(this.context).canvasColor : t6);
      let colorTween = new tween.ColorTween.new({begin: color.withAlpha(0), end: color.withAlpha(255)});
      return colorTween.evaluate(this[_fillAnimation]);
    }
    get [_outlineColor]() {
      let t6, t6$;
      if (MaterialStatePropertyLOfColorL().is((t6 = this.widget.borderSide, t6 == null ? null : t6.color))) return this.widget.borderSide.color;
      if (!dart.test(this.widget.enabled)) return this.widget.disabledBorderColor;
      if (dart.test(this[_pressed])) return this.widget.highlightedBorderColor;
      t6$ = this.widget.borderSide;
      return t6$ == null ? null : t6$.color;
    }
    [_getOutline]() {
      let t6, t6$, t6$0, t6$1;
      if ((t6 = this.widget.borderSide, t6 == null ? null : t6.style) == borders.BorderStyle.none) return this.widget.borderSide;
      let themeColor = theme$.Theme.of(this.context).colorScheme.onSurface.withOpacity(0.12);
      return new borders.BorderSide.new({color: (t6$ = this[_outlineColor], t6$ == null ? themeColor : t6$), width: (t6$1 = (t6$0 = this.widget.borderSide, t6$0 == null ? null : t6$0.width), t6$1 == null ? 1.0 : t6$1)});
    }
    [_getHighlightElevation]() {
      if (this.widget.highlightElevation == null || this.widget.highlightElevation === 0.0) return 0.0;
      return new (TweenOfdoubleL()).new({begin: 0.0, end: this.widget.highlightElevation}).evaluate(this[_elevationAnimation]);
    }
    build(context) {
      let theme = theme$.Theme.of(context);
      return new transitions.AnimatedBuilder.new({animation: this[_controller$0], builder: dart.fn((context, child) => {
          let t6;
          return new raised_button.RaisedButton.new({autofocus: this.widget.autofocus, textColor: this.widget.textColor, disabledTextColor: this.widget.disabledTextColor, color: this[_getFillColor](), splashColor: this.widget.splashColor, focusColor: this.widget.focusColor, hoverColor: this.widget.hoverColor, highlightColor: this.widget.highlightColor, disabledColor: colors$.Colors.transparent, onPressed: this.widget.onPressed, onLongPress: this.widget.onLongPress, mouseCursor: this.widget.mouseCursor, elevation: 0.0, disabledElevation: 0.0, focusElevation: 0.0, hoverElevation: 0.0, highlightElevation: this[_getHighlightElevation](), onHighlightChanged: dart.bind(this, _handleHighlightChanged), padding: this.widget.padding, visualDensity: (t6 = this.widget.visualDensity, t6 == null ? theme.visualDensity : t6), shape: new outline_button._OutlineBorder.new({shape: this.widget.shape, side: this[_getOutline]()}), clipBehavior: this.widget.clipBehavior, focusNode: this.widget.focusNode, animationDuration: outline_button._kElevationDuration, materialTapTargetSize: this.widget.materialTapTargetSize, child: this.widget.child, $creationLocationd_0dea112b090073317d4: C967 || CT.C967});
        }, BuildContextLAndWidgetLToRaisedButtonL()), $creationLocationd_0dea112b090073317d4: C995 || CT.C995});
    }
  };
  (outline_button._OutlineButtonState.new = function() {
    this[_controller$0] = null;
    this[_fillAnimation] = null;
    this[_elevationAnimation] = null;
    this[_pressed] = false;
    outline_button._OutlineButtonState.__proto__.new.call(this);
    ;
  }).prototype = outline_button._OutlineButtonState.prototype;
  dart.addTypeTests(outline_button._OutlineButtonState);
  dart.addTypeCaches(outline_button._OutlineButtonState);
  dart.setMethodSignature(outline_button._OutlineButtonState, () => ({
    __proto__: dart.getMethods(outline_button._OutlineButtonState.__proto__),
    [_handleHighlightChanged]: dart.fnType(dart.void, [dart.legacy(core.bool)]),
    [_getFillColor]: dart.fnType(dart.legacy(ui.Color), []),
    [_getOutline]: dart.fnType(dart.legacy(borders.BorderSide), []),
    [_getHighlightElevation]: dart.fnType(dart.legacy(core.double), []),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setGetterSignature(outline_button._OutlineButtonState, () => ({
    __proto__: dart.getGetters(outline_button._OutlineButtonState.__proto__),
    [_outlineColor]: dart.legacy(ui.Color)
  }));
  dart.setLibraryUri(outline_button._OutlineButtonState, L29);
  dart.setFieldSignature(outline_button._OutlineButtonState, () => ({
    __proto__: dart.getFields(outline_button._OutlineButtonState.__proto__),
    [_controller$0]: dart.fieldType(dart.legacy(animation_controller.AnimationController)),
    [_fillAnimation]: dart.fieldType(dart.legacy(animation.Animation$(dart.legacy(core.double)))),
    [_elevationAnimation]: dart.fieldType(dart.legacy(animation.Animation$(dart.legacy(core.double)))),
    [_pressed]: dart.fieldType(dart.legacy(core.bool))
  }));
  var C999;
  var shape$8 = dart.privateName(outline_button, "_OutlineBorder.shape");
  var side$ = dart.privateName(outline_button, "_OutlineBorder.side");
  outline_button._OutlineBorder = class _OutlineBorder extends borders.ShapeBorder {
    get shape() {
      return this[shape$8];
    }
    set shape(value) {
      super.shape = value;
    }
    get side() {
      return this[side$];
    }
    set side(value) {
      super.side = value;
    }
    get dimensions() {
      return new edge_insets.EdgeInsets.all(this.side.width);
    }
    scale(t) {
      return new outline_button._OutlineBorder.new({shape: this.shape.scale(t), side: this.side.scale(t)});
    }
    lerpFrom(a, t) {
      if (!(t != null)) dart.assertFailed(null, L28, 551, 12, "t != null");
      if (_OutlineBorderL().is(a)) {
        return new outline_button._OutlineBorder.new({side: borders.BorderSide.lerp(a.side, this.side, t), shape: borders.ShapeBorder.lerp(a.shape, this.shape, t)});
      }
      return super.lerpFrom(a, t);
    }
    lerpTo(b, t) {
      if (!(t != null)) dart.assertFailed(null, L28, 563, 12, "t != null");
      if (_OutlineBorderL().is(b)) {
        return new outline_button._OutlineBorder.new({side: borders.BorderSide.lerp(this.side, b.side, t), shape: borders.ShapeBorder.lerp(this.shape, b.shape, t)});
      }
      return super.lerpTo(b, t);
    }
    getInnerPath(rect, opts) {
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      return this.shape.getInnerPath(rect.deflate(this.side.width), {textDirection: textDirection});
    }
    getOuterPath(rect, opts) {
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      return this.shape.getOuterPath(rect, {textDirection: textDirection});
    }
    paint(canvas, rect, opts) {
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      switch (this.side.style) {
        case C383 || CT.C383:
        {
          break;
        }
        case C999 || CT.C999:
        {
          canvas.drawPath(this.shape.getOuterPath(rect, {textDirection: textDirection}), this.side.toPaint());
        }
      }
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this.runtimeType)) return false;
      return _OutlineBorderL().is(other) && dart.equals(other.side, this.side) && dart.equals(other.shape, this.shape);
    }
    get hashCode() {
      return ui.hashValues(this.side, this.shape);
    }
    resolve(states) {
      return new outline_button._OutlineBorder.new({shape: this.shape, side: this.side.copyWith({color: material_state.MaterialStateProperty.resolveAs(ColorL(), this.side.color, states)})});
    }
  };
  (outline_button._OutlineBorder.new = function(opts) {
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let side = opts && 'side' in opts ? opts.side : null;
    this[shape$8] = shape;
    this[side$] = side;
    if (!(shape != null)) dart.assertFailed(null, L28, 530, 15, "shape != null");
    if (!(side != null)) dart.assertFailed(null, L28, 531, 15, "side != null");
    outline_button._OutlineBorder.__proto__.new.call(this);
    ;
  }).prototype = outline_button._OutlineBorder.prototype;
  dart.addTypeTests(outline_button._OutlineBorder);
  dart.addTypeCaches(outline_button._OutlineBorder);
  outline_button._OutlineBorder[dart.implements] = () => [material_state.MaterialStateProperty$(dart.legacy(borders.ShapeBorder))];
  dart.setMethodSignature(outline_button._OutlineBorder, () => ({
    __proto__: dart.getMethods(outline_button._OutlineBorder.__proto__),
    scale: dart.fnType(dart.legacy(borders.ShapeBorder), [dart.legacy(core.double)]),
    getInnerPath: dart.fnType(dart.legacy(ui.Path), [dart.legacy(ui.Rect)], {textDirection: dart.legacy(ui.TextDirection)}, {}),
    getOuterPath: dart.fnType(dart.legacy(ui.Path), [dart.legacy(ui.Rect)], {textDirection: dart.legacy(ui.TextDirection)}, {}),
    paint: dart.fnType(dart.void, [dart.legacy(ui.Canvas), dart.legacy(ui.Rect)], {textDirection: dart.legacy(ui.TextDirection)}, {}),
    _equals: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    [$_equals]: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    resolve: dart.fnType(dart.legacy(borders.ShapeBorder), [dart.legacy(core.Set$(dart.legacy(material_state.MaterialState)))])
  }));
  dart.setGetterSignature(outline_button._OutlineBorder, () => ({
    __proto__: dart.getGetters(outline_button._OutlineBorder.__proto__),
    dimensions: dart.legacy(edge_insets.EdgeInsetsGeometry),
    hashCode: dart.legacy(core.int),
    [$hashCode]: dart.legacy(core.int)
  }));
  dart.setLibraryUri(outline_button._OutlineBorder, L29);
  dart.setFieldSignature(outline_button._OutlineBorder, () => ({
    __proto__: dart.getFields(outline_button._OutlineBorder.__proto__),
    shape: dart.finalFieldType(dart.legacy(borders.ShapeBorder)),
    side: dart.finalFieldType(dart.legacy(borders.BorderSide))
  }));
  dart.defineExtensionMethods(outline_button._OutlineBorder, ['_equals']);
  dart.defineExtensionAccessors(outline_button._OutlineBorder, ['hashCode']);
  dart.defineLazy(outline_button, {
    /*outline_button._kPressDuration*/get _kPressDuration() {
      return C279 || CT.C279;
    },
    /*outline_button._kElevationDuration*/get _kElevationDuration() {
      return C280 || CT.C280;
    }
  }, true);
  var VisualDensity_vertical = dart.privateName(theme_data, "VisualDensity.vertical");
  var VisualDensity_horizontal = dart.privateName(theme_data, "VisualDensity.horizontal");
  var C1000;
  var C1001;
  var C1004;
  var C1003;
  var C1002;
  var onPressed$7 = dart.privateName(button, "RawMaterialButton.onPressed");
  var onLongPress$2 = dart.privateName(button, "RawMaterialButton.onLongPress");
  var onHighlightChanged$0 = dart.privateName(button, "RawMaterialButton.onHighlightChanged");
  var mouseCursor$4 = dart.privateName(button, "RawMaterialButton.mouseCursor");
  var textStyle$1 = dart.privateName(button, "RawMaterialButton.textStyle");
  var fillColor$ = dart.privateName(button, "RawMaterialButton.fillColor");
  var focusColor$4 = dart.privateName(button, "RawMaterialButton.focusColor");
  var hoverColor$4 = dart.privateName(button, "RawMaterialButton.hoverColor");
  var highlightColor$2 = dart.privateName(button, "RawMaterialButton.highlightColor");
  var splashColor$3 = dart.privateName(button, "RawMaterialButton.splashColor");
  var elevation$6 = dart.privateName(button, "RawMaterialButton.elevation");
  var hoverElevation$1 = dart.privateName(button, "RawMaterialButton.hoverElevation");
  var focusElevation$1 = dart.privateName(button, "RawMaterialButton.focusElevation");
  var highlightElevation$2 = dart.privateName(button, "RawMaterialButton.highlightElevation");
  var disabledElevation$1 = dart.privateName(button, "RawMaterialButton.disabledElevation");
  var padding$6 = dart.privateName(button, "RawMaterialButton.padding");
  var visualDensity$4 = dart.privateName(button, "RawMaterialButton.visualDensity");
  var constraints$0 = dart.privateName(button, "RawMaterialButton.constraints");
  var shape$9 = dart.privateName(button, "RawMaterialButton.shape");
  var animationDuration$0 = dart.privateName(button, "RawMaterialButton.animationDuration");
  var child$7 = dart.privateName(button, "RawMaterialButton.child");
  var materialTapTargetSize$2 = dart.privateName(button, "RawMaterialButton.materialTapTargetSize");
  var focusNode$4 = dart.privateName(button, "RawMaterialButton.focusNode");
  var autofocus$4 = dart.privateName(button, "RawMaterialButton.autofocus");
  var clipBehavior$4 = dart.privateName(button, "RawMaterialButton.clipBehavior");
  var enableFeedback$1 = dart.privateName(button, "RawMaterialButton.enableFeedback");
  button.RawMaterialButton = class RawMaterialButton extends framework.StatefulWidget {
    get onPressed() {
      return this[onPressed$7];
    }
    set onPressed(value) {
      super.onPressed = value;
    }
    get onLongPress() {
      return this[onLongPress$2];
    }
    set onLongPress(value) {
      super.onLongPress = value;
    }
    get onHighlightChanged() {
      return this[onHighlightChanged$0];
    }
    set onHighlightChanged(value) {
      super.onHighlightChanged = value;
    }
    get mouseCursor() {
      return this[mouseCursor$4];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get textStyle() {
      return this[textStyle$1];
    }
    set textStyle(value) {
      super.textStyle = value;
    }
    get fillColor() {
      return this[fillColor$];
    }
    set fillColor(value) {
      super.fillColor = value;
    }
    get focusColor() {
      return this[focusColor$4];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get hoverColor() {
      return this[hoverColor$4];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get highlightColor() {
      return this[highlightColor$2];
    }
    set highlightColor(value) {
      super.highlightColor = value;
    }
    get splashColor() {
      return this[splashColor$3];
    }
    set splashColor(value) {
      super.splashColor = value;
    }
    get elevation() {
      return this[elevation$6];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get hoverElevation() {
      return this[hoverElevation$1];
    }
    set hoverElevation(value) {
      super.hoverElevation = value;
    }
    get focusElevation() {
      return this[focusElevation$1];
    }
    set focusElevation(value) {
      super.focusElevation = value;
    }
    get highlightElevation() {
      return this[highlightElevation$2];
    }
    set highlightElevation(value) {
      super.highlightElevation = value;
    }
    get disabledElevation() {
      return this[disabledElevation$1];
    }
    set disabledElevation(value) {
      super.disabledElevation = value;
    }
    get padding() {
      return this[padding$6];
    }
    set padding(value) {
      super.padding = value;
    }
    get visualDensity() {
      return this[visualDensity$4];
    }
    set visualDensity(value) {
      super.visualDensity = value;
    }
    get constraints() {
      return this[constraints$0];
    }
    set constraints(value) {
      super.constraints = value;
    }
    get shape() {
      return this[shape$9];
    }
    set shape(value) {
      super.shape = value;
    }
    get animationDuration() {
      return this[animationDuration$0];
    }
    set animationDuration(value) {
      super.animationDuration = value;
    }
    get child() {
      return this[child$7];
    }
    set child(value) {
      super.child = value;
    }
    get materialTapTargetSize() {
      return this[materialTapTargetSize$2];
    }
    set materialTapTargetSize(value) {
      super.materialTapTargetSize = value;
    }
    get focusNode() {
      return this[focusNode$4];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    get autofocus() {
      return this[autofocus$4];
    }
    set autofocus(value) {
      super.autofocus = value;
    }
    get clipBehavior() {
      return this[clipBehavior$4];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get enableFeedback() {
      return this[enableFeedback$1];
    }
    set enableFeedback(value) {
      super.enableFeedback = value;
    }
    get enabled() {
      return this.onPressed != null || this.onLongPress != null;
    }
    createState() {
      return new button._RawMaterialButtonState.new();
    }
  };
  (button.RawMaterialButton.new = function(opts) {
    let t6;
    let key = opts && 'key' in opts ? opts.key : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let onHighlightChanged = opts && 'onHighlightChanged' in opts ? opts.onHighlightChanged : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
    let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : 2;
    let focusElevation = opts && 'focusElevation' in opts ? opts.focusElevation : 4;
    let hoverElevation = opts && 'hoverElevation' in opts ? opts.hoverElevation : 4;
    let highlightElevation = opts && 'highlightElevation' in opts ? opts.highlightElevation : 8;
    let disabledElevation = opts && 'disabledElevation' in opts ? opts.disabledElevation : 0;
    let padding = opts && 'padding' in opts ? opts.padding : C278 || CT.C278;
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : C1000 || CT.C1000;
    let constraints = opts && 'constraints' in opts ? opts.constraints : C1001 || CT.C1001;
    let shape = opts && 'shape' in opts ? opts.shape : C1002 || CT.C1002;
    let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : C243 || CT.C243;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C321 || CT.C321;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : true;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[onPressed$7] = onPressed;
    this[onLongPress$2] = onLongPress;
    this[onHighlightChanged$0] = onHighlightChanged;
    this[mouseCursor$4] = mouseCursor;
    this[textStyle$1] = textStyle;
    this[fillColor$] = fillColor;
    this[focusColor$4] = focusColor;
    this[hoverColor$4] = hoverColor;
    this[highlightColor$2] = highlightColor;
    this[splashColor$3] = splashColor;
    this[elevation$6] = elevation;
    this[focusElevation$1] = focusElevation;
    this[hoverElevation$1] = hoverElevation;
    this[highlightElevation$2] = highlightElevation;
    this[disabledElevation$1] = disabledElevation;
    this[padding$6] = padding;
    this[visualDensity$4] = visualDensity;
    this[constraints$0] = constraints;
    this[shape$9] = shape;
    this[animationDuration$0] = animationDuration;
    this[clipBehavior$4] = clipBehavior;
    this[focusNode$4] = focusNode;
    this[autofocus$4] = autofocus;
    this[child$7] = child;
    this[enableFeedback$1] = enableFeedback;
    this[materialTapTargetSize$2] = (t6 = materialTapTargetSize, t6 == null ? theme_data.MaterialTapTargetSize.padded : t6);
    if (!(shape != null)) dart.assertFailed(null, L30, 70, 15, "shape != null");
    if (!(elevation != null && dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, L30, 71, 15, "elevation != null && elevation >= 0.0");
    if (!(focusElevation != null && dart.notNull(focusElevation) >= 0.0)) dart.assertFailed(null, L30, 72, 15, "focusElevation != null && focusElevation >= 0.0");
    if (!(hoverElevation != null && dart.notNull(hoverElevation) >= 0.0)) dart.assertFailed(null, L30, 73, 15, "hoverElevation != null && hoverElevation >= 0.0");
    if (!(highlightElevation != null && dart.notNull(highlightElevation) >= 0.0)) dart.assertFailed(null, L30, 74, 15, "highlightElevation != null && highlightElevation >= 0.0");
    if (!(disabledElevation != null && dart.notNull(disabledElevation) >= 0.0)) dart.assertFailed(null, L30, 75, 15, "disabledElevation != null && disabledElevation >= 0.0");
    if (!(padding != null)) dart.assertFailed(null, L30, 76, 15, "padding != null");
    if (!(constraints != null)) dart.assertFailed(null, L30, 77, 15, "constraints != null");
    if (!(animationDuration != null)) dart.assertFailed(null, L30, 78, 15, "animationDuration != null");
    if (!(clipBehavior != null)) dart.assertFailed(null, L30, 79, 15, "clipBehavior != null");
    if (!(autofocus != null)) dart.assertFailed(null, L30, 80, 15, "autofocus != null");
    button.RawMaterialButton.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = button.RawMaterialButton.prototype;
  dart.addTypeTests(button.RawMaterialButton);
  dart.addTypeCaches(button.RawMaterialButton);
  dart.setMethodSignature(button.RawMaterialButton, () => ({
    __proto__: dart.getMethods(button.RawMaterialButton.__proto__),
    createState: dart.fnType(dart.legacy(button._RawMaterialButtonState), [])
  }));
  dart.setGetterSignature(button.RawMaterialButton, () => ({
    __proto__: dart.getGetters(button.RawMaterialButton.__proto__),
    enabled: dart.legacy(core.bool)
  }));
  dart.setLibraryUri(button.RawMaterialButton, L31);
  dart.setFieldSignature(button.RawMaterialButton, () => ({
    __proto__: dart.getFields(button.RawMaterialButton.__proto__),
    onPressed: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, []))),
    onLongPress: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, []))),
    onHighlightChanged: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, [dart.legacy(core.bool)]))),
    mouseCursor: dart.finalFieldType(dart.legacy(mouse_cursor.MouseCursor)),
    textStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    fillColor: dart.finalFieldType(dart.legacy(ui.Color)),
    focusColor: dart.finalFieldType(dart.legacy(ui.Color)),
    hoverColor: dart.finalFieldType(dart.legacy(ui.Color)),
    highlightColor: dart.finalFieldType(dart.legacy(ui.Color)),
    splashColor: dart.finalFieldType(dart.legacy(ui.Color)),
    elevation: dart.finalFieldType(dart.legacy(core.double)),
    hoverElevation: dart.finalFieldType(dart.legacy(core.double)),
    focusElevation: dart.finalFieldType(dart.legacy(core.double)),
    highlightElevation: dart.finalFieldType(dart.legacy(core.double)),
    disabledElevation: dart.finalFieldType(dart.legacy(core.double)),
    padding: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsetsGeometry)),
    visualDensity: dart.finalFieldType(dart.legacy(theme_data.VisualDensity)),
    constraints: dart.finalFieldType(dart.legacy(box.BoxConstraints)),
    shape: dart.finalFieldType(dart.legacy(borders.ShapeBorder)),
    animationDuration: dart.finalFieldType(dart.legacy(core.Duration)),
    child: dart.finalFieldType(dart.legacy(framework.Widget)),
    materialTapTargetSize: dart.finalFieldType(dart.legacy(theme_data.MaterialTapTargetSize)),
    focusNode: dart.finalFieldType(dart.legacy(focus_manager.FocusNode)),
    autofocus: dart.finalFieldType(dart.legacy(core.bool)),
    clipBehavior: dart.finalFieldType(dart.legacy(ui.Clip)),
    enableFeedback: dart.finalFieldType(dart.legacy(core.bool))
  }));
  var _states = dart.privateName(button, "_states");
  var _hovered = dart.privateName(button, "_hovered");
  var _focused = dart.privateName(button, "_focused");
  var _pressed$ = dart.privateName(button, "_pressed");
  var _disabled = dart.privateName(button, "_disabled");
  var _updateState = dart.privateName(button, "_updateState");
  var _handleHighlightChanged$ = dart.privateName(button, "_handleHighlightChanged");
  var _handleHoveredChanged = dart.privateName(button, "_handleHoveredChanged");
  var _handleFocusedChanged = dart.privateName(button, "_handleFocusedChanged");
  var _effectiveElevation = dart.privateName(button, "_effectiveElevation");
  var C1007;
  var C1008;
  var C1009;
  var C1006;
  var C1005;
  var C1012;
  var C1013;
  var C1011;
  var C1010;
  var C1016;
  var C1017;
  var C1018;
  var C1019;
  var C1020;
  var C1021;
  var C1022;
  var C1023;
  var C1024;
  var C1025;
  var C1026;
  var C1027;
  var C1028;
  var C1029;
  var C1030;
  var C1031;
  var C1015;
  var C1014;
  var C1034;
  var C1035;
  var C1036;
  var C1037;
  var C1038;
  var C1039;
  var C1040;
  var C1041;
  var C1033;
  var C1032;
  var C1044;
  var C1045;
  var C1043;
  var C1042;
  var _name$8 = dart.privateName(theme_data, "_name");
  var C1046;
  var C1047;
  var C1050;
  var C1051;
  var C1049;
  var C1048;
  var C1054;
  var C1055;
  var C1056;
  var C1057;
  var C1053;
  var C1052;
  button._RawMaterialButtonState = class _RawMaterialButtonState extends framework.State$(dart.legacy(button.RawMaterialButton)) {
    get [_hovered]() {
      return this[_states].contains(material_state.MaterialState.hovered);
    }
    get [_focused]() {
      return this[_states].contains(material_state.MaterialState.focused);
    }
    get [_pressed$]() {
      return this[_states].contains(material_state.MaterialState.pressed);
    }
    get [_disabled]() {
      return this[_states].contains(material_state.MaterialState.disabled);
    }
    [_updateState](state, value) {
      dart.test(value) ? this[_states].add(state) : this[_states].remove(state);
    }
    [_handleHighlightChanged$](value) {
      if (!dart.equals(this[_pressed$], value)) {
        this.setState(dart.fn(() => {
          let t7, t6;
          this[_updateState](material_state.MaterialState.pressed, value);
          if (this.widget.onHighlightChanged != null) {
            t6 = this.widget;
            t7 = value;
            t6.onHighlightChanged(t7);
          }
        }, VoidToNullN()));
      }
    }
    [_handleHoveredChanged](value) {
      if (!dart.equals(this[_hovered], value)) {
        this.setState(dart.fn(() => {
          this[_updateState](material_state.MaterialState.hovered, value);
        }, VoidToNullN()));
      }
    }
    [_handleFocusedChanged](value) {
      if (!dart.equals(this[_focused], value)) {
        this.setState(dart.fn(() => {
          this[_updateState](material_state.MaterialState.focused, value);
        }, VoidToNullN()));
      }
    }
    initState() {
      super.initState();
      this[_updateState](material_state.MaterialState.disabled, !dart.test(this.widget.enabled));
    }
    didUpdateWidget(oldWidget) {
      RawMaterialButtonL().as(oldWidget);
      super.didUpdateWidget(oldWidget);
      this[_updateState](material_state.MaterialState.disabled, !dart.test(this.widget.enabled));
      if (dart.test(this[_disabled]) && dart.test(this[_pressed$])) {
        this[_handleHighlightChanged$](false);
      }
    }
    get [_effectiveElevation]() {
      if (dart.test(this[_disabled])) {
        return this.widget.disabledElevation;
      }
      if (dart.test(this[_pressed$])) {
        return this.widget.highlightElevation;
      }
      if (dart.test(this[_hovered])) {
        return this.widget.hoverElevation;
      }
      if (dart.test(this[_focused])) {
        return this.widget.focusElevation;
      }
      return this.widget.elevation;
    }
    build(context) {
      let t6, t6$, t6$0;
      let effectiveTextColor = material_state.MaterialStateProperty.resolveAs(ColorL(), (t6 = this.widget.textStyle, t6 == null ? null : t6.color), this[_states]);
      let effectiveShape = material_state.MaterialStateProperty.resolveAs(ShapeBorderL(), this.widget.shape, this[_states]);
      let densityAdjustment = this.widget.visualDensity.baseSizeAdjustment;
      let effectiveConstraints = this.widget.visualDensity.effectiveConstraints(this.widget.constraints);
      let effectiveMouseCursor = material_state.MaterialStateProperty.resolveAs(MouseCursorL(), (t6$ = this.widget.mouseCursor, t6$ == null ? material_state.MaterialStateMouseCursor.clickable : t6$), this[_states]);
      let padding = this.widget.padding.add(new edge_insets.EdgeInsets.only({left: densityAdjustment.dx, top: densityAdjustment.dy, right: densityAdjustment.dx, bottom: densityAdjustment.dy})).clamp(edge_insets.EdgeInsets.zero, edge_insets.EdgeInsetsGeometry.infinity);
      let result = new basic.ConstrainedBox.new({constraints: effectiveConstraints, child: new material.Material.new({elevation: this[_effectiveElevation], textStyle: (t6$0 = this.widget.textStyle, t6$0 == null ? null : t6$0.copyWith({color: effectiveTextColor})), shape: effectiveShape, color: this.widget.fillColor, type: this.widget.fillColor == null ? material.MaterialType.transparency : material.MaterialType.button, animationDuration: this.widget.animationDuration, clipBehavior: this.widget.clipBehavior, child: new ink_well.InkWell.new({focusNode: this.widget.focusNode, canRequestFocus: this.widget.enabled, onFocusChange: dart.bind(this, _handleFocusedChanged), autofocus: this.widget.autofocus, onHighlightChanged: dart.bind(this, _handleHighlightChanged$), splashColor: this.widget.splashColor, highlightColor: this.widget.highlightColor, focusColor: this.widget.focusColor, hoverColor: this.widget.hoverColor, onHover: dart.bind(this, _handleHoveredChanged), onTap: this.widget.onPressed, onLongPress: this.widget.onLongPress, enableFeedback: this.widget.enableFeedback, customBorder: effectiveShape, mouseCursor: effectiveMouseCursor, child: icon_theme.IconTheme.merge({data: new icon_theme_data.IconThemeData.new({color: effectiveTextColor}), child: new container.Container.new({padding: padding, child: new basic.Center.new({widthFactor: 1.0, heightFactor: 1.0, child: this.widget.child, $creationLocationd_0dea112b090073317d4: C1005 || CT.C1005}), $creationLocationd_0dea112b090073317d4: C1010 || CT.C1010})}), $creationLocationd_0dea112b090073317d4: C1014 || CT.C1014}), $creationLocationd_0dea112b090073317d4: C1032 || CT.C1032}), $creationLocationd_0dea112b090073317d4: C1042 || CT.C1042});
      let minSize = null;
      switch (this.widget.materialTapTargetSize) {
        case C1046 || CT.C1046:
        {
          minSize = new ui.Size.new(48 + dart.notNull(densityAdjustment.dx), 48 + dart.notNull(densityAdjustment.dy));
          if (!(dart.notNull(minSize.width) >= 0.0)) dart.assertFailed(null, L30, 451, 16, "minSize.width >= 0.0");
          if (!(dart.notNull(minSize.height) >= 0.0)) dart.assertFailed(null, L30, 452, 16, "minSize.height >= 0.0");
          break;
        }
        case C1047 || CT.C1047:
        {
          minSize = ui.Size.zero;
          break;
        }
      }
      return new basic.Semantics.new({container: true, button: true, enabled: this.widget.enabled, child: new button._InputPadding.new({minSize: minSize, child: result, $creationLocationd_0dea112b090073317d4: C1048 || CT.C1048}), $creationLocationd_0dea112b090073317d4: C1052 || CT.C1052});
    }
  };
  (button._RawMaterialButtonState.new = function() {
    this[_states] = LinkedHashSetOfMaterialStateL().new();
    button._RawMaterialButtonState.__proto__.new.call(this);
    ;
  }).prototype = button._RawMaterialButtonState.prototype;
  dart.addTypeTests(button._RawMaterialButtonState);
  dart.addTypeCaches(button._RawMaterialButtonState);
  dart.setMethodSignature(button._RawMaterialButtonState, () => ({
    __proto__: dart.getMethods(button._RawMaterialButtonState.__proto__),
    [_updateState]: dart.fnType(dart.void, [dart.legacy(material_state.MaterialState), dart.legacy(core.bool)]),
    [_handleHighlightChanged$]: dart.fnType(dart.void, [dart.legacy(core.bool)]),
    [_handleHoveredChanged]: dart.fnType(dart.void, [dart.legacy(core.bool)]),
    [_handleFocusedChanged]: dart.fnType(dart.void, [dart.legacy(core.bool)]),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setGetterSignature(button._RawMaterialButtonState, () => ({
    __proto__: dart.getGetters(button._RawMaterialButtonState.__proto__),
    [_hovered]: dart.legacy(core.bool),
    [_focused]: dart.legacy(core.bool),
    [_pressed$]: dart.legacy(core.bool),
    [_disabled]: dart.legacy(core.bool),
    [_effectiveElevation]: dart.legacy(core.double)
  }));
  dart.setLibraryUri(button._RawMaterialButtonState, L31);
  dart.setFieldSignature(button._RawMaterialButtonState, () => ({
    __proto__: dart.getFields(button._RawMaterialButtonState.__proto__),
    [_states]: dart.finalFieldType(dart.legacy(core.Set$(dart.legacy(material_state.MaterialState))))
  }));
  var minSize$ = dart.privateName(button, "_InputPadding.minSize");
  button._InputPadding = class _InputPadding extends framework.SingleChildRenderObjectWidget {
    get minSize() {
      return this[minSize$];
    }
    set minSize(value) {
      super.minSize = value;
    }
    createRenderObject(context) {
      return new button._RenderInputPadding.new(this.minSize);
    }
    updateRenderObject(context, renderObject) {
      _RenderInputPaddingL().as(renderObject);
      renderObject.minSize = this.minSize;
    }
  };
  (button._InputPadding.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let minSize = opts && 'minSize' in opts ? opts.minSize : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[minSize$] = minSize;
    button._InputPadding.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = button._InputPadding.prototype;
  dart.addTypeTests(button._InputPadding);
  dart.addTypeCaches(button._InputPadding);
  dart.setMethodSignature(button._InputPadding, () => ({
    __proto__: dart.getMethods(button._InputPadding.__proto__),
    createRenderObject: dart.fnType(dart.legacy(object.RenderObject), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(button._InputPadding, L31);
  dart.setFieldSignature(button._InputPadding, () => ({
    __proto__: dart.getFields(button._InputPadding.__proto__),
    minSize: dart.finalFieldType(dart.legacy(ui.Size))
  }));
  var _minSize$ = dart.privateName(button, "_minSize");
  button._RenderInputPadding = class _RenderInputPadding extends shifted_box.RenderShiftedBox {
    get minSize() {
      return this[_minSize$];
    }
    set minSize(value) {
      if (dart.equals(this[_minSize$], value)) return;
      this[_minSize$] = value;
      this.markNeedsLayout();
    }
    computeMinIntrinsicWidth(height) {
      if (this.child != null) return math.max(doubleL(), this.child.getMinIntrinsicWidth(height), this.minSize.width);
      return 0.0;
    }
    computeMinIntrinsicHeight(width) {
      if (this.child != null) return math.max(doubleL(), this.child.getMinIntrinsicHeight(width), this.minSize.height);
      return 0.0;
    }
    computeMaxIntrinsicWidth(height) {
      if (this.child != null) return math.max(doubleL(), this.child.getMaxIntrinsicWidth(height), this.minSize.width);
      return 0.0;
    }
    computeMaxIntrinsicHeight(width) {
      if (this.child != null) return math.max(doubleL(), this.child.getMaxIntrinsicHeight(width), this.minSize.height);
      return 0.0;
    }
    performLayout() {
      let constraints = this.constraints;
      if (this.child != null) {
        this.child.layout(constraints, {parentUsesSize: true});
        let height = math.max(doubleL(), this.child.size.width, this.minSize.width);
        let width = math.max(doubleL(), this.child.size.height, this.minSize.height);
        this.size = constraints.constrain(new ui.Size.new(height, width));
        let childParentData = BoxParentDataL().as(this.child.parentData);
        childParentData.offset = alignment.Alignment.center.alongOffset(OffsetL().as(this.size['-'](this.child.size)));
      } else {
        this.size = ui.Size.zero;
      }
    }
    hitTest(result, opts) {
      let position = opts && 'position' in opts ? opts.position : null;
      if (dart.test(super.hitTest(result, {position: position}))) {
        return true;
      }
      let center = this.child.size.center(ui.Offset.zero);
      return result.addWithRawTransform({transform: matrix_utils.MatrixUtils.forceToPoint(center), position: center, hitTest: dart.fn((result, position) => {
          if (!dart.equals(position, center)) dart.assertFailed(null, L30, 561, 16, "position == center");
          return this.child.hitTest(result, {position: center});
        }, BoxHitTestResultLAndOffsetLToboolL())});
    }
  };
  (button._RenderInputPadding.new = function(_minSize, child = null) {
    this[_minSize$] = _minSize;
    button._RenderInputPadding.__proto__.new.call(this, child);
    ;
  }).prototype = button._RenderInputPadding.prototype;
  dart.addTypeTests(button._RenderInputPadding);
  dart.addTypeCaches(button._RenderInputPadding);
  dart.setGetterSignature(button._RenderInputPadding, () => ({
    __proto__: dart.getGetters(button._RenderInputPadding.__proto__),
    minSize: dart.legacy(ui.Size)
  }));
  dart.setSetterSignature(button._RenderInputPadding, () => ({
    __proto__: dart.getSetters(button._RenderInputPadding.__proto__),
    minSize: dart.legacy(ui.Size)
  }));
  dart.setLibraryUri(button._RenderInputPadding, L31);
  dart.setFieldSignature(button._RenderInputPadding, () => ({
    __proto__: dart.getFields(button._RenderInputPadding.__proto__),
    [_minSize$]: dart.fieldType(dart.legacy(ui.Size))
  }));
  var C1060;
  var C1061;
  var C1062;
  var C1063;
  var C1064;
  var C1065;
  var C1066;
  var C1067;
  var C1068;
  var C1069;
  var C1070;
  var C1071;
  var C1072;
  var C1073;
  var C1074;
  var C1075;
  var C1076;
  var C1077;
  var C1078;
  var C1079;
  var C1080;
  var C1081;
  var C1082;
  var C1083;
  var C1084;
  var C1059;
  var C1058;
  flat_button.FlatButton = class FlatButton extends material_button.MaterialButton {
    build(context) {
      let t6;
      let theme = theme$.Theme.of(context);
      let buttonTheme = button_theme.ButtonTheme.of(context);
      return new button.RawMaterialButton.new({onPressed: this.onPressed, onLongPress: this.onLongPress, onHighlightChanged: this.onHighlightChanged, mouseCursor: this.mouseCursor, fillColor: buttonTheme.getFillColor(this), textStyle: theme.textTheme.button.copyWith({color: buttonTheme.getTextColor(this)}), focusColor: buttonTheme.getFocusColor(this), hoverColor: buttonTheme.getHoverColor(this), highlightColor: buttonTheme.getHighlightColor(this), splashColor: buttonTheme.getSplashColor(this), elevation: buttonTheme.getElevation(this), focusElevation: buttonTheme.getFocusElevation(this), hoverElevation: buttonTheme.getHoverElevation(this), highlightElevation: buttonTheme.getHighlightElevation(this), disabledElevation: buttonTheme.getDisabledElevation(this), padding: buttonTheme.getPadding(this), visualDensity: (t6 = this.visualDensity, t6 == null ? theme.visualDensity : t6), constraints: buttonTheme.getConstraints(this), shape: buttonTheme.getShape(this), clipBehavior: this.clipBehavior, focusNode: this.focusNode, autofocus: this.autofocus, materialTapTargetSize: buttonTheme.getMaterialTapTargetSize(this), animationDuration: buttonTheme.getAnimationDuration(this), child: this.child, $creationLocationd_0dea112b090073317d4: C1058 || CT.C1058});
    }
  };
  (flat_button.FlatButton.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let onHighlightChanged = opts && 'onHighlightChanged' in opts ? opts.onHighlightChanged : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
    let textColor = opts && 'textColor' in opts ? opts.textColor : null;
    let disabledTextColor = opts && 'disabledTextColor' in opts ? opts.disabledTextColor : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let colorBrightness = opts && 'colorBrightness' in opts ? opts.colorBrightness : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C321 || CT.C321;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    if (!(clipBehavior != null)) dart.assertFailed(null, L32, 129, 15, "clipBehavior != null");
    if (!(autofocus != null)) dart.assertFailed(null, L32, 130, 15, "autofocus != null");
    flat_button.FlatButton.__proto__.new.call(this, {key: key, onPressed: onPressed, onLongPress: onLongPress, onHighlightChanged: onHighlightChanged, mouseCursor: mouseCursor, textTheme: textTheme, textColor: textColor, disabledTextColor: disabledTextColor, color: color, disabledColor: disabledColor, focusColor: focusColor, hoverColor: hoverColor, highlightColor: highlightColor, splashColor: splashColor, colorBrightness: colorBrightness, padding: padding, visualDensity: visualDensity, shape: shape, clipBehavior: clipBehavior, focusNode: focusNode, autofocus: autofocus, materialTapTargetSize: materialTapTargetSize, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = flat_button.FlatButton.prototype;
  dart.addTypeTests(flat_button.FlatButton);
  dart.addTypeCaches(flat_button.FlatButton);
  dart.setLibraryUri(flat_button.FlatButton, L33);
  var C1088;
  var C1087;
  var C1086;
  var C1085;
  var C1091;
  var C1092;
  var C1090;
  var C1089;
  const FlatButton_MaterialButtonWithIconMixin$36 = class FlatButton_MaterialButtonWithIconMixin extends flat_button.FlatButton {};
  (FlatButton_MaterialButtonWithIconMixin$36.new = function(opts) {
    FlatButton_MaterialButtonWithIconMixin$36.__proto__.new.call(this, opts);
  }).prototype = FlatButton_MaterialButtonWithIconMixin$36.prototype;
  dart.applyMixin(FlatButton_MaterialButtonWithIconMixin$36, material_button.MaterialButtonWithIconMixin);
  flat_button._FlatButtonWithIcon = class _FlatButtonWithIcon extends FlatButton_MaterialButtonWithIconMixin$36 {};
  (flat_button._FlatButtonWithIcon.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let onHighlightChanged = opts && 'onHighlightChanged' in opts ? opts.onHighlightChanged : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
    let textColor = opts && 'textColor' in opts ? opts.textColor : null;
    let disabledTextColor = opts && 'disabledTextColor' in opts ? opts.disabledTextColor : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let colorBrightness = opts && 'colorBrightness' in opts ? opts.colorBrightness : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C321 || CT.C321;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    let label = opts && 'label' in opts ? opts.label : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    if (!(icon != null)) dart.assertFailed(null, L32, 253, 15, "icon != null");
    if (!(label != null)) dart.assertFailed(null, L32, 254, 15, "label != null");
    if (!(clipBehavior != null)) dart.assertFailed(null, L32, 255, 15, "clipBehavior != null");
    if (!(autofocus != null)) dart.assertFailed(null, L32, 256, 15, "autofocus != null");
    flat_button._FlatButtonWithIcon.__proto__.new.call(this, {key: key, onPressed: onPressed, onLongPress: onLongPress, onHighlightChanged: onHighlightChanged, mouseCursor: mouseCursor, textTheme: textTheme, textColor: textColor, disabledTextColor: disabledTextColor, color: color, disabledColor: disabledColor, focusColor: focusColor, hoverColor: hoverColor, highlightColor: highlightColor, splashColor: splashColor, colorBrightness: colorBrightness, padding: padding, shape: shape, clipBehavior: clipBehavior, focusNode: focusNode, autofocus: autofocus, materialTapTargetSize: materialTapTargetSize, child: new basic.Row.new({mainAxisSize: flex.MainAxisSize.min, children: JSArrayOfWidgetL().of([icon, C1085 || CT.C1085, label]), $creationLocationd_0dea112b090073317d4: C1089 || CT.C1089}), $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = flat_button._FlatButtonWithIcon.prototype;
  dart.addTypeTests(flat_button._FlatButtonWithIcon);
  dart.addTypeCaches(flat_button._FlatButtonWithIcon);
  dart.setLibraryUri(flat_button._FlatButtonWithIcon, L33);
  var height$3 = dart.privateName(tooltip_theme, "TooltipThemeData.height");
  var padding$7 = dart.privateName(tooltip_theme, "TooltipThemeData.padding");
  var margin$2 = dart.privateName(tooltip_theme, "TooltipThemeData.margin");
  var verticalOffset$1 = dart.privateName(tooltip_theme, "TooltipThemeData.verticalOffset");
  var preferBelow$1 = dart.privateName(tooltip_theme, "TooltipThemeData.preferBelow");
  var excludeFromSemantics$0 = dart.privateName(tooltip_theme, "TooltipThemeData.excludeFromSemantics");
  var decoration$1 = dart.privateName(tooltip_theme, "TooltipThemeData.decoration");
  var textStyle$2 = dart.privateName(tooltip_theme, "TooltipThemeData.textStyle");
  var waitDuration$0 = dart.privateName(tooltip_theme, "TooltipThemeData.waitDuration");
  var showDuration$0 = dart.privateName(tooltip_theme, "TooltipThemeData.showDuration");
  const Object_Diagnosticable$36 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36.new = function() {
  }).prototype = Object_Diagnosticable$36.prototype;
  dart.applyMixin(Object_Diagnosticable$36, diagnostics.Diagnosticable);
  tooltip_theme.TooltipThemeData = class TooltipThemeData extends Object_Diagnosticable$36 {
    get height() {
      return this[height$3];
    }
    set height(value) {
      super.height = value;
    }
    get padding() {
      return this[padding$7];
    }
    set padding(value) {
      super.padding = value;
    }
    get margin() {
      return this[margin$2];
    }
    set margin(value) {
      super.margin = value;
    }
    get verticalOffset() {
      return this[verticalOffset$1];
    }
    set verticalOffset(value) {
      super.verticalOffset = value;
    }
    get preferBelow() {
      return this[preferBelow$1];
    }
    set preferBelow(value) {
      super.preferBelow = value;
    }
    get excludeFromSemantics() {
      return this[excludeFromSemantics$0];
    }
    set excludeFromSemantics(value) {
      super.excludeFromSemantics = value;
    }
    get decoration() {
      return this[decoration$1];
    }
    set decoration(value) {
      super.decoration = value;
    }
    get textStyle() {
      return this[textStyle$2];
    }
    set textStyle(value) {
      super.textStyle = value;
    }
    get waitDuration() {
      return this[waitDuration$0];
    }
    set waitDuration(value) {
      super.waitDuration = value;
    }
    get showDuration() {
      return this[showDuration$0];
    }
    set showDuration(value) {
      super.showDuration = value;
    }
    copyWith(opts) {
      let t6, t6$, t6$0, t6$1, t6$2, t6$3, t6$4, t6$5, t6$6, t6$7;
      let height = opts && 'height' in opts ? opts.height : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let margin = opts && 'margin' in opts ? opts.margin : null;
      let verticalOffset = opts && 'verticalOffset' in opts ? opts.verticalOffset : null;
      let preferBelow = opts && 'preferBelow' in opts ? opts.preferBelow : null;
      let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : null;
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let waitDuration = opts && 'waitDuration' in opts ? opts.waitDuration : null;
      let showDuration = opts && 'showDuration' in opts ? opts.showDuration : null;
      return new tooltip_theme.TooltipThemeData.new({height: (t6 = height, t6 == null ? this.height : t6), padding: (t6$ = padding, t6$ == null ? this.padding : t6$), margin: (t6$0 = margin, t6$0 == null ? this.margin : t6$0), verticalOffset: (t6$1 = verticalOffset, t6$1 == null ? this.verticalOffset : t6$1), preferBelow: (t6$2 = preferBelow, t6$2 == null ? this.preferBelow : t6$2), excludeFromSemantics: (t6$3 = excludeFromSemantics, t6$3 == null ? this.excludeFromSemantics : t6$3), decoration: (t6$4 = decoration, t6$4 == null ? this.decoration : t6$4), textStyle: (t6$5 = textStyle, t6$5 == null ? this.textStyle : t6$5), waitDuration: (t6$6 = waitDuration, t6$6 == null ? this.waitDuration : t6$6), showDuration: (t6$7 = showDuration, t6$7 == null ? this.showDuration : t6$7)});
    }
    static lerp(a, b, t) {
      let t6, t6$, t6$0, t6$1, t6$2, t6$3, t6$4, t6$5, t6$6, t6$7, t6$8, t6$9;
      if (a == null && b == null) return null;
      if (!(t != null)) dart.assertFailed(null, L34, 125, 12, "t != null");
      return new tooltip_theme.TooltipThemeData.new({height: ui.lerpDouble((t6 = a, t6 == null ? null : t6.height), (t6$ = b, t6$ == null ? null : t6$.height), t), padding: edge_insets.EdgeInsetsGeometry.lerp((t6$0 = a, t6$0 == null ? null : t6$0.padding), (t6$1 = b, t6$1 == null ? null : t6$1.padding), t), margin: edge_insets.EdgeInsetsGeometry.lerp((t6$2 = a, t6$2 == null ? null : t6$2.margin), (t6$3 = b, t6$3 == null ? null : t6$3.margin), t), verticalOffset: ui.lerpDouble((t6$4 = a, t6$4 == null ? null : t6$4.verticalOffset), (t6$5 = b, t6$5 == null ? null : t6$5.verticalOffset), t), preferBelow: dart.notNull(t) < 0.5 ? a.preferBelow : b.preferBelow, excludeFromSemantics: dart.notNull(t) < 0.5 ? a.excludeFromSemantics : b.excludeFromSemantics, decoration: decoration.Decoration.lerp((t6$6 = a, t6$6 == null ? null : t6$6.decoration), (t6$7 = b, t6$7 == null ? null : t6$7.decoration), t), textStyle: text_style.TextStyle.lerp((t6$8 = a, t6$8 == null ? null : t6$8.textStyle), (t6$9 = b, t6$9 == null ? null : t6$9.textStyle), t)});
    }
    get hashCode() {
      return ui.hashValues(this.height, this.padding, this.margin, this.verticalOffset, this.preferBelow, this.excludeFromSemantics, this.decoration, this.textStyle, this.waitDuration, this.showDuration);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this.runtimeType)) return false;
      return TooltipThemeDataL().is(other) && other.height == this.height && dart.equals(other.padding, this.padding) && dart.equals(other.margin, this.margin) && other.verticalOffset == this.verticalOffset && dart.equals(other.preferBelow, this.preferBelow) && dart.equals(other.excludeFromSemantics, this.excludeFromSemantics) && dart.equals(other.decoration, this.decoration) && dart.equals(other.textStyle, this.textStyle) && dart.equals(other.waitDuration, this.waitDuration) && dart.equals(other.showDuration, this.showDuration);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new diagnostics.DoubleProperty.new("height", this.height, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfEdgeInsetsGeometryL()).new("padding", this.padding, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfEdgeInsetsGeometryL()).new("margin", this.margin, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("vertical offset", this.verticalOffset, {defaultValue: null}));
      properties.add(new diagnostics.FlagProperty.new("position", {value: this.preferBelow, ifTrue: "below", ifFalse: "above", showName: true, defaultValue: null}));
      properties.add(new diagnostics.FlagProperty.new("semantics", {value: this.excludeFromSemantics, ifTrue: "excluded", showName: true, defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfDecorationL()).new("decoration", this.decoration, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfTextStyleL()).new("textStyle", this.textStyle, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfDurationL()).new("wait duration", this.waitDuration, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfDurationL()).new("show duration", this.showDuration, {defaultValue: null}));
    }
  };
  (tooltip_theme.TooltipThemeData.new = function(opts) {
    let height = opts && 'height' in opts ? opts.height : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let margin = opts && 'margin' in opts ? opts.margin : null;
    let verticalOffset = opts && 'verticalOffset' in opts ? opts.verticalOffset : null;
    let preferBelow = opts && 'preferBelow' in opts ? opts.preferBelow : null;
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : null;
    let decoration = opts && 'decoration' in opts ? opts.decoration : null;
    let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
    let waitDuration = opts && 'waitDuration' in opts ? opts.waitDuration : null;
    let showDuration = opts && 'showDuration' in opts ? opts.showDuration : null;
    this[height$3] = height;
    this[padding$7] = padding;
    this[margin$2] = margin;
    this[verticalOffset$1] = verticalOffset;
    this[preferBelow$1] = preferBelow;
    this[excludeFromSemantics$0] = excludeFromSemantics;
    this[decoration$1] = decoration;
    this[textStyle$2] = textStyle;
    this[waitDuration$0] = waitDuration;
    this[showDuration$0] = showDuration;
    ;
  }).prototype = tooltip_theme.TooltipThemeData.prototype;
  dart.addTypeTests(tooltip_theme.TooltipThemeData);
  dart.addTypeCaches(tooltip_theme.TooltipThemeData);
  dart.setMethodSignature(tooltip_theme.TooltipThemeData, () => ({
    __proto__: dart.getMethods(tooltip_theme.TooltipThemeData.__proto__),
    copyWith: dart.fnType(dart.legacy(tooltip_theme.TooltipThemeData), [], {decoration: dart.legacy(decoration.Decoration), excludeFromSemantics: dart.legacy(core.bool), height: dart.legacy(core.double), margin: dart.legacy(edge_insets.EdgeInsetsGeometry), padding: dart.legacy(edge_insets.EdgeInsetsGeometry), preferBelow: dart.legacy(core.bool), showDuration: dart.legacy(core.Duration), textStyle: dart.legacy(text_style.TextStyle), verticalOffset: dart.legacy(core.double), waitDuration: dart.legacy(core.Duration)}, {}),
    _equals: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    [$_equals]: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    debugFillProperties: dart.fnType(dart.void, [dart.legacy(diagnostics.DiagnosticPropertiesBuilder)])
  }));
  dart.setGetterSignature(tooltip_theme.TooltipThemeData, () => ({
    __proto__: dart.getGetters(tooltip_theme.TooltipThemeData.__proto__),
    hashCode: dart.legacy(core.int),
    [$hashCode]: dart.legacy(core.int)
  }));
  dart.setLibraryUri(tooltip_theme.TooltipThemeData, L35);
  dart.setFieldSignature(tooltip_theme.TooltipThemeData, () => ({
    __proto__: dart.getFields(tooltip_theme.TooltipThemeData.__proto__),
    height: dart.finalFieldType(dart.legacy(core.double)),
    padding: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsetsGeometry)),
    margin: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsetsGeometry)),
    verticalOffset: dart.finalFieldType(dart.legacy(core.double)),
    preferBelow: dart.finalFieldType(dart.legacy(core.bool)),
    excludeFromSemantics: dart.finalFieldType(dart.legacy(core.bool)),
    decoration: dart.finalFieldType(dart.legacy(decoration.Decoration)),
    textStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    waitDuration: dart.finalFieldType(dart.legacy(core.Duration)),
    showDuration: dart.finalFieldType(dart.legacy(core.Duration))
  }));
  dart.defineExtensionMethods(tooltip_theme.TooltipThemeData, ['_equals']);
  dart.defineExtensionAccessors(tooltip_theme.TooltipThemeData, ['hashCode']);
  var C1095;
  var C1096;
  var C1094;
  var C1093;
  var data$ = dart.privateName(tooltip_theme, "TooltipTheme.data");
  tooltip_theme.TooltipTheme = class TooltipTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[data$];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t6, t6$;
      let tooltipTheme = context.dependOnInheritedWidgetOfExactType(TooltipThemeL());
      t6$ = (t6 = tooltipTheme, t6 == null ? null : t6.data);
      return t6$ == null ? theme$.Theme.of(context).tooltipTheme : t6$;
    }
    wrap(context, child) {
      let ancestorTheme = context.findAncestorWidgetOfExactType(TooltipThemeL());
      return this === ancestorTheme ? child : new tooltip_theme.TooltipTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C1093 || CT.C1093});
    }
    updateShouldNotify(oldWidget) {
      TooltipThemeL().as(oldWidget);
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (tooltip_theme.TooltipTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[data$] = data;
    if (!(data != null)) dart.assertFailed(null, L34, 228, 15, "data != null");
    tooltip_theme.TooltipTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = tooltip_theme.TooltipTheme.prototype;
  dart.addTypeTests(tooltip_theme.TooltipTheme);
  dart.addTypeCaches(tooltip_theme.TooltipTheme);
  dart.setMethodSignature(tooltip_theme.TooltipTheme, () => ({
    __proto__: dart.getMethods(tooltip_theme.TooltipTheme.__proto__),
    wrap: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext), dart.legacy(framework.Widget)]),
    updateShouldNotify: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)])
  }));
  dart.setLibraryUri(tooltip_theme.TooltipTheme, L35);
  dart.setFieldSignature(tooltip_theme.TooltipTheme, () => ({
    __proto__: dart.getFields(tooltip_theme.TooltipTheme.__proto__),
    data: dart.finalFieldType(dart.legacy(tooltip_theme.TooltipThemeData))
  }));
  var textStyle$3 = dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.textStyle");
  var constraints$1 = dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.constraints");
  var color$6 = dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.color");
  var selectedColor$0 = dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.selectedColor");
  var disabledColor$1 = dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.disabledColor");
  var fillColor$0 = dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.fillColor");
  var focusColor$5 = dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.focusColor");
  var highlightColor$3 = dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.highlightColor");
  var splashColor$4 = dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.splashColor");
  var hoverColor$5 = dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.hoverColor");
  var borderColor$ = dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.borderColor");
  var selectedBorderColor$ = dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.selectedBorderColor");
  var disabledBorderColor$1 = dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.disabledBorderColor");
  var borderWidth$ = dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.borderWidth");
  var borderRadius$ = dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.borderRadius");
  const Object_Diagnosticable$36$ = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$.new = function() {
  }).prototype = Object_Diagnosticable$36$.prototype;
  dart.applyMixin(Object_Diagnosticable$36$, diagnostics.Diagnosticable);
  toggle_buttons_theme.ToggleButtonsThemeData = class ToggleButtonsThemeData extends Object_Diagnosticable$36$ {
    get textStyle() {
      return this[textStyle$3];
    }
    set textStyle(value) {
      super.textStyle = value;
    }
    get constraints() {
      return this[constraints$1];
    }
    set constraints(value) {
      super.constraints = value;
    }
    get color() {
      return this[color$6];
    }
    set color(value) {
      super.color = value;
    }
    get selectedColor() {
      return this[selectedColor$0];
    }
    set selectedColor(value) {
      super.selectedColor = value;
    }
    get disabledColor() {
      return this[disabledColor$1];
    }
    set disabledColor(value) {
      super.disabledColor = value;
    }
    get fillColor() {
      return this[fillColor$0];
    }
    set fillColor(value) {
      super.fillColor = value;
    }
    get focusColor() {
      return this[focusColor$5];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get highlightColor() {
      return this[highlightColor$3];
    }
    set highlightColor(value) {
      super.highlightColor = value;
    }
    get splashColor() {
      return this[splashColor$4];
    }
    set splashColor(value) {
      super.splashColor = value;
    }
    get hoverColor() {
      return this[hoverColor$5];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get borderColor() {
      return this[borderColor$];
    }
    set borderColor(value) {
      super.borderColor = value;
    }
    get selectedBorderColor() {
      return this[selectedBorderColor$];
    }
    set selectedBorderColor(value) {
      super.selectedBorderColor = value;
    }
    get disabledBorderColor() {
      return this[disabledBorderColor$1];
    }
    set disabledBorderColor(value) {
      super.disabledBorderColor = value;
    }
    get borderWidth() {
      return this[borderWidth$];
    }
    set borderWidth(value) {
      super.borderWidth = value;
    }
    get borderRadius() {
      return this[borderRadius$];
    }
    set borderRadius(value) {
      super.borderRadius = value;
    }
    copyWith(opts) {
      let t6, t6$, t6$0, t6$1, t6$2, t6$3, t6$4, t6$5, t6$6, t6$7, t6$8, t6$9, t6$10, t6$11, t6$12;
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let constraints = opts && 'constraints' in opts ? opts.constraints : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let selectedColor = opts && 'selectedColor' in opts ? opts.selectedColor : null;
      let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
      let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
      let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
      let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
      let borderColor = opts && 'borderColor' in opts ? opts.borderColor : null;
      let selectedBorderColor = opts && 'selectedBorderColor' in opts ? opts.selectedBorderColor : null;
      let disabledBorderColor = opts && 'disabledBorderColor' in opts ? opts.disabledBorderColor : null;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
      let borderWidth = opts && 'borderWidth' in opts ? opts.borderWidth : null;
      return new toggle_buttons_theme.ToggleButtonsThemeData.new({textStyle: (t6 = textStyle, t6 == null ? this.textStyle : t6), constraints: (t6$ = constraints, t6$ == null ? this.constraints : t6$), color: (t6$0 = color, t6$0 == null ? this.color : t6$0), selectedColor: (t6$1 = selectedColor, t6$1 == null ? this.selectedColor : t6$1), disabledColor: (t6$2 = disabledColor, t6$2 == null ? this.disabledColor : t6$2), fillColor: (t6$3 = fillColor, t6$3 == null ? this.fillColor : t6$3), focusColor: (t6$4 = focusColor, t6$4 == null ? this.focusColor : t6$4), highlightColor: (t6$5 = highlightColor, t6$5 == null ? this.highlightColor : t6$5), hoverColor: (t6$6 = hoverColor, t6$6 == null ? this.hoverColor : t6$6), splashColor: (t6$7 = splashColor, t6$7 == null ? this.splashColor : t6$7), borderColor: (t6$8 = borderColor, t6$8 == null ? this.borderColor : t6$8), selectedBorderColor: (t6$9 = selectedBorderColor, t6$9 == null ? this.selectedBorderColor : t6$9), disabledBorderColor: (t6$10 = disabledBorderColor, t6$10 == null ? this.disabledBorderColor : t6$10), borderRadius: (t6$11 = borderRadius, t6$11 == null ? this.borderRadius : t6$11), borderWidth: (t6$12 = borderWidth, t6$12 == null ? this.borderWidth : t6$12)});
    }
    static lerp(a, b, t) {
      let t6, t6$, t6$0, t6$1, t6$2, t6$3, t6$4, t6$5, t6$6, t6$7, t6$8, t6$9, t6$10, t6$11, t6$12, t6$13, t6$14, t6$15, t6$16, t6$17, t6$18, t6$19, t6$20, t6$21, t6$22, t6$23, t6$24, t6$25, t6$26, t6$27;
      if (!(t != null)) dart.assertFailed(null, L36, 152, 13, "t != null");
      if (a == null && b == null) return null;
      return new toggle_buttons_theme.ToggleButtonsThemeData.new({textStyle: text_style.TextStyle.lerp((t6 = a, t6 == null ? null : t6.textStyle), (t6$ = b, t6$ == null ? null : t6$.textStyle), t), constraints: box.BoxConstraints.lerp((t6$0 = a, t6$0 == null ? null : t6$0.constraints), (t6$1 = b, t6$1 == null ? null : t6$1.constraints), t), color: ui.Color.lerp((t6$2 = a, t6$2 == null ? null : t6$2.color), (t6$3 = b, t6$3 == null ? null : t6$3.color), t), selectedColor: ui.Color.lerp((t6$4 = a, t6$4 == null ? null : t6$4.selectedColor), (t6$5 = b, t6$5 == null ? null : t6$5.selectedColor), t), disabledColor: ui.Color.lerp((t6$6 = a, t6$6 == null ? null : t6$6.disabledColor), (t6$7 = b, t6$7 == null ? null : t6$7.disabledColor), t), fillColor: ui.Color.lerp((t6$8 = a, t6$8 == null ? null : t6$8.fillColor), (t6$9 = b, t6$9 == null ? null : t6$9.fillColor), t), focusColor: ui.Color.lerp((t6$10 = a, t6$10 == null ? null : t6$10.focusColor), (t6$11 = b, t6$11 == null ? null : t6$11.focusColor), t), highlightColor: ui.Color.lerp((t6$12 = a, t6$12 == null ? null : t6$12.highlightColor), (t6$13 = b, t6$13 == null ? null : t6$13.highlightColor), t), hoverColor: ui.Color.lerp((t6$14 = a, t6$14 == null ? null : t6$14.hoverColor), (t6$15 = b, t6$15 == null ? null : t6$15.hoverColor), t), splashColor: ui.Color.lerp((t6$16 = a, t6$16 == null ? null : t6$16.splashColor), (t6$17 = b, t6$17 == null ? null : t6$17.splashColor), t), borderColor: ui.Color.lerp((t6$18 = a, t6$18 == null ? null : t6$18.borderColor), (t6$19 = b, t6$19 == null ? null : t6$19.borderColor), t), selectedBorderColor: ui.Color.lerp((t6$20 = a, t6$20 == null ? null : t6$20.selectedBorderColor), (t6$21 = b, t6$21 == null ? null : t6$21.selectedBorderColor), t), disabledBorderColor: ui.Color.lerp((t6$22 = a, t6$22 == null ? null : t6$22.disabledBorderColor), (t6$23 = b, t6$23 == null ? null : t6$23.disabledBorderColor), t), borderRadius: border_radius.BorderRadius.lerp((t6$24 = a, t6$24 == null ? null : t6$24.borderRadius), (t6$25 = b, t6$25 == null ? null : t6$25.borderRadius), t), borderWidth: ui.lerpDouble((t6$26 = a, t6$26 == null ? null : t6$26.borderWidth), (t6$27 = b, t6$27 == null ? null : t6$27.borderWidth), t)});
    }
    get hashCode() {
      return ui.hashValues(this.textStyle, this.constraints, this.color, this.selectedColor, this.disabledColor, this.fillColor, this.focusColor, this.highlightColor, this.hoverColor, this.splashColor, this.borderColor, this.selectedBorderColor, this.disabledBorderColor, this.borderRadius, this.borderWidth);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this.runtimeType)) return false;
      return ToggleButtonsThemeDataL().is(other) && dart.equals(other.textStyle, this.textStyle) && dart.equals(other.constraints, this.constraints) && dart.equals(other.color, this.color) && dart.equals(other.selectedColor, this.selectedColor) && dart.equals(other.disabledColor, this.disabledColor) && dart.equals(other.fillColor, this.fillColor) && dart.equals(other.focusColor, this.focusColor) && dart.equals(other.highlightColor, this.highlightColor) && dart.equals(other.hoverColor, this.hoverColor) && dart.equals(other.splashColor, this.splashColor) && dart.equals(other.borderColor, this.borderColor) && dart.equals(other.selectedBorderColor, this.selectedBorderColor) && dart.equals(other.disabledBorderColor, this.disabledBorderColor) && dart.equals(other.borderRadius, this.borderRadius) && other.borderWidth == this.borderWidth;
    }
    debugFillProperties(properties) {
      let t6;
      super.debugFillProperties(properties);
      t6 = this.textStyle;
      t6 == null ? null : t6.debugFillProperties(properties, {prefix: "textStyle."});
      properties.add(new (DiagnosticsPropertyOfBoxConstraintsL()).new("constraints", this.constraints, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("selectedColor", this.selectedColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("disabledColor", this.disabledColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("fillColor", this.fillColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("focusColor", this.focusColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("highlightColor", this.highlightColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("hoverColor", this.hoverColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("splashColor", this.splashColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("borderColor", this.borderColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("selectedBorderColor", this.selectedBorderColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("disabledBorderColor", this.disabledBorderColor, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfBorderRadiusL()).new("borderRadius", this.borderRadius, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("borderWidth", this.borderWidth, {defaultValue: null}));
    }
  };
  (toggle_buttons_theme.ToggleButtonsThemeData.new = function(opts) {
    let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
    let constraints = opts && 'constraints' in opts ? opts.constraints : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let selectedColor = opts && 'selectedColor' in opts ? opts.selectedColor : null;
    let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
    let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let borderColor = opts && 'borderColor' in opts ? opts.borderColor : null;
    let selectedBorderColor = opts && 'selectedBorderColor' in opts ? opts.selectedBorderColor : null;
    let disabledBorderColor = opts && 'disabledBorderColor' in opts ? opts.disabledBorderColor : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let borderWidth = opts && 'borderWidth' in opts ? opts.borderWidth : null;
    this[textStyle$3] = textStyle;
    this[constraints$1] = constraints;
    this[color$6] = color;
    this[selectedColor$0] = selectedColor;
    this[disabledColor$1] = disabledColor;
    this[fillColor$0] = fillColor;
    this[focusColor$5] = focusColor;
    this[highlightColor$3] = highlightColor;
    this[hoverColor$5] = hoverColor;
    this[splashColor$4] = splashColor;
    this[borderColor$] = borderColor;
    this[selectedBorderColor$] = selectedBorderColor;
    this[disabledBorderColor$1] = disabledBorderColor;
    this[borderRadius$] = borderRadius;
    this[borderWidth$] = borderWidth;
    ;
  }).prototype = toggle_buttons_theme.ToggleButtonsThemeData.prototype;
  dart.addTypeTests(toggle_buttons_theme.ToggleButtonsThemeData);
  dart.addTypeCaches(toggle_buttons_theme.ToggleButtonsThemeData);
  dart.setMethodSignature(toggle_buttons_theme.ToggleButtonsThemeData, () => ({
    __proto__: dart.getMethods(toggle_buttons_theme.ToggleButtonsThemeData.__proto__),
    copyWith: dart.fnType(dart.legacy(toggle_buttons_theme.ToggleButtonsThemeData), [], {borderColor: dart.legacy(ui.Color), borderRadius: dart.legacy(border_radius.BorderRadius), borderWidth: dart.legacy(core.double), color: dart.legacy(ui.Color), constraints: dart.legacy(box.BoxConstraints), disabledBorderColor: dart.legacy(ui.Color), disabledColor: dart.legacy(ui.Color), fillColor: dart.legacy(ui.Color), focusColor: dart.legacy(ui.Color), highlightColor: dart.legacy(ui.Color), hoverColor: dart.legacy(ui.Color), selectedBorderColor: dart.legacy(ui.Color), selectedColor: dart.legacy(ui.Color), splashColor: dart.legacy(ui.Color), textStyle: dart.legacy(text_style.TextStyle)}, {}),
    _equals: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    [$_equals]: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    debugFillProperties: dart.fnType(dart.void, [dart.legacy(diagnostics.DiagnosticPropertiesBuilder)])
  }));
  dart.setGetterSignature(toggle_buttons_theme.ToggleButtonsThemeData, () => ({
    __proto__: dart.getGetters(toggle_buttons_theme.ToggleButtonsThemeData.__proto__),
    hashCode: dart.legacy(core.int),
    [$hashCode]: dart.legacy(core.int)
  }));
  dart.setLibraryUri(toggle_buttons_theme.ToggleButtonsThemeData, L37);
  dart.setFieldSignature(toggle_buttons_theme.ToggleButtonsThemeData, () => ({
    __proto__: dart.getFields(toggle_buttons_theme.ToggleButtonsThemeData.__proto__),
    textStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    constraints: dart.finalFieldType(dart.legacy(box.BoxConstraints)),
    color: dart.finalFieldType(dart.legacy(ui.Color)),
    selectedColor: dart.finalFieldType(dart.legacy(ui.Color)),
    disabledColor: dart.finalFieldType(dart.legacy(ui.Color)),
    fillColor: dart.finalFieldType(dart.legacy(ui.Color)),
    focusColor: dart.finalFieldType(dart.legacy(ui.Color)),
    highlightColor: dart.finalFieldType(dart.legacy(ui.Color)),
    splashColor: dart.finalFieldType(dart.legacy(ui.Color)),
    hoverColor: dart.finalFieldType(dart.legacy(ui.Color)),
    borderColor: dart.finalFieldType(dart.legacy(ui.Color)),
    selectedBorderColor: dart.finalFieldType(dart.legacy(ui.Color)),
    disabledBorderColor: dart.finalFieldType(dart.legacy(ui.Color)),
    borderWidth: dart.finalFieldType(dart.legacy(core.double)),
    borderRadius: dart.finalFieldType(dart.legacy(border_radius.BorderRadius))
  }));
  dart.defineExtensionMethods(toggle_buttons_theme.ToggleButtonsThemeData, ['_equals']);
  dart.defineExtensionAccessors(toggle_buttons_theme.ToggleButtonsThemeData, ['hashCode']);
  var C1099;
  var C1100;
  var C1098;
  var C1097;
  var data$0 = dart.privateName(toggle_buttons_theme, "ToggleButtonsTheme.data");
  toggle_buttons_theme.ToggleButtonsTheme = class ToggleButtonsTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[data$0];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t6, t6$;
      let toggleButtonsTheme = context.dependOnInheritedWidgetOfExactType(ToggleButtonsThemeL());
      t6$ = (t6 = toggleButtonsTheme, t6 == null ? null : t6.data);
      return t6$ == null ? theme$.Theme.of(context).toggleButtonsTheme : t6$;
    }
    wrap(context, child) {
      let ancestorTheme = context.findAncestorWidgetOfExactType(ToggleButtonsThemeL());
      return this === ancestorTheme ? child : new toggle_buttons_theme.ToggleButtonsTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C1097 || CT.C1097});
    }
    updateShouldNotify(oldWidget) {
      ToggleButtonsThemeL().as(oldWidget);
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (toggle_buttons_theme.ToggleButtonsTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[data$0] = data;
    if (!(data != null)) dart.assertFailed(null, L36, 254, 15, "data != null");
    toggle_buttons_theme.ToggleButtonsTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = toggle_buttons_theme.ToggleButtonsTheme.prototype;
  dart.addTypeTests(toggle_buttons_theme.ToggleButtonsTheme);
  dart.addTypeCaches(toggle_buttons_theme.ToggleButtonsTheme);
  dart.setMethodSignature(toggle_buttons_theme.ToggleButtonsTheme, () => ({
    __proto__: dart.getMethods(toggle_buttons_theme.ToggleButtonsTheme.__proto__),
    wrap: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext), dart.legacy(framework.Widget)]),
    updateShouldNotify: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)])
  }));
  dart.setLibraryUri(toggle_buttons_theme.ToggleButtonsTheme, L37);
  dart.setFieldSignature(toggle_buttons_theme.ToggleButtonsTheme, () => ({
    __proto__: dart.getFields(toggle_buttons_theme.ToggleButtonsTheme.__proto__),
    data: dart.finalFieldType(dart.legacy(toggle_buttons_theme.ToggleButtonsThemeData))
  }));
  var backgroundColor$4 = dart.privateName(time_picker_theme, "TimePickerThemeData.backgroundColor");
  var hourMinuteTextColor$ = dart.privateName(time_picker_theme, "TimePickerThemeData.hourMinuteTextColor");
  var hourMinuteColor$ = dart.privateName(time_picker_theme, "TimePickerThemeData.hourMinuteColor");
  var dayPeriodTextColor$ = dart.privateName(time_picker_theme, "TimePickerThemeData.dayPeriodTextColor");
  var dayPeriodColor$ = dart.privateName(time_picker_theme, "TimePickerThemeData.dayPeriodColor");
  var dialHandColor$ = dart.privateName(time_picker_theme, "TimePickerThemeData.dialHandColor");
  var dialBackgroundColor$ = dart.privateName(time_picker_theme, "TimePickerThemeData.dialBackgroundColor");
  var dialTextColor$ = dart.privateName(time_picker_theme, "TimePickerThemeData.dialTextColor");
  var entryModeIconColor$ = dart.privateName(time_picker_theme, "TimePickerThemeData.entryModeIconColor");
  var hourMinuteTextStyle$ = dart.privateName(time_picker_theme, "TimePickerThemeData.hourMinuteTextStyle");
  var dayPeriodTextStyle$ = dart.privateName(time_picker_theme, "TimePickerThemeData.dayPeriodTextStyle");
  var helpTextStyle$ = dart.privateName(time_picker_theme, "TimePickerThemeData.helpTextStyle");
  var shape$10 = dart.privateName(time_picker_theme, "TimePickerThemeData.shape");
  var hourMinuteShape$ = dart.privateName(time_picker_theme, "TimePickerThemeData.hourMinuteShape");
  var dayPeriodShape$ = dart.privateName(time_picker_theme, "TimePickerThemeData.dayPeriodShape");
  var dayPeriodBorderSide$ = dart.privateName(time_picker_theme, "TimePickerThemeData.dayPeriodBorderSide");
  var inputDecorationTheme$ = dart.privateName(time_picker_theme, "TimePickerThemeData.inputDecorationTheme");
  const Object_Diagnosticable$36$0 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$0.new = function() {
  }).prototype = Object_Diagnosticable$36$0.prototype;
  dart.applyMixin(Object_Diagnosticable$36$0, diagnostics.Diagnosticable);
  time_picker_theme.TimePickerThemeData = class TimePickerThemeData extends Object_Diagnosticable$36$0 {
    get backgroundColor() {
      return this[backgroundColor$4];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get hourMinuteTextColor() {
      return this[hourMinuteTextColor$];
    }
    set hourMinuteTextColor(value) {
      super.hourMinuteTextColor = value;
    }
    get hourMinuteColor() {
      return this[hourMinuteColor$];
    }
    set hourMinuteColor(value) {
      super.hourMinuteColor = value;
    }
    get dayPeriodTextColor() {
      return this[dayPeriodTextColor$];
    }
    set dayPeriodTextColor(value) {
      super.dayPeriodTextColor = value;
    }
    get dayPeriodColor() {
      return this[dayPeriodColor$];
    }
    set dayPeriodColor(value) {
      super.dayPeriodColor = value;
    }
    get dialHandColor() {
      return this[dialHandColor$];
    }
    set dialHandColor(value) {
      super.dialHandColor = value;
    }
    get dialBackgroundColor() {
      return this[dialBackgroundColor$];
    }
    set dialBackgroundColor(value) {
      super.dialBackgroundColor = value;
    }
    get dialTextColor() {
      return this[dialTextColor$];
    }
    set dialTextColor(value) {
      super.dialTextColor = value;
    }
    get entryModeIconColor() {
      return this[entryModeIconColor$];
    }
    set entryModeIconColor(value) {
      super.entryModeIconColor = value;
    }
    get hourMinuteTextStyle() {
      return this[hourMinuteTextStyle$];
    }
    set hourMinuteTextStyle(value) {
      super.hourMinuteTextStyle = value;
    }
    get dayPeriodTextStyle() {
      return this[dayPeriodTextStyle$];
    }
    set dayPeriodTextStyle(value) {
      super.dayPeriodTextStyle = value;
    }
    get helpTextStyle() {
      return this[helpTextStyle$];
    }
    set helpTextStyle(value) {
      super.helpTextStyle = value;
    }
    get shape() {
      return this[shape$10];
    }
    set shape(value) {
      super.shape = value;
    }
    get hourMinuteShape() {
      return this[hourMinuteShape$];
    }
    set hourMinuteShape(value) {
      super.hourMinuteShape = value;
    }
    get dayPeriodShape() {
      return this[dayPeriodShape$];
    }
    set dayPeriodShape(value) {
      super.dayPeriodShape = value;
    }
    get dayPeriodBorderSide() {
      return this[dayPeriodBorderSide$];
    }
    set dayPeriodBorderSide(value) {
      super.dayPeriodBorderSide = value;
    }
    get inputDecorationTheme() {
      return this[inputDecorationTheme$];
    }
    set inputDecorationTheme(value) {
      super.inputDecorationTheme = value;
    }
    copyWith(opts) {
      let t6, t6$, t6$0, t6$1, t6$2, t6$3, t6$4, t6$5, t6$6, t6$7, t6$8, t6$9, t6$10, t6$11, t6$12, t6$13, t6$14;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let hourMinuteTextColor = opts && 'hourMinuteTextColor' in opts ? opts.hourMinuteTextColor : null;
      let hourMinuteColor = opts && 'hourMinuteColor' in opts ? opts.hourMinuteColor : null;
      let hourMinuteUnselectedTextColor = opts && 'hourMinuteUnselectedTextColor' in opts ? opts.hourMinuteUnselectedTextColor : null;
      let hourMinuteUnselectedColor = opts && 'hourMinuteUnselectedColor' in opts ? opts.hourMinuteUnselectedColor : null;
      let dayPeriodTextColor = opts && 'dayPeriodTextColor' in opts ? opts.dayPeriodTextColor : null;
      let dayPeriodColor = opts && 'dayPeriodColor' in opts ? opts.dayPeriodColor : null;
      let dialHandColor = opts && 'dialHandColor' in opts ? opts.dialHandColor : null;
      let dialBackgroundColor = opts && 'dialBackgroundColor' in opts ? opts.dialBackgroundColor : null;
      let dialTextColor = opts && 'dialTextColor' in opts ? opts.dialTextColor : null;
      let entryModeIconColor = opts && 'entryModeIconColor' in opts ? opts.entryModeIconColor : null;
      let hourMinuteTextStyle = opts && 'hourMinuteTextStyle' in opts ? opts.hourMinuteTextStyle : null;
      let dayPeriodTextStyle = opts && 'dayPeriodTextStyle' in opts ? opts.dayPeriodTextStyle : null;
      let helpTextStyle = opts && 'helpTextStyle' in opts ? opts.helpTextStyle : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let hourMinuteShape = opts && 'hourMinuteShape' in opts ? opts.hourMinuteShape : null;
      let dayPeriodShape = opts && 'dayPeriodShape' in opts ? opts.dayPeriodShape : null;
      let dayPeriodBorderSide = opts && 'dayPeriodBorderSide' in opts ? opts.dayPeriodBorderSide : null;
      let inputDecorationTheme = opts && 'inputDecorationTheme' in opts ? opts.inputDecorationTheme : null;
      return new time_picker_theme.TimePickerThemeData.new({backgroundColor: (t6 = backgroundColor, t6 == null ? this.backgroundColor : t6), hourMinuteTextColor: (t6$ = hourMinuteTextColor, t6$ == null ? this.hourMinuteTextColor : t6$), hourMinuteColor: (t6$0 = hourMinuteColor, t6$0 == null ? this.hourMinuteColor : t6$0), dayPeriodTextColor: (t6$1 = dayPeriodTextColor, t6$1 == null ? this.dayPeriodTextColor : t6$1), dayPeriodColor: (t6$2 = dayPeriodColor, t6$2 == null ? this.dayPeriodColor : t6$2), dialHandColor: (t6$3 = dialHandColor, t6$3 == null ? this.dialHandColor : t6$3), dialBackgroundColor: (t6$4 = dialBackgroundColor, t6$4 == null ? this.dialBackgroundColor : t6$4), dialTextColor: (t6$5 = dialTextColor, t6$5 == null ? this.dialTextColor : t6$5), entryModeIconColor: (t6$6 = entryModeIconColor, t6$6 == null ? this.entryModeIconColor : t6$6), hourMinuteTextStyle: (t6$7 = hourMinuteTextStyle, t6$7 == null ? this.hourMinuteTextStyle : t6$7), dayPeriodTextStyle: (t6$8 = dayPeriodTextStyle, t6$8 == null ? this.dayPeriodTextStyle : t6$8), helpTextStyle: (t6$9 = helpTextStyle, t6$9 == null ? this.helpTextStyle : t6$9), shape: (t6$10 = shape, t6$10 == null ? this.shape : t6$10), hourMinuteShape: (t6$11 = hourMinuteShape, t6$11 == null ? this.hourMinuteShape : t6$11), dayPeriodShape: (t6$12 = dayPeriodShape, t6$12 == null ? this.dayPeriodShape : t6$12), dayPeriodBorderSide: (t6$13 = dayPeriodBorderSide, t6$13 == null ? this.dayPeriodBorderSide : t6$13), inputDecorationTheme: (t6$14 = inputDecorationTheme, t6$14 == null ? this.inputDecorationTheme : t6$14)});
    }
    static lerp(a, b, t) {
      let t6, t6$, t6$0, t6$1, t6$2, t6$3, t6$4, t6$5, t6$6, t6$7, t6$8, t6$9, t6$10, t6$11, t6$12, t6$13, t6$14, t6$15, t6$16, t6$17, t6$18, t6$19, t6$20, t6$21, t6$22, t6$23, t6$24, t6$25, t6$26, t6$27, t6$28, t6$29, t6$30, t6$31, t6$32, t6$33, t6$34, t6$35;
      if (!(t != null)) dart.assertFailed(null, L38, 251, 12, "t != null");
      let lerpedBorderSide = null;
      if ((t6 = a, t6 == null ? null : t6.dayPeriodBorderSide) == null && (t6$ = b, t6$ == null ? null : t6$.dayPeriodBorderSide) == null) {
        lerpedBorderSide = null;
      } else if ((t6$0 = a, t6$0 == null ? null : t6$0.dayPeriodBorderSide) == null) {
        lerpedBorderSide = (t6$1 = b, t6$1 == null ? null : t6$1.dayPeriodBorderSide);
      } else if ((t6$2 = b, t6$2 == null ? null : t6$2.dayPeriodBorderSide) == null) {
        lerpedBorderSide = (t6$3 = a, t6$3 == null ? null : t6$3.dayPeriodBorderSide);
      } else {
        lerpedBorderSide = borders.BorderSide.lerp((t6$4 = a, t6$4 == null ? null : t6$4.dayPeriodBorderSide), (t6$5 = b, t6$5 == null ? null : t6$5.dayPeriodBorderSide), t);
      }
      return new time_picker_theme.TimePickerThemeData.new({backgroundColor: ui.Color.lerp((t6$6 = a, t6$6 == null ? null : t6$6.backgroundColor), (t6$7 = b, t6$7 == null ? null : t6$7.backgroundColor), t), hourMinuteTextColor: ui.Color.lerp((t6$8 = a, t6$8 == null ? null : t6$8.hourMinuteTextColor), (t6$9 = b, t6$9 == null ? null : t6$9.hourMinuteTextColor), t), hourMinuteColor: ui.Color.lerp((t6$10 = a, t6$10 == null ? null : t6$10.hourMinuteColor), (t6$11 = b, t6$11 == null ? null : t6$11.hourMinuteColor), t), dayPeriodTextColor: ui.Color.lerp((t6$12 = a, t6$12 == null ? null : t6$12.dayPeriodTextColor), (t6$13 = b, t6$13 == null ? null : t6$13.dayPeriodTextColor), t), dayPeriodColor: ui.Color.lerp((t6$14 = a, t6$14 == null ? null : t6$14.dayPeriodColor), (t6$15 = b, t6$15 == null ? null : t6$15.dayPeriodColor), t), dialHandColor: ui.Color.lerp((t6$16 = a, t6$16 == null ? null : t6$16.dialHandColor), (t6$17 = b, t6$17 == null ? null : t6$17.dialHandColor), t), dialBackgroundColor: ui.Color.lerp((t6$18 = a, t6$18 == null ? null : t6$18.dialBackgroundColor), (t6$19 = b, t6$19 == null ? null : t6$19.dialBackgroundColor), t), dialTextColor: ui.Color.lerp((t6$20 = a, t6$20 == null ? null : t6$20.dialTextColor), (t6$21 = b, t6$21 == null ? null : t6$21.dialTextColor), t), entryModeIconColor: ui.Color.lerp((t6$22 = a, t6$22 == null ? null : t6$22.entryModeIconColor), (t6$23 = b, t6$23 == null ? null : t6$23.entryModeIconColor), t), hourMinuteTextStyle: text_style.TextStyle.lerp((t6$24 = a, t6$24 == null ? null : t6$24.hourMinuteTextStyle), (t6$25 = b, t6$25 == null ? null : t6$25.hourMinuteTextStyle), t), dayPeriodTextStyle: text_style.TextStyle.lerp((t6$26 = a, t6$26 == null ? null : t6$26.dayPeriodTextStyle), (t6$27 = b, t6$27 == null ? null : t6$27.dayPeriodTextStyle), t), helpTextStyle: text_style.TextStyle.lerp((t6$28 = a, t6$28 == null ? null : t6$28.helpTextStyle), (t6$29 = b, t6$29 == null ? null : t6$29.helpTextStyle), t), shape: borders.ShapeBorder.lerp((t6$30 = a, t6$30 == null ? null : t6$30.shape), (t6$31 = b, t6$31 == null ? null : t6$31.shape), t), hourMinuteShape: borders.ShapeBorder.lerp((t6$32 = a, t6$32 == null ? null : t6$32.hourMinuteShape), (t6$33 = b, t6$33 == null ? null : t6$33.hourMinuteShape), t), dayPeriodShape: OutlinedBorderL().as(borders.ShapeBorder.lerp((t6$34 = a, t6$34 == null ? null : t6$34.dayPeriodShape), (t6$35 = b, t6$35 == null ? null : t6$35.dayPeriodShape), t)), dayPeriodBorderSide: lerpedBorderSide, inputDecorationTheme: dart.notNull(t) < 0.5 ? a.inputDecorationTheme : b.inputDecorationTheme});
    }
    get hashCode() {
      return ui.hashValues(this.backgroundColor, this.hourMinuteTextColor, this.hourMinuteColor, this.dayPeriodTextColor, this.dayPeriodColor, this.dialHandColor, this.dialBackgroundColor, this.dialTextColor, this.entryModeIconColor, this.hourMinuteTextStyle, this.dayPeriodTextStyle, this.helpTextStyle, this.shape, this.hourMinuteShape, this.dayPeriodShape, this.dayPeriodBorderSide, this.inputDecorationTheme);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this.runtimeType)) return false;
      return TimePickerThemeDataL().is(other) && dart.equals(other.backgroundColor, this.backgroundColor) && dart.equals(other.hourMinuteTextColor, this.hourMinuteTextColor) && dart.equals(other.hourMinuteColor, this.hourMinuteColor) && dart.equals(other.dayPeriodTextColor, this.dayPeriodTextColor) && dart.equals(other.dayPeriodColor, this.dayPeriodColor) && dart.equals(other.dialHandColor, this.dialHandColor) && dart.equals(other.dialBackgroundColor, this.dialBackgroundColor) && dart.equals(other.dialTextColor, this.dialTextColor) && dart.equals(other.entryModeIconColor, this.entryModeIconColor) && dart.equals(other.hourMinuteTextStyle, this.hourMinuteTextStyle) && dart.equals(other.dayPeriodTextStyle, this.dayPeriodTextStyle) && dart.equals(other.helpTextStyle, this.helpTextStyle) && dart.equals(other.shape, this.shape) && dart.equals(other.hourMinuteShape, this.hourMinuteShape) && dart.equals(other.dayPeriodShape, this.dayPeriodShape) && dart.equals(other.dayPeriodBorderSide, this.dayPeriodBorderSide) && dart.equals(other.inputDecorationTheme, this.inputDecorationTheme);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new colors.ColorProperty.new("backgroundColor", this.backgroundColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("hourMinuteTextColor", this.hourMinuteTextColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("hourMinuteColor", this.hourMinuteColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("dayPeriodTextColor", this.dayPeriodTextColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("dayPeriodColor", this.dayPeriodColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("dialHandColor", this.dialHandColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("dialBackgroundColor", this.dialBackgroundColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("dialTextColor", this.dialTextColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("entryModeIconColor", this.entryModeIconColor, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfTextStyleL()).new("hourMinuteTextStyle", this.hourMinuteTextStyle, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfTextStyleL()).new("dayPeriodTextStyle", this.dayPeriodTextStyle, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfTextStyleL()).new("helpTextStyle", this.helpTextStyle, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfShapeBorderL()).new("shape", this.shape, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfShapeBorderL()).new("hourMinuteShape", this.hourMinuteShape, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfShapeBorderL()).new("dayPeriodShape", this.dayPeriodShape, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfBorderSideL()).new("dayPeriodBorderSide", this.dayPeriodBorderSide, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfInputDecorationThemeL()).new("inputDecorationTheme", this.inputDecorationTheme, {defaultValue: null}));
    }
  };
  (time_picker_theme.TimePickerThemeData.new = function(opts) {
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let hourMinuteTextColor = opts && 'hourMinuteTextColor' in opts ? opts.hourMinuteTextColor : null;
    let hourMinuteColor = opts && 'hourMinuteColor' in opts ? opts.hourMinuteColor : null;
    let dayPeriodTextColor = opts && 'dayPeriodTextColor' in opts ? opts.dayPeriodTextColor : null;
    let dayPeriodColor = opts && 'dayPeriodColor' in opts ? opts.dayPeriodColor : null;
    let dialHandColor = opts && 'dialHandColor' in opts ? opts.dialHandColor : null;
    let dialBackgroundColor = opts && 'dialBackgroundColor' in opts ? opts.dialBackgroundColor : null;
    let dialTextColor = opts && 'dialTextColor' in opts ? opts.dialTextColor : null;
    let entryModeIconColor = opts && 'entryModeIconColor' in opts ? opts.entryModeIconColor : null;
    let hourMinuteTextStyle = opts && 'hourMinuteTextStyle' in opts ? opts.hourMinuteTextStyle : null;
    let dayPeriodTextStyle = opts && 'dayPeriodTextStyle' in opts ? opts.dayPeriodTextStyle : null;
    let helpTextStyle = opts && 'helpTextStyle' in opts ? opts.helpTextStyle : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let hourMinuteShape = opts && 'hourMinuteShape' in opts ? opts.hourMinuteShape : null;
    let dayPeriodShape = opts && 'dayPeriodShape' in opts ? opts.dayPeriodShape : null;
    let dayPeriodBorderSide = opts && 'dayPeriodBorderSide' in opts ? opts.dayPeriodBorderSide : null;
    let inputDecorationTheme = opts && 'inputDecorationTheme' in opts ? opts.inputDecorationTheme : null;
    this[backgroundColor$4] = backgroundColor;
    this[hourMinuteTextColor$] = hourMinuteTextColor;
    this[hourMinuteColor$] = hourMinuteColor;
    this[dayPeriodTextColor$] = dayPeriodTextColor;
    this[dayPeriodColor$] = dayPeriodColor;
    this[dialHandColor$] = dialHandColor;
    this[dialBackgroundColor$] = dialBackgroundColor;
    this[dialTextColor$] = dialTextColor;
    this[entryModeIconColor$] = entryModeIconColor;
    this[hourMinuteTextStyle$] = hourMinuteTextStyle;
    this[dayPeriodTextStyle$] = dayPeriodTextStyle;
    this[helpTextStyle$] = helpTextStyle;
    this[shape$10] = shape;
    this[hourMinuteShape$] = hourMinuteShape;
    this[dayPeriodShape$] = dayPeriodShape;
    this[dayPeriodBorderSide$] = dayPeriodBorderSide;
    this[inputDecorationTheme$] = inputDecorationTheme;
    ;
  }).prototype = time_picker_theme.TimePickerThemeData.prototype;
  dart.addTypeTests(time_picker_theme.TimePickerThemeData);
  dart.addTypeCaches(time_picker_theme.TimePickerThemeData);
  dart.setMethodSignature(time_picker_theme.TimePickerThemeData, () => ({
    __proto__: dart.getMethods(time_picker_theme.TimePickerThemeData.__proto__),
    copyWith: dart.fnType(dart.legacy(time_picker_theme.TimePickerThemeData), [], {backgroundColor: dart.legacy(ui.Color), dayPeriodBorderSide: dart.legacy(borders.BorderSide), dayPeriodColor: dart.legacy(ui.Color), dayPeriodShape: dart.legacy(borders.OutlinedBorder), dayPeriodTextColor: dart.legacy(ui.Color), dayPeriodTextStyle: dart.legacy(text_style.TextStyle), dialBackgroundColor: dart.legacy(ui.Color), dialHandColor: dart.legacy(ui.Color), dialTextColor: dart.legacy(ui.Color), entryModeIconColor: dart.legacy(ui.Color), helpTextStyle: dart.legacy(text_style.TextStyle), hourMinuteColor: dart.legacy(ui.Color), hourMinuteShape: dart.legacy(borders.ShapeBorder), hourMinuteTextColor: dart.legacy(ui.Color), hourMinuteTextStyle: dart.legacy(text_style.TextStyle), hourMinuteUnselectedColor: dart.legacy(ui.Color), hourMinuteUnselectedTextColor: dart.legacy(ui.Color), inputDecorationTheme: dart.legacy(input_decorator.InputDecorationTheme), shape: dart.legacy(borders.ShapeBorder)}, {}),
    _equals: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    [$_equals]: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    debugFillProperties: dart.fnType(dart.void, [dart.legacy(diagnostics.DiagnosticPropertiesBuilder)])
  }));
  dart.setGetterSignature(time_picker_theme.TimePickerThemeData, () => ({
    __proto__: dart.getGetters(time_picker_theme.TimePickerThemeData.__proto__),
    hashCode: dart.legacy(core.int),
    [$hashCode]: dart.legacy(core.int)
  }));
  dart.setLibraryUri(time_picker_theme.TimePickerThemeData, L39);
  dart.setFieldSignature(time_picker_theme.TimePickerThemeData, () => ({
    __proto__: dart.getFields(time_picker_theme.TimePickerThemeData.__proto__),
    backgroundColor: dart.finalFieldType(dart.legacy(ui.Color)),
    hourMinuteTextColor: dart.finalFieldType(dart.legacy(ui.Color)),
    hourMinuteColor: dart.finalFieldType(dart.legacy(ui.Color)),
    dayPeriodTextColor: dart.finalFieldType(dart.legacy(ui.Color)),
    dayPeriodColor: dart.finalFieldType(dart.legacy(ui.Color)),
    dialHandColor: dart.finalFieldType(dart.legacy(ui.Color)),
    dialBackgroundColor: dart.finalFieldType(dart.legacy(ui.Color)),
    dialTextColor: dart.finalFieldType(dart.legacy(ui.Color)),
    entryModeIconColor: dart.finalFieldType(dart.legacy(ui.Color)),
    hourMinuteTextStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    dayPeriodTextStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    helpTextStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    shape: dart.finalFieldType(dart.legacy(borders.ShapeBorder)),
    hourMinuteShape: dart.finalFieldType(dart.legacy(borders.ShapeBorder)),
    dayPeriodShape: dart.finalFieldType(dart.legacy(borders.OutlinedBorder)),
    dayPeriodBorderSide: dart.finalFieldType(dart.legacy(borders.BorderSide)),
    inputDecorationTheme: dart.finalFieldType(dart.legacy(input_decorator.InputDecorationTheme))
  }));
  dart.defineExtensionMethods(time_picker_theme.TimePickerThemeData, ['_equals']);
  dart.defineExtensionAccessors(time_picker_theme.TimePickerThemeData, ['hashCode']);
  var C1103;
  var C1104;
  var C1102;
  var C1101;
  var data$1 = dart.privateName(time_picker_theme, "TimePickerTheme.data");
  time_picker_theme.TimePickerTheme = class TimePickerTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[data$1];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t6, t6$;
      let timePickerTheme = context.dependOnInheritedWidgetOfExactType(TimePickerThemeL());
      t6$ = (t6 = timePickerTheme, t6 == null ? null : t6.data);
      return t6$ == null ? theme$.Theme.of(context).timePickerTheme : t6$;
    }
    wrap(context, child) {
      let ancestorTheme = context.findAncestorWidgetOfExactType(TimePickerThemeL());
      return this === ancestorTheme ? child : new time_picker_theme.TimePickerTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C1101 || CT.C1101});
    }
    updateShouldNotify(oldWidget) {
      TimePickerThemeL().as(oldWidget);
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (time_picker_theme.TimePickerTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[data$1] = data;
    if (!(data != null)) dart.assertFailed(null, L38, 369, 15, "data != null");
    time_picker_theme.TimePickerTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = time_picker_theme.TimePickerTheme.prototype;
  dart.addTypeTests(time_picker_theme.TimePickerTheme);
  dart.addTypeCaches(time_picker_theme.TimePickerTheme);
  dart.setMethodSignature(time_picker_theme.TimePickerTheme, () => ({
    __proto__: dart.getMethods(time_picker_theme.TimePickerTheme.__proto__),
    wrap: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext), dart.legacy(framework.Widget)]),
    updateShouldNotify: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)])
  }));
  dart.setLibraryUri(time_picker_theme.TimePickerTheme, L39);
  dart.setFieldSignature(time_picker_theme.TimePickerTheme, () => ({
    __proto__: dart.getFields(time_picker_theme.TimePickerTheme.__proto__),
    data: dart.finalFieldType(dart.legacy(time_picker_theme.TimePickerThemeData))
  }));
  var style$0 = dart.privateName(text_button_theme, "TextButtonThemeData.style");
  const Object_Diagnosticable$36$1 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$1.new = function() {
  }).prototype = Object_Diagnosticable$36$1.prototype;
  dart.applyMixin(Object_Diagnosticable$36$1, diagnostics.Diagnosticable);
  text_button_theme.TextButtonThemeData = class TextButtonThemeData extends Object_Diagnosticable$36$1 {
    get style() {
      return this[style$0];
    }
    set style(value) {
      super.style = value;
    }
    static lerp(a, b, t) {
      let t6, t6$;
      if (!(t != null)) dart.assertFailed(null, L40, 51, 13, "t != null");
      if (a == null && b == null) return null;
      return new text_button_theme.TextButtonThemeData.new({style: button_style.ButtonStyle.lerp((t6 = a, t6 == null ? null : t6.style), (t6$ = b, t6$ == null ? null : t6$.style), t)});
    }
    get hashCode() {
      return dart.hashCode(this.style);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this.runtimeType)) return false;
      return TextButtonThemeDataL().is(other) && dart.equals(other.style, this.style);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfButtonStyleL()).new("style", this.style, {defaultValue: null}));
    }
  };
  (text_button_theme.TextButtonThemeData.new = function(opts) {
    let style = opts && 'style' in opts ? opts.style : null;
    this[style$0] = style;
    ;
  }).prototype = text_button_theme.TextButtonThemeData.prototype;
  dart.addTypeTests(text_button_theme.TextButtonThemeData);
  dart.addTypeCaches(text_button_theme.TextButtonThemeData);
  dart.setMethodSignature(text_button_theme.TextButtonThemeData, () => ({
    __proto__: dart.getMethods(text_button_theme.TextButtonThemeData.__proto__),
    _equals: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    [$_equals]: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    debugFillProperties: dart.fnType(dart.void, [dart.legacy(diagnostics.DiagnosticPropertiesBuilder)])
  }));
  dart.setGetterSignature(text_button_theme.TextButtonThemeData, () => ({
    __proto__: dart.getGetters(text_button_theme.TextButtonThemeData.__proto__),
    hashCode: dart.legacy(core.int),
    [$hashCode]: dart.legacy(core.int)
  }));
  dart.setLibraryUri(text_button_theme.TextButtonThemeData, L41);
  dart.setFieldSignature(text_button_theme.TextButtonThemeData, () => ({
    __proto__: dart.getFields(text_button_theme.TextButtonThemeData.__proto__),
    style: dart.finalFieldType(dart.legacy(button_style.ButtonStyle))
  }));
  dart.defineExtensionMethods(text_button_theme.TextButtonThemeData, ['_equals']);
  dart.defineExtensionAccessors(text_button_theme.TextButtonThemeData, ['hashCode']);
  var C1107;
  var C1108;
  var C1106;
  var C1105;
  var data$2 = dart.privateName(text_button_theme, "TextButtonTheme.data");
  text_button_theme.TextButtonTheme = class TextButtonTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[data$2];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t6, t6$;
      let buttonTheme = context.dependOnInheritedWidgetOfExactType(TextButtonThemeL());
      t6$ = (t6 = buttonTheme, t6 == null ? null : t6.data);
      return t6$ == null ? theme$.Theme.of(context).textButtonTheme : t6$;
    }
    wrap(context, child) {
      let ancestorTheme = context.findAncestorWidgetOfExactType(TextButtonThemeL());
      return this === ancestorTheme ? child : new text_button_theme.TextButtonTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C1105 || CT.C1105});
    }
    updateShouldNotify(oldWidget) {
      TextButtonThemeL().as(oldWidget);
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (text_button_theme.TextButtonTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[data$2] = data;
    if (!(data != null)) dart.assertFailed(null, L40, 99, 15, "data != null");
    text_button_theme.TextButtonTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = text_button_theme.TextButtonTheme.prototype;
  dart.addTypeTests(text_button_theme.TextButtonTheme);
  dart.addTypeCaches(text_button_theme.TextButtonTheme);
  dart.setMethodSignature(text_button_theme.TextButtonTheme, () => ({
    __proto__: dart.getMethods(text_button_theme.TextButtonTheme.__proto__),
    wrap: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext), dart.legacy(framework.Widget)]),
    updateShouldNotify: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)])
  }));
  dart.setLibraryUri(text_button_theme.TextButtonTheme, L41);
  dart.setFieldSignature(text_button_theme.TextButtonTheme, () => ({
    __proto__: dart.getFields(text_button_theme.TextButtonTheme.__proto__),
    data: dart.finalFieldType(dart.legacy(text_button_theme.TextButtonThemeData))
  }));
  var _name$9 = dart.privateName(tabs$, "_name");
  var C1109;
  var C1110;
  var C1111;
  tabs$.TabBarIndicatorSize = class TabBarIndicatorSize extends core.Object {
    toString() {
      return this[_name$9];
    }
  };
  (tabs$.TabBarIndicatorSize.new = function(index, _name) {
    this.index = index;
    this[_name$9] = _name;
    ;
  }).prototype = tabs$.TabBarIndicatorSize.prototype;
  dart.addTypeTests(tabs$.TabBarIndicatorSize);
  dart.addTypeCaches(tabs$.TabBarIndicatorSize);
  dart.setMethodSignature(tabs$.TabBarIndicatorSize, () => ({
    __proto__: dart.getMethods(tabs$.TabBarIndicatorSize.__proto__),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setLibraryUri(tabs$.TabBarIndicatorSize, L42);
  dart.setFieldSignature(tabs$.TabBarIndicatorSize, () => ({
    __proto__: dart.getFields(tabs$.TabBarIndicatorSize.__proto__),
    index: dart.finalFieldType(dart.legacy(core.int)),
    [_name$9]: dart.finalFieldType(dart.legacy(core.String))
  }));
  dart.defineExtensionMethods(tabs$.TabBarIndicatorSize, ['toString']);
  tabs$.TabBarIndicatorSize.tab = C1109 || CT.C1109;
  tabs$.TabBarIndicatorSize.label = C1110 || CT.C1110;
  tabs$.TabBarIndicatorSize.values = C1111 || CT.C1111;
  var C1112;
  var C1115;
  var C1116;
  var C1117;
  var C1114;
  var C1113;
  var _buildLabelText = dart.privateName(tabs$, "_buildLabelText");
  var C1120;
  var C1121;
  var C1119;
  var C1118;
  var C1124;
  var C1125;
  var C1126;
  var C1123;
  var C1122;
  var C1129;
  var C1130;
  var C1128;
  var C1127;
  var C1133;
  var C1134;
  var C1132;
  var C1131;
  var text$0 = dart.privateName(tabs$, "Tab.text");
  var child$8 = dart.privateName(tabs$, "Tab.child");
  var icon$0 = dart.privateName(tabs$, "Tab.icon");
  var iconMargin$ = dart.privateName(tabs$, "Tab.iconMargin");
  tabs$.Tab = class Tab extends framework.StatelessWidget {
    get text() {
      return this[text$0];
    }
    set text(value) {
      super.text = value;
    }
    get child() {
      return this[child$8];
    }
    set child(value) {
      super.child = value;
    }
    get icon() {
      return this[icon$0];
    }
    set icon(value) {
      super.icon = value;
    }
    get iconMargin() {
      return this[iconMargin$];
    }
    set iconMargin(value) {
      super.iconMargin = value;
    }
    [_buildLabelText]() {
      let t6;
      t6 = this.child;
      return t6 == null ? new text$.Text.new(this.text, {softWrap: false, overflow: paragraph.TextOverflow.fade, $creationLocationd_0dea112b090073317d4: C1113 || CT.C1113}) : t6;
    }
    build(context) {
      if (!dart.test(debug$0.debugCheckHasMaterial(context))) dart.assertFailed(null, L43, 105, 12, "debugCheckHasMaterial(context)");
      let height = null;
      let label = null;
      if (this.icon == null) {
        height = 46;
        label = this[_buildLabelText]();
      } else if (this.text == null && this.child == null) {
        height = 46;
        label = this.icon;
      } else {
        height = 72;
        label = new basic.Column.new({mainAxisAlignment: flex.MainAxisAlignment.center, crossAxisAlignment: flex.CrossAxisAlignment.center, children: JSArrayOfWidgetL().of([new container.Container.new({child: this.icon, margin: this.iconMargin, $creationLocationd_0dea112b090073317d4: C1118 || CT.C1118}), this[_buildLabelText]()]), $creationLocationd_0dea112b090073317d4: C1122 || CT.C1122});
      }
      return new basic.SizedBox.new({height: height, child: new basic.Center.new({child: label, widthFactor: 1.0, $creationLocationd_0dea112b090073317d4: C1127 || CT.C1127}), $creationLocationd_0dea112b090073317d4: C1131 || CT.C1131});
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new diagnostics.StringProperty.new("text", this.text, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfWidgetL()).new("icon", this.icon, {defaultValue: null}));
    }
  };
  (tabs$.Tab.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let text = opts && 'text' in opts ? opts.text : null;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    let iconMargin = opts && 'iconMargin' in opts ? opts.iconMargin : C1112 || CT.C1112;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[text$0] = text;
    this[icon$0] = icon;
    this[iconMargin$] = iconMargin;
    this[child$8] = child;
    if (!(text != null || child != null || icon != null)) dart.assertFailed(null, L43, 74, 15, "text != null || child != null || icon != null");
    if (!(text == null || child == null)) dart.assertFailed(null, L43, 75, 15, "text == null || child == null");
    tabs$.Tab.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = tabs$.Tab.prototype;
  dart.addTypeTests(tabs$.Tab);
  dart.addTypeCaches(tabs$.Tab);
  dart.setMethodSignature(tabs$.Tab, () => ({
    __proto__: dart.getMethods(tabs$.Tab.__proto__),
    [_buildLabelText]: dart.fnType(dart.legacy(framework.Widget), []),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(tabs$.Tab, L42);
  dart.setFieldSignature(tabs$.Tab, () => ({
    __proto__: dart.getFields(tabs$.Tab.__proto__),
    text: dart.finalFieldType(dart.legacy(core.String)),
    child: dart.finalFieldType(dart.legacy(framework.Widget)),
    icon: dart.finalFieldType(dart.legacy(framework.Widget)),
    iconMargin: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsetsGeometry))
  }));
  var C1137;
  var C1138;
  var C1136;
  var C1135;
  var labelStyle$ = dart.privateName(tabs$, "_TabStyle.labelStyle");
  var unselectedLabelStyle$ = dart.privateName(tabs$, "_TabStyle.unselectedLabelStyle");
  var selected$0 = dart.privateName(tabs$, "_TabStyle.selected");
  var labelColor$ = dart.privateName(tabs$, "_TabStyle.labelColor");
  var unselectedLabelColor$ = dart.privateName(tabs$, "_TabStyle.unselectedLabelColor");
  var child$9 = dart.privateName(tabs$, "_TabStyle.child");
  tabs$._TabStyle = class _TabStyle extends transitions.AnimatedWidget {
    get labelStyle() {
      return this[labelStyle$];
    }
    set labelStyle(value) {
      super.labelStyle = value;
    }
    get unselectedLabelStyle() {
      return this[unselectedLabelStyle$];
    }
    set unselectedLabelStyle(value) {
      super.unselectedLabelStyle = value;
    }
    get selected() {
      return this[selected$0];
    }
    set selected(value) {
      super.selected = value;
    }
    get labelColor() {
      return this[labelColor$];
    }
    set labelColor(value) {
      super.labelColor = value;
    }
    get unselectedLabelColor() {
      return this[unselectedLabelColor$];
    }
    set unselectedLabelColor(value) {
      super.unselectedLabelColor = value;
    }
    get child() {
      return this[child$9];
    }
    set child(value) {
      super.child = value;
    }
    build(context) {
      let t6, t6$, t6$0, t6$1, t6$2, t6$3, t6$4, t6$5, t6$6;
      let themeData = theme$.Theme.of(context);
      let tabBarTheme = tab_bar_theme.TabBarTheme.of(context);
      let animation = AnimationLOfdoubleL().as(this.listenable);
      let defaultStyle = (t6$ = (t6 = this.labelStyle, t6 == null ? tabBarTheme.labelStyle : t6), t6$ == null ? themeData.primaryTextTheme.bodyText1 : t6$).copyWith({inherit: true});
      let defaultUnselectedStyle = (t6$2 = (t6$1 = (t6$0 = this.unselectedLabelStyle, t6$0 == null ? tabBarTheme.unselectedLabelStyle : t6$0), t6$1 == null ? this.labelStyle : t6$1), t6$2 == null ? themeData.primaryTextTheme.bodyText1 : t6$2).copyWith({inherit: true});
      let textStyle = dart.test(this.selected) ? text_style.TextStyle.lerp(defaultStyle, defaultUnselectedStyle, animation.value) : text_style.TextStyle.lerp(defaultUnselectedStyle, defaultStyle, animation.value);
      let selectedColor = (t6$4 = (t6$3 = this.labelColor, t6$3 == null ? tabBarTheme.labelColor : t6$3), t6$4 == null ? themeData.primaryTextTheme.bodyText1.color : t6$4);
      let unselectedColor = (t6$6 = (t6$5 = this.unselectedLabelColor, t6$5 == null ? tabBarTheme.unselectedLabelColor : t6$5), t6$6 == null ? selectedColor.withAlpha(178) : t6$6);
      let color = dart.test(this.selected) ? ui.Color.lerp(selectedColor, unselectedColor, animation.value) : ui.Color.lerp(unselectedColor, selectedColor, animation.value);
      return new text$.DefaultTextStyle.new({style: textStyle.copyWith({color: color}), child: icon_theme.IconTheme.merge({data: new icon_theme_data.IconThemeData.new({size: 24.0, color: color}), child: this.child}), $creationLocationd_0dea112b090073317d4: C1135 || CT.C1135});
    }
  };
  (tabs$._TabStyle.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let animation = opts && 'animation' in opts ? opts.animation : null;
    let selected = opts && 'selected' in opts ? opts.selected : null;
    let labelColor = opts && 'labelColor' in opts ? opts.labelColor : null;
    let unselectedLabelColor = opts && 'unselectedLabelColor' in opts ? opts.unselectedLabelColor : null;
    let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
    let unselectedLabelStyle = opts && 'unselectedLabelStyle' in opts ? opts.unselectedLabelStyle : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[selected$0] = selected;
    this[labelColor$] = labelColor;
    this[unselectedLabelColor$] = unselectedLabelColor;
    this[labelStyle$] = labelStyle;
    this[unselectedLabelStyle$] = unselectedLabelStyle;
    this[child$9] = child;
    tabs$._TabStyle.__proto__.new.call(this, {key: key, listenable: animation, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = tabs$._TabStyle.prototype;
  dart.addTypeTests(tabs$._TabStyle);
  dart.addTypeCaches(tabs$._TabStyle);
  dart.setMethodSignature(tabs$._TabStyle, () => ({
    __proto__: dart.getMethods(tabs$._TabStyle.__proto__),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(tabs$._TabStyle, L42);
  dart.setFieldSignature(tabs$._TabStyle, () => ({
    __proto__: dart.getFields(tabs$._TabStyle.__proto__),
    labelStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    unselectedLabelStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    selected: dart.finalFieldType(dart.legacy(core.bool)),
    labelColor: dart.finalFieldType(dart.legacy(ui.Color)),
    unselectedLabelColor: dart.finalFieldType(dart.legacy(ui.Color)),
    child: dart.finalFieldType(dart.legacy(framework.Widget))
  }));
  tabs$._TabLabelBarRenderer = class _TabLabelBarRenderer extends flex.RenderFlex {
    performLayout() {
      let t8, t7, t6;
      super.performLayout();
      let child = this.firstChild;
      let xOffsets = JSArrayOfdoubleL().of([]);
      while (child != null) {
        let childParentData = FlexParentDataL().as(child.parentData);
        xOffsets[$add](childParentData.offset.dx);
        if (!dart.equals(child.parentData, childParentData)) dart.assertFailed(null, L43, 248, 14, "child.parentData == childParentData");
        child = childParentData.nextSibling;
      }
      if (!(this.textDirection != null)) dart.assertFailed(null, L43, 251, 12, "textDirection != null");
      switch (this.textDirection) {
        case C237 || CT.C237:
        {
          xOffsets[$insert](0, this.size.width);
          break;
        }
        case C238 || CT.C238:
        {
          xOffsets[$add](this.size.width);
          break;
        }
      }
      t6 = xOffsets;
      t7 = this.textDirection;
      t8 = this.size.width;
      this.onPerformLayout(t6, t7, t8);
    }
  };
  (tabs$._TabLabelBarRenderer.new = function(opts) {
    let children = opts && 'children' in opts ? opts.children : null;
    let direction = opts && 'direction' in opts ? opts.direction : null;
    let mainAxisSize = opts && 'mainAxisSize' in opts ? opts.mainAxisSize : null;
    let mainAxisAlignment = opts && 'mainAxisAlignment' in opts ? opts.mainAxisAlignment : null;
    let crossAxisAlignment = opts && 'crossAxisAlignment' in opts ? opts.crossAxisAlignment : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let verticalDirection = opts && 'verticalDirection' in opts ? opts.verticalDirection : null;
    let onPerformLayout = opts && 'onPerformLayout' in opts ? opts.onPerformLayout : null;
    this.onPerformLayout = onPerformLayout;
    if (!(onPerformLayout != null)) dart.assertFailed(null, L43, 222, 15, "onPerformLayout != null");
    if (!(textDirection != null)) dart.assertFailed(null, L43, 223, 15, "textDirection != null");
    tabs$._TabLabelBarRenderer.__proto__.new.call(this, {children: children, direction: direction, mainAxisSize: mainAxisSize, mainAxisAlignment: mainAxisAlignment, crossAxisAlignment: crossAxisAlignment, textDirection: textDirection, verticalDirection: verticalDirection});
    ;
  }).prototype = tabs$._TabLabelBarRenderer.prototype;
  dart.addTypeTests(tabs$._TabLabelBarRenderer);
  dart.addTypeCaches(tabs$._TabLabelBarRenderer);
  dart.setLibraryUri(tabs$._TabLabelBarRenderer, L42);
  dart.setFieldSignature(tabs$._TabLabelBarRenderer, () => ({
    __proto__: dart.getFields(tabs$._TabLabelBarRenderer.__proto__),
    onPerformLayout: dart.fieldType(dart.legacy(dart.fnType(dart.void, [dart.legacy(core.List$(dart.legacy(core.double))), dart.legacy(ui.TextDirection), dart.legacy(core.double)])))
  }));
  var C1139;
  tabs$._TabLabelBar = class _TabLabelBar extends basic.Flex {
    createRenderObject(context) {
      return new tabs$._TabLabelBarRenderer.new({direction: this.direction, mainAxisAlignment: this.mainAxisAlignment, mainAxisSize: this.mainAxisSize, crossAxisAlignment: this.crossAxisAlignment, textDirection: this.getEffectiveTextDirection(context), verticalDirection: this.verticalDirection, onPerformLayout: this.onPerformLayout});
    }
    updateRenderObject(context, renderObject) {
      _TabLabelBarRendererL().as(renderObject);
      super.updateRenderObject(context, renderObject);
      renderObject.onPerformLayout = this.onPerformLayout;
    }
  };
  (tabs$._TabLabelBar.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let children = opts && 'children' in opts ? opts.children : C1139 || CT.C1139;
    let onPerformLayout = opts && 'onPerformLayout' in opts ? opts.onPerformLayout : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this.onPerformLayout = onPerformLayout;
    tabs$._TabLabelBar.__proto__.new.call(this, {key: key, children: children, direction: basic_types.Axis.horizontal, mainAxisSize: flex.MainAxisSize.max, mainAxisAlignment: flex.MainAxisAlignment.start, crossAxisAlignment: flex.CrossAxisAlignment.center, verticalDirection: basic_types.VerticalDirection.down, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = tabs$._TabLabelBar.prototype;
  dart.addTypeTests(tabs$._TabLabelBar);
  dart.addTypeCaches(tabs$._TabLabelBar);
  dart.setLibraryUri(tabs$._TabLabelBar, L42);
  dart.setFieldSignature(tabs$._TabLabelBar, () => ({
    __proto__: dart.getFields(tabs$._TabLabelBar.__proto__),
    onPerformLayout: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, [dart.legacy(core.List$(dart.legacy(core.double))), dart.legacy(ui.TextDirection), dart.legacy(core.double)])))
  }));
  var _currentTabOffsets = dart.privateName(tabs$, "_currentTabOffsets");
  var _currentTextDirection = dart.privateName(tabs$, "_currentTextDirection");
  var _currentRect = dart.privateName(tabs$, "_currentRect");
  var _painter = dart.privateName(tabs$, "_painter");
  var _needsPaint = dart.privateName(tabs$, "_needsPaint");
  tabs$._IndicatorPainter = class _IndicatorPainter extends custom_paint.CustomPainter {
    markNeedsPaint() {
      this[_needsPaint] = true;
    }
    dispose() {
      let t6;
      t6 = this[_painter];
      t6 == null ? null : t6.dispose();
    }
    saveTabOffsets(tabOffsets, textDirection) {
      this[_currentTabOffsets] = tabOffsets;
      this[_currentTextDirection] = textDirection;
    }
    get maxTabIndex() {
      return dart.notNull(this[_currentTabOffsets][$length]) - 2;
    }
    centerOf(tabIndex) {
      if (!(this[_currentTabOffsets] != null)) dart.assertFailed(null, L43, 360, 12, "_currentTabOffsets != null");
      if (!dart.test(this[_currentTabOffsets][$isNotEmpty])) dart.assertFailed(null, L43, 361, 12, "_currentTabOffsets.isNotEmpty");
      if (!(dart.notNull(tabIndex) >= 0)) dart.assertFailed(null, L43, 362, 12, "tabIndex >= 0");
      if (!(dart.notNull(tabIndex) <= dart.notNull(this.maxTabIndex))) dart.assertFailed(null, L43, 363, 12, "tabIndex <= maxTabIndex");
      return (dart.notNull(this[_currentTabOffsets][$_get](tabIndex)) + dart.notNull(this[_currentTabOffsets][$_get](dart.notNull(tabIndex) + 1))) / 2.0;
    }
    indicatorRect(tabBarSize, tabIndex) {
      if (!(this[_currentTabOffsets] != null)) dart.assertFailed(null, L43, 368, 12, "_currentTabOffsets != null");
      if (!(this[_currentTextDirection] != null)) dart.assertFailed(null, L43, 369, 12, "_currentTextDirection != null");
      if (!dart.test(this[_currentTabOffsets][$isNotEmpty])) dart.assertFailed(null, L43, 370, 12, "_currentTabOffsets.isNotEmpty");
      if (!(dart.notNull(tabIndex) >= 0)) dart.assertFailed(null, L43, 371, 12, "tabIndex >= 0");
      if (!(dart.notNull(tabIndex) <= dart.notNull(this.maxTabIndex))) dart.assertFailed(null, L43, 372, 12, "tabIndex <= maxTabIndex");
      let tabLeft = null;
      let tabRight = null;
      switch (this[_currentTextDirection]) {
        case C237 || CT.C237:
        {
          tabLeft = this[_currentTabOffsets][$_get](dart.notNull(tabIndex) + 1);
          tabRight = this[_currentTabOffsets][$_get](tabIndex);
          break;
        }
        case C238 || CT.C238:
        {
          tabLeft = this[_currentTabOffsets][$_get](tabIndex);
          tabRight = this[_currentTabOffsets][$_get](dart.notNull(tabIndex) + 1);
          break;
        }
      }
      if (this.indicatorSize == tabs$.TabBarIndicatorSize.label) {
        let tabWidth = this.tabKeys[$_get](tabIndex).currentContext.size.width;
        let delta = (dart.notNull(tabRight) - dart.notNull(tabLeft) - dart.notNull(tabWidth)) / 2.0;
        tabLeft = dart.notNull(tabLeft) + delta;
        tabRight = dart.notNull(tabRight) - delta;
      }
      return new ui.Rect.fromLTWH(tabLeft, 0.0, dart.notNull(tabRight) - dart.notNull(tabLeft), tabBarSize.height);
    }
    paint(canvas, size) {
      let t6, t6$, t6$0;
      this[_needsPaint] = false;
      this[_painter] == null ? this[_painter] = this.indicator.createBoxPainter(dart.bind(this, 'markNeedsPaint')) : null;
      if (dart.test(this.controller.indexIsChanging)) {
        let targetRect = this.indicatorRect(size, this.controller.index);
        this[_currentRect] = ui.Rect.lerp(targetRect, (t6 = this[_currentRect], t6 == null ? targetRect : t6), tabs$._indexChangeProgress(this.controller));
      } else {
        let currentIndex = this.controller.index;
        let previous = dart.notNull(currentIndex) > 0 ? this.indicatorRect(size, dart.notNull(currentIndex) - 1) : null;
        let middle = this.indicatorRect(size, currentIndex);
        let next = dart.notNull(currentIndex) < dart.notNull(this.maxTabIndex) ? this.indicatorRect(size, dart.notNull(currentIndex) + 1) : null;
        let index = this.controller.index[$toDouble]();
        let value = this.controller.animation.value;
        if (value === index - 1.0)
          this[_currentRect] = (t6$ = previous, t6$ == null ? middle : t6$);
        else if (value === index + 1.0)
          this[_currentRect] = (t6$0 = next, t6$0 == null ? middle : t6$0);
        else if (value === index)
          this[_currentRect] = middle;
        else if (dart.notNull(value) < index)
          this[_currentRect] = previous == null ? middle : ui.Rect.lerp(middle, previous, index - dart.notNull(value));
        else
          this[_currentRect] = next == null ? middle : ui.Rect.lerp(middle, next, dart.notNull(value) - index);
      }
      if (!(this[_currentRect] != null)) dart.assertFailed(null, L43, 423, 12, "_currentRect != null");
      let configuration = new image_provider.ImageConfiguration.new({size: this[_currentRect].size, textDirection: this[_currentTextDirection]});
      this[_painter].paint(canvas, this[_currentRect].topLeft, configuration);
    }
    static _tabOffsetsEqual(a, b) {
      if (a == null || b == null || a[$length] != b[$length]) return false;
      for (let i = 0; i < dart.notNull(a[$length]); i = i + 1) {
        if (a[$_get](i) != b[$_get](i)) return false;
      }
      return true;
    }
    shouldRepaint(old) {
      _IndicatorPainterL().as(old);
      return dart.test(this[_needsPaint]) || !dart.equals(this.controller, old.controller) || !dart.equals(this.indicator, old.indicator) || this.tabKeys[$length] != old.tabKeys[$length] || !dart.test(tabs$._IndicatorPainter._tabOffsetsEqual(this[_currentTabOffsets], old[_currentTabOffsets])) || !dart.equals(this[_currentTextDirection], old[_currentTextDirection]);
    }
  };
  (tabs$._IndicatorPainter.new = function(opts) {
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let indicator = opts && 'indicator' in opts ? opts.indicator : null;
    let indicatorSize = opts && 'indicatorSize' in opts ? opts.indicatorSize : null;
    let tabKeys = opts && 'tabKeys' in opts ? opts.tabKeys : null;
    let old = opts && 'old' in opts ? opts.old : null;
    this[_currentTabOffsets] = null;
    this[_currentTextDirection] = null;
    this[_currentRect] = null;
    this[_painter] = null;
    this[_needsPaint] = false;
    this.controller = controller;
    this.indicator = indicator;
    this.indicatorSize = indicatorSize;
    this.tabKeys = tabKeys;
    if (!(controller != null)) dart.assertFailed(null, L43, 325, 15, "controller != null");
    if (!(indicator != null)) dart.assertFailed(null, L43, 326, 15, "indicator != null");
    tabs$._IndicatorPainter.__proto__.new.call(this, {repaint: controller.animation});
    if (old != null) this.saveTabOffsets(old[_currentTabOffsets], old[_currentTextDirection]);
  }).prototype = tabs$._IndicatorPainter.prototype;
  dart.addTypeTests(tabs$._IndicatorPainter);
  dart.addTypeCaches(tabs$._IndicatorPainter);
  dart.setMethodSignature(tabs$._IndicatorPainter, () => ({
    __proto__: dart.getMethods(tabs$._IndicatorPainter.__proto__),
    markNeedsPaint: dart.fnType(dart.void, []),
    dispose: dart.fnType(dart.void, []),
    saveTabOffsets: dart.fnType(dart.void, [dart.legacy(core.List$(dart.legacy(core.double))), dart.legacy(ui.TextDirection)]),
    centerOf: dart.fnType(dart.legacy(core.double), [dart.legacy(core.int)]),
    indicatorRect: dart.fnType(dart.legacy(ui.Rect), [dart.legacy(ui.Size), dart.legacy(core.int)]),
    paint: dart.fnType(dart.void, [dart.legacy(ui.Canvas), dart.legacy(ui.Size)]),
    shouldRepaint: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)])
  }));
  dart.setGetterSignature(tabs$._IndicatorPainter, () => ({
    __proto__: dart.getGetters(tabs$._IndicatorPainter.__proto__),
    maxTabIndex: dart.legacy(core.int)
  }));
  dart.setLibraryUri(tabs$._IndicatorPainter, L42);
  dart.setFieldSignature(tabs$._IndicatorPainter, () => ({
    __proto__: dart.getFields(tabs$._IndicatorPainter.__proto__),
    controller: dart.finalFieldType(dart.legacy(tab_controller.TabController)),
    indicator: dart.finalFieldType(dart.legacy(decoration.Decoration)),
    indicatorSize: dart.finalFieldType(dart.legacy(tabs$.TabBarIndicatorSize)),
    tabKeys: dart.finalFieldType(dart.legacy(core.List$(dart.legacy(framework.GlobalKey$(dart.legacy(framework.State$(dart.legacy(framework.StatefulWidget)))))))),
    [_currentTabOffsets]: dart.fieldType(dart.legacy(core.List$(dart.legacy(core.double)))),
    [_currentTextDirection]: dart.fieldType(dart.legacy(ui.TextDirection)),
    [_currentRect]: dart.fieldType(dart.legacy(ui.Rect)),
    [_painter]: dart.fieldType(dart.legacy(decoration.BoxPainter)),
    [_needsPaint]: dart.fieldType(dart.legacy(core.bool))
  }));
  const Animation_AnimationWithParentMixin$36 = class Animation_AnimationWithParentMixin extends animation.Animation$(dart.legacy(core.double)) {};
  (Animation_AnimationWithParentMixin$36.new = function() {
    Animation_AnimationWithParentMixin$36.__proto__.new.call(this);
  }).prototype = Animation_AnimationWithParentMixin$36.prototype;
  dart.applyMixin(Animation_AnimationWithParentMixin$36, animations.AnimationWithParentMixin$(dart.legacy(core.double)));
  tabs$._ChangeAnimation = class _ChangeAnimation extends Animation_AnimationWithParentMixin$36 {
    get parent() {
      return this.controller.animation;
    }
    removeStatusListener(listener) {
      if (this.parent != null) super.removeStatusListener(listener);
    }
    removeListener(listener) {
      if (this.parent != null) super.removeListener(listener);
    }
    get value() {
      return tabs$._indexChangeProgress(this.controller);
    }
  };
  (tabs$._ChangeAnimation.new = function(controller) {
    this.controller = controller;
    tabs$._ChangeAnimation.__proto__.new.call(this);
    ;
  }).prototype = tabs$._ChangeAnimation.prototype;
  dart.addTypeTests(tabs$._ChangeAnimation);
  dart.addTypeCaches(tabs$._ChangeAnimation);
  dart.setGetterSignature(tabs$._ChangeAnimation, () => ({
    __proto__: dart.getGetters(tabs$._ChangeAnimation.__proto__),
    parent: dart.legacy(animation.Animation$(dart.legacy(core.double))),
    value: dart.legacy(core.double)
  }));
  dart.setLibraryUri(tabs$._ChangeAnimation, L42);
  dart.setFieldSignature(tabs$._ChangeAnimation, () => ({
    __proto__: dart.getFields(tabs$._ChangeAnimation.__proto__),
    controller: dart.finalFieldType(dart.legacy(tab_controller.TabController))
  }));
  const Animation_AnimationWithParentMixin$36$ = class Animation_AnimationWithParentMixin extends animation.Animation$(dart.legacy(core.double)) {};
  (Animation_AnimationWithParentMixin$36$.new = function() {
    Animation_AnimationWithParentMixin$36$.__proto__.new.call(this);
  }).prototype = Animation_AnimationWithParentMixin$36$.prototype;
  dart.applyMixin(Animation_AnimationWithParentMixin$36$, animations.AnimationWithParentMixin$(dart.legacy(core.double)));
  tabs$._DragAnimation = class _DragAnimation extends Animation_AnimationWithParentMixin$36$ {
    get parent() {
      return this.controller.animation;
    }
    removeStatusListener(listener) {
      if (this.parent != null) super.removeStatusListener(listener);
    }
    removeListener(listener) {
      if (this.parent != null) super.removeListener(listener);
    }
    get value() {
      if (!!dart.test(this.controller.indexIsChanging)) dart.assertFailed(null, L43, 502, 12, "!controller.indexIsChanging");
      return (dart.notNull(this.controller.animation.value) - this.index[$toDouble]())[$abs]()[$clamp](0.0, 1.0);
    }
  };
  (tabs$._DragAnimation.new = function(controller, index) {
    this.controller = controller;
    this.index = index;
    tabs$._DragAnimation.__proto__.new.call(this);
    ;
  }).prototype = tabs$._DragAnimation.prototype;
  dart.addTypeTests(tabs$._DragAnimation);
  dart.addTypeCaches(tabs$._DragAnimation);
  dart.setGetterSignature(tabs$._DragAnimation, () => ({
    __proto__: dart.getGetters(tabs$._DragAnimation.__proto__),
    parent: dart.legacy(animation.Animation$(dart.legacy(core.double))),
    value: dart.legacy(core.double)
  }));
  dart.setLibraryUri(tabs$._DragAnimation, L42);
  dart.setFieldSignature(tabs$._DragAnimation, () => ({
    __proto__: dart.getFields(tabs$._DragAnimation.__proto__),
    controller: dart.finalFieldType(dart.legacy(tab_controller.TabController)),
    index: dart.finalFieldType(dart.legacy(core.int))
  }));
  var _initialViewportDimensionWasZero = dart.privateName(tabs$, "_initialViewportDimensionWasZero");
  var _initialScrollOffset = dart.privateName(tabs$, "_initialScrollOffset");
  tabs$._TabBarScrollPosition = class _TabBarScrollPosition extends scroll_position_with_single_context.ScrollPositionWithSingleContext {
    applyContentDimensions(minScrollExtent, maxScrollExtent) {
      let result = true;
      if (!dart.equals(this[_initialViewportDimensionWasZero], true)) {
        if (!(this.viewportDimension != null)) dart.assertFailed(null, L43, 539, 14, "viewportDimension != null");
        this[_initialViewportDimensionWasZero] = this.viewportDimension !== 0.0;
        this.correctPixels(this.tabBar[_initialScrollOffset](this.viewportDimension, minScrollExtent, maxScrollExtent));
        result = false;
      }
      return dart.test(super.applyContentDimensions(minScrollExtent, maxScrollExtent)) && result;
    }
  };
  (tabs$._TabBarScrollPosition.new = function(opts) {
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let context = opts && 'context' in opts ? opts.context : null;
    let oldPosition = opts && 'oldPosition' in opts ? opts.oldPosition : null;
    let tabBar = opts && 'tabBar' in opts ? opts.tabBar : null;
    this[_initialViewportDimensionWasZero] = null;
    this.tabBar = tabBar;
    tabs$._TabBarScrollPosition.__proto__.new.call(this, {physics: physics, context: context, initialPixels: null, oldPosition: oldPosition});
    ;
  }).prototype = tabs$._TabBarScrollPosition.prototype;
  dart.addTypeTests(tabs$._TabBarScrollPosition);
  dart.addTypeCaches(tabs$._TabBarScrollPosition);
  dart.setLibraryUri(tabs$._TabBarScrollPosition, L42);
  dart.setFieldSignature(tabs$._TabBarScrollPosition, () => ({
    __proto__: dart.getFields(tabs$._TabBarScrollPosition.__proto__),
    tabBar: dart.finalFieldType(dart.legacy(tabs$._TabBarState)),
    [_initialViewportDimensionWasZero]: dart.fieldType(dart.legacy(core.bool))
  }));
  tabs$._TabBarScrollController = class _TabBarScrollController extends scroll_controller.ScrollController {
    createScrollPosition(physics, context, oldPosition) {
      return new tabs$._TabBarScrollPosition.new({physics: physics, context: context, oldPosition: oldPosition, tabBar: this.tabBar});
    }
  };
  (tabs$._TabBarScrollController.new = function(tabBar) {
    this.tabBar = tabBar;
    tabs$._TabBarScrollController.__proto__.new.call(this);
    ;
  }).prototype = tabs$._TabBarScrollController.prototype;
  dart.addTypeTests(tabs$._TabBarScrollController);
  dart.addTypeCaches(tabs$._TabBarScrollController);
  dart.setLibraryUri(tabs$._TabBarScrollController, L42);
  dart.setFieldSignature(tabs$._TabBarScrollController, () => ({
    __proto__: dart.getFields(tabs$._TabBarScrollController.__proto__),
    tabBar: dart.finalFieldType(dart.legacy(tabs$._TabBarState))
  }));
  var tabs$0 = dart.privateName(tabs$, "TabBar.tabs");
  var controller$ = dart.privateName(tabs$, "TabBar.controller");
  var isScrollable$ = dart.privateName(tabs$, "TabBar.isScrollable");
  var indicatorColor$ = dart.privateName(tabs$, "TabBar.indicatorColor");
  var indicatorWeight$ = dart.privateName(tabs$, "TabBar.indicatorWeight");
  var indicatorPadding$ = dart.privateName(tabs$, "TabBar.indicatorPadding");
  var indicator$ = dart.privateName(tabs$, "TabBar.indicator");
  var indicatorSize$ = dart.privateName(tabs$, "TabBar.indicatorSize");
  var labelColor$0 = dart.privateName(tabs$, "TabBar.labelColor");
  var unselectedLabelColor$0 = dart.privateName(tabs$, "TabBar.unselectedLabelColor");
  var labelStyle$0 = dart.privateName(tabs$, "TabBar.labelStyle");
  var labelPadding$ = dart.privateName(tabs$, "TabBar.labelPadding");
  var unselectedLabelStyle$0 = dart.privateName(tabs$, "TabBar.unselectedLabelStyle");
  var dragStartBehavior$0 = dart.privateName(tabs$, "TabBar.dragStartBehavior");
  var mouseCursor$5 = dart.privateName(tabs$, "TabBar.mouseCursor");
  var onTap$0 = dart.privateName(tabs$, "TabBar.onTap");
  var physics$ = dart.privateName(tabs$, "TabBar.physics");
  tabs$.TabBar = class TabBar extends framework.StatefulWidget {
    get tabs() {
      return this[tabs$0];
    }
    set tabs(value) {
      super.tabs = value;
    }
    get controller() {
      return this[controller$];
    }
    set controller(value) {
      super.controller = value;
    }
    get isScrollable() {
      return this[isScrollable$];
    }
    set isScrollable(value) {
      super.isScrollable = value;
    }
    get indicatorColor() {
      return this[indicatorColor$];
    }
    set indicatorColor(value) {
      super.indicatorColor = value;
    }
    get indicatorWeight() {
      return this[indicatorWeight$];
    }
    set indicatorWeight(value) {
      super.indicatorWeight = value;
    }
    get indicatorPadding() {
      return this[indicatorPadding$];
    }
    set indicatorPadding(value) {
      super.indicatorPadding = value;
    }
    get indicator() {
      return this[indicator$];
    }
    set indicator(value) {
      super.indicator = value;
    }
    get indicatorSize() {
      return this[indicatorSize$];
    }
    set indicatorSize(value) {
      super.indicatorSize = value;
    }
    get labelColor() {
      return this[labelColor$0];
    }
    set labelColor(value) {
      super.labelColor = value;
    }
    get unselectedLabelColor() {
      return this[unselectedLabelColor$0];
    }
    set unselectedLabelColor(value) {
      super.unselectedLabelColor = value;
    }
    get labelStyle() {
      return this[labelStyle$0];
    }
    set labelStyle(value) {
      super.labelStyle = value;
    }
    get labelPadding() {
      return this[labelPadding$];
    }
    set labelPadding(value) {
      super.labelPadding = value;
    }
    get unselectedLabelStyle() {
      return this[unselectedLabelStyle$0];
    }
    set unselectedLabelStyle(value) {
      super.unselectedLabelStyle = value;
    }
    get dragStartBehavior() {
      return this[dragStartBehavior$0];
    }
    set dragStartBehavior(value) {
      super.dragStartBehavior = value;
    }
    get mouseCursor() {
      return this[mouseCursor$5];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get onTap() {
      return this[onTap$0];
    }
    set onTap(value) {
      super.onTap = value;
    }
    get physics() {
      return this[physics$];
    }
    set physics(value) {
      super.physics = value;
    }
    get preferredSize() {
      for (let item of this.tabs) {
        if (TabL().is(item)) {
          let tab = item;
          if ((tab.text != null || tab.child != null) && tab.icon != null) return new ui.Size.fromHeight(72 + dart.notNull(this.indicatorWeight));
        }
      }
      return new ui.Size.fromHeight(46 + dart.notNull(this.indicatorWeight));
    }
    createState() {
      return new tabs$._TabBarState.new();
    }
  };
  (tabs$.TabBar.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let tabs = opts && 'tabs' in opts ? opts.tabs : null;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let isScrollable = opts && 'isScrollable' in opts ? opts.isScrollable : false;
    let indicatorColor = opts && 'indicatorColor' in opts ? opts.indicatorColor : null;
    let indicatorWeight = opts && 'indicatorWeight' in opts ? opts.indicatorWeight : 2;
    let indicatorPadding = opts && 'indicatorPadding' in opts ? opts.indicatorPadding : C278 || CT.C278;
    let indicator = opts && 'indicator' in opts ? opts.indicator : null;
    let indicatorSize = opts && 'indicatorSize' in opts ? opts.indicatorSize : null;
    let labelColor = opts && 'labelColor' in opts ? opts.labelColor : null;
    let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
    let labelPadding = opts && 'labelPadding' in opts ? opts.labelPadding : null;
    let unselectedLabelColor = opts && 'unselectedLabelColor' in opts ? opts.unselectedLabelColor : null;
    let unselectedLabelStyle = opts && 'unselectedLabelStyle' in opts ? opts.unselectedLabelStyle : null;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C588 || CT.C588;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[tabs$0] = tabs;
    this[controller$] = controller;
    this[isScrollable$] = isScrollable;
    this[indicatorColor$] = indicatorColor;
    this[indicatorWeight$] = indicatorWeight;
    this[indicatorPadding$] = indicatorPadding;
    this[indicator$] = indicator;
    this[indicatorSize$] = indicatorSize;
    this[labelColor$0] = labelColor;
    this[labelStyle$0] = labelStyle;
    this[labelPadding$] = labelPadding;
    this[unselectedLabelColor$0] = unselectedLabelColor;
    this[unselectedLabelStyle$0] = unselectedLabelStyle;
    this[dragStartBehavior$0] = dragStartBehavior;
    this[mouseCursor$5] = mouseCursor;
    this[onTap$0] = onTap;
    this[physics$] = physics;
    if (!(tabs != null)) dart.assertFailed(null, L43, 621, 15, "tabs != null");
    if (!(isScrollable != null)) dart.assertFailed(null, L43, 622, 15, "isScrollable != null");
    if (!(dragStartBehavior != null)) dart.assertFailed(null, L43, 623, 15, "dragStartBehavior != null");
    if (!(indicator != null || indicatorWeight != null && dart.notNull(indicatorWeight) > 0.0)) dart.assertFailed(null, L43, 624, 15, "indicator != null || (indicatorWeight != null && indicatorWeight > 0.0)");
    if (!(indicator != null || indicatorPadding != null)) dart.assertFailed(null, L43, 625, 15, "indicator != null || (indicatorPadding != null)");
    tabs$.TabBar.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = tabs$.TabBar.prototype;
  dart.addTypeTests(tabs$.TabBar);
  dart.addTypeCaches(tabs$.TabBar);
  tabs$.TabBar[dart.implements] = () => [preferred_size.PreferredSizeWidget];
  dart.setMethodSignature(tabs$.TabBar, () => ({
    __proto__: dart.getMethods(tabs$.TabBar.__proto__),
    createState: dart.fnType(dart.legacy(tabs$._TabBarState), [])
  }));
  dart.setGetterSignature(tabs$.TabBar, () => ({
    __proto__: dart.getGetters(tabs$.TabBar.__proto__),
    preferredSize: dart.legacy(ui.Size)
  }));
  dart.setLibraryUri(tabs$.TabBar, L42);
  dart.setFieldSignature(tabs$.TabBar, () => ({
    __proto__: dart.getFields(tabs$.TabBar.__proto__),
    tabs: dart.finalFieldType(dart.legacy(core.List$(dart.legacy(framework.Widget)))),
    controller: dart.finalFieldType(dart.legacy(tab_controller.TabController)),
    isScrollable: dart.finalFieldType(dart.legacy(core.bool)),
    indicatorColor: dart.finalFieldType(dart.legacy(ui.Color)),
    indicatorWeight: dart.finalFieldType(dart.legacy(core.double)),
    indicatorPadding: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsetsGeometry)),
    indicator: dart.finalFieldType(dart.legacy(decoration.Decoration)),
    indicatorSize: dart.finalFieldType(dart.legacy(tabs$.TabBarIndicatorSize)),
    labelColor: dart.finalFieldType(dart.legacy(ui.Color)),
    unselectedLabelColor: dart.finalFieldType(dart.legacy(ui.Color)),
    labelStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    labelPadding: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsetsGeometry)),
    unselectedLabelStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    dragStartBehavior: dart.finalFieldType(dart.legacy(recognizer.DragStartBehavior)),
    mouseCursor: dart.finalFieldType(dart.legacy(mouse_cursor.MouseCursor)),
    onTap: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, [dart.legacy(core.int)]))),
    physics: dart.finalFieldType(dart.legacy(scroll_physics.ScrollPhysics))
  }));
  var _scrollController = dart.privateName(tabs$, "_scrollController");
  var _controller$1 = dart.privateName(tabs$, "_controller");
  var _indicatorPainter = dart.privateName(tabs$, "_indicatorPainter");
  var _currentIndex = dart.privateName(tabs$, "_currentIndex");
  var _tabStripWidth = dart.privateName(tabs$, "_tabStripWidth");
  var _tabKeys = dart.privateName(tabs$, "_tabKeys");
  var _indicator = dart.privateName(tabs$, "_indicator");
  var _controllerIsValid = dart.privateName(tabs$, "_controllerIsValid");
  var _handleTabControllerAnimationTick = dart.privateName(tabs$, "_handleTabControllerAnimationTick");
  var _handleTabControllerTick = dart.privateName(tabs$, "_handleTabControllerTick");
  var _updateTabController = dart.privateName(tabs$, "_updateTabController");
  var _initIndicatorPainter = dart.privateName(tabs$, "_initIndicatorPainter");
  var _tabScrollOffset = dart.privateName(tabs$, "_tabScrollOffset");
  var _tabCenteredScrollOffset = dart.privateName(tabs$, "_tabCenteredScrollOffset");
  var _scrollToCurrentIndex = dart.privateName(tabs$, "_scrollToCurrentIndex");
  var _scrollToControllerValue = dart.privateName(tabs$, "_scrollToControllerValue");
  var _saveTabOffsets = dart.privateName(tabs$, "_saveTabOffsets");
  var _handleTap = dart.privateName(tabs$, "_handleTap");
  var C1142;
  var C1143;
  var C1144;
  var C1145;
  var C1146;
  var C1147;
  var C1148;
  var C1141;
  var C1140;
  var _buildStyledTab = dart.privateName(tabs$, "_buildStyledTab");
  var C1151;
  var C1150;
  var C1149;
  var C1154;
  var C1155;
  var C1153;
  var C1152;
  var C1158;
  var C1159;
  var C1157;
  var C1156;
  var C1162;
  var C1163;
  var C1161;
  var C1160;
  var C1166;
  var C1167;
  var C1165;
  var C1164;
  var C1170;
  var C1169;
  var C1168;
  var C1173;
  var C1174;
  var C1172;
  var C1171;
  var C1177;
  var C1178;
  var C1179;
  var C1176;
  var C1175;
  var C1182;
  var C1181;
  var C1180;
  var C1185;
  var C1186;
  var C1184;
  var C1183;
  var C1189;
  var C1190;
  var C1191;
  var C1192;
  var C1193;
  var C1194;
  var C1195;
  var C1188;
  var C1187;
  var C1198;
  var C1199;
  var C1197;
  var C1196;
  var C1202;
  var C1203;
  var C1204;
  var C1205;
  var C1206;
  var C1201;
  var C1200;
  tabs$._TabBarState = class _TabBarState extends framework.State$(dart.legacy(tabs$.TabBar)) {
    initState() {
      super.initState();
      this[_tabKeys] = this.widget.tabs[$map](GlobalKeyLOfStateLOfStatefulWidgetL(), dart.fn(tab => GlobalKeyOfStateLOfStatefulWidgetL().new(), WidgetLToGlobalKeyLOfStateLOfStatefulWidgetL()))[$toList]();
    }
    get [_indicator]() {
      let t6, t6$;
      if (this.widget.indicator != null) return this.widget.indicator;
      let tabBarTheme = tab_bar_theme.TabBarTheme.of(this.context);
      if (tabBarTheme.indicator != null) return tabBarTheme.indicator;
      let color = (t6 = this.widget.indicatorColor, t6 == null ? theme$.Theme.of(this.context).indicatorColor : t6);
      if (color.value == (t6$ = material.Material.of(this.context).color, t6$ == null ? null : t6$.value)) color = colors$.Colors.white;
      return new tab_indicator.UnderlineTabIndicator.new({insets: this.widget.indicatorPadding, borderSide: new borders.BorderSide.new({width: this.widget.indicatorWeight, color: color})});
    }
    get [_controllerIsValid]() {
      let t6;
      return (t6 = this[_controller$1], t6 == null ? null : t6.animation) != null;
    }
    [_updateTabController]() {
      let t6;
      let newController = (t6 = this.widget.controller, t6 == null ? tab_controller.DefaultTabController.of(this.context) : t6);
      if (!dart.test(dart.fn(() => {
        if (newController == null) {
          dart.throw(assertions.FlutterError.new("No TabController for " + dart.str(dart.runtimeType(this.widget)) + ".\n" + "When creating a " + dart.str(dart.runtimeType(this.widget)) + ", you must either provide an explicit " + "TabController using the \"controller\" property, or you must ensure that there " + "is a DefaultTabController above the " + dart.str(dart.runtimeType(this.widget)) + ".\n" + "In this case, there was neither an explicit controller nor a default controller."));
        }
        return true;
      }, VoidToboolL())())) dart.assertFailed(null, L43, 844, 12, "() {\r\n      if (newController == null) {\r\n        throw FlutterError(\r\n          'No TabController for ${widget.runtimeType}.\\n'\r\n          'When creating a ${widget.runtimeType}, you must either provide an explicit '\r\n          'TabController using the \"controller\" property, or you must ensure that there '\r\n          'is a DefaultTabController above the ${widget.runtimeType}.\\n'\r\n          'In this case, there was neither an explicit controller nor a default controller.'\r\n        );\r\n      }\r\n      return true;\r\n    }()");
      if (dart.equals(newController, this[_controller$1])) return;
      if (dart.test(this[_controllerIsValid])) {
        this[_controller$1].animation.removeListener(dart.bind(this, _handleTabControllerAnimationTick));
        this[_controller$1].removeListener(dart.bind(this, _handleTabControllerTick));
      }
      this[_controller$1] = newController;
      if (this[_controller$1] != null) {
        this[_controller$1].animation.addListener(dart.bind(this, _handleTabControllerAnimationTick));
        this[_controller$1].addListener(dart.bind(this, _handleTabControllerTick));
        this[_currentIndex] = this[_controller$1].index;
      }
    }
    [_initIndicatorPainter]() {
      let t6;
      this[_indicatorPainter] = !dart.test(this[_controllerIsValid]) ? null : new tabs$._IndicatorPainter.new({controller: this[_controller$1], indicator: this[_indicator], indicatorSize: (t6 = this.widget.indicatorSize, t6 == null ? tab_bar_theme.TabBarTheme.of(this.context).indicatorSize : t6), tabKeys: this[_tabKeys], old: this[_indicatorPainter]});
    }
    didChangeDependencies() {
      super.didChangeDependencies();
      if (!dart.test(debug$0.debugCheckHasMaterial(this.context))) dart.assertFailed(null, L43, 885, 12, "debugCheckHasMaterial(context)");
      this[_updateTabController]();
      this[_initIndicatorPainter]();
    }
    didUpdateWidget(oldWidget) {
      TabBarL().as(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.controller, oldWidget.controller)) {
        this[_updateTabController]();
        this[_initIndicatorPainter]();
      } else if (!dart.equals(this.widget.indicatorColor, oldWidget.indicatorColor) || this.widget.indicatorWeight != oldWidget.indicatorWeight || this.widget.indicatorSize != oldWidget.indicatorSize || !dart.equals(this.widget.indicator, oldWidget.indicator)) {
        this[_initIndicatorPainter]();
      }
      if (dart.notNull(this.widget.tabs[$length]) > dart.notNull(oldWidget.tabs[$length])) {
        let delta = dart.notNull(this.widget.tabs[$length]) - dart.notNull(oldWidget.tabs[$length]);
        this[_tabKeys][$addAll](ListOfGlobalKeyLOfStateLOfStatefulWidgetL().generate(delta, dart.fn(n => GlobalKeyOfStateLOfStatefulWidgetL().new(), intLToGlobalKeyLOfStateLOfStatefulWidgetL())));
      } else if (dart.notNull(this.widget.tabs[$length]) < dart.notNull(oldWidget.tabs[$length])) {
        this[_tabKeys][$removeRange](this.widget.tabs[$length], oldWidget.tabs[$length]);
      }
    }
    dispose() {
      this[_indicatorPainter].dispose();
      if (dart.test(this[_controllerIsValid])) {
        this[_controller$1].animation.removeListener(dart.bind(this, _handleTabControllerAnimationTick));
        this[_controller$1].removeListener(dart.bind(this, _handleTabControllerTick));
      }
      this[_controller$1] = null;
      super.dispose();
    }
    get maxTabIndex() {
      return this[_indicatorPainter].maxTabIndex;
    }
    [_tabScrollOffset](index, viewportWidth, minExtent, maxExtent) {
      if (!dart.test(this.widget.isScrollable)) return 0.0;
      let tabCenter = this[_indicatorPainter].centerOf(index);
      switch (basic.Directionality.of(this.context)) {
        case C237 || CT.C237:
        {
          tabCenter = dart.notNull(this[_tabStripWidth]) - dart.notNull(tabCenter);
          break;
        }
        case C238 || CT.C238:
        {
          break;
        }
      }
      return (dart.notNull(tabCenter) - dart.notNull(viewportWidth) / 2.0)[$clamp](minExtent, maxExtent);
    }
    [_tabCenteredScrollOffset](index) {
      let position = this[_scrollController].position;
      return this[_tabScrollOffset](index, position.viewportDimension, position.minScrollExtent, position.maxScrollExtent);
    }
    [_initialScrollOffset](viewportWidth, minExtent, maxExtent) {
      return this[_tabScrollOffset](this[_currentIndex], viewportWidth, minExtent, maxExtent);
    }
    [_scrollToCurrentIndex]() {
      let offset = this[_tabCenteredScrollOffset](this[_currentIndex]);
      this[_scrollController].animateTo(offset, {duration: constants.kTabScrollDuration, curve: curves.Curves.ease});
    }
    [_scrollToControllerValue]() {
      let t6, t6$;
      let leadingPosition = dart.notNull(this[_currentIndex]) > 0 ? this[_tabCenteredScrollOffset](dart.notNull(this[_currentIndex]) - 1) : null;
      let middlePosition = this[_tabCenteredScrollOffset](this[_currentIndex]);
      let trailingPosition = dart.notNull(this[_currentIndex]) < dart.notNull(this.maxTabIndex) ? this[_tabCenteredScrollOffset](dart.notNull(this[_currentIndex]) + 1) : null;
      let index = this[_controller$1].index[$toDouble]();
      let value = this[_controller$1].animation.value;
      let offset = null;
      if (value === index - 1.0)
        offset = (t6 = leadingPosition, t6 == null ? middlePosition : t6);
      else if (value === index + 1.0)
        offset = (t6$ = trailingPosition, t6$ == null ? middlePosition : t6$);
      else if (value === index)
        offset = middlePosition;
      else if (dart.notNull(value) < index)
        offset = leadingPosition == null ? middlePosition : ui.lerpDouble(middlePosition, leadingPosition, index - dart.notNull(value));
      else
        offset = trailingPosition == null ? middlePosition : ui.lerpDouble(middlePosition, trailingPosition, dart.notNull(value) - index);
      this[_scrollController].jumpTo(offset);
    }
    [_handleTabControllerAnimationTick]() {
      if (!dart.test(this.mounted)) dart.assertFailed(null, L43, 976, 12, "mounted");
      if (!dart.test(this[_controller$1].indexIsChanging) && dart.test(this.widget.isScrollable)) {
        this[_currentIndex] = this[_controller$1].index;
        this[_scrollToControllerValue]();
      }
    }
    [_handleTabControllerTick]() {
      if (this[_controller$1].index != this[_currentIndex]) {
        this[_currentIndex] = this[_controller$1].index;
        if (dart.test(this.widget.isScrollable)) this[_scrollToCurrentIndex]();
      }
      this.setState(dart.fn(() => {
      }, VoidToNullN()));
    }
    [_saveTabOffsets](tabOffsets, textDirection, width) {
      let t6;
      this[_tabStripWidth] = width;
      t6 = this[_indicatorPainter];
      t6 == null ? null : t6.saveTabOffsets(tabOffsets, textDirection);
    }
    [_handleTap](index) {
      let t7, t6;
      if (!(dart.notNull(index) >= 0 && dart.notNull(index) < dart.notNull(this.widget.tabs[$length]))) dart.assertFailed(null, L43, 1003, 12, "index >= 0 && index < widget.tabs.length");
      this[_controller$1].animateTo(index);
      if (this.widget.onTap != null) {
        t6 = this.widget;
        t7 = index;
        t6.onTap(t7);
      }
    }
    [_buildStyledTab](child, selected, animation) {
      return new tabs$._TabStyle.new({animation: animation, selected: selected, labelColor: this.widget.labelColor, unselectedLabelColor: this.widget.unselectedLabelColor, labelStyle: this.widget.labelStyle, unselectedLabelStyle: this.widget.unselectedLabelStyle, child: child, $creationLocationd_0dea112b090073317d4: C1140 || CT.C1140});
    }
    build(context) {
      let t6, t6$, t6$0;
      if (!dart.test(debug$0.debugCheckHasMaterialLocalizations(context))) dart.assertFailed(null, L43, 1024, 12, "debugCheckHasMaterialLocalizations(context)");
      if (!dart.test(dart.fn(() => {
        if (this[_controller$1].length != this.widget.tabs[$length]) {
          dart.throw(assertions.FlutterError.new("Controller's length property (" + dart.str(this[_controller$1].length) + ") does not match the " + "number of tabs (" + dart.str(this.widget.tabs[$length]) + ") present in TabBar's tabs property."));
        }
        return true;
      }, VoidToboolL())())) dart.assertFailed(null, L43, 1025, 12, "() {\r\n      if (_controller.length != widget.tabs.length) {\r\n        throw FlutterError(\r\n          \"Controller's length property (${_controller.length}) does not match the \"\r\n          \"number of tabs (${widget.tabs.length}) present in TabBar's tabs property.\"\r\n        );\r\n      }\r\n      return true;\r\n    }()");
      let localizations = material_localizations.MaterialLocalizations.of(context);
      if (this[_controller$1].length === 0) {
        return new container.Container.new({height: 46 + dart.notNull(this.widget.indicatorWeight), $creationLocationd_0dea112b090073317d4: C1149 || CT.C1149});
      }
      let tabBarTheme = tab_bar_theme.TabBarTheme.of(context);
      let wrappedTabs = ListOfWidgetL().new(this.widget.tabs[$length]);
      for (let i = 0; i < dart.notNull(this.widget.tabs[$length]); i = i + 1) {
        wrappedTabs[$_set](i, new basic.Center.new({heightFactor: 1.0, child: new basic.Padding.new({padding: (t6$ = (t6 = this.widget.labelPadding, t6 == null ? tabBarTheme.labelPadding : t6), t6$ == null ? constants.kTabLabelPadding : t6$), child: new basic.KeyedSubtree.new({key: this[_tabKeys][$_get](i), child: this.widget.tabs[$_get](i), $creationLocationd_0dea112b090073317d4: C1152 || CT.C1152}), $creationLocationd_0dea112b090073317d4: C1156 || CT.C1156}), $creationLocationd_0dea112b090073317d4: C1160 || CT.C1160}));
      }
      if (this[_controller$1] != null) {
        let previousIndex = this[_controller$1].previousIndex;
        if (dart.test(this[_controller$1].indexIsChanging)) {
          if (!(this[_currentIndex] != previousIndex)) dart.assertFailed(null, L43, 1066, 16, "_currentIndex != previousIndex");
          let animation = new tabs$._ChangeAnimation.new(this[_controller$1]);
          wrappedTabs[$_set](this[_currentIndex], this[_buildStyledTab](wrappedTabs[$_get](this[_currentIndex]), true, animation));
          wrappedTabs[$_set](previousIndex, this[_buildStyledTab](wrappedTabs[$_get](previousIndex), false, animation));
        } else {
          let tabIndex = this[_currentIndex];
          let centerAnimation = new tabs$._DragAnimation.new(this[_controller$1], tabIndex);
          wrappedTabs[$_set](tabIndex, this[_buildStyledTab](wrappedTabs[$_get](tabIndex), true, centerAnimation));
          if (dart.notNull(this[_currentIndex]) > 0) {
            let tabIndex = dart.notNull(this[_currentIndex]) - 1;
            let previousAnimation = new animations.ReverseAnimation.new(new tabs$._DragAnimation.new(this[_controller$1], tabIndex));
            wrappedTabs[$_set](tabIndex, this[_buildStyledTab](wrappedTabs[$_get](tabIndex), false, previousAnimation));
          }
          if (dart.notNull(this[_currentIndex]) < dart.notNull(this.widget.tabs[$length]) - 1) {
            let tabIndex = dart.notNull(this[_currentIndex]) + 1;
            let nextAnimation = new animations.ReverseAnimation.new(new tabs$._DragAnimation.new(this[_controller$1], tabIndex));
            wrappedTabs[$_set](tabIndex, this[_buildStyledTab](wrappedTabs[$_get](tabIndex), false, nextAnimation));
          }
        }
      }
      let tabCount = this.widget.tabs[$length];
      for (let index = 0; index < dart.notNull(tabCount); index = index + 1) {
        wrappedTabs[$_set](index, new ink_well.InkWell.new({mouseCursor: (t6$0 = this.widget.mouseCursor, t6$0 == null ? mouse_cursor.SystemMouseCursors.click : t6$0), onTap: dart.fn(() => {
            this[_handleTap](index);
          }, VoidToNullN()), child: new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({bottom: this.widget.indicatorWeight}), child: new basic.Stack.new({children: JSArrayOfWidgetL().of([wrappedTabs[$_get](index), new basic.Semantics.new({selected: index === this[_currentIndex], label: localizations.tabLabel({tabIndex: index + 1, tabCount: tabCount}), $creationLocationd_0dea112b090073317d4: C1164 || CT.C1164})]), $creationLocationd_0dea112b090073317d4: C1168 || CT.C1168}), $creationLocationd_0dea112b090073317d4: C1171 || CT.C1171}), $creationLocationd_0dea112b090073317d4: C1175 || CT.C1175}));
        if (!dart.test(this.widget.isScrollable)) wrappedTabs[$_set](index, new basic.Expanded.new({child: wrappedTabs[$_get](index), $creationLocationd_0dea112b090073317d4: C1180 || CT.C1180}));
      }
      let tabBar = new basic.CustomPaint.new({painter: this[_indicatorPainter], child: new tabs$._TabStyle.new({animation: animations.kAlwaysDismissedAnimation, selected: false, labelColor: this.widget.labelColor, unselectedLabelColor: this.widget.unselectedLabelColor, labelStyle: this.widget.labelStyle, unselectedLabelStyle: this.widget.unselectedLabelStyle, child: new tabs$._TabLabelBar.new({onPerformLayout: dart.bind(this, _saveTabOffsets), children: wrappedTabs, $creationLocationd_0dea112b090073317d4: C1183 || CT.C1183}), $creationLocationd_0dea112b090073317d4: C1187 || CT.C1187}), $creationLocationd_0dea112b090073317d4: C1196 || CT.C1196});
      if (dart.test(this.widget.isScrollable)) {
        this[_scrollController] == null ? this[_scrollController] = new tabs$._TabBarScrollController.new(this) : null;
        tabBar = new single_child_scroll_view.SingleChildScrollView.new({dragStartBehavior: this.widget.dragStartBehavior, scrollDirection: basic_types.Axis.horizontal, controller: this[_scrollController], physics: this.widget.physics, child: tabBar, $creationLocationd_0dea112b090073317d4: C1200 || CT.C1200});
      }
      return tabBar;
    }
  };
  (tabs$._TabBarState.new = function() {
    this[_scrollController] = null;
    this[_controller$1] = null;
    this[_indicatorPainter] = null;
    this[_currentIndex] = null;
    this[_tabStripWidth] = null;
    this[_tabKeys] = null;
    tabs$._TabBarState.__proto__.new.call(this);
    ;
  }).prototype = tabs$._TabBarState.prototype;
  dart.addTypeTests(tabs$._TabBarState);
  dart.addTypeCaches(tabs$._TabBarState);
  dart.setMethodSignature(tabs$._TabBarState, () => ({
    __proto__: dart.getMethods(tabs$._TabBarState.__proto__),
    [_updateTabController]: dart.fnType(dart.void, []),
    [_initIndicatorPainter]: dart.fnType(dart.void, []),
    [_tabScrollOffset]: dart.fnType(dart.legacy(core.double), [dart.legacy(core.int), dart.legacy(core.double), dart.legacy(core.double), dart.legacy(core.double)]),
    [_tabCenteredScrollOffset]: dart.fnType(dart.legacy(core.double), [dart.legacy(core.int)]),
    [_initialScrollOffset]: dart.fnType(dart.legacy(core.double), [dart.legacy(core.double), dart.legacy(core.double), dart.legacy(core.double)]),
    [_scrollToCurrentIndex]: dart.fnType(dart.void, []),
    [_scrollToControllerValue]: dart.fnType(dart.void, []),
    [_handleTabControllerAnimationTick]: dart.fnType(dart.void, []),
    [_handleTabControllerTick]: dart.fnType(dart.void, []),
    [_saveTabOffsets]: dart.fnType(dart.void, [dart.legacy(core.List$(dart.legacy(core.double))), dart.legacy(ui.TextDirection), dart.legacy(core.double)]),
    [_handleTap]: dart.fnType(dart.void, [dart.legacy(core.int)]),
    [_buildStyledTab]: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.Widget), dart.legacy(core.bool), dart.legacy(animation.Animation$(dart.legacy(core.double)))]),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setGetterSignature(tabs$._TabBarState, () => ({
    __proto__: dart.getGetters(tabs$._TabBarState.__proto__),
    [_indicator]: dart.legacy(decoration.Decoration),
    [_controllerIsValid]: dart.legacy(core.bool),
    maxTabIndex: dart.legacy(core.int)
  }));
  dart.setLibraryUri(tabs$._TabBarState, L42);
  dart.setFieldSignature(tabs$._TabBarState, () => ({
    __proto__: dart.getFields(tabs$._TabBarState.__proto__),
    [_scrollController]: dart.fieldType(dart.legacy(scroll_controller.ScrollController)),
    [_controller$1]: dart.fieldType(dart.legacy(tab_controller.TabController)),
    [_indicatorPainter]: dart.fieldType(dart.legacy(tabs$._IndicatorPainter)),
    [_currentIndex]: dart.fieldType(dart.legacy(core.int)),
    [_tabStripWidth]: dart.fieldType(dart.legacy(core.double)),
    [_tabKeys]: dart.fieldType(dart.legacy(core.List$(dart.legacy(framework.GlobalKey$(dart.legacy(framework.State$(dart.legacy(framework.StatefulWidget))))))))
  }));
  var controller$0 = dart.privateName(tabs$, "TabBarView.controller");
  var children$0 = dart.privateName(tabs$, "TabBarView.children");
  var physics$0 = dart.privateName(tabs$, "TabBarView.physics");
  var dragStartBehavior$1 = dart.privateName(tabs$, "TabBarView.dragStartBehavior");
  tabs$.TabBarView = class TabBarView extends framework.StatefulWidget {
    get controller() {
      return this[controller$0];
    }
    set controller(value) {
      super.controller = value;
    }
    get children() {
      return this[children$0];
    }
    set children(value) {
      super.children = value;
    }
    get physics() {
      return this[physics$0];
    }
    set physics(value) {
      super.physics = value;
    }
    get dragStartBehavior() {
      return this[dragStartBehavior$1];
    }
    set dragStartBehavior(value) {
      super.dragStartBehavior = value;
    }
    createState() {
      return new tabs$._TabBarViewState.new();
    }
  };
  (tabs$.TabBarView.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let children = opts && 'children' in opts ? opts.children : null;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C588 || CT.C588;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[children$0] = children;
    this[controller$0] = controller;
    this[physics$0] = physics;
    this[dragStartBehavior$1] = dragStartBehavior;
    if (!(children != null)) dart.assertFailed(null, L43, 1168, 15, "children != null");
    if (!(dragStartBehavior != null)) dart.assertFailed(null, L43, 1169, 15, "dragStartBehavior != null");
    tabs$.TabBarView.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = tabs$.TabBarView.prototype;
  dart.addTypeTests(tabs$.TabBarView);
  dart.addTypeCaches(tabs$.TabBarView);
  dart.setMethodSignature(tabs$.TabBarView, () => ({
    __proto__: dart.getMethods(tabs$.TabBarView.__proto__),
    createState: dart.fnType(dart.legacy(tabs$._TabBarViewState), [])
  }));
  dart.setLibraryUri(tabs$.TabBarView, L42);
  dart.setFieldSignature(tabs$.TabBarView, () => ({
    __proto__: dart.getFields(tabs$.TabBarView.__proto__),
    controller: dart.finalFieldType(dart.legacy(tab_controller.TabController)),
    children: dart.finalFieldType(dart.legacy(core.List$(dart.legacy(framework.Widget)))),
    physics: dart.finalFieldType(dart.legacy(scroll_physics.ScrollPhysics)),
    dragStartBehavior: dart.finalFieldType(dart.legacy(recognizer.DragStartBehavior))
  }));
  var _pageController = dart.privateName(tabs$, "_pageController");
  var _children$ = dart.privateName(tabs$, "_children");
  var _childrenWithKey = dart.privateName(tabs$, "_childrenWithKey");
  var _warpUnderwayCount = dart.privateName(tabs$, "_warpUnderwayCount");
  var _updateChildren = dart.privateName(tabs$, "_updateChildren");
  var _warpToCurrentIndex = dart.privateName(tabs$, "_warpToCurrentIndex");
  var _handleScrollNotification = dart.privateName(tabs$, "_handleScrollNotification");
  var ScrollPhysics_parent = dart.privateName(scroll_physics, "ScrollPhysics.parent");
  var C1207;
  var C1210;
  var C1211;
  var C1212;
  var C1213;
  var C1209;
  var C1208;
  var C1216;
  var C1217;
  var C1215;
  var C1214;
  tabs$._TabBarViewState = class _TabBarViewState extends framework.State$(dart.legacy(tabs$.TabBarView)) {
    get [_controllerIsValid]() {
      let t6;
      return (t6 = this[_controller$1], t6 == null ? null : t6.animation) != null;
    }
    [_updateTabController]() {
      let t6;
      let newController = (t6 = this.widget.controller, t6 == null ? tab_controller.DefaultTabController.of(this.context) : t6);
      if (!dart.test(dart.fn(() => {
        if (newController == null) {
          dart.throw(assertions.FlutterError.new("No TabController for " + dart.str(dart.runtimeType(this.widget)) + ".\n" + "When creating a " + dart.str(dart.runtimeType(this.widget)) + ", you must either provide an explicit " + "TabController using the \"controller\" property, or you must ensure that there " + "is a DefaultTabController above the " + dart.str(dart.runtimeType(this.widget)) + ".\n" + "In this case, there was neither an explicit controller nor a default controller."));
        }
        return true;
      }, VoidToboolL())())) dart.assertFailed(null, L43, 1219, 12, "() {\r\n      if (newController == null) {\r\n        throw FlutterError(\r\n          'No TabController for ${widget.runtimeType}.\\n'\r\n          'When creating a ${widget.runtimeType}, you must either provide an explicit '\r\n          'TabController using the \"controller\" property, or you must ensure that there '\r\n          'is a DefaultTabController above the ${widget.runtimeType}.\\n'\r\n          'In this case, there was neither an explicit controller nor a default controller.'\r\n        );\r\n      }\r\n      return true;\r\n    }()");
      if (dart.equals(newController, this[_controller$1])) return;
      if (dart.test(this[_controllerIsValid])) this[_controller$1].animation.removeListener(dart.bind(this, _handleTabControllerAnimationTick));
      this[_controller$1] = newController;
      if (this[_controller$1] != null) this[_controller$1].animation.addListener(dart.bind(this, _handleTabControllerAnimationTick));
    }
    initState() {
      super.initState();
      this[_updateChildren]();
    }
    didChangeDependencies() {
      let t6, t6$;
      super.didChangeDependencies();
      this[_updateTabController]();
      this[_currentIndex] = (t6 = this[_controller$1], t6 == null ? null : t6.index);
      this[_pageController] = new page_view.PageController.new({initialPage: (t6$ = this[_currentIndex], t6$ == null ? 0 : t6$)});
    }
    didUpdateWidget(oldWidget) {
      TabBarViewL().as(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.controller, oldWidget.controller)) this[_updateTabController]();
      if (!dart.equals(this.widget.children, oldWidget.children) && this[_warpUnderwayCount] === 0) this[_updateChildren]();
    }
    dispose() {
      if (dart.test(this[_controllerIsValid])) this[_controller$1].animation.removeListener(dart.bind(this, _handleTabControllerAnimationTick));
      this[_controller$1] = null;
      super.dispose();
    }
    [_updateChildren]() {
      this[_children$] = this.widget.children;
      this[_childrenWithKey] = basic.KeyedSubtree.ensureUniqueKeysForList(this.widget.children);
    }
    [_handleTabControllerAnimationTick]() {
      if (dart.notNull(this[_warpUnderwayCount]) > 0 || !dart.test(this[_controller$1].indexIsChanging)) return;
      if (this[_controller$1].index != this[_currentIndex]) {
        this[_currentIndex] = this[_controller$1].index;
        this[_warpToCurrentIndex]();
      }
    }
    [_warpToCurrentIndex]() {
      return async.async(dart.void, (function* _warpToCurrentIndex() {
        if (!dart.test(this.mounted)) return FutureOfvoid().value();
        if (this[_pageController].page === this[_currentIndex][$toDouble]()) return FutureOfvoid().value();
        let previousIndex = this[_controller$1].previousIndex;
        if ((dart.notNull(this[_currentIndex]) - dart.notNull(previousIndex))[$abs]() === 1) {
          this[_warpUnderwayCount] = dart.notNull(this[_warpUnderwayCount]) + 1;
          yield this[_pageController].animateToPage(this[_currentIndex], {duration: constants.kTabScrollDuration, curve: curves.Curves.ease});
          this[_warpUnderwayCount] = dart.notNull(this[_warpUnderwayCount]) - 1;
          return FutureOfvoid().value();
        }
        if (!((dart.notNull(this[_currentIndex]) - dart.notNull(previousIndex))[$abs]() > 1)) dart.assertFailed(null, L43, 1304, 12, "(_currentIndex - previousIndex).abs() > 1");
        let initialPage = dart.notNull(this[_currentIndex]) > dart.notNull(previousIndex) ? dart.notNull(this[_currentIndex]) - 1 : dart.notNull(this[_currentIndex]) + 1;
        let originalChildren = this[_childrenWithKey];
        this.setState(dart.fn(() => {
          this[_warpUnderwayCount] = dart.notNull(this[_warpUnderwayCount]) + 1;
          this[_childrenWithKey] = ListOfWidgetL().from(this[_childrenWithKey], {growable: false});
          let temp = this[_childrenWithKey][$_get](initialPage);
          this[_childrenWithKey][$_set](initialPage, this[_childrenWithKey][$_get](previousIndex));
          this[_childrenWithKey][$_set](previousIndex, temp);
        }, VoidToNullN()));
        this[_pageController].jumpToPage(initialPage);
        yield this[_pageController].animateToPage(this[_currentIndex], {duration: constants.kTabScrollDuration, curve: curves.Curves.ease});
        if (!dart.test(this.mounted)) return FutureOfvoid().value();
        this.setState(dart.fn(() => {
          this[_warpUnderwayCount] = dart.notNull(this[_warpUnderwayCount]) - 1;
          if (!dart.equals(this.widget.children, this[_children$])) {
            this[_updateChildren]();
          } else {
            this[_childrenWithKey] = originalChildren;
          }
        }, VoidToNullN()));
      }).bind(this));
    }
    [_handleScrollNotification](notification) {
      if (dart.notNull(this[_warpUnderwayCount]) > 0) return false;
      if (notification.depth !== 0) return false;
      this[_warpUnderwayCount] = dart.notNull(this[_warpUnderwayCount]) + 1;
      if (ScrollUpdateNotificationL().is(notification) && !dart.test(this[_controller$1].indexIsChanging)) {
        if ((dart.notNull(this[_pageController].page) - dart.notNull(this[_controller$1].index))[$abs]() > 1.0) {
          this[_controller$1].index = this[_pageController].page[$floor]();
          this[_currentIndex] = this[_controller$1].index;
        }
        this[_controller$1].offset = (dart.notNull(this[_pageController].page) - dart.notNull(this[_controller$1].index))[$clamp](-1.0, 1.0);
      } else if (ScrollEndNotificationL().is(notification)) {
        this[_controller$1].index = this[_pageController].page[$round]();
        this[_currentIndex] = this[_controller$1].index;
      }
      this[_warpUnderwayCount] = dart.notNull(this[_warpUnderwayCount]) - 1;
      return false;
    }
    build(context) {
      if (!dart.test(dart.fn(() => {
        if (this[_controller$1].length != this.widget.children[$length]) {
          dart.throw(assertions.FlutterError.new("Controller's length property (" + dart.str(this[_controller$1].length) + ") does not match the " + "number of tabs (" + dart.str(this.widget.children[$length]) + ") present in TabBar's tabs property."));
        }
        return true;
      }, VoidToboolL())())) dart.assertFailed(null, L43, 1358, 12, "() {\r\n      if (_controller.length != widget.children.length) {\r\n        throw FlutterError(\r\n          \"Controller's length property (${_controller.length}) does not match the \"\r\n          \"number of tabs (${widget.children.length}) present in TabBar's tabs property.\"\r\n        );\r\n      }\r\n      return true;\r\n    }()");
      return new (NotificationListenerOfScrollNotificationL()).new({onNotification: dart.bind(this, _handleScrollNotification), child: new page_view.PageView.new({dragStartBehavior: this.widget.dragStartBehavior, controller: this[_pageController], physics: this.widget.physics == null ? tabs$._kTabBarViewPhysics.applyTo(C1207 || CT.C1207) : tabs$._kTabBarViewPhysics.applyTo(this.widget.physics), children: this[_childrenWithKey], $creationLocationd_0dea112b090073317d4: C1208 || CT.C1208}), $creationLocationd_0dea112b090073317d4: C1214 || CT.C1214});
    }
  };
  (tabs$._TabBarViewState.new = function() {
    this[_controller$1] = null;
    this[_pageController] = null;
    this[_children$] = null;
    this[_childrenWithKey] = null;
    this[_currentIndex] = null;
    this[_warpUnderwayCount] = 0;
    tabs$._TabBarViewState.__proto__.new.call(this);
    ;
  }).prototype = tabs$._TabBarViewState.prototype;
  dart.addTypeTests(tabs$._TabBarViewState);
  dart.addTypeCaches(tabs$._TabBarViewState);
  dart.setMethodSignature(tabs$._TabBarViewState, () => ({
    __proto__: dart.getMethods(tabs$._TabBarViewState.__proto__),
    [_updateTabController]: dart.fnType(dart.void, []),
    [_updateChildren]: dart.fnType(dart.void, []),
    [_handleTabControllerAnimationTick]: dart.fnType(dart.void, []),
    [_warpToCurrentIndex]: dart.fnType(dart.legacy(async.Future$(dart.void)), []),
    [_handleScrollNotification]: dart.fnType(dart.legacy(core.bool), [dart.legacy(scroll_notification.ScrollNotification)]),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setGetterSignature(tabs$._TabBarViewState, () => ({
    __proto__: dart.getGetters(tabs$._TabBarViewState.__proto__),
    [_controllerIsValid]: dart.legacy(core.bool)
  }));
  dart.setLibraryUri(tabs$._TabBarViewState, L42);
  dart.setFieldSignature(tabs$._TabBarViewState, () => ({
    __proto__: dart.getFields(tabs$._TabBarViewState.__proto__),
    [_controller$1]: dart.fieldType(dart.legacy(tab_controller.TabController)),
    [_pageController]: dart.fieldType(dart.legacy(page_view.PageController)),
    [_children$]: dart.fieldType(dart.legacy(core.List$(dart.legacy(framework.Widget)))),
    [_childrenWithKey]: dart.fieldType(dart.legacy(core.List$(dart.legacy(framework.Widget)))),
    [_currentIndex]: dart.fieldType(dart.legacy(core.int)),
    [_warpUnderwayCount]: dart.fieldType(dart.legacy(core.int))
  }));
  var C1218;
  var C1221;
  var C1222;
  var C1223;
  var C1224;
  var C1220;
  var C1219;
  var backgroundColor$5 = dart.privateName(tabs$, "TabPageSelectorIndicator.backgroundColor");
  var borderColor$0 = dart.privateName(tabs$, "TabPageSelectorIndicator.borderColor");
  var size$ = dart.privateName(tabs$, "TabPageSelectorIndicator.size");
  tabs$.TabPageSelectorIndicator = class TabPageSelectorIndicator extends framework.StatelessWidget {
    get backgroundColor() {
      return this[backgroundColor$5];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get borderColor() {
      return this[borderColor$0];
    }
    set borderColor(value) {
      super.borderColor = value;
    }
    get size() {
      return this[size$];
    }
    set size(value) {
      super.size = value;
    }
    build(context) {
      return new container.Container.new({width: this.size, height: this.size, margin: C1218 || CT.C1218, decoration: new box_decoration.BoxDecoration.new({color: this.backgroundColor, border: box_border.Border.all({color: this.borderColor}), shape: box_border.BoxShape.circle}), $creationLocationd_0dea112b090073317d4: C1219 || CT.C1219});
    }
  };
  (tabs$.TabPageSelectorIndicator.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let borderColor = opts && 'borderColor' in opts ? opts.borderColor : null;
    let size = opts && 'size' in opts ? opts.size : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[backgroundColor$5] = backgroundColor;
    this[borderColor$0] = borderColor;
    this[size$] = size;
    if (!(backgroundColor != null)) dart.assertFailed(null, L43, 1393, 15, "backgroundColor != null");
    if (!(borderColor != null)) dart.assertFailed(null, L43, 1394, 15, "borderColor != null");
    if (!(size != null)) dart.assertFailed(null, L43, 1395, 15, "size != null");
    tabs$.TabPageSelectorIndicator.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = tabs$.TabPageSelectorIndicator.prototype;
  dart.addTypeTests(tabs$.TabPageSelectorIndicator);
  dart.addTypeCaches(tabs$.TabPageSelectorIndicator);
  dart.setMethodSignature(tabs$.TabPageSelectorIndicator, () => ({
    __proto__: dart.getMethods(tabs$.TabPageSelectorIndicator.__proto__),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(tabs$.TabPageSelectorIndicator, L42);
  dart.setFieldSignature(tabs$.TabPageSelectorIndicator, () => ({
    __proto__: dart.getFields(tabs$.TabPageSelectorIndicator.__proto__),
    backgroundColor: dart.finalFieldType(dart.legacy(ui.Color)),
    borderColor: dart.finalFieldType(dart.legacy(ui.Color)),
    size: dart.finalFieldType(dart.legacy(core.double))
  }));
  var C1227;
  var C1228;
  var C1229;
  var C1226;
  var C1225;
  var _buildTabIndicator = dart.privateName(tabs$, "_buildTabIndicator");
  var C1232;
  var C1233;
  var C1231;
  var C1230;
  var C1236;
  var C1237;
  var C1235;
  var C1234;
  var C1240;
  var C1241;
  var C1239;
  var C1238;
  var controller$1 = dart.privateName(tabs$, "TabPageSelector.controller");
  var indicatorSize$0 = dart.privateName(tabs$, "TabPageSelector.indicatorSize");
  var color$7 = dart.privateName(tabs$, "TabPageSelector.color");
  var selectedColor$1 = dart.privateName(tabs$, "TabPageSelector.selectedColor");
  tabs$.TabPageSelector = class TabPageSelector extends framework.StatelessWidget {
    get controller() {
      return this[controller$1];
    }
    set controller(value) {
      super.controller = value;
    }
    get indicatorSize() {
      return this[indicatorSize$0];
    }
    set indicatorSize(value) {
      super.indicatorSize = value;
    }
    get color() {
      return this[color$7];
    }
    set color(value) {
      super.color = value;
    }
    get selectedColor() {
      return this[selectedColor$1];
    }
    set selectedColor(value) {
      super.selectedColor = value;
    }
    [_buildTabIndicator](tabIndex, tabController, selectedColorTween, previousColorTween) {
      let background = null;
      if (dart.test(tabController.indexIsChanging)) {
        let t = 1.0 - dart.notNull(tabs$._indexChangeProgress(tabController));
        if (tabController.index == tabIndex)
          background = selectedColorTween.lerp(t);
        else if (tabController.previousIndex == tabIndex)
          background = previousColorTween.lerp(t);
        else
          background = selectedColorTween.begin;
      } else {
        let offset = tabController.offset;
        if (tabController.index == tabIndex) {
          background = selectedColorTween.lerp(1.0 - offset[$abs]());
        } else if (tabController.index === dart.notNull(tabIndex) - 1 && dart.notNull(offset) > 0.0) {
          background = selectedColorTween.lerp(offset);
        } else if (tabController.index === dart.notNull(tabIndex) + 1 && dart.notNull(offset) < 0.0) {
          background = selectedColorTween.lerp(-dart.notNull(offset));
        } else {
          background = selectedColorTween.begin;
        }
      }
      return new tabs$.TabPageSelectorIndicator.new({backgroundColor: background, borderColor: selectedColorTween.end, size: this.indicatorSize, $creationLocationd_0dea112b090073317d4: C1225 || CT.C1225});
    }
    build(context) {
      let t6, t6$, t6$0;
      let fixColor = (t6 = this.color, t6 == null ? colors$.Colors.transparent : t6);
      let fixSelectedColor = (t6$ = this.selectedColor, t6$ == null ? theme$.Theme.of(context).accentColor : t6$);
      let selectedColorTween = new tween.ColorTween.new({begin: fixColor, end: fixSelectedColor});
      let previousColorTween = new tween.ColorTween.new({begin: fixSelectedColor, end: fixColor});
      let tabController = (t6$0 = this.controller, t6$0 == null ? tab_controller.DefaultTabController.of(context) : t6$0);
      if (!dart.test(dart.fn(() => {
        if (tabController == null) {
          dart.throw(assertions.FlutterError.new("No TabController for " + dart.str(this.runtimeType) + ".\n" + "When creating a " + dart.str(this.runtimeType) + ", you must either provide an explicit TabController " + "using the \"controller\" property, or you must ensure that there is a " + "DefaultTabController above the " + dart.str(this.runtimeType) + ".\n" + "In this case, there was neither an explicit controller nor a default controller."));
        }
        return true;
      }, VoidToboolL())())) dart.assertFailed(null, L43, 1505, 12, "() {\r\n      if (tabController == null) {\r\n        throw FlutterError(\r\n          'No TabController for $runtimeType.\\n'\r\n          'When creating a $runtimeType, you must either provide an explicit TabController '\r\n          'using the \"controller\" property, or you must ensure that there is a '\r\n          'DefaultTabController above the $runtimeType.\\n'\r\n          'In this case, there was neither an explicit controller nor a default controller.'\r\n        );\r\n      }\r\n      return true;\r\n    }()");
      let animation = new animations.CurvedAnimation.new({parent: tabController.animation, curve: curves.Curves.fastOutSlowIn});
      return new transitions.AnimatedBuilder.new({animation: animation, builder: dart.fn((context, child) => new basic.Semantics.new({label: "Page " + dart.str(dart.notNull(tabController.index) + 1) + " of " + dart.str(tabController.length), child: new basic.Row.new({mainAxisSize: flex.MainAxisSize.min, children: ListOfWidgetL().generate(tabController.length, dart.fn(tabIndex => this[_buildTabIndicator](tabIndex, tabController, selectedColorTween, previousColorTween), intLToWidgetL()))[$toList](), $creationLocationd_0dea112b090073317d4: C1230 || CT.C1230}), $creationLocationd_0dea112b090073317d4: C1234 || CT.C1234}), BuildContextLAndWidgetLToSemanticsL()), $creationLocationd_0dea112b090073317d4: C1238 || CT.C1238});
    }
  };
  (tabs$.TabPageSelector.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let indicatorSize = opts && 'indicatorSize' in opts ? opts.indicatorSize : 12;
    let color = opts && 'color' in opts ? opts.color : null;
    let selectedColor = opts && 'selectedColor' in opts ? opts.selectedColor : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[controller$1] = controller;
    this[indicatorSize$0] = indicatorSize;
    this[color$7] = color;
    this[selectedColor$1] = selectedColor;
    if (!(indicatorSize != null && dart.notNull(indicatorSize) > 0.0)) dart.assertFailed(null, L43, 1437, 15, "indicatorSize != null && indicatorSize > 0.0");
    tabs$.TabPageSelector.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = tabs$.TabPageSelector.prototype;
  dart.addTypeTests(tabs$.TabPageSelector);
  dart.addTypeCaches(tabs$.TabPageSelector);
  dart.setMethodSignature(tabs$.TabPageSelector, () => ({
    __proto__: dart.getMethods(tabs$.TabPageSelector.__proto__),
    [_buildTabIndicator]: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(core.int), dart.legacy(tab_controller.TabController), dart.legacy(tween.ColorTween), dart.legacy(tween.ColorTween)]),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(tabs$.TabPageSelector, L42);
  dart.setFieldSignature(tabs$.TabPageSelector, () => ({
    __proto__: dart.getFields(tabs$.TabPageSelector.__proto__),
    controller: dart.finalFieldType(dart.legacy(tab_controller.TabController)),
    indicatorSize: dart.finalFieldType(dart.legacy(core.double)),
    color: dart.finalFieldType(dart.legacy(ui.Color)),
    selectedColor: dart.finalFieldType(dart.legacy(ui.Color))
  }));
  tabs$._indexChangeProgress = function _indexChangeProgress(controller) {
    let controllerValue = controller.animation.value;
    let previousIndex = controller.previousIndex[$toDouble]();
    let currentIndex = controller.index[$toDouble]();
    if (!dart.test(controller.indexIsChanging)) return (currentIndex - dart.notNull(controllerValue))[$abs]()[$clamp](0.0, 1.0);
    return (dart.notNull(controllerValue) - currentIndex)[$abs]() / (currentIndex - previousIndex)[$abs]();
  };
  var C1242;
  dart.defineLazy(tabs$, {
    /*tabs$._kTabHeight*/get _kTabHeight() {
      return 46;
    },
    /*tabs$._kTextAndIconTabHeight*/get _kTextAndIconTabHeight() {
      return 72;
    },
    /*tabs$._kTabBarViewPhysics*/get _kTabBarViewPhysics() {
      return C1242 || CT.C1242;
    }
  }, true);
  var indicator$0 = dart.privateName(tab_bar_theme, "TabBarTheme.indicator");
  var indicatorSize$1 = dart.privateName(tab_bar_theme, "TabBarTheme.indicatorSize");
  var labelColor$1 = dart.privateName(tab_bar_theme, "TabBarTheme.labelColor");
  var labelPadding$0 = dart.privateName(tab_bar_theme, "TabBarTheme.labelPadding");
  var labelStyle$1 = dart.privateName(tab_bar_theme, "TabBarTheme.labelStyle");
  var unselectedLabelColor$1 = dart.privateName(tab_bar_theme, "TabBarTheme.unselectedLabelColor");
  var unselectedLabelStyle$1 = dart.privateName(tab_bar_theme, "TabBarTheme.unselectedLabelStyle");
  const Object_Diagnosticable$36$2 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$2.new = function() {
  }).prototype = Object_Diagnosticable$36$2.prototype;
  dart.applyMixin(Object_Diagnosticable$36$2, diagnostics.Diagnosticable);
  tab_bar_theme.TabBarTheme = class TabBarTheme extends Object_Diagnosticable$36$2 {
    get indicator() {
      return this[indicator$0];
    }
    set indicator(value) {
      super.indicator = value;
    }
    get indicatorSize() {
      return this[indicatorSize$1];
    }
    set indicatorSize(value) {
      super.indicatorSize = value;
    }
    get labelColor() {
      return this[labelColor$1];
    }
    set labelColor(value) {
      super.labelColor = value;
    }
    get labelPadding() {
      return this[labelPadding$0];
    }
    set labelPadding(value) {
      super.labelPadding = value;
    }
    get labelStyle() {
      return this[labelStyle$1];
    }
    set labelStyle(value) {
      super.labelStyle = value;
    }
    get unselectedLabelColor() {
      return this[unselectedLabelColor$1];
    }
    set unselectedLabelColor(value) {
      super.unselectedLabelColor = value;
    }
    get unselectedLabelStyle() {
      return this[unselectedLabelStyle$1];
    }
    set unselectedLabelStyle(value) {
      super.unselectedLabelStyle = value;
    }
    copyWith(opts) {
      let t6, t6$, t6$0, t6$1, t6$2, t6$3, t6$4;
      let indicator = opts && 'indicator' in opts ? opts.indicator : null;
      let indicatorSize = opts && 'indicatorSize' in opts ? opts.indicatorSize : null;
      let labelColor = opts && 'labelColor' in opts ? opts.labelColor : null;
      let labelPadding = opts && 'labelPadding' in opts ? opts.labelPadding : null;
      let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
      let unselectedLabelColor = opts && 'unselectedLabelColor' in opts ? opts.unselectedLabelColor : null;
      let unselectedLabelStyle = opts && 'unselectedLabelStyle' in opts ? opts.unselectedLabelStyle : null;
      return new tab_bar_theme.TabBarTheme.new({indicator: (t6 = indicator, t6 == null ? this.indicator : t6), indicatorSize: (t6$ = indicatorSize, t6$ == null ? this.indicatorSize : t6$), labelColor: (t6$0 = labelColor, t6$0 == null ? this.labelColor : t6$0), labelPadding: (t6$1 = labelPadding, t6$1 == null ? this.labelPadding : t6$1), labelStyle: (t6$2 = labelStyle, t6$2 == null ? this.labelStyle : t6$2), unselectedLabelColor: (t6$3 = unselectedLabelColor, t6$3 == null ? this.unselectedLabelColor : t6$3), unselectedLabelStyle: (t6$4 = unselectedLabelStyle, t6$4 == null ? this.unselectedLabelStyle : t6$4)});
    }
    static of(context) {
      return theme$.Theme.of(context).tabBarTheme;
    }
    static lerp(a, b, t) {
      if (!(a != null)) dart.assertFailed(null, L44, 95, 12, "a != null");
      if (!(b != null)) dart.assertFailed(null, L44, 96, 12, "b != null");
      if (!(t != null)) dart.assertFailed(null, L44, 97, 12, "t != null");
      return new tab_bar_theme.TabBarTheme.new({indicator: decoration.Decoration.lerp(a.indicator, b.indicator, t), indicatorSize: dart.notNull(t) < 0.5 ? a.indicatorSize : b.indicatorSize, labelColor: ui.Color.lerp(a.labelColor, b.labelColor, t), labelPadding: edge_insets.EdgeInsetsGeometry.lerp(a.labelPadding, b.labelPadding, t), labelStyle: text_style.TextStyle.lerp(a.labelStyle, b.labelStyle, t), unselectedLabelColor: ui.Color.lerp(a.unselectedLabelColor, b.unselectedLabelColor, t), unselectedLabelStyle: text_style.TextStyle.lerp(a.unselectedLabelStyle, b.unselectedLabelStyle, t)});
    }
    get hashCode() {
      return ui.hashValues(this.indicator, this.indicatorSize, this.labelColor, this.labelPadding, this.labelStyle, this.unselectedLabelColor, this.unselectedLabelStyle);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this.runtimeType)) return false;
      return TabBarThemeL().is(other) && dart.equals(other.indicator, this.indicator) && other.indicatorSize == this.indicatorSize && dart.equals(other.labelColor, this.labelColor) && dart.equals(other.labelPadding, this.labelPadding) && dart.equals(other.labelStyle, this.labelStyle) && dart.equals(other.unselectedLabelColor, this.unselectedLabelColor) && dart.equals(other.unselectedLabelStyle, this.unselectedLabelStyle);
    }
  };
  (tab_bar_theme.TabBarTheme.new = function(opts) {
    let indicator = opts && 'indicator' in opts ? opts.indicator : null;
    let indicatorSize = opts && 'indicatorSize' in opts ? opts.indicatorSize : null;
    let labelColor = opts && 'labelColor' in opts ? opts.labelColor : null;
    let labelPadding = opts && 'labelPadding' in opts ? opts.labelPadding : null;
    let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
    let unselectedLabelColor = opts && 'unselectedLabelColor' in opts ? opts.unselectedLabelColor : null;
    let unselectedLabelStyle = opts && 'unselectedLabelStyle' in opts ? opts.unselectedLabelStyle : null;
    this[indicator$0] = indicator;
    this[indicatorSize$1] = indicatorSize;
    this[labelColor$1] = labelColor;
    this[labelPadding$0] = labelPadding;
    this[labelStyle$1] = labelStyle;
    this[unselectedLabelColor$1] = unselectedLabelColor;
    this[unselectedLabelStyle$1] = unselectedLabelStyle;
    ;
  }).prototype = tab_bar_theme.TabBarTheme.prototype;
  dart.addTypeTests(tab_bar_theme.TabBarTheme);
  dart.addTypeCaches(tab_bar_theme.TabBarTheme);
  dart.setMethodSignature(tab_bar_theme.TabBarTheme, () => ({
    __proto__: dart.getMethods(tab_bar_theme.TabBarTheme.__proto__),
    copyWith: dart.fnType(dart.legacy(tab_bar_theme.TabBarTheme), [], {indicator: dart.legacy(decoration.Decoration), indicatorSize: dart.legacy(tabs$.TabBarIndicatorSize), labelColor: dart.legacy(ui.Color), labelPadding: dart.legacy(edge_insets.EdgeInsetsGeometry), labelStyle: dart.legacy(text_style.TextStyle), unselectedLabelColor: dart.legacy(ui.Color), unselectedLabelStyle: dart.legacy(text_style.TextStyle)}, {}),
    _equals: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    [$_equals]: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)])
  }));
  dart.setGetterSignature(tab_bar_theme.TabBarTheme, () => ({
    __proto__: dart.getGetters(tab_bar_theme.TabBarTheme.__proto__),
    hashCode: dart.legacy(core.int),
    [$hashCode]: dart.legacy(core.int)
  }));
  dart.setLibraryUri(tab_bar_theme.TabBarTheme, L45);
  dart.setFieldSignature(tab_bar_theme.TabBarTheme, () => ({
    __proto__: dart.getFields(tab_bar_theme.TabBarTheme.__proto__),
    indicator: dart.finalFieldType(dart.legacy(decoration.Decoration)),
    indicatorSize: dart.finalFieldType(dart.legacy(tabs$.TabBarIndicatorSize)),
    labelColor: dart.finalFieldType(dart.legacy(ui.Color)),
    labelPadding: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsetsGeometry)),
    labelStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    unselectedLabelColor: dart.finalFieldType(dart.legacy(ui.Color)),
    unselectedLabelStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle))
  }));
  dart.defineExtensionMethods(tab_bar_theme.TabBarTheme, ['_equals']);
  dart.defineExtensionAccessors(tab_bar_theme.TabBarTheme, ['hashCode']);
  var _name$10 = dart.privateName(snack_bar_theme, "_name");
  var C1243;
  var C1244;
  var C1245;
  snack_bar_theme.SnackBarBehavior = class SnackBarBehavior extends core.Object {
    toString() {
      return this[_name$10];
    }
  };
  (snack_bar_theme.SnackBarBehavior.new = function(index, _name) {
    this.index = index;
    this[_name$10] = _name;
    ;
  }).prototype = snack_bar_theme.SnackBarBehavior.prototype;
  dart.addTypeTests(snack_bar_theme.SnackBarBehavior);
  dart.addTypeCaches(snack_bar_theme.SnackBarBehavior);
  dart.setMethodSignature(snack_bar_theme.SnackBarBehavior, () => ({
    __proto__: dart.getMethods(snack_bar_theme.SnackBarBehavior.__proto__),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setLibraryUri(snack_bar_theme.SnackBarBehavior, L46);
  dart.setFieldSignature(snack_bar_theme.SnackBarBehavior, () => ({
    __proto__: dart.getFields(snack_bar_theme.SnackBarBehavior.__proto__),
    index: dart.finalFieldType(dart.legacy(core.int)),
    [_name$10]: dart.finalFieldType(dart.legacy(core.String))
  }));
  dart.defineExtensionMethods(snack_bar_theme.SnackBarBehavior, ['toString']);
  snack_bar_theme.SnackBarBehavior.fixed = C1243 || CT.C1243;
  snack_bar_theme.SnackBarBehavior.floating = C1244 || CT.C1244;
  snack_bar_theme.SnackBarBehavior.values = C1245 || CT.C1245;
  var backgroundColor$6 = dart.privateName(snack_bar_theme, "SnackBarThemeData.backgroundColor");
  var actionTextColor$ = dart.privateName(snack_bar_theme, "SnackBarThemeData.actionTextColor");
  var disabledActionTextColor$ = dart.privateName(snack_bar_theme, "SnackBarThemeData.disabledActionTextColor");
  var contentTextStyle$0 = dart.privateName(snack_bar_theme, "SnackBarThemeData.contentTextStyle");
  var elevation$7 = dart.privateName(snack_bar_theme, "SnackBarThemeData.elevation");
  var shape$11 = dart.privateName(snack_bar_theme, "SnackBarThemeData.shape");
  var behavior$0 = dart.privateName(snack_bar_theme, "SnackBarThemeData.behavior");
  const Object_Diagnosticable$36$3 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$3.new = function() {
  }).prototype = Object_Diagnosticable$36$3.prototype;
  dart.applyMixin(Object_Diagnosticable$36$3, diagnostics.Diagnosticable);
  snack_bar_theme.SnackBarThemeData = class SnackBarThemeData extends Object_Diagnosticable$36$3 {
    get backgroundColor() {
      return this[backgroundColor$6];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get actionTextColor() {
      return this[actionTextColor$];
    }
    set actionTextColor(value) {
      super.actionTextColor = value;
    }
    get disabledActionTextColor() {
      return this[disabledActionTextColor$];
    }
    set disabledActionTextColor(value) {
      super.disabledActionTextColor = value;
    }
    get contentTextStyle() {
      return this[contentTextStyle$0];
    }
    set contentTextStyle(value) {
      super.contentTextStyle = value;
    }
    get elevation() {
      return this[elevation$7];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get shape() {
      return this[shape$11];
    }
    set shape(value) {
      super.shape = value;
    }
    get behavior() {
      return this[behavior$0];
    }
    set behavior(value) {
      super.behavior = value;
    }
    copyWith(opts) {
      let t6, t6$, t6$0, t6$1, t6$2, t6$3, t6$4;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let actionTextColor = opts && 'actionTextColor' in opts ? opts.actionTextColor : null;
      let disabledActionTextColor = opts && 'disabledActionTextColor' in opts ? opts.disabledActionTextColor : null;
      let contentTextStyle = opts && 'contentTextStyle' in opts ? opts.contentTextStyle : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let behavior = opts && 'behavior' in opts ? opts.behavior : null;
      return new snack_bar_theme.SnackBarThemeData.new({backgroundColor: (t6 = backgroundColor, t6 == null ? this.backgroundColor : t6), actionTextColor: (t6$ = actionTextColor, t6$ == null ? this.actionTextColor : t6$), disabledActionTextColor: (t6$0 = disabledActionTextColor, t6$0 == null ? this.disabledActionTextColor : t6$0), contentTextStyle: (t6$1 = contentTextStyle, t6$1 == null ? this.contentTextStyle : t6$1), elevation: (t6$2 = elevation, t6$2 == null ? this.elevation : t6$2), shape: (t6$3 = shape, t6$3 == null ? this.shape : t6$3), behavior: (t6$4 = behavior, t6$4 == null ? this.behavior : t6$4)});
    }
    static lerp(a, b, t) {
      let t6, t6$, t6$0, t6$1, t6$2, t6$3, t6$4, t6$5, t6$6, t6$7, t6$8, t6$9;
      if (!(t != null)) dart.assertFailed(null, L47, 136, 12, "t != null");
      return new snack_bar_theme.SnackBarThemeData.new({backgroundColor: ui.Color.lerp((t6 = a, t6 == null ? null : t6.backgroundColor), (t6$ = b, t6$ == null ? null : t6$.backgroundColor), t), actionTextColor: ui.Color.lerp((t6$0 = a, t6$0 == null ? null : t6$0.actionTextColor), (t6$1 = b, t6$1 == null ? null : t6$1.actionTextColor), t), disabledActionTextColor: ui.Color.lerp((t6$2 = a, t6$2 == null ? null : t6$2.disabledActionTextColor), (t6$3 = b, t6$3 == null ? null : t6$3.disabledActionTextColor), t), contentTextStyle: text_style.TextStyle.lerp((t6$4 = a, t6$4 == null ? null : t6$4.contentTextStyle), (t6$5 = b, t6$5 == null ? null : t6$5.contentTextStyle), t), elevation: ui.lerpDouble((t6$6 = a, t6$6 == null ? null : t6$6.elevation), (t6$7 = b, t6$7 == null ? null : t6$7.elevation), t), shape: borders.ShapeBorder.lerp((t6$8 = a, t6$8 == null ? null : t6$8.shape), (t6$9 = b, t6$9 == null ? null : t6$9.shape), t), behavior: dart.notNull(t) < 0.5 ? a.behavior : b.behavior});
    }
    get hashCode() {
      return ui.hashValues(this.backgroundColor, this.actionTextColor, this.disabledActionTextColor, this.contentTextStyle, this.elevation, this.shape, this.behavior);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this.runtimeType)) return false;
      return SnackBarThemeDataL().is(other) && dart.equals(other.backgroundColor, this.backgroundColor) && dart.equals(other.actionTextColor, this.actionTextColor) && dart.equals(other.disabledActionTextColor, this.disabledActionTextColor) && dart.equals(other.contentTextStyle, this.contentTextStyle) && other.elevation == this.elevation && dart.equals(other.shape, this.shape) && other.behavior == this.behavior;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new colors.ColorProperty.new("backgroundColor", this.backgroundColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("actionTextColor", this.actionTextColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("disabledActionTextColor", this.disabledActionTextColor, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfTextStyleL()).new("contentTextStyle", this.contentTextStyle, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("elevation", this.elevation, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfShapeBorderL()).new("shape", this.shape, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfSnackBarBehaviorL()).new("behavior", this.behavior, {defaultValue: null}));
    }
  };
  (snack_bar_theme.SnackBarThemeData.new = function(opts) {
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let actionTextColor = opts && 'actionTextColor' in opts ? opts.actionTextColor : null;
    let disabledActionTextColor = opts && 'disabledActionTextColor' in opts ? opts.disabledActionTextColor : null;
    let contentTextStyle = opts && 'contentTextStyle' in opts ? opts.contentTextStyle : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let behavior = opts && 'behavior' in opts ? opts.behavior : null;
    this[backgroundColor$6] = backgroundColor;
    this[actionTextColor$] = actionTextColor;
    this[disabledActionTextColor$] = disabledActionTextColor;
    this[contentTextStyle$0] = contentTextStyle;
    this[elevation$7] = elevation;
    this[shape$11] = shape;
    this[behavior$0] = behavior;
    if (!(elevation == null || dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, L47, 65, 15, "elevation == null || elevation >= 0.0");
    ;
  }).prototype = snack_bar_theme.SnackBarThemeData.prototype;
  dart.addTypeTests(snack_bar_theme.SnackBarThemeData);
  dart.addTypeCaches(snack_bar_theme.SnackBarThemeData);
  dart.setMethodSignature(snack_bar_theme.SnackBarThemeData, () => ({
    __proto__: dart.getMethods(snack_bar_theme.SnackBarThemeData.__proto__),
    copyWith: dart.fnType(dart.legacy(snack_bar_theme.SnackBarThemeData), [], {actionTextColor: dart.legacy(ui.Color), backgroundColor: dart.legacy(ui.Color), behavior: dart.legacy(snack_bar_theme.SnackBarBehavior), contentTextStyle: dart.legacy(text_style.TextStyle), disabledActionTextColor: dart.legacy(ui.Color), elevation: dart.legacy(core.double), shape: dart.legacy(borders.ShapeBorder)}, {}),
    _equals: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    [$_equals]: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    debugFillProperties: dart.fnType(dart.void, [dart.legacy(diagnostics.DiagnosticPropertiesBuilder)])
  }));
  dart.setGetterSignature(snack_bar_theme.SnackBarThemeData, () => ({
    __proto__: dart.getGetters(snack_bar_theme.SnackBarThemeData.__proto__),
    hashCode: dart.legacy(core.int),
    [$hashCode]: dart.legacy(core.int)
  }));
  dart.setLibraryUri(snack_bar_theme.SnackBarThemeData, L46);
  dart.setFieldSignature(snack_bar_theme.SnackBarThemeData, () => ({
    __proto__: dart.getFields(snack_bar_theme.SnackBarThemeData.__proto__),
    backgroundColor: dart.finalFieldType(dart.legacy(ui.Color)),
    actionTextColor: dart.finalFieldType(dart.legacy(ui.Color)),
    disabledActionTextColor: dart.finalFieldType(dart.legacy(ui.Color)),
    contentTextStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    elevation: dart.finalFieldType(dart.legacy(core.double)),
    shape: dart.finalFieldType(dart.legacy(borders.ShapeBorder)),
    behavior: dart.finalFieldType(dart.legacy(snack_bar_theme.SnackBarBehavior))
  }));
  dart.defineExtensionMethods(snack_bar_theme.SnackBarThemeData, ['_equals']);
  dart.defineExtensionAccessors(snack_bar_theme.SnackBarThemeData, ['hashCode']);
  var C1248;
  var C1249;
  var C1247;
  var C1246;
  var data$3 = dart.privateName(slider_theme, "SliderTheme.data");
  slider_theme.SliderTheme = class SliderTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[data$3];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let inheritedTheme = context.dependOnInheritedWidgetOfExactType(SliderThemeL());
      return inheritedTheme != null ? inheritedTheme.data : theme$.Theme.of(context).sliderTheme;
    }
    wrap(context, child) {
      let ancestorTheme = context.findAncestorWidgetOfExactType(SliderThemeL());
      return this === ancestorTheme ? child : new slider_theme.SliderTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C1246 || CT.C1246});
    }
    updateShouldNotify(oldWidget) {
      SliderThemeL().as(oldWidget);
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (slider_theme.SliderTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[data$3] = data;
    if (!(child != null)) dart.assertFailed(null, L48, 166, 15, "child != null");
    if (!(data != null)) dart.assertFailed(null, L48, 167, 15, "data != null");
    slider_theme.SliderTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = slider_theme.SliderTheme.prototype;
  dart.addTypeTests(slider_theme.SliderTheme);
  dart.addTypeCaches(slider_theme.SliderTheme);
  dart.setMethodSignature(slider_theme.SliderTheme, () => ({
    __proto__: dart.getMethods(slider_theme.SliderTheme.__proto__),
    wrap: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext), dart.legacy(framework.Widget)]),
    updateShouldNotify: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)])
  }));
  dart.setLibraryUri(slider_theme.SliderTheme, L49);
  dart.setFieldSignature(slider_theme.SliderTheme, () => ({
    __proto__: dart.getFields(slider_theme.SliderTheme.__proto__),
    data: dart.finalFieldType(dart.legacy(slider_theme.SliderThemeData))
  }));
  var _name$11 = dart.privateName(slider_theme, "_name");
  var C1250;
  var C1251;
  var C1252;
  var C1253;
  var C1254;
  slider_theme.ShowValueIndicator = class ShowValueIndicator extends core.Object {
    toString() {
      return this[_name$11];
    }
  };
  (slider_theme.ShowValueIndicator.new = function(index, _name) {
    this.index = index;
    this[_name$11] = _name;
    ;
  }).prototype = slider_theme.ShowValueIndicator.prototype;
  dart.addTypeTests(slider_theme.ShowValueIndicator);
  dart.addTypeCaches(slider_theme.ShowValueIndicator);
  dart.setMethodSignature(slider_theme.ShowValueIndicator, () => ({
    __proto__: dart.getMethods(slider_theme.ShowValueIndicator.__proto__),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setLibraryUri(slider_theme.ShowValueIndicator, L49);
  dart.setFieldSignature(slider_theme.ShowValueIndicator, () => ({
    __proto__: dart.getFields(slider_theme.ShowValueIndicator.__proto__),
    index: dart.finalFieldType(dart.legacy(core.int)),
    [_name$11]: dart.finalFieldType(dart.legacy(core.String))
  }));
  dart.defineExtensionMethods(slider_theme.ShowValueIndicator, ['toString']);
  slider_theme.ShowValueIndicator.onlyForDiscrete = C1250 || CT.C1250;
  slider_theme.ShowValueIndicator.onlyForContinuous = C1251 || CT.C1251;
  slider_theme.ShowValueIndicator.always = C1252 || CT.C1252;
  slider_theme.ShowValueIndicator.never = C1253 || CT.C1253;
  slider_theme.ShowValueIndicator.values = C1254 || CT.C1254;
  var C1255;
  var C1256;
  var C1257;
  slider_theme.Thumb = class Thumb extends core.Object {
    toString() {
      return this[_name$11];
    }
  };
  (slider_theme.Thumb.new = function(index, _name) {
    this.index = index;
    this[_name$11] = _name;
    ;
  }).prototype = slider_theme.Thumb.prototype;
  dart.addTypeTests(slider_theme.Thumb);
  dart.addTypeCaches(slider_theme.Thumb);
  dart.setMethodSignature(slider_theme.Thumb, () => ({
    __proto__: dart.getMethods(slider_theme.Thumb.__proto__),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setLibraryUri(slider_theme.Thumb, L49);
  dart.setFieldSignature(slider_theme.Thumb, () => ({
    __proto__: dart.getFields(slider_theme.Thumb.__proto__),
    index: dart.finalFieldType(dart.legacy(core.int)),
    [_name$11]: dart.finalFieldType(dart.legacy(core.String))
  }));
  dart.defineExtensionMethods(slider_theme.Thumb, ['toString']);
  slider_theme.Thumb.start = C1255 || CT.C1255;
  slider_theme.Thumb.end = C1256 || CT.C1256;
  slider_theme.Thumb.values = C1257 || CT.C1257;
  var RoundSliderOverlayShape_overlayRadius = dart.privateName(slider_theme, "RoundSliderOverlayShape.overlayRadius");
  var C1258;
  var RoundSliderTickMarkShape_tickMarkRadius = dart.privateName(slider_theme, "RoundSliderTickMarkShape.tickMarkRadius");
  var C1259;
  var RoundSliderThumbShape_pressedElevation = dart.privateName(slider_theme, "RoundSliderThumbShape.pressedElevation");
  var RoundSliderThumbShape_elevation = dart.privateName(slider_theme, "RoundSliderThumbShape.elevation");
  var RoundSliderThumbShape_disabledThumbRadius = dart.privateName(slider_theme, "RoundSliderThumbShape.disabledThumbRadius");
  var RoundSliderThumbShape_enabledThumbRadius = dart.privateName(slider_theme, "RoundSliderThumbShape.enabledThumbRadius");
  var C1260;
  var C1261;
  var C1262;
  var RoundRangeSliderTickMarkShape_tickMarkRadius = dart.privateName(slider_theme, "RoundRangeSliderTickMarkShape.tickMarkRadius");
  var C1263;
  var RoundRangeSliderThumbShape_pressedElevation = dart.privateName(slider_theme, "RoundRangeSliderThumbShape.pressedElevation");
  var RoundRangeSliderThumbShape_elevation = dart.privateName(slider_theme, "RoundRangeSliderThumbShape.elevation");
  var RoundRangeSliderThumbShape_disabledThumbRadius = dart.privateName(slider_theme, "RoundRangeSliderThumbShape.disabledThumbRadius");
  var RoundRangeSliderThumbShape_enabledThumbRadius = dart.privateName(slider_theme, "RoundRangeSliderThumbShape.enabledThumbRadius");
  var C1264;
  var C1265;
  var C1266;
  var SliderThemeData_thumbSelector = dart.privateName(slider_theme, "SliderThemeData.thumbSelector");
  var SliderThemeData_minThumbSeparation = dart.privateName(slider_theme, "SliderThemeData.minThumbSeparation");
  var SliderThemeData_valueIndicatorTextStyle = dart.privateName(slider_theme, "SliderThemeData.valueIndicatorTextStyle");
  var SliderThemeData_showValueIndicator = dart.privateName(slider_theme, "SliderThemeData.showValueIndicator");
  var SliderThemeData_rangeValueIndicatorShape = dart.privateName(slider_theme, "SliderThemeData.rangeValueIndicatorShape");
  var SliderThemeData_rangeTrackShape = dart.privateName(slider_theme, "SliderThemeData.rangeTrackShape");
  var SliderThemeData_rangeThumbShape = dart.privateName(slider_theme, "SliderThemeData.rangeThumbShape");
  var SliderThemeData_rangeTickMarkShape = dart.privateName(slider_theme, "SliderThemeData.rangeTickMarkShape");
  var SliderThemeData_valueIndicatorShape = dart.privateName(slider_theme, "SliderThemeData.valueIndicatorShape");
  var SliderThemeData_trackShape = dart.privateName(slider_theme, "SliderThemeData.trackShape");
  var SliderThemeData_thumbShape = dart.privateName(slider_theme, "SliderThemeData.thumbShape");
  var SliderThemeData_tickMarkShape = dart.privateName(slider_theme, "SliderThemeData.tickMarkShape");
  var SliderThemeData_overlayShape = dart.privateName(slider_theme, "SliderThemeData.overlayShape");
  var SliderThemeData_valueIndicatorColor = dart.privateName(slider_theme, "SliderThemeData.valueIndicatorColor");
  var SliderThemeData_overlayColor = dart.privateName(slider_theme, "SliderThemeData.overlayColor");
  var SliderThemeData_disabledThumbColor = dart.privateName(slider_theme, "SliderThemeData.disabledThumbColor");
  var SliderThemeData_overlappingShapeStrokeColor = dart.privateName(slider_theme, "SliderThemeData.overlappingShapeStrokeColor");
  var SliderThemeData_thumbColor = dart.privateName(slider_theme, "SliderThemeData.thumbColor");
  var SliderThemeData_disabledInactiveTickMarkColor = dart.privateName(slider_theme, "SliderThemeData.disabledInactiveTickMarkColor");
  var SliderThemeData_disabledActiveTickMarkColor = dart.privateName(slider_theme, "SliderThemeData.disabledActiveTickMarkColor");
  var SliderThemeData_inactiveTickMarkColor = dart.privateName(slider_theme, "SliderThemeData.inactiveTickMarkColor");
  var SliderThemeData_activeTickMarkColor = dart.privateName(slider_theme, "SliderThemeData.activeTickMarkColor");
  var SliderThemeData_disabledInactiveTrackColor = dart.privateName(slider_theme, "SliderThemeData.disabledInactiveTrackColor");
  var SliderThemeData_disabledActiveTrackColor = dart.privateName(slider_theme, "SliderThemeData.disabledActiveTrackColor");
  var SliderThemeData_inactiveTrackColor = dart.privateName(slider_theme, "SliderThemeData.inactiveTrackColor");
  var SliderThemeData_activeTrackColor = dart.privateName(slider_theme, "SliderThemeData.activeTrackColor");
  var SliderThemeData_trackHeight = dart.privateName(slider_theme, "SliderThemeData.trackHeight");
  var C1267;
  const Object_Diagnosticable$36$4 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$4.new = function() {
  }).prototype = Object_Diagnosticable$36$4.prototype;
  dart.applyMixin(Object_Diagnosticable$36$4, diagnostics.Diagnosticable);
  slider_theme.SliderThemeData = class SliderThemeData extends Object_Diagnosticable$36$4 {
    get trackHeight() {
      return this[trackHeight$];
    }
    set trackHeight(value) {
      super.trackHeight = value;
    }
    get activeTrackColor() {
      return this[activeTrackColor$];
    }
    set activeTrackColor(value) {
      super.activeTrackColor = value;
    }
    get inactiveTrackColor() {
      return this[inactiveTrackColor$];
    }
    set inactiveTrackColor(value) {
      super.inactiveTrackColor = value;
    }
    get disabledActiveTrackColor() {
      return this[disabledActiveTrackColor$];
    }
    set disabledActiveTrackColor(value) {
      super.disabledActiveTrackColor = value;
    }
    get disabledInactiveTrackColor() {
      return this[disabledInactiveTrackColor$];
    }
    set disabledInactiveTrackColor(value) {
      super.disabledInactiveTrackColor = value;
    }
    get activeTickMarkColor() {
      return this[activeTickMarkColor$];
    }
    set activeTickMarkColor(value) {
      super.activeTickMarkColor = value;
    }
    get inactiveTickMarkColor() {
      return this[inactiveTickMarkColor$];
    }
    set inactiveTickMarkColor(value) {
      super.inactiveTickMarkColor = value;
    }
    get disabledActiveTickMarkColor() {
      return this[disabledActiveTickMarkColor$];
    }
    set disabledActiveTickMarkColor(value) {
      super.disabledActiveTickMarkColor = value;
    }
    get disabledInactiveTickMarkColor() {
      return this[disabledInactiveTickMarkColor$];
    }
    set disabledInactiveTickMarkColor(value) {
      super.disabledInactiveTickMarkColor = value;
    }
    get thumbColor() {
      return this[thumbColor$];
    }
    set thumbColor(value) {
      super.thumbColor = value;
    }
    get overlappingShapeStrokeColor() {
      return this[overlappingShapeStrokeColor$];
    }
    set overlappingShapeStrokeColor(value) {
      super.overlappingShapeStrokeColor = value;
    }
    get disabledThumbColor() {
      return this[disabledThumbColor$];
    }
    set disabledThumbColor(value) {
      super.disabledThumbColor = value;
    }
    get overlayColor() {
      return this[overlayColor$];
    }
    set overlayColor(value) {
      super.overlayColor = value;
    }
    get valueIndicatorColor() {
      return this[valueIndicatorColor$];
    }
    set valueIndicatorColor(value) {
      super.valueIndicatorColor = value;
    }
    get overlayShape() {
      return this[overlayShape$];
    }
    set overlayShape(value) {
      super.overlayShape = value;
    }
    get tickMarkShape() {
      return this[tickMarkShape$];
    }
    set tickMarkShape(value) {
      super.tickMarkShape = value;
    }
    get thumbShape() {
      return this[thumbShape$];
    }
    set thumbShape(value) {
      super.thumbShape = value;
    }
    get trackShape() {
      return this[trackShape$];
    }
    set trackShape(value) {
      super.trackShape = value;
    }
    get valueIndicatorShape() {
      return this[valueIndicatorShape$];
    }
    set valueIndicatorShape(value) {
      super.valueIndicatorShape = value;
    }
    get rangeTickMarkShape() {
      return this[rangeTickMarkShape$];
    }
    set rangeTickMarkShape(value) {
      super.rangeTickMarkShape = value;
    }
    get rangeThumbShape() {
      return this[rangeThumbShape$];
    }
    set rangeThumbShape(value) {
      super.rangeThumbShape = value;
    }
    get rangeTrackShape() {
      return this[rangeTrackShape$];
    }
    set rangeTrackShape(value) {
      super.rangeTrackShape = value;
    }
    get rangeValueIndicatorShape() {
      return this[rangeValueIndicatorShape$];
    }
    set rangeValueIndicatorShape(value) {
      super.rangeValueIndicatorShape = value;
    }
    get showValueIndicator() {
      return this[showValueIndicator$];
    }
    set showValueIndicator(value) {
      super.showValueIndicator = value;
    }
    get valueIndicatorTextStyle() {
      return this[valueIndicatorTextStyle$];
    }
    set valueIndicatorTextStyle(value) {
      super.valueIndicatorTextStyle = value;
    }
    get minThumbSeparation() {
      return this[minThumbSeparation$];
    }
    set minThumbSeparation(value) {
      super.minThumbSeparation = value;
    }
    get thumbSelector() {
      return this[thumbSelector$];
    }
    set thumbSelector(value) {
      super.thumbSelector = value;
    }
    static fromPrimaryColors(opts) {
      let primaryColor = opts && 'primaryColor' in opts ? opts.primaryColor : null;
      let primaryColorDark = opts && 'primaryColorDark' in opts ? opts.primaryColorDark : null;
      let primaryColorLight = opts && 'primaryColorLight' in opts ? opts.primaryColorLight : null;
      let valueIndicatorTextStyle = opts && 'valueIndicatorTextStyle' in opts ? opts.valueIndicatorTextStyle : null;
      if (!(primaryColor != null)) dart.assertFailed(null, L48, 409, 12, "primaryColor != null");
      if (!(primaryColorDark != null)) dart.assertFailed(null, L48, 410, 12, "primaryColorDark != null");
      if (!(primaryColorLight != null)) dart.assertFailed(null, L48, 411, 12, "primaryColorLight != null");
      if (!(valueIndicatorTextStyle != null)) dart.assertFailed(null, L48, 412, 12, "valueIndicatorTextStyle != null");
      return new slider_theme.SliderThemeData.new({trackHeight: 2.0, activeTrackColor: primaryColor.withAlpha(255), inactiveTrackColor: primaryColor.withAlpha(61), disabledActiveTrackColor: primaryColorDark.withAlpha(82), disabledInactiveTrackColor: primaryColorDark.withAlpha(31), activeTickMarkColor: primaryColorLight.withAlpha(138), inactiveTickMarkColor: primaryColor.withAlpha(138), disabledActiveTickMarkColor: primaryColorLight.withAlpha(31), disabledInactiveTickMarkColor: primaryColorDark.withAlpha(31), thumbColor: primaryColor.withAlpha(255), overlappingShapeStrokeColor: colors$.Colors.white, disabledThumbColor: primaryColorDark.withAlpha(82), overlayColor: primaryColor.withAlpha(31), valueIndicatorColor: primaryColor.withAlpha(255), overlayShape: C1258 || CT.C1258, tickMarkShape: C1259 || CT.C1259, thumbShape: C1260 || CT.C1260, trackShape: C1261 || CT.C1261, valueIndicatorShape: C1262 || CT.C1262, rangeTickMarkShape: C1263 || CT.C1263, rangeThumbShape: C1264 || CT.C1264, rangeTrackShape: C1265 || CT.C1265, rangeValueIndicatorShape: C1266 || CT.C1266, valueIndicatorTextStyle: valueIndicatorTextStyle, showValueIndicator: slider_theme.ShowValueIndicator.onlyForDiscrete});
    }
    copyWith(opts) {
      let t6, t6$, t6$0, t6$1, t6$2, t6$3, t6$4, t6$5, t6$6, t6$7, t6$8, t6$9, t6$10, t6$11, t6$12, t6$13, t6$14, t6$15, t6$16, t6$17, t6$18, t6$19, t6$20, t6$21, t6$22, t6$23, t6$24;
      let trackHeight = opts && 'trackHeight' in opts ? opts.trackHeight : null;
      let activeTrackColor = opts && 'activeTrackColor' in opts ? opts.activeTrackColor : null;
      let inactiveTrackColor = opts && 'inactiveTrackColor' in opts ? opts.inactiveTrackColor : null;
      let disabledActiveTrackColor = opts && 'disabledActiveTrackColor' in opts ? opts.disabledActiveTrackColor : null;
      let disabledInactiveTrackColor = opts && 'disabledInactiveTrackColor' in opts ? opts.disabledInactiveTrackColor : null;
      let activeTickMarkColor = opts && 'activeTickMarkColor' in opts ? opts.activeTickMarkColor : null;
      let inactiveTickMarkColor = opts && 'inactiveTickMarkColor' in opts ? opts.inactiveTickMarkColor : null;
      let disabledActiveTickMarkColor = opts && 'disabledActiveTickMarkColor' in opts ? opts.disabledActiveTickMarkColor : null;
      let disabledInactiveTickMarkColor = opts && 'disabledInactiveTickMarkColor' in opts ? opts.disabledInactiveTickMarkColor : null;
      let thumbColor = opts && 'thumbColor' in opts ? opts.thumbColor : null;
      let overlappingShapeStrokeColor = opts && 'overlappingShapeStrokeColor' in opts ? opts.overlappingShapeStrokeColor : null;
      let disabledThumbColor = opts && 'disabledThumbColor' in opts ? opts.disabledThumbColor : null;
      let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
      let valueIndicatorColor = opts && 'valueIndicatorColor' in opts ? opts.valueIndicatorColor : null;
      let overlayShape = opts && 'overlayShape' in opts ? opts.overlayShape : null;
      let tickMarkShape = opts && 'tickMarkShape' in opts ? opts.tickMarkShape : null;
      let thumbShape = opts && 'thumbShape' in opts ? opts.thumbShape : null;
      let trackShape = opts && 'trackShape' in opts ? opts.trackShape : null;
      let valueIndicatorShape = opts && 'valueIndicatorShape' in opts ? opts.valueIndicatorShape : null;
      let rangeTickMarkShape = opts && 'rangeTickMarkShape' in opts ? opts.rangeTickMarkShape : null;
      let rangeThumbShape = opts && 'rangeThumbShape' in opts ? opts.rangeThumbShape : null;
      let rangeTrackShape = opts && 'rangeTrackShape' in opts ? opts.rangeTrackShape : null;
      let rangeValueIndicatorShape = opts && 'rangeValueIndicatorShape' in opts ? opts.rangeValueIndicatorShape : null;
      let showValueIndicator = opts && 'showValueIndicator' in opts ? opts.showValueIndicator : null;
      let valueIndicatorTextStyle = opts && 'valueIndicatorTextStyle' in opts ? opts.valueIndicatorTextStyle : null;
      let minThumbSeparation = opts && 'minThumbSeparation' in opts ? opts.minThumbSeparation : null;
      let thumbSelector = opts && 'thumbSelector' in opts ? opts.thumbSelector : null;
      return new slider_theme.SliderThemeData.new({trackHeight: (t6 = trackHeight, t6 == null ? this.trackHeight : t6), activeTrackColor: (t6$ = activeTrackColor, t6$ == null ? this.activeTrackColor : t6$), inactiveTrackColor: (t6$0 = inactiveTrackColor, t6$0 == null ? this.inactiveTrackColor : t6$0), disabledActiveTrackColor: (t6$1 = disabledActiveTrackColor, t6$1 == null ? this.disabledActiveTrackColor : t6$1), disabledInactiveTrackColor: (t6$2 = disabledInactiveTrackColor, t6$2 == null ? this.disabledInactiveTrackColor : t6$2), activeTickMarkColor: (t6$3 = activeTickMarkColor, t6$3 == null ? this.activeTickMarkColor : t6$3), inactiveTickMarkColor: (t6$4 = inactiveTickMarkColor, t6$4 == null ? this.inactiveTickMarkColor : t6$4), disabledActiveTickMarkColor: (t6$5 = disabledActiveTickMarkColor, t6$5 == null ? this.disabledActiveTickMarkColor : t6$5), disabledInactiveTickMarkColor: (t6$6 = disabledInactiveTickMarkColor, t6$6 == null ? this.disabledInactiveTickMarkColor : t6$6), thumbColor: (t6$7 = thumbColor, t6$7 == null ? this.thumbColor : t6$7), overlappingShapeStrokeColor: (t6$8 = overlappingShapeStrokeColor, t6$8 == null ? this.overlappingShapeStrokeColor : t6$8), disabledThumbColor: (t6$9 = disabledThumbColor, t6$9 == null ? this.disabledThumbColor : t6$9), overlayColor: (t6$10 = overlayColor, t6$10 == null ? this.overlayColor : t6$10), valueIndicatorColor: (t6$11 = valueIndicatorColor, t6$11 == null ? this.valueIndicatorColor : t6$11), overlayShape: (t6$12 = overlayShape, t6$12 == null ? this.overlayShape : t6$12), tickMarkShape: (t6$13 = tickMarkShape, t6$13 == null ? this.tickMarkShape : t6$13), thumbShape: (t6$14 = thumbShape, t6$14 == null ? this.thumbShape : t6$14), trackShape: (t6$15 = trackShape, t6$15 == null ? this.trackShape : t6$15), valueIndicatorShape: (t6$16 = valueIndicatorShape, t6$16 == null ? this.valueIndicatorShape : t6$16), rangeTickMarkShape: (t6$17 = rangeTickMarkShape, t6$17 == null ? this.rangeTickMarkShape : t6$17), rangeThumbShape: (t6$18 = rangeThumbShape, t6$18 == null ? this.rangeThumbShape : t6$18), rangeTrackShape: (t6$19 = rangeTrackShape, t6$19 == null ? this.rangeTrackShape : t6$19), rangeValueIndicatorShape: (t6$20 = rangeValueIndicatorShape, t6$20 == null ? this.rangeValueIndicatorShape : t6$20), showValueIndicator: (t6$21 = showValueIndicator, t6$21 == null ? this.showValueIndicator : t6$21), valueIndicatorTextStyle: (t6$22 = valueIndicatorTextStyle, t6$22 == null ? this.valueIndicatorTextStyle : t6$22), minThumbSeparation: (t6$23 = minThumbSeparation, t6$23 == null ? this.minThumbSeparation : t6$23), thumbSelector: (t6$24 = thumbSelector, t6$24 == null ? this.thumbSelector : t6$24)});
    }
    static lerp(a, b, t) {
      if (!(a != null)) dart.assertFailed(null, L48, 731, 12, "a != null");
      if (!(b != null)) dart.assertFailed(null, L48, 732, 12, "b != null");
      if (!(t != null)) dart.assertFailed(null, L48, 733, 12, "t != null");
      return new slider_theme.SliderThemeData.new({trackHeight: ui.lerpDouble(a.trackHeight, b.trackHeight, t), activeTrackColor: ui.Color.lerp(a.activeTrackColor, b.activeTrackColor, t), inactiveTrackColor: ui.Color.lerp(a.inactiveTrackColor, b.inactiveTrackColor, t), disabledActiveTrackColor: ui.Color.lerp(a.disabledActiveTrackColor, b.disabledActiveTrackColor, t), disabledInactiveTrackColor: ui.Color.lerp(a.disabledInactiveTrackColor, b.disabledInactiveTrackColor, t), activeTickMarkColor: ui.Color.lerp(a.activeTickMarkColor, b.activeTickMarkColor, t), inactiveTickMarkColor: ui.Color.lerp(a.inactiveTickMarkColor, b.inactiveTickMarkColor, t), disabledActiveTickMarkColor: ui.Color.lerp(a.disabledActiveTickMarkColor, b.disabledActiveTickMarkColor, t), disabledInactiveTickMarkColor: ui.Color.lerp(a.disabledInactiveTickMarkColor, b.disabledInactiveTickMarkColor, t), thumbColor: ui.Color.lerp(a.thumbColor, b.thumbColor, t), overlappingShapeStrokeColor: ui.Color.lerp(a.overlappingShapeStrokeColor, b.overlappingShapeStrokeColor, t), disabledThumbColor: ui.Color.lerp(a.disabledThumbColor, b.disabledThumbColor, t), overlayColor: ui.Color.lerp(a.overlayColor, b.overlayColor, t), valueIndicatorColor: ui.Color.lerp(a.valueIndicatorColor, b.valueIndicatorColor, t), overlayShape: dart.notNull(t) < 0.5 ? a.overlayShape : b.overlayShape, tickMarkShape: dart.notNull(t) < 0.5 ? a.tickMarkShape : b.tickMarkShape, thumbShape: dart.notNull(t) < 0.5 ? a.thumbShape : b.thumbShape, trackShape: dart.notNull(t) < 0.5 ? a.trackShape : b.trackShape, valueIndicatorShape: dart.notNull(t) < 0.5 ? a.valueIndicatorShape : b.valueIndicatorShape, rangeTickMarkShape: dart.notNull(t) < 0.5 ? a.rangeTickMarkShape : b.rangeTickMarkShape, rangeThumbShape: dart.notNull(t) < 0.5 ? a.rangeThumbShape : b.rangeThumbShape, rangeTrackShape: dart.notNull(t) < 0.5 ? a.rangeTrackShape : b.rangeTrackShape, rangeValueIndicatorShape: dart.notNull(t) < 0.5 ? a.rangeValueIndicatorShape : b.rangeValueIndicatorShape, showValueIndicator: dart.notNull(t) < 0.5 ? a.showValueIndicator : b.showValueIndicator, valueIndicatorTextStyle: text_style.TextStyle.lerp(a.valueIndicatorTextStyle, b.valueIndicatorTextStyle, t), minThumbSeparation: ui.lerpDouble(a.minThumbSeparation, b.minThumbSeparation, t), thumbSelector: dart.notNull(t) < 0.5 ? a.thumbSelector : b.thumbSelector});
    }
    get hashCode() {
      return ui.hashList(JSArrayOfObjectL().of([this.trackHeight, this.activeTrackColor, this.inactiveTrackColor, this.disabledActiveTrackColor, this.disabledInactiveTrackColor, this.activeTickMarkColor, this.inactiveTickMarkColor, this.disabledActiveTickMarkColor, this.disabledInactiveTickMarkColor, this.thumbColor, this.overlappingShapeStrokeColor, this.disabledThumbColor, this.overlayColor, this.valueIndicatorColor, this.overlayShape, this.tickMarkShape, this.thumbShape, this.trackShape, this.valueIndicatorShape, this.rangeTickMarkShape, this.rangeThumbShape, this.rangeTrackShape, this.rangeValueIndicatorShape, this.showValueIndicator, this.valueIndicatorTextStyle, this.minThumbSeparation, this.thumbSelector]));
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!dart.equals(dart.runtimeType(other), this.runtimeType)) {
        return false;
      }
      return SliderThemeDataL().is(other) && other.trackHeight == this.trackHeight && dart.equals(other.activeTrackColor, this.activeTrackColor) && dart.equals(other.inactiveTrackColor, this.inactiveTrackColor) && dart.equals(other.disabledActiveTrackColor, this.disabledActiveTrackColor) && dart.equals(other.disabledInactiveTrackColor, this.disabledInactiveTrackColor) && dart.equals(other.activeTickMarkColor, this.activeTickMarkColor) && dart.equals(other.inactiveTickMarkColor, this.inactiveTickMarkColor) && dart.equals(other.disabledActiveTickMarkColor, this.disabledActiveTickMarkColor) && dart.equals(other.disabledInactiveTickMarkColor, this.disabledInactiveTickMarkColor) && dart.equals(other.thumbColor, this.thumbColor) && dart.equals(other.overlappingShapeStrokeColor, this.overlappingShapeStrokeColor) && dart.equals(other.disabledThumbColor, this.disabledThumbColor) && dart.equals(other.overlayColor, this.overlayColor) && dart.equals(other.valueIndicatorColor, this.valueIndicatorColor) && dart.equals(other.overlayShape, this.overlayShape) && dart.equals(other.tickMarkShape, this.tickMarkShape) && dart.equals(other.thumbShape, this.thumbShape) && dart.equals(other.trackShape, this.trackShape) && dart.equals(other.valueIndicatorShape, this.valueIndicatorShape) && dart.equals(other.rangeTickMarkShape, this.rangeTickMarkShape) && dart.equals(other.rangeThumbShape, this.rangeThumbShape) && dart.equals(other.rangeTrackShape, this.rangeTrackShape) && dart.equals(other.rangeValueIndicatorShape, this.rangeValueIndicatorShape) && other.showValueIndicator == this.showValueIndicator && dart.equals(other.valueIndicatorTextStyle, this.valueIndicatorTextStyle) && other.minThumbSeparation == this.minThumbSeparation && dart.equals(other.thumbSelector, this.thumbSelector);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      let defaultData = C1267 || CT.C1267;
      properties.add(new diagnostics.DoubleProperty.new("trackHeight", this.trackHeight, {defaultValue: defaultData.trackHeight}));
      properties.add(new colors.ColorProperty.new("activeTrackColor", this.activeTrackColor, {defaultValue: defaultData.activeTrackColor}));
      properties.add(new colors.ColorProperty.new("inactiveTrackColor", this.inactiveTrackColor, {defaultValue: defaultData.inactiveTrackColor}));
      properties.add(new colors.ColorProperty.new("disabledActiveTrackColor", this.disabledActiveTrackColor, {defaultValue: defaultData.disabledActiveTrackColor}));
      properties.add(new colors.ColorProperty.new("disabledInactiveTrackColor", this.disabledInactiveTrackColor, {defaultValue: defaultData.disabledInactiveTrackColor}));
      properties.add(new colors.ColorProperty.new("activeTickMarkColor", this.activeTickMarkColor, {defaultValue: defaultData.activeTickMarkColor}));
      properties.add(new colors.ColorProperty.new("inactiveTickMarkColor", this.inactiveTickMarkColor, {defaultValue: defaultData.inactiveTickMarkColor}));
      properties.add(new colors.ColorProperty.new("disabledActiveTickMarkColor", this.disabledActiveTickMarkColor, {defaultValue: defaultData.disabledActiveTickMarkColor}));
      properties.add(new colors.ColorProperty.new("disabledInactiveTickMarkColor", this.disabledInactiveTickMarkColor, {defaultValue: defaultData.disabledInactiveTickMarkColor}));
      properties.add(new colors.ColorProperty.new("thumbColor", this.thumbColor, {defaultValue: defaultData.thumbColor}));
      properties.add(new colors.ColorProperty.new("overlappingShapeStrokeColor", this.overlappingShapeStrokeColor, {defaultValue: defaultData.overlappingShapeStrokeColor}));
      properties.add(new colors.ColorProperty.new("disabledThumbColor", this.disabledThumbColor, {defaultValue: defaultData.disabledThumbColor}));
      properties.add(new colors.ColorProperty.new("overlayColor", this.overlayColor, {defaultValue: defaultData.overlayColor}));
      properties.add(new colors.ColorProperty.new("valueIndicatorColor", this.valueIndicatorColor, {defaultValue: defaultData.valueIndicatorColor}));
      properties.add(new (DiagnosticsPropertyOfSliderComponentShapeL()).new("overlayShape", this.overlayShape, {defaultValue: defaultData.overlayShape}));
      properties.add(new (DiagnosticsPropertyOfSliderTickMarkShapeL()).new("tickMarkShape", this.tickMarkShape, {defaultValue: defaultData.tickMarkShape}));
      properties.add(new (DiagnosticsPropertyOfSliderComponentShapeL()).new("thumbShape", this.thumbShape, {defaultValue: defaultData.thumbShape}));
      properties.add(new (DiagnosticsPropertyOfSliderTrackShapeL()).new("trackShape", this.trackShape, {defaultValue: defaultData.trackShape}));
      properties.add(new (DiagnosticsPropertyOfSliderComponentShapeL()).new("valueIndicatorShape", this.valueIndicatorShape, {defaultValue: defaultData.valueIndicatorShape}));
      properties.add(new (DiagnosticsPropertyOfRangeSliderTickMarkShapeL()).new("rangeTickMarkShape", this.rangeTickMarkShape, {defaultValue: defaultData.rangeTickMarkShape}));
      properties.add(new (DiagnosticsPropertyOfRangeSliderThumbShapeL()).new("rangeThumbShape", this.rangeThumbShape, {defaultValue: defaultData.rangeThumbShape}));
      properties.add(new (DiagnosticsPropertyOfRangeSliderTrackShapeL()).new("rangeTrackShape", this.rangeTrackShape, {defaultValue: defaultData.rangeTrackShape}));
      properties.add(new (DiagnosticsPropertyOfRangeSliderValueIndicatorShapeL()).new("rangeValueIndicatorShape", this.rangeValueIndicatorShape, {defaultValue: defaultData.rangeValueIndicatorShape}));
      properties.add(new (EnumPropertyOfShowValueIndicatorL()).new("showValueIndicator", this.showValueIndicator, {defaultValue: defaultData.showValueIndicator}));
      properties.add(new (DiagnosticsPropertyOfTextStyleL()).new("valueIndicatorTextStyle", this.valueIndicatorTextStyle, {defaultValue: defaultData.valueIndicatorTextStyle}));
      properties.add(new diagnostics.DoubleProperty.new("minThumbSeparation", this.minThumbSeparation, {defaultValue: defaultData.minThumbSeparation}));
      properties.add(new (DiagnosticsPropertyOfTextDirectionLAndRangeValuesLAnddoubleL__ToLThumbL()).new("thumbSelector", this.thumbSelector, {defaultValue: defaultData.thumbSelector}));
    }
  };
  (slider_theme.SliderThemeData.new = function(opts) {
    let trackHeight = opts && 'trackHeight' in opts ? opts.trackHeight : null;
    let activeTrackColor = opts && 'activeTrackColor' in opts ? opts.activeTrackColor : null;
    let inactiveTrackColor = opts && 'inactiveTrackColor' in opts ? opts.inactiveTrackColor : null;
    let disabledActiveTrackColor = opts && 'disabledActiveTrackColor' in opts ? opts.disabledActiveTrackColor : null;
    let disabledInactiveTrackColor = opts && 'disabledInactiveTrackColor' in opts ? opts.disabledInactiveTrackColor : null;
    let activeTickMarkColor = opts && 'activeTickMarkColor' in opts ? opts.activeTickMarkColor : null;
    let inactiveTickMarkColor = opts && 'inactiveTickMarkColor' in opts ? opts.inactiveTickMarkColor : null;
    let disabledActiveTickMarkColor = opts && 'disabledActiveTickMarkColor' in opts ? opts.disabledActiveTickMarkColor : null;
    let disabledInactiveTickMarkColor = opts && 'disabledInactiveTickMarkColor' in opts ? opts.disabledInactiveTickMarkColor : null;
    let thumbColor = opts && 'thumbColor' in opts ? opts.thumbColor : null;
    let overlappingShapeStrokeColor = opts && 'overlappingShapeStrokeColor' in opts ? opts.overlappingShapeStrokeColor : null;
    let disabledThumbColor = opts && 'disabledThumbColor' in opts ? opts.disabledThumbColor : null;
    let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
    let valueIndicatorColor = opts && 'valueIndicatorColor' in opts ? opts.valueIndicatorColor : null;
    let overlayShape = opts && 'overlayShape' in opts ? opts.overlayShape : null;
    let tickMarkShape = opts && 'tickMarkShape' in opts ? opts.tickMarkShape : null;
    let thumbShape = opts && 'thumbShape' in opts ? opts.thumbShape : null;
    let trackShape = opts && 'trackShape' in opts ? opts.trackShape : null;
    let valueIndicatorShape = opts && 'valueIndicatorShape' in opts ? opts.valueIndicatorShape : null;
    let rangeTickMarkShape = opts && 'rangeTickMarkShape' in opts ? opts.rangeTickMarkShape : null;
    let rangeThumbShape = opts && 'rangeThumbShape' in opts ? opts.rangeThumbShape : null;
    let rangeTrackShape = opts && 'rangeTrackShape' in opts ? opts.rangeTrackShape : null;
    let rangeValueIndicatorShape = opts && 'rangeValueIndicatorShape' in opts ? opts.rangeValueIndicatorShape : null;
    let showValueIndicator = opts && 'showValueIndicator' in opts ? opts.showValueIndicator : null;
    let valueIndicatorTextStyle = opts && 'valueIndicatorTextStyle' in opts ? opts.valueIndicatorTextStyle : null;
    let minThumbSeparation = opts && 'minThumbSeparation' in opts ? opts.minThumbSeparation : null;
    let thumbSelector = opts && 'thumbSelector' in opts ? opts.thumbSelector : null;
    this[trackHeight$] = trackHeight;
    this[activeTrackColor$] = activeTrackColor;
    this[inactiveTrackColor$] = inactiveTrackColor;
    this[disabledActiveTrackColor$] = disabledActiveTrackColor;
    this[disabledInactiveTrackColor$] = disabledInactiveTrackColor;
    this[activeTickMarkColor$] = activeTickMarkColor;
    this[inactiveTickMarkColor$] = inactiveTickMarkColor;
    this[disabledActiveTickMarkColor$] = disabledActiveTickMarkColor;
    this[disabledInactiveTickMarkColor$] = disabledInactiveTickMarkColor;
    this[thumbColor$] = thumbColor;
    this[overlappingShapeStrokeColor$] = overlappingShapeStrokeColor;
    this[disabledThumbColor$] = disabledThumbColor;
    this[overlayColor$] = overlayColor;
    this[valueIndicatorColor$] = valueIndicatorColor;
    this[overlayShape$] = overlayShape;
    this[tickMarkShape$] = tickMarkShape;
    this[thumbShape$] = thumbShape;
    this[trackShape$] = trackShape;
    this[valueIndicatorShape$] = valueIndicatorShape;
    this[rangeTickMarkShape$] = rangeTickMarkShape;
    this[rangeThumbShape$] = rangeThumbShape;
    this[rangeTrackShape$] = rangeTrackShape;
    this[rangeValueIndicatorShape$] = rangeValueIndicatorShape;
    this[showValueIndicator$] = showValueIndicator;
    this[valueIndicatorTextStyle$] = valueIndicatorTextStyle;
    this[minThumbSeparation$] = minThumbSeparation;
    this[thumbSelector$] = thumbSelector;
    ;
  }).prototype = slider_theme.SliderThemeData.prototype;
  dart.addTypeTests(slider_theme.SliderThemeData);
  dart.addTypeCaches(slider_theme.SliderThemeData);
  const trackHeight$ = SliderThemeData_trackHeight;
  const activeTrackColor$ = SliderThemeData_activeTrackColor;
  const inactiveTrackColor$ = SliderThemeData_inactiveTrackColor;
  const disabledActiveTrackColor$ = SliderThemeData_disabledActiveTrackColor;
  const disabledInactiveTrackColor$ = SliderThemeData_disabledInactiveTrackColor;
  const activeTickMarkColor$ = SliderThemeData_activeTickMarkColor;
  const inactiveTickMarkColor$ = SliderThemeData_inactiveTickMarkColor;
  const disabledActiveTickMarkColor$ = SliderThemeData_disabledActiveTickMarkColor;
  const disabledInactiveTickMarkColor$ = SliderThemeData_disabledInactiveTickMarkColor;
  const thumbColor$ = SliderThemeData_thumbColor;
  const overlappingShapeStrokeColor$ = SliderThemeData_overlappingShapeStrokeColor;
  const disabledThumbColor$ = SliderThemeData_disabledThumbColor;
  const overlayColor$ = SliderThemeData_overlayColor;
  const valueIndicatorColor$ = SliderThemeData_valueIndicatorColor;
  const overlayShape$ = SliderThemeData_overlayShape;
  const tickMarkShape$ = SliderThemeData_tickMarkShape;
  const thumbShape$ = SliderThemeData_thumbShape;
  const trackShape$ = SliderThemeData_trackShape;
  const valueIndicatorShape$ = SliderThemeData_valueIndicatorShape;
  const rangeTickMarkShape$ = SliderThemeData_rangeTickMarkShape;
  const rangeThumbShape$ = SliderThemeData_rangeThumbShape;
  const rangeTrackShape$ = SliderThemeData_rangeTrackShape;
  const rangeValueIndicatorShape$ = SliderThemeData_rangeValueIndicatorShape;
  const showValueIndicator$ = SliderThemeData_showValueIndicator;
  const valueIndicatorTextStyle$ = SliderThemeData_valueIndicatorTextStyle;
  const minThumbSeparation$ = SliderThemeData_minThumbSeparation;
  const thumbSelector$ = SliderThemeData_thumbSelector;
  dart.setMethodSignature(slider_theme.SliderThemeData, () => ({
    __proto__: dart.getMethods(slider_theme.SliderThemeData.__proto__),
    copyWith: dart.fnType(dart.legacy(slider_theme.SliderThemeData), [], {activeTickMarkColor: dart.legacy(ui.Color), activeTrackColor: dart.legacy(ui.Color), disabledActiveTickMarkColor: dart.legacy(ui.Color), disabledActiveTrackColor: dart.legacy(ui.Color), disabledInactiveTickMarkColor: dart.legacy(ui.Color), disabledInactiveTrackColor: dart.legacy(ui.Color), disabledThumbColor: dart.legacy(ui.Color), inactiveTickMarkColor: dart.legacy(ui.Color), inactiveTrackColor: dart.legacy(ui.Color), minThumbSeparation: dart.legacy(core.double), overlappingShapeStrokeColor: dart.legacy(ui.Color), overlayColor: dart.legacy(ui.Color), overlayShape: dart.legacy(slider_theme.SliderComponentShape), rangeThumbShape: dart.legacy(slider_theme.RangeSliderThumbShape), rangeTickMarkShape: dart.legacy(slider_theme.RangeSliderTickMarkShape), rangeTrackShape: dart.legacy(slider_theme.RangeSliderTrackShape), rangeValueIndicatorShape: dart.legacy(slider_theme.RangeSliderValueIndicatorShape), showValueIndicator: dart.legacy(slider_theme.ShowValueIndicator), thumbColor: dart.legacy(ui.Color), thumbSelector: dart.legacy(dart.fnType(dart.legacy(slider_theme.Thumb), [dart.legacy(ui.TextDirection), dart.legacy(slider_theme.RangeValues), dart.legacy(core.double), dart.legacy(ui.Size), dart.legacy(ui.Size), dart.legacy(core.double)])), thumbShape: dart.legacy(slider_theme.SliderComponentShape), tickMarkShape: dart.legacy(slider_theme.SliderTickMarkShape), trackHeight: dart.legacy(core.double), trackShape: dart.legacy(slider_theme.SliderTrackShape), valueIndicatorColor: dart.legacy(ui.Color), valueIndicatorShape: dart.legacy(slider_theme.SliderComponentShape), valueIndicatorTextStyle: dart.legacy(text_style.TextStyle)}, {}),
    _equals: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    [$_equals]: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    debugFillProperties: dart.fnType(dart.void, [dart.legacy(diagnostics.DiagnosticPropertiesBuilder)])
  }));
  dart.setGetterSignature(slider_theme.SliderThemeData, () => ({
    __proto__: dart.getGetters(slider_theme.SliderThemeData.__proto__),
    hashCode: dart.legacy(core.int),
    [$hashCode]: dart.legacy(core.int)
  }));
  dart.setLibraryUri(slider_theme.SliderThemeData, L49);
  dart.setFieldSignature(slider_theme.SliderThemeData, () => ({
    __proto__: dart.getFields(slider_theme.SliderThemeData.__proto__),
    trackHeight: dart.finalFieldType(dart.legacy(core.double)),
    activeTrackColor: dart.finalFieldType(dart.legacy(ui.Color)),
    inactiveTrackColor: dart.finalFieldType(dart.legacy(ui.Color)),
    disabledActiveTrackColor: dart.finalFieldType(dart.legacy(ui.Color)),
    disabledInactiveTrackColor: dart.finalFieldType(dart.legacy(ui.Color)),
    activeTickMarkColor: dart.finalFieldType(dart.legacy(ui.Color)),
    inactiveTickMarkColor: dart.finalFieldType(dart.legacy(ui.Color)),
    disabledActiveTickMarkColor: dart.finalFieldType(dart.legacy(ui.Color)),
    disabledInactiveTickMarkColor: dart.finalFieldType(dart.legacy(ui.Color)),
    thumbColor: dart.finalFieldType(dart.legacy(ui.Color)),
    overlappingShapeStrokeColor: dart.finalFieldType(dart.legacy(ui.Color)),
    disabledThumbColor: dart.finalFieldType(dart.legacy(ui.Color)),
    overlayColor: dart.finalFieldType(dart.legacy(ui.Color)),
    valueIndicatorColor: dart.finalFieldType(dart.legacy(ui.Color)),
    overlayShape: dart.finalFieldType(dart.legacy(slider_theme.SliderComponentShape)),
    tickMarkShape: dart.finalFieldType(dart.legacy(slider_theme.SliderTickMarkShape)),
    thumbShape: dart.finalFieldType(dart.legacy(slider_theme.SliderComponentShape)),
    trackShape: dart.finalFieldType(dart.legacy(slider_theme.SliderTrackShape)),
    valueIndicatorShape: dart.finalFieldType(dart.legacy(slider_theme.SliderComponentShape)),
    rangeTickMarkShape: dart.finalFieldType(dart.legacy(slider_theme.RangeSliderTickMarkShape)),
    rangeThumbShape: dart.finalFieldType(dart.legacy(slider_theme.RangeSliderThumbShape)),
    rangeTrackShape: dart.finalFieldType(dart.legacy(slider_theme.RangeSliderTrackShape)),
    rangeValueIndicatorShape: dart.finalFieldType(dart.legacy(slider_theme.RangeSliderValueIndicatorShape)),
    showValueIndicator: dart.finalFieldType(dart.legacy(slider_theme.ShowValueIndicator)),
    valueIndicatorTextStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    minThumbSeparation: dart.finalFieldType(dart.legacy(core.double)),
    thumbSelector: dart.finalFieldType(dart.legacy(dart.fnType(dart.legacy(slider_theme.Thumb), [dart.legacy(ui.TextDirection), dart.legacy(slider_theme.RangeValues), dart.legacy(core.double), dart.legacy(ui.Size), dart.legacy(ui.Size), dart.legacy(core.double)])))
  }));
  dart.defineExtensionMethods(slider_theme.SliderThemeData, ['_equals']);
  dart.defineExtensionAccessors(slider_theme.SliderThemeData, ['hashCode']);
  slider_theme.SliderComponentShape = class SliderComponentShape extends core.Object {};
  (slider_theme.SliderComponentShape.new = function() {
    ;
  }).prototype = slider_theme.SliderComponentShape.prototype;
  dart.addTypeTests(slider_theme.SliderComponentShape);
  dart.addTypeCaches(slider_theme.SliderComponentShape);
  dart.setLibraryUri(slider_theme.SliderComponentShape, L49);
  dart.defineLazy(slider_theme.SliderComponentShape, {
    /*slider_theme.SliderComponentShape.noThumb*/get noThumb() {
      return new slider_theme._EmptySliderComponentShape.new();
    },
    /*slider_theme.SliderComponentShape.noOverlay*/get noOverlay() {
      return new slider_theme._EmptySliderComponentShape.new();
    }
  }, true);
  slider_theme.SliderTickMarkShape = class SliderTickMarkShape extends core.Object {};
  (slider_theme.SliderTickMarkShape.new = function() {
    ;
  }).prototype = slider_theme.SliderTickMarkShape.prototype;
  dart.addTypeTests(slider_theme.SliderTickMarkShape);
  dart.addTypeCaches(slider_theme.SliderTickMarkShape);
  dart.setLibraryUri(slider_theme.SliderTickMarkShape, L49);
  dart.defineLazy(slider_theme.SliderTickMarkShape, {
    /*slider_theme.SliderTickMarkShape.noTickMark*/get noTickMark() {
      return new slider_theme._EmptySliderTickMarkShape.new();
    }
  }, true);
  slider_theme.SliderTrackShape = class SliderTrackShape extends core.Object {};
  (slider_theme.SliderTrackShape.new = function() {
    ;
  }).prototype = slider_theme.SliderTrackShape.prototype;
  dart.addTypeTests(slider_theme.SliderTrackShape);
  dart.addTypeCaches(slider_theme.SliderTrackShape);
  dart.setLibraryUri(slider_theme.SliderTrackShape, L49);
  slider_theme.RangeSliderThumbShape = class RangeSliderThumbShape extends core.Object {};
  (slider_theme.RangeSliderThumbShape.new = function() {
    ;
  }).prototype = slider_theme.RangeSliderThumbShape.prototype;
  dart.addTypeTests(slider_theme.RangeSliderThumbShape);
  dart.addTypeCaches(slider_theme.RangeSliderThumbShape);
  dart.setLibraryUri(slider_theme.RangeSliderThumbShape, L49);
  slider_theme.RangeSliderValueIndicatorShape = class RangeSliderValueIndicatorShape extends core.Object {
    getHorizontalShift(opts) {
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let center = opts && 'center' in opts ? opts.center : null;
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      let activationAnimation = opts && 'activationAnimation' in opts ? opts.activationAnimation : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      return 0.0;
    }
  };
  (slider_theme.RangeSliderValueIndicatorShape.new = function() {
    ;
  }).prototype = slider_theme.RangeSliderValueIndicatorShape.prototype;
  dart.addTypeTests(slider_theme.RangeSliderValueIndicatorShape);
  dart.addTypeCaches(slider_theme.RangeSliderValueIndicatorShape);
  dart.setMethodSignature(slider_theme.RangeSliderValueIndicatorShape, () => ({
    __proto__: dart.getMethods(slider_theme.RangeSliderValueIndicatorShape.__proto__),
    getHorizontalShift: dart.fnType(dart.legacy(core.double), [], {activationAnimation: dart.legacy(animation.Animation$(dart.legacy(core.double))), center: dart.legacy(ui.Offset), labelPainter: dart.legacy(text_painter.TextPainter), parentBox: dart.legacy(box.RenderBox), sizeWithOverflow: dart.legacy(ui.Size), textScaleFactor: dart.legacy(core.double)}, {})
  }));
  dart.setLibraryUri(slider_theme.RangeSliderValueIndicatorShape, L49);
  slider_theme.RangeSliderTickMarkShape = class RangeSliderTickMarkShape extends core.Object {};
  (slider_theme.RangeSliderTickMarkShape.new = function() {
    ;
  }).prototype = slider_theme.RangeSliderTickMarkShape.prototype;
  dart.addTypeTests(slider_theme.RangeSliderTickMarkShape);
  dart.addTypeCaches(slider_theme.RangeSliderTickMarkShape);
  dart.setLibraryUri(slider_theme.RangeSliderTickMarkShape, L49);
  slider_theme.RangeSliderTrackShape = class RangeSliderTrackShape extends core.Object {};
  (slider_theme.RangeSliderTrackShape.new = function() {
    ;
  }).prototype = slider_theme.RangeSliderTrackShape.prototype;
  dart.addTypeTests(slider_theme.RangeSliderTrackShape);
  dart.addTypeCaches(slider_theme.RangeSliderTrackShape);
  dart.setLibraryUri(slider_theme.RangeSliderTrackShape, L49);
  var OffsetBase__dy = dart.privateName(ui, "OffsetBase._dy");
  var OffsetBase__dx = dart.privateName(ui, "OffsetBase._dx");
  var C1268;
  slider_theme.BaseSliderTrackShape = class BaseSliderTrackShape extends core.Object {
    getPreferredRect(opts) {
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let offset = opts && 'offset' in opts ? opts.offset : C1268 || CT.C1268;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : false;
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : false;
      if (!(isEnabled != null)) dart.assertFailed(null, L48, 1526, 12, "isEnabled != null");
      if (!(isDiscrete != null)) dart.assertFailed(null, L48, 1527, 12, "isDiscrete != null");
      if (!(parentBox != null)) dart.assertFailed(null, L48, 1528, 12, "parentBox != null");
      if (!(sliderTheme != null)) dart.assertFailed(null, L48, 1529, 12, "sliderTheme != null");
      let thumbWidth = sliderTheme.thumbShape.getPreferredSize(isEnabled, isDiscrete).width;
      let overlayWidth = sliderTheme.overlayShape.getPreferredSize(isEnabled, isDiscrete).width;
      let trackHeight = sliderTheme.trackHeight;
      if (!(dart.notNull(overlayWidth) >= 0)) dart.assertFailed(null, L48, 1533, 12, "overlayWidth >= 0");
      if (!(dart.notNull(trackHeight) >= 0)) dart.assertFailed(null, L48, 1534, 12, "trackHeight >= 0");
      if (!(dart.notNull(parentBox.size.width) >= dart.notNull(overlayWidth))) dart.assertFailed(null, L48, 1535, 12, "parentBox.size.width >= overlayWidth");
      if (!(dart.notNull(parentBox.size.height) >= dart.notNull(trackHeight))) dart.assertFailed(null, L48, 1536, 12, "parentBox.size.height >= trackHeight");
      let trackLeft = dart.notNull(offset.dx) + dart.notNull(overlayWidth) / 2;
      let trackTop = dart.notNull(offset.dy) + (dart.notNull(parentBox.size.height) - dart.notNull(trackHeight)) / 2;
      let trackWidth = dart.notNull(parentBox.size.width) - math.max(numL(), thumbWidth, overlayWidth);
      return new ui.Rect.fromLTWH(trackLeft, trackTop, trackWidth, trackHeight);
    }
  };
  (slider_theme.BaseSliderTrackShape.new = function() {
    ;
  }).prototype = slider_theme.BaseSliderTrackShape.prototype;
  dart.addTypeTests(slider_theme.BaseSliderTrackShape);
  dart.addTypeCaches(slider_theme.BaseSliderTrackShape);
  dart.setMethodSignature(slider_theme.BaseSliderTrackShape, () => ({
    __proto__: dart.getMethods(slider_theme.BaseSliderTrackShape.__proto__),
    getPreferredRect: dart.fnType(dart.legacy(ui.Rect), [], {isDiscrete: dart.legacy(core.bool), isEnabled: dart.legacy(core.bool), offset: dart.legacy(ui.Offset), parentBox: dart.legacy(box.RenderBox), sliderTheme: dart.legacy(slider_theme.SliderThemeData)}, {})
  }));
  dart.setLibraryUri(slider_theme.BaseSliderTrackShape, L49);
  var disabledThumbGapWidth$ = dart.privateName(slider_theme, "RectangularSliderTrackShape.disabledThumbGapWidth");
  const SliderTrackShape_BaseSliderTrackShape$36 = class SliderTrackShape_BaseSliderTrackShape extends slider_theme.SliderTrackShape {};
  (SliderTrackShape_BaseSliderTrackShape$36.new = function() {
    SliderTrackShape_BaseSliderTrackShape$36.__proto__.new.call(this);
  }).prototype = SliderTrackShape_BaseSliderTrackShape$36.prototype;
  dart.applyMixin(SliderTrackShape_BaseSliderTrackShape$36, slider_theme.BaseSliderTrackShape);
  slider_theme.RectangularSliderTrackShape = class RectangularSliderTrackShape extends SliderTrackShape_BaseSliderTrackShape$36 {
    get disabledThumbGapWidth() {
      return this[disabledThumbGapWidth$];
    }
    set disabledThumbGapWidth(value) {
      super.disabledThumbGapWidth = value;
    }
    paint(context, offset, opts) {
      let t6, t6$;
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let thumbCenter = opts && 'thumbCenter' in opts ? opts.thumbCenter : null;
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : false;
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : false;
      if (!(context != null)) dart.assertFailed(null, L48, 1594, 12, "context != null");
      if (!(offset != null)) dart.assertFailed(null, L48, 1595, 12, "offset != null");
      if (!(parentBox != null)) dart.assertFailed(null, L48, 1596, 12, "parentBox != null");
      if (!(sliderTheme != null)) dart.assertFailed(null, L48, 1597, 12, "sliderTheme != null");
      if (!(sliderTheme.disabledActiveTrackColor != null)) dart.assertFailed(null, L48, 1598, 12, "sliderTheme.disabledActiveTrackColor != null");
      if (!(sliderTheme.disabledInactiveTrackColor != null)) dart.assertFailed(null, L48, 1599, 12, "sliderTheme.disabledInactiveTrackColor != null");
      if (!(sliderTheme.activeTrackColor != null)) dart.assertFailed(null, L48, 1600, 12, "sliderTheme.activeTrackColor != null");
      if (!(sliderTheme.inactiveTrackColor != null)) dart.assertFailed(null, L48, 1601, 12, "sliderTheme.inactiveTrackColor != null");
      if (!(sliderTheme.thumbShape != null)) dart.assertFailed(null, L48, 1602, 12, "sliderTheme.thumbShape != null");
      if (!(enableAnimation != null)) dart.assertFailed(null, L48, 1603, 12, "enableAnimation != null");
      if (!(textDirection != null)) dart.assertFailed(null, L48, 1604, 12, "textDirection != null");
      if (!(thumbCenter != null)) dart.assertFailed(null, L48, 1605, 12, "thumbCenter != null");
      if (!(isEnabled != null)) dart.assertFailed(null, L48, 1606, 12, "isEnabled != null");
      if (!(isDiscrete != null)) dart.assertFailed(null, L48, 1607, 12, "isDiscrete != null");
      if (dart.notNull(sliderTheme.trackHeight) <= 0) {
        return;
      }
      let activeTrackColorTween = new tween.ColorTween.new({begin: sliderTheme.disabledActiveTrackColor, end: sliderTheme.activeTrackColor});
      let inactiveTrackColorTween = new tween.ColorTween.new({begin: sliderTheme.disabledInactiveTrackColor, end: sliderTheme.inactiveTrackColor});
      let activePaint = (t6 = ui.Paint.new(), (() => {
        t6.color = activeTrackColorTween.evaluate(enableAnimation);
        return t6;
      })());
      let inactivePaint = (t6$ = ui.Paint.new(), (() => {
        t6$.color = inactiveTrackColorTween.evaluate(enableAnimation);
        return t6$;
      })());
      let leftTrackPaint = null;
      let rightTrackPaint = null;
      switch (textDirection) {
        case C238 || CT.C238:
        {
          leftTrackPaint = activePaint;
          rightTrackPaint = inactivePaint;
          break;
        }
        case C237 || CT.C237:
        {
          leftTrackPaint = inactivePaint;
          rightTrackPaint = activePaint;
          break;
        }
      }
      let trackRect = this.getPreferredRect({parentBox: parentBox, offset: offset, sliderTheme: sliderTheme, isEnabled: isEnabled, isDiscrete: isDiscrete});
      let thumbSize = sliderTheme.thumbShape.getPreferredSize(isEnabled, isDiscrete);
      let leftTrackSegment = new ui.Rect.fromLTRB(dart.notNull(trackRect.left) + dart.notNull(trackRect.height) / 2, trackRect.top, dart.notNull(thumbCenter.dx) - dart.notNull(thumbSize.width) / 2, trackRect.bottom);
      if (!dart.test(leftTrackSegment.isEmpty)) context.canvas.drawRect(leftTrackSegment, leftTrackPaint);
      let rightTrackSegment = new ui.Rect.fromLTRB(dart.notNull(thumbCenter.dx) + dart.notNull(thumbSize.width) / 2, trackRect.top, trackRect.right, trackRect.bottom);
      if (!dart.test(rightTrackSegment.isEmpty)) context.canvas.drawRect(rightTrackSegment, rightTrackPaint);
    }
  };
  (slider_theme.RectangularSliderTrackShape.new = function(opts) {
    let disabledThumbGapWidth = opts && 'disabledThumbGapWidth' in opts ? opts.disabledThumbGapWidth : 2;
    this[disabledThumbGapWidth$] = disabledThumbGapWidth;
    slider_theme.RectangularSliderTrackShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.RectangularSliderTrackShape.prototype;
  dart.addTypeTests(slider_theme.RectangularSliderTrackShape);
  dart.addTypeCaches(slider_theme.RectangularSliderTrackShape);
  dart.setMethodSignature(slider_theme.RectangularSliderTrackShape, () => ({
    __proto__: dart.getMethods(slider_theme.RectangularSliderTrackShape.__proto__),
    paint: dart.fnType(dart.void, [dart.legacy(object.PaintingContext), dart.legacy(ui.Offset)], {enableAnimation: dart.legacy(animation.Animation$(dart.legacy(core.double))), isDiscrete: dart.legacy(core.bool), isEnabled: dart.legacy(core.bool), parentBox: dart.legacy(box.RenderBox), sliderTheme: dart.legacy(slider_theme.SliderThemeData), textDirection: dart.legacy(ui.TextDirection), thumbCenter: dart.legacy(ui.Offset)}, {})
  }));
  dart.setLibraryUri(slider_theme.RectangularSliderTrackShape, L49);
  dart.setFieldSignature(slider_theme.RectangularSliderTrackShape, () => ({
    __proto__: dart.getFields(slider_theme.RectangularSliderTrackShape.__proto__),
    disabledThumbGapWidth: dart.finalFieldType(dart.legacy(core.double))
  }));
  const SliderTrackShape_BaseSliderTrackShape$36$ = class SliderTrackShape_BaseSliderTrackShape extends slider_theme.SliderTrackShape {};
  (SliderTrackShape_BaseSliderTrackShape$36$.new = function() {
    SliderTrackShape_BaseSliderTrackShape$36$.__proto__.new.call(this);
  }).prototype = SliderTrackShape_BaseSliderTrackShape$36$.prototype;
  dart.applyMixin(SliderTrackShape_BaseSliderTrackShape$36$, slider_theme.BaseSliderTrackShape);
  slider_theme.RoundedRectSliderTrackShape = class RoundedRectSliderTrackShape extends SliderTrackShape_BaseSliderTrackShape$36$ {
    paint(context, offset, opts) {
      let t6, t6$;
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let thumbCenter = opts && 'thumbCenter' in opts ? opts.thumbCenter : null;
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : false;
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : false;
      let additionalActiveTrackHeight = opts && 'additionalActiveTrackHeight' in opts ? opts.additionalActiveTrackHeight : 2;
      if (!(context != null)) dart.assertFailed(null, L48, 1695, 12, "context != null");
      if (!(offset != null)) dart.assertFailed(null, L48, 1696, 12, "offset != null");
      if (!(parentBox != null)) dart.assertFailed(null, L48, 1697, 12, "parentBox != null");
      if (!(sliderTheme != null)) dart.assertFailed(null, L48, 1698, 12, "sliderTheme != null");
      if (!(sliderTheme.disabledActiveTrackColor != null)) dart.assertFailed(null, L48, 1699, 12, "sliderTheme.disabledActiveTrackColor != null");
      if (!(sliderTheme.disabledInactiveTrackColor != null)) dart.assertFailed(null, L48, 1700, 12, "sliderTheme.disabledInactiveTrackColor != null");
      if (!(sliderTheme.activeTrackColor != null)) dart.assertFailed(null, L48, 1701, 12, "sliderTheme.activeTrackColor != null");
      if (!(sliderTheme.inactiveTrackColor != null)) dart.assertFailed(null, L48, 1702, 12, "sliderTheme.inactiveTrackColor != null");
      if (!(sliderTheme.thumbShape != null)) dart.assertFailed(null, L48, 1703, 12, "sliderTheme.thumbShape != null");
      if (!(enableAnimation != null)) dart.assertFailed(null, L48, 1704, 12, "enableAnimation != null");
      if (!(textDirection != null)) dart.assertFailed(null, L48, 1705, 12, "textDirection != null");
      if (!(thumbCenter != null)) dart.assertFailed(null, L48, 1706, 12, "thumbCenter != null");
      if (dart.notNull(sliderTheme.trackHeight) <= 0) {
        return;
      }
      let activeTrackColorTween = new tween.ColorTween.new({begin: sliderTheme.disabledActiveTrackColor, end: sliderTheme.activeTrackColor});
      let inactiveTrackColorTween = new tween.ColorTween.new({begin: sliderTheme.disabledInactiveTrackColor, end: sliderTheme.inactiveTrackColor});
      let activePaint = (t6 = ui.Paint.new(), (() => {
        t6.color = activeTrackColorTween.evaluate(enableAnimation);
        return t6;
      })());
      let inactivePaint = (t6$ = ui.Paint.new(), (() => {
        t6$.color = inactiveTrackColorTween.evaluate(enableAnimation);
        return t6$;
      })());
      let leftTrackPaint = null;
      let rightTrackPaint = null;
      switch (textDirection) {
        case C238 || CT.C238:
        {
          leftTrackPaint = activePaint;
          rightTrackPaint = inactivePaint;
          break;
        }
        case C237 || CT.C237:
        {
          leftTrackPaint = inactivePaint;
          rightTrackPaint = activePaint;
          break;
        }
      }
      let trackRect = this.getPreferredRect({parentBox: parentBox, offset: offset, sliderTheme: sliderTheme, isEnabled: isEnabled, isDiscrete: isDiscrete});
      let trackRadius = new ui.Radius.circular(dart.notNull(trackRect.height) / 2);
      let activeTrackRadius = new ui.Radius.circular(dart.notNull(trackRect.height) / 2 + 1);
      context.canvas.drawRRect(new ui.RRect.fromLTRBAndCorners(trackRect.left, dart.equals(textDirection, ui.TextDirection.ltr) ? dart.notNull(trackRect.top) - dart.notNull(additionalActiveTrackHeight) / 2 : trackRect.top, thumbCenter.dx, dart.equals(textDirection, ui.TextDirection.ltr) ? dart.notNull(trackRect.bottom) + dart.notNull(additionalActiveTrackHeight) / 2 : trackRect.bottom, {topLeft: dart.equals(textDirection, ui.TextDirection.ltr) ? activeTrackRadius : trackRadius, bottomLeft: dart.equals(textDirection, ui.TextDirection.ltr) ? activeTrackRadius : trackRadius}), leftTrackPaint);
      context.canvas.drawRRect(new ui.RRect.fromLTRBAndCorners(thumbCenter.dx, dart.equals(textDirection, ui.TextDirection.rtl) ? dart.notNull(trackRect.top) - dart.notNull(additionalActiveTrackHeight) / 2 : trackRect.top, trackRect.right, dart.equals(textDirection, ui.TextDirection.rtl) ? dart.notNull(trackRect.bottom) + dart.notNull(additionalActiveTrackHeight) / 2 : trackRect.bottom, {topRight: dart.equals(textDirection, ui.TextDirection.rtl) ? activeTrackRadius : trackRadius, bottomRight: dart.equals(textDirection, ui.TextDirection.rtl) ? activeTrackRadius : trackRadius}), rightTrackPaint);
    }
  };
  (slider_theme.RoundedRectSliderTrackShape.new = function() {
    slider_theme.RoundedRectSliderTrackShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.RoundedRectSliderTrackShape.prototype;
  dart.addTypeTests(slider_theme.RoundedRectSliderTrackShape);
  dart.addTypeCaches(slider_theme.RoundedRectSliderTrackShape);
  dart.setMethodSignature(slider_theme.RoundedRectSliderTrackShape, () => ({
    __proto__: dart.getMethods(slider_theme.RoundedRectSliderTrackShape.__proto__),
    paint: dart.fnType(dart.void, [dart.legacy(object.PaintingContext), dart.legacy(ui.Offset)], {additionalActiveTrackHeight: dart.legacy(core.double), enableAnimation: dart.legacy(animation.Animation$(dart.legacy(core.double))), isDiscrete: dart.legacy(core.bool), isEnabled: dart.legacy(core.bool), parentBox: dart.legacy(box.RenderBox), sliderTheme: dart.legacy(slider_theme.SliderThemeData), textDirection: dart.legacy(ui.TextDirection), thumbCenter: dart.legacy(ui.Offset)}, {})
  }));
  dart.setLibraryUri(slider_theme.RoundedRectSliderTrackShape, L49);
  slider_theme.RectangularRangeSliderTrackShape = class RectangularRangeSliderTrackShape extends slider_theme.RangeSliderTrackShape {
    getPreferredRect(opts) {
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let offset = opts && 'offset' in opts ? opts.offset : C1268 || CT.C1268;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : false;
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : false;
      if (!(parentBox != null)) dart.assertFailed(null, L48, 1809, 12, "parentBox != null");
      if (!(offset != null)) dart.assertFailed(null, L48, 1810, 12, "offset != null");
      if (!(sliderTheme != null)) dart.assertFailed(null, L48, 1811, 12, "sliderTheme != null");
      if (!(sliderTheme.overlayShape != null)) dart.assertFailed(null, L48, 1812, 12, "sliderTheme.overlayShape != null");
      if (!(isEnabled != null)) dart.assertFailed(null, L48, 1813, 12, "isEnabled != null");
      if (!(isDiscrete != null)) dart.assertFailed(null, L48, 1814, 12, "isDiscrete != null");
      let overlayWidth = sliderTheme.overlayShape.getPreferredSize(isEnabled, isDiscrete).width;
      let trackHeight = sliderTheme.trackHeight;
      if (!(dart.notNull(overlayWidth) >= 0)) dart.assertFailed(null, L48, 1817, 12, "overlayWidth >= 0");
      if (!(dart.notNull(trackHeight) >= 0)) dart.assertFailed(null, L48, 1818, 12, "trackHeight >= 0");
      if (!(dart.notNull(parentBox.size.width) >= dart.notNull(overlayWidth))) dart.assertFailed(null, L48, 1819, 12, "parentBox.size.width >= overlayWidth");
      if (!(dart.notNull(parentBox.size.height) >= dart.notNull(trackHeight))) dart.assertFailed(null, L48, 1820, 12, "parentBox.size.height >= trackHeight");
      let trackLeft = dart.notNull(offset.dx) + dart.notNull(overlayWidth) / 2;
      let trackTop = dart.notNull(offset.dy) + (dart.notNull(parentBox.size.height) - dart.notNull(trackHeight)) / 2;
      let trackWidth = dart.notNull(parentBox.size.width) - dart.notNull(overlayWidth);
      return new ui.Rect.fromLTWH(trackLeft, trackTop, trackWidth, trackHeight);
    }
    paint(context, offset, opts) {
      let t6, t6$;
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      let startThumbCenter = opts && 'startThumbCenter' in opts ? opts.startThumbCenter : null;
      let endThumbCenter = opts && 'endThumbCenter' in opts ? opts.endThumbCenter : null;
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : false;
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : false;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      if (!(context != null)) dart.assertFailed(null, L48, 1841, 12, "context != null");
      if (!(offset != null)) dart.assertFailed(null, L48, 1842, 12, "offset != null");
      if (!(parentBox != null)) dart.assertFailed(null, L48, 1843, 12, "parentBox != null");
      if (!(sliderTheme != null)) dart.assertFailed(null, L48, 1844, 12, "sliderTheme != null");
      if (!(sliderTheme.disabledActiveTrackColor != null)) dart.assertFailed(null, L48, 1845, 12, "sliderTheme.disabledActiveTrackColor != null");
      if (!(sliderTheme.disabledInactiveTrackColor != null)) dart.assertFailed(null, L48, 1846, 12, "sliderTheme.disabledInactiveTrackColor != null");
      if (!(sliderTheme.activeTrackColor != null)) dart.assertFailed(null, L48, 1847, 12, "sliderTheme.activeTrackColor != null");
      if (!(sliderTheme.inactiveTrackColor != null)) dart.assertFailed(null, L48, 1848, 12, "sliderTheme.inactiveTrackColor != null");
      if (!(sliderTheme.rangeThumbShape != null)) dart.assertFailed(null, L48, 1849, 12, "sliderTheme.rangeThumbShape != null");
      if (!(enableAnimation != null)) dart.assertFailed(null, L48, 1850, 12, "enableAnimation != null");
      if (!(startThumbCenter != null)) dart.assertFailed(null, L48, 1851, 12, "startThumbCenter != null");
      if (!(endThumbCenter != null)) dart.assertFailed(null, L48, 1852, 12, "endThumbCenter != null");
      if (!(isEnabled != null)) dart.assertFailed(null, L48, 1853, 12, "isEnabled != null");
      if (!(isDiscrete != null)) dart.assertFailed(null, L48, 1854, 12, "isDiscrete != null");
      if (!(textDirection != null)) dart.assertFailed(null, L48, 1855, 12, "textDirection != null");
      let activeTrackColorTween = new tween.ColorTween.new({begin: sliderTheme.disabledActiveTrackColor, end: sliderTheme.activeTrackColor});
      let inactiveTrackColorTween = new tween.ColorTween.new({begin: sliderTheme.disabledInactiveTrackColor, end: sliderTheme.inactiveTrackColor});
      let activePaint = (t6 = ui.Paint.new(), (() => {
        t6.color = activeTrackColorTween.evaluate(enableAnimation);
        return t6;
      })());
      let inactivePaint = (t6$ = ui.Paint.new(), (() => {
        t6$.color = inactiveTrackColorTween.evaluate(enableAnimation);
        return t6$;
      })());
      let leftThumbOffset = null;
      let rightThumbOffset = null;
      switch (textDirection) {
        case C238 || CT.C238:
        {
          leftThumbOffset = startThumbCenter;
          rightThumbOffset = endThumbCenter;
          break;
        }
        case C237 || CT.C237:
        {
          leftThumbOffset = endThumbCenter;
          rightThumbOffset = startThumbCenter;
          break;
        }
      }
      let thumbSize = sliderTheme.rangeThumbShape.getPreferredSize(isEnabled, isDiscrete);
      let thumbRadius = dart.notNull(thumbSize.width) / 2;
      let trackRect = this.getPreferredRect({parentBox: parentBox, offset: offset, sliderTheme: sliderTheme, isEnabled: isEnabled, isDiscrete: isDiscrete});
      let leftTrackSegment = new ui.Rect.fromLTRB(trackRect.left, trackRect.top, dart.notNull(leftThumbOffset.dx) - thumbRadius, trackRect.bottom);
      if (!dart.test(leftTrackSegment.isEmpty)) context.canvas.drawRect(leftTrackSegment, inactivePaint);
      let middleTrackSegment = new ui.Rect.fromLTRB(dart.notNull(leftThumbOffset.dx) + thumbRadius, trackRect.top, dart.notNull(rightThumbOffset.dx) - thumbRadius, trackRect.bottom);
      if (!dart.test(middleTrackSegment.isEmpty)) context.canvas.drawRect(middleTrackSegment, activePaint);
      let rightTrackSegment = new ui.Rect.fromLTRB(dart.notNull(rightThumbOffset.dx) + thumbRadius, trackRect.top, trackRect.right, trackRect.bottom);
      if (!dart.test(rightTrackSegment.isEmpty)) context.canvas.drawRect(rightTrackSegment, inactivePaint);
    }
  };
  (slider_theme.RectangularRangeSliderTrackShape.new = function() {
    slider_theme.RectangularRangeSliderTrackShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.RectangularRangeSliderTrackShape.prototype;
  dart.addTypeTests(slider_theme.RectangularRangeSliderTrackShape);
  dart.addTypeCaches(slider_theme.RectangularRangeSliderTrackShape);
  dart.setMethodSignature(slider_theme.RectangularRangeSliderTrackShape, () => ({
    __proto__: dart.getMethods(slider_theme.RectangularRangeSliderTrackShape.__proto__),
    getPreferredRect: dart.fnType(dart.legacy(ui.Rect), [], {isDiscrete: dart.legacy(core.bool), isEnabled: dart.legacy(core.bool), offset: dart.legacy(ui.Offset), parentBox: dart.legacy(box.RenderBox), sliderTheme: dart.legacy(slider_theme.SliderThemeData)}, {}),
    paint: dart.fnType(dart.void, [dart.legacy(object.PaintingContext), dart.legacy(ui.Offset)], {enableAnimation: dart.legacy(animation.Animation$(dart.legacy(core.double))), endThumbCenter: dart.legacy(ui.Offset), isDiscrete: dart.legacy(core.bool), isEnabled: dart.legacy(core.bool), parentBox: dart.legacy(box.RenderBox), sliderTheme: dart.legacy(slider_theme.SliderThemeData), startThumbCenter: dart.legacy(ui.Offset), textDirection: dart.legacy(ui.TextDirection)}, {})
  }));
  dart.setLibraryUri(slider_theme.RectangularRangeSliderTrackShape, L49);
  slider_theme.RoundedRectRangeSliderTrackShape = class RoundedRectRangeSliderTrackShape extends slider_theme.RangeSliderTrackShape {
    getPreferredRect(opts) {
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let offset = opts && 'offset' in opts ? opts.offset : C1268 || CT.C1268;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : false;
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : false;
      if (!(parentBox != null)) dart.assertFailed(null, L48, 1938, 12, "parentBox != null");
      if (!(offset != null)) dart.assertFailed(null, L48, 1939, 12, "offset != null");
      if (!(sliderTheme != null)) dart.assertFailed(null, L48, 1940, 12, "sliderTheme != null");
      if (!(sliderTheme.overlayShape != null)) dart.assertFailed(null, L48, 1941, 12, "sliderTheme.overlayShape != null");
      if (!(sliderTheme.trackHeight != null)) dart.assertFailed(null, L48, 1942, 12, "sliderTheme.trackHeight != null");
      if (!(isEnabled != null)) dart.assertFailed(null, L48, 1943, 12, "isEnabled != null");
      if (!(isDiscrete != null)) dart.assertFailed(null, L48, 1944, 12, "isDiscrete != null");
      let overlayWidth = sliderTheme.overlayShape.getPreferredSize(isEnabled, isDiscrete).width;
      let trackHeight = sliderTheme.trackHeight;
      if (!(dart.notNull(overlayWidth) >= 0)) dart.assertFailed(null, L48, 1947, 12, "overlayWidth >= 0");
      if (!(dart.notNull(trackHeight) >= 0)) dart.assertFailed(null, L48, 1948, 12, "trackHeight >= 0");
      if (!(dart.notNull(parentBox.size.width) >= dart.notNull(overlayWidth))) dart.assertFailed(null, L48, 1949, 12, "parentBox.size.width >= overlayWidth");
      if (!(dart.notNull(parentBox.size.height) >= dart.notNull(trackHeight))) dart.assertFailed(null, L48, 1950, 12, "parentBox.size.height >= trackHeight");
      let trackLeft = dart.notNull(offset.dx) + dart.notNull(overlayWidth) / 2;
      let trackTop = dart.notNull(offset.dy) + (dart.notNull(parentBox.size.height) - dart.notNull(trackHeight)) / 2;
      let trackWidth = dart.notNull(parentBox.size.width) - dart.notNull(overlayWidth);
      return new ui.Rect.fromLTWH(trackLeft, trackTop, trackWidth, trackHeight);
    }
    paint(context, offset, opts) {
      let t6, t6$;
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      let startThumbCenter = opts && 'startThumbCenter' in opts ? opts.startThumbCenter : null;
      let endThumbCenter = opts && 'endThumbCenter' in opts ? opts.endThumbCenter : null;
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : false;
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : false;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let additionalActiveTrackHeight = opts && 'additionalActiveTrackHeight' in opts ? opts.additionalActiveTrackHeight : 2;
      if (!(context != null)) dart.assertFailed(null, L48, 1972, 12, "context != null");
      if (!(offset != null)) dart.assertFailed(null, L48, 1973, 12, "offset != null");
      if (!(parentBox != null)) dart.assertFailed(null, L48, 1974, 12, "parentBox != null");
      if (!(sliderTheme != null)) dart.assertFailed(null, L48, 1975, 12, "sliderTheme != null");
      if (!(sliderTheme.disabledActiveTrackColor != null)) dart.assertFailed(null, L48, 1976, 12, "sliderTheme.disabledActiveTrackColor != null");
      if (!(sliderTheme.disabledInactiveTrackColor != null)) dart.assertFailed(null, L48, 1977, 12, "sliderTheme.disabledInactiveTrackColor != null");
      if (!(sliderTheme.activeTrackColor != null)) dart.assertFailed(null, L48, 1978, 12, "sliderTheme.activeTrackColor != null");
      if (!(sliderTheme.inactiveTrackColor != null)) dart.assertFailed(null, L48, 1979, 12, "sliderTheme.inactiveTrackColor != null");
      if (!(sliderTheme.rangeThumbShape != null)) dart.assertFailed(null, L48, 1980, 12, "sliderTheme.rangeThumbShape != null");
      if (!(enableAnimation != null)) dart.assertFailed(null, L48, 1981, 12, "enableAnimation != null");
      if (!(startThumbCenter != null)) dart.assertFailed(null, L48, 1982, 12, "startThumbCenter != null");
      if (!(endThumbCenter != null)) dart.assertFailed(null, L48, 1983, 12, "endThumbCenter != null");
      if (!(isEnabled != null)) dart.assertFailed(null, L48, 1984, 12, "isEnabled != null");
      if (!(isDiscrete != null)) dart.assertFailed(null, L48, 1985, 12, "isDiscrete != null");
      if (!(textDirection != null)) dart.assertFailed(null, L48, 1986, 12, "textDirection != null");
      if (dart.notNull(sliderTheme.trackHeight) <= 0) {
        return;
      }
      let activeTrackColorTween = new tween.ColorTween.new({begin: sliderTheme.disabledActiveTrackColor, end: sliderTheme.activeTrackColor});
      let inactiveTrackColorTween = new tween.ColorTween.new({begin: sliderTheme.disabledInactiveTrackColor, end: sliderTheme.inactiveTrackColor});
      let activePaint = (t6 = ui.Paint.new(), (() => {
        t6.color = activeTrackColorTween.evaluate(enableAnimation);
        return t6;
      })());
      let inactivePaint = (t6$ = ui.Paint.new(), (() => {
        t6$.color = inactiveTrackColorTween.evaluate(enableAnimation);
        return t6$;
      })());
      let leftThumbOffset = null;
      let rightThumbOffset = null;
      switch (textDirection) {
        case C238 || CT.C238:
        {
          leftThumbOffset = startThumbCenter;
          rightThumbOffset = endThumbCenter;
          break;
        }
        case C237 || CT.C237:
        {
          leftThumbOffset = endThumbCenter;
          rightThumbOffset = startThumbCenter;
          break;
        }
      }
      let thumbSize = sliderTheme.rangeThumbShape.getPreferredSize(isEnabled, isDiscrete);
      let thumbRadius = dart.notNull(thumbSize.width) / 2;
      if (!(thumbRadius > 0)) dart.assertFailed(null, L48, 2019, 12, "thumbRadius > 0");
      let trackRect = this.getPreferredRect({parentBox: parentBox, offset: offset, sliderTheme: sliderTheme, isEnabled: isEnabled, isDiscrete: isDiscrete});
      let trackRadius = new ui.Radius.circular(dart.notNull(trackRect.height) / 2);
      context.canvas.drawRRect(new ui.RRect.fromLTRBAndCorners(trackRect.left, trackRect.top, leftThumbOffset.dx, trackRect.bottom, {topLeft: trackRadius, bottomLeft: trackRadius}), inactivePaint);
      context.canvas.drawRect(new ui.Rect.fromLTRB(leftThumbOffset.dx, dart.notNull(trackRect.top) - dart.notNull(additionalActiveTrackHeight) / 2, rightThumbOffset.dx, dart.notNull(trackRect.bottom) + dart.notNull(additionalActiveTrackHeight) / 2), activePaint);
      context.canvas.drawRRect(new ui.RRect.fromLTRBAndCorners(rightThumbOffset.dx, trackRect.top, trackRect.right, trackRect.bottom, {topRight: trackRadius, bottomRight: trackRadius}), inactivePaint);
    }
  };
  (slider_theme.RoundedRectRangeSliderTrackShape.new = function() {
    slider_theme.RoundedRectRangeSliderTrackShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.RoundedRectRangeSliderTrackShape.prototype;
  dart.addTypeTests(slider_theme.RoundedRectRangeSliderTrackShape);
  dart.addTypeCaches(slider_theme.RoundedRectRangeSliderTrackShape);
  dart.setMethodSignature(slider_theme.RoundedRectRangeSliderTrackShape, () => ({
    __proto__: dart.getMethods(slider_theme.RoundedRectRangeSliderTrackShape.__proto__),
    getPreferredRect: dart.fnType(dart.legacy(ui.Rect), [], {isDiscrete: dart.legacy(core.bool), isEnabled: dart.legacy(core.bool), offset: dart.legacy(ui.Offset), parentBox: dart.legacy(box.RenderBox), sliderTheme: dart.legacy(slider_theme.SliderThemeData)}, {}),
    paint: dart.fnType(dart.void, [dart.legacy(object.PaintingContext), dart.legacy(ui.Offset)], {additionalActiveTrackHeight: dart.legacy(core.double), enableAnimation: dart.legacy(animation.Animation$(dart.legacy(core.double))), endThumbCenter: dart.legacy(ui.Offset), isDiscrete: dart.legacy(core.bool), isEnabled: dart.legacy(core.bool), parentBox: dart.legacy(box.RenderBox), sliderTheme: dart.legacy(slider_theme.SliderThemeData), startThumbCenter: dart.legacy(ui.Offset), textDirection: dart.legacy(ui.TextDirection)}, {})
  }));
  dart.setLibraryUri(slider_theme.RoundedRectRangeSliderTrackShape, L49);
  slider_theme.RoundSliderTickMarkShape = class RoundSliderTickMarkShape extends slider_theme.SliderTickMarkShape {
    get tickMarkRadius() {
      return this[tickMarkRadius$];
    }
    set tickMarkRadius(value) {
      super.tickMarkRadius = value;
    }
    getPreferredSize(opts) {
      let t6;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : false;
      if (!(sliderTheme != null)) dart.assertFailed(null, L48, 2102, 12, "sliderTheme != null");
      if (!(sliderTheme.trackHeight != null)) dart.assertFailed(null, L48, 2103, 12, "sliderTheme.trackHeight != null");
      if (!(isEnabled != null)) dart.assertFailed(null, L48, 2104, 12, "isEnabled != null");
      return new ui.Size.fromRadius((t6 = this.tickMarkRadius, t6 == null ? dart.notNull(sliderTheme.trackHeight) / 4 : t6));
    }
    paint(context, center, opts) {
      let t6;
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let thumbCenter = opts && 'thumbCenter' in opts ? opts.thumbCenter : null;
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : false;
      if (!(context != null)) dart.assertFailed(null, L48, 2122, 12, "context != null");
      if (!(center != null)) dart.assertFailed(null, L48, 2123, 12, "center != null");
      if (!(parentBox != null)) dart.assertFailed(null, L48, 2124, 12, "parentBox != null");
      if (!(sliderTheme != null)) dart.assertFailed(null, L48, 2125, 12, "sliderTheme != null");
      if (!(sliderTheme.disabledActiveTickMarkColor != null)) dart.assertFailed(null, L48, 2126, 12, "sliderTheme.disabledActiveTickMarkColor != null");
      if (!(sliderTheme.disabledInactiveTickMarkColor != null)) dart.assertFailed(null, L48, 2127, 12, "sliderTheme.disabledInactiveTickMarkColor != null");
      if (!(sliderTheme.activeTickMarkColor != null)) dart.assertFailed(null, L48, 2128, 12, "sliderTheme.activeTickMarkColor != null");
      if (!(sliderTheme.inactiveTickMarkColor != null)) dart.assertFailed(null, L48, 2129, 12, "sliderTheme.inactiveTickMarkColor != null");
      if (!(enableAnimation != null)) dart.assertFailed(null, L48, 2130, 12, "enableAnimation != null");
      if (!(textDirection != null)) dart.assertFailed(null, L48, 2131, 12, "textDirection != null");
      if (!(thumbCenter != null)) dart.assertFailed(null, L48, 2132, 12, "thumbCenter != null");
      if (!(isEnabled != null)) dart.assertFailed(null, L48, 2133, 12, "isEnabled != null");
      let begin = null;
      let end = null;
      switch (textDirection) {
        case C238 || CT.C238:
        {
          let isTickMarkRightOfThumb = dart.notNull(center.dx) > dart.notNull(thumbCenter.dx);
          begin = isTickMarkRightOfThumb ? sliderTheme.disabledInactiveTickMarkColor : sliderTheme.disabledActiveTickMarkColor;
          end = isTickMarkRightOfThumb ? sliderTheme.inactiveTickMarkColor : sliderTheme.activeTickMarkColor;
          break;
        }
        case C237 || CT.C237:
        {
          let isTickMarkLeftOfThumb = dart.notNull(center.dx) < dart.notNull(thumbCenter.dx);
          begin = isTickMarkLeftOfThumb ? sliderTheme.disabledInactiveTickMarkColor : sliderTheme.disabledActiveTickMarkColor;
          end = isTickMarkLeftOfThumb ? sliderTheme.inactiveTickMarkColor : sliderTheme.activeTickMarkColor;
          break;
        }
      }
      let paint = (t6 = ui.Paint.new(), (() => {
        t6.color = new tween.ColorTween.new({begin: begin, end: end}).evaluate(enableAnimation);
        return t6;
      })());
      let tickMarkRadius = dart.notNull(this.getPreferredSize({isEnabled: isEnabled, sliderTheme: sliderTheme}).width) / 2;
      if (tickMarkRadius > 0) {
        context.canvas.drawCircle(center, tickMarkRadius, paint);
      }
    }
  };
  (slider_theme.RoundSliderTickMarkShape.new = function(opts) {
    let tickMarkRadius = opts && 'tickMarkRadius' in opts ? opts.tickMarkRadius : null;
    this[tickMarkRadius$] = tickMarkRadius;
    slider_theme.RoundSliderTickMarkShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.RoundSliderTickMarkShape.prototype;
  dart.addTypeTests(slider_theme.RoundSliderTickMarkShape);
  dart.addTypeCaches(slider_theme.RoundSliderTickMarkShape);
  const tickMarkRadius$ = RoundSliderTickMarkShape_tickMarkRadius;
  dart.setMethodSignature(slider_theme.RoundSliderTickMarkShape, () => ({
    __proto__: dart.getMethods(slider_theme.RoundSliderTickMarkShape.__proto__),
    getPreferredSize: dart.fnType(dart.legacy(ui.Size), [], {isEnabled: dart.legacy(core.bool), sliderTheme: dart.legacy(slider_theme.SliderThemeData)}, {}),
    paint: dart.fnType(dart.void, [dart.legacy(object.PaintingContext), dart.legacy(ui.Offset)], {enableAnimation: dart.legacy(animation.Animation$(dart.legacy(core.double))), isEnabled: dart.legacy(core.bool), parentBox: dart.legacy(box.RenderBox), sliderTheme: dart.legacy(slider_theme.SliderThemeData), textDirection: dart.legacy(ui.TextDirection), thumbCenter: dart.legacy(ui.Offset)}, {})
  }));
  dart.setLibraryUri(slider_theme.RoundSliderTickMarkShape, L49);
  dart.setFieldSignature(slider_theme.RoundSliderTickMarkShape, () => ({
    __proto__: dart.getFields(slider_theme.RoundSliderTickMarkShape.__proto__),
    tickMarkRadius: dart.finalFieldType(dart.legacy(core.double))
  }));
  slider_theme.RoundRangeSliderTickMarkShape = class RoundRangeSliderTickMarkShape extends slider_theme.RangeSliderTickMarkShape {
    get tickMarkRadius() {
      return this[tickMarkRadius$0];
    }
    set tickMarkRadius(value) {
      super.tickMarkRadius = value;
    }
    getPreferredSize(opts) {
      let t6;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : false;
      if (!(sliderTheme != null)) dart.assertFailed(null, L48, 2200, 12, "sliderTheme != null");
      if (!(sliderTheme.trackHeight != null)) dart.assertFailed(null, L48, 2201, 12, "sliderTheme.trackHeight != null");
      if (!(isEnabled != null)) dart.assertFailed(null, L48, 2202, 12, "isEnabled != null");
      return new ui.Size.fromRadius((t6 = this.tickMarkRadius, t6 == null ? dart.notNull(sliderTheme.trackHeight) / 4 : t6));
    }
    paint(context, center, opts) {
      let t6;
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      let startThumbCenter = opts && 'startThumbCenter' in opts ? opts.startThumbCenter : null;
      let endThumbCenter = opts && 'endThumbCenter' in opts ? opts.endThumbCenter : null;
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : false;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      if (!(context != null)) dart.assertFailed(null, L48, 2218, 12, "context != null");
      if (!(center != null)) dart.assertFailed(null, L48, 2219, 12, "center != null");
      if (!(parentBox != null)) dart.assertFailed(null, L48, 2220, 12, "parentBox != null");
      if (!(sliderTheme != null)) dart.assertFailed(null, L48, 2221, 12, "sliderTheme != null");
      if (!(sliderTheme.disabledActiveTickMarkColor != null)) dart.assertFailed(null, L48, 2222, 12, "sliderTheme.disabledActiveTickMarkColor != null");
      if (!(sliderTheme.disabledInactiveTickMarkColor != null)) dart.assertFailed(null, L48, 2223, 12, "sliderTheme.disabledInactiveTickMarkColor != null");
      if (!(sliderTheme.activeTickMarkColor != null)) dart.assertFailed(null, L48, 2224, 12, "sliderTheme.activeTickMarkColor != null");
      if (!(sliderTheme.inactiveTickMarkColor != null)) dart.assertFailed(null, L48, 2225, 12, "sliderTheme.inactiveTickMarkColor != null");
      if (!(enableAnimation != null)) dart.assertFailed(null, L48, 2226, 12, "enableAnimation != null");
      if (!(startThumbCenter != null)) dart.assertFailed(null, L48, 2227, 12, "startThumbCenter != null");
      if (!(endThumbCenter != null)) dart.assertFailed(null, L48, 2228, 12, "endThumbCenter != null");
      if (!(isEnabled != null)) dart.assertFailed(null, L48, 2229, 12, "isEnabled != null");
      if (!(textDirection != null)) dart.assertFailed(null, L48, 2230, 12, "textDirection != null");
      let isBetweenThumbs = null;
      switch (textDirection) {
        case C238 || CT.C238:
        {
          isBetweenThumbs = dart.notNull(startThumbCenter.dx) < dart.notNull(center.dx) && dart.notNull(center.dx) < dart.notNull(endThumbCenter.dx);
          break;
        }
        case C237 || CT.C237:
        {
          isBetweenThumbs = dart.notNull(endThumbCenter.dx) < dart.notNull(center.dx) && dart.notNull(center.dx) < dart.notNull(startThumbCenter.dx);
          break;
        }
      }
      let begin = dart.test(isBetweenThumbs) ? sliderTheme.disabledActiveTickMarkColor : sliderTheme.disabledInactiveTickMarkColor;
      let end = dart.test(isBetweenThumbs) ? sliderTheme.activeTickMarkColor : sliderTheme.inactiveTickMarkColor;
      let paint = (t6 = ui.Paint.new(), (() => {
        t6.color = new tween.ColorTween.new({begin: begin, end: end}).evaluate(enableAnimation);
        return t6;
      })());
      let tickMarkRadius = dart.notNull(this.getPreferredSize({isEnabled: isEnabled, sliderTheme: sliderTheme}).width) / 2;
      if (tickMarkRadius > 0) {
        context.canvas.drawCircle(center, tickMarkRadius, paint);
      }
    }
  };
  (slider_theme.RoundRangeSliderTickMarkShape.new = function(opts) {
    let tickMarkRadius = opts && 'tickMarkRadius' in opts ? opts.tickMarkRadius : null;
    this[tickMarkRadius$0] = tickMarkRadius;
    slider_theme.RoundRangeSliderTickMarkShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.RoundRangeSliderTickMarkShape.prototype;
  dart.addTypeTests(slider_theme.RoundRangeSliderTickMarkShape);
  dart.addTypeCaches(slider_theme.RoundRangeSliderTickMarkShape);
  const tickMarkRadius$0 = RoundRangeSliderTickMarkShape_tickMarkRadius;
  dart.setMethodSignature(slider_theme.RoundRangeSliderTickMarkShape, () => ({
    __proto__: dart.getMethods(slider_theme.RoundRangeSliderTickMarkShape.__proto__),
    getPreferredSize: dart.fnType(dart.legacy(ui.Size), [], {isEnabled: dart.legacy(core.bool), sliderTheme: dart.legacy(slider_theme.SliderThemeData)}, {}),
    paint: dart.fnType(dart.void, [dart.legacy(object.PaintingContext), dart.legacy(ui.Offset)], {enableAnimation: dart.legacy(animation.Animation$(dart.legacy(core.double))), endThumbCenter: dart.legacy(ui.Offset), isEnabled: dart.legacy(core.bool), parentBox: dart.legacy(box.RenderBox), sliderTheme: dart.legacy(slider_theme.SliderThemeData), startThumbCenter: dart.legacy(ui.Offset), textDirection: dart.legacy(ui.TextDirection)}, {})
  }));
  dart.setLibraryUri(slider_theme.RoundRangeSliderTickMarkShape, L49);
  dart.setFieldSignature(slider_theme.RoundRangeSliderTickMarkShape, () => ({
    __proto__: dart.getFields(slider_theme.RoundRangeSliderTickMarkShape.__proto__),
    tickMarkRadius: dart.finalFieldType(dart.legacy(core.double))
  }));
  slider_theme._EmptySliderTickMarkShape = class _EmptySliderTickMarkShape extends slider_theme.SliderTickMarkShape {
    getPreferredSize(opts) {
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : null;
      return ui.Size.zero;
    }
    paint(context, center, opts) {
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      let thumbCenter = opts && 'thumbCenter' in opts ? opts.thumbCenter : null;
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    }
  };
  (slider_theme._EmptySliderTickMarkShape.new = function() {
    slider_theme._EmptySliderTickMarkShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme._EmptySliderTickMarkShape.prototype;
  dart.addTypeTests(slider_theme._EmptySliderTickMarkShape);
  dart.addTypeCaches(slider_theme._EmptySliderTickMarkShape);
  dart.setMethodSignature(slider_theme._EmptySliderTickMarkShape, () => ({
    __proto__: dart.getMethods(slider_theme._EmptySliderTickMarkShape.__proto__),
    getPreferredSize: dart.fnType(dart.legacy(ui.Size), [], {isEnabled: dart.legacy(core.bool), sliderTheme: dart.legacy(slider_theme.SliderThemeData)}, {}),
    paint: dart.fnType(dart.void, [dart.legacy(object.PaintingContext), dart.legacy(ui.Offset)], {enableAnimation: dart.legacy(animation.Animation$(dart.legacy(core.double))), isEnabled: dart.legacy(core.bool), parentBox: dart.legacy(box.RenderBox), sliderTheme: dart.legacy(slider_theme.SliderThemeData), textDirection: dart.legacy(ui.TextDirection), thumbCenter: dart.legacy(ui.Offset)}, {})
  }));
  dart.setLibraryUri(slider_theme._EmptySliderTickMarkShape, L49);
  slider_theme._EmptySliderComponentShape = class _EmptySliderComponentShape extends slider_theme.SliderComponentShape {
    getPreferredSize(isEnabled, isDiscrete) {
      return ui.Size.zero;
    }
    paint(context, center, opts) {
      let activationAnimation = opts && 'activationAnimation' in opts ? opts.activationAnimation : null;
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : null;
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
    }
  };
  (slider_theme._EmptySliderComponentShape.new = function() {
    slider_theme._EmptySliderComponentShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme._EmptySliderComponentShape.prototype;
  dart.addTypeTests(slider_theme._EmptySliderComponentShape);
  dart.addTypeCaches(slider_theme._EmptySliderComponentShape);
  dart.setMethodSignature(slider_theme._EmptySliderComponentShape, () => ({
    __proto__: dart.getMethods(slider_theme._EmptySliderComponentShape.__proto__),
    getPreferredSize: dart.fnType(dart.legacy(ui.Size), [dart.legacy(core.bool), dart.legacy(core.bool)]),
    paint: dart.fnType(dart.void, [dart.legacy(object.PaintingContext), dart.legacy(ui.Offset)], {activationAnimation: dart.legacy(animation.Animation$(dart.legacy(core.double))), enableAnimation: dart.legacy(animation.Animation$(dart.legacy(core.double))), isDiscrete: dart.legacy(core.bool), labelPainter: dart.legacy(text_painter.TextPainter), parentBox: dart.legacy(box.RenderBox), sizeWithOverflow: dart.legacy(ui.Size), sliderTheme: dart.legacy(slider_theme.SliderThemeData), textDirection: dart.legacy(ui.TextDirection), textScaleFactor: dart.legacy(core.double), value: dart.legacy(core.double)}, {})
  }));
  dart.setLibraryUri(slider_theme._EmptySliderComponentShape, L49);
  var _disabledThumbRadius = dart.privateName(slider_theme, "_disabledThumbRadius");
  slider_theme.RoundSliderThumbShape = class RoundSliderThumbShape extends slider_theme.SliderComponentShape {
    get enabledThumbRadius() {
      return this[enabledThumbRadius$];
    }
    set enabledThumbRadius(value) {
      super.enabledThumbRadius = value;
    }
    get disabledThumbRadius() {
      return this[disabledThumbRadius$];
    }
    set disabledThumbRadius(value) {
      super.disabledThumbRadius = value;
    }
    get elevation() {
      return this[elevation$8];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get pressedElevation() {
      return this[pressedElevation$];
    }
    set pressedElevation(value) {
      super.pressedElevation = value;
    }
    get [_disabledThumbRadius]() {
      let t6;
      t6 = this.disabledThumbRadius;
      return t6 == null ? this.enabledThumbRadius : t6;
    }
    getPreferredSize(isEnabled, isDiscrete) {
      return new ui.Size.fromRadius(dart.equals(isEnabled, true) ? this.enabledThumbRadius : this[_disabledThumbRadius]);
    }
    paint(context, center, opts) {
      let t6, t6$;
      let activationAnimation = opts && 'activationAnimation' in opts ? opts.activationAnimation : null;
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : null;
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      if (!(context != null)) dart.assertFailed(null, L48, 2389, 12, "context != null");
      if (!(center != null)) dart.assertFailed(null, L48, 2390, 12, "center != null");
      if (!(enableAnimation != null)) dart.assertFailed(null, L48, 2391, 12, "enableAnimation != null");
      if (!(sliderTheme != null)) dart.assertFailed(null, L48, 2392, 12, "sliderTheme != null");
      if (!(sliderTheme.disabledThumbColor != null)) dart.assertFailed(null, L48, 2393, 12, "sliderTheme.disabledThumbColor != null");
      if (!(sliderTheme.thumbColor != null)) dart.assertFailed(null, L48, 2394, 12, "sliderTheme.thumbColor != null");
      if (!!dart.test(sizeWithOverflow.isEmpty)) dart.assertFailed(null, L48, 2395, 12, "!sizeWithOverflow.isEmpty");
      let canvas = context.canvas;
      let radiusTween = new (TweenOfdoubleL()).new({begin: this[_disabledThumbRadius], end: this.enabledThumbRadius});
      let colorTween = new tween.ColorTween.new({begin: sliderTheme.disabledThumbColor, end: sliderTheme.thumbColor});
      let color = colorTween.evaluate(enableAnimation);
      let radius = radiusTween.evaluate(enableAnimation);
      let elevationTween = new (TweenOfdoubleL()).new({begin: this.elevation, end: this.pressedElevation});
      let evaluatedElevation = elevationTween.evaluate(activationAnimation);
      let path = (t6 = ui.Path.new(), (() => {
        t6.addArc(new ui.Rect.fromCenter({center: center, width: 2 * dart.notNull(radius), height: 2 * dart.notNull(radius)}), 0.0, 3.141592653589793 * 2);
        return t6;
      })());
      canvas.drawShadow(path, colors$.Colors.black, evaluatedElevation, true);
      canvas.drawCircle(center, radius, (t6$ = ui.Paint.new(), (() => {
        t6$.color = color;
        return t6$;
      })()));
    }
  };
  (slider_theme.RoundSliderThumbShape.new = function(opts) {
    let enabledThumbRadius = opts && 'enabledThumbRadius' in opts ? opts.enabledThumbRadius : 10;
    let disabledThumbRadius = opts && 'disabledThumbRadius' in opts ? opts.disabledThumbRadius : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : 1;
    let pressedElevation = opts && 'pressedElevation' in opts ? opts.pressedElevation : 6;
    this[enabledThumbRadius$] = enabledThumbRadius;
    this[disabledThumbRadius$] = disabledThumbRadius;
    this[elevation$8] = elevation;
    this[pressedElevation$] = pressedElevation;
    slider_theme.RoundSliderThumbShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.RoundSliderThumbShape.prototype;
  dart.addTypeTests(slider_theme.RoundSliderThumbShape);
  dart.addTypeCaches(slider_theme.RoundSliderThumbShape);
  const enabledThumbRadius$ = RoundSliderThumbShape_enabledThumbRadius;
  const disabledThumbRadius$ = RoundSliderThumbShape_disabledThumbRadius;
  const elevation$8 = RoundSliderThumbShape_elevation;
  const pressedElevation$ = RoundSliderThumbShape_pressedElevation;
  dart.setMethodSignature(slider_theme.RoundSliderThumbShape, () => ({
    __proto__: dart.getMethods(slider_theme.RoundSliderThumbShape.__proto__),
    getPreferredSize: dart.fnType(dart.legacy(ui.Size), [dart.legacy(core.bool), dart.legacy(core.bool)]),
    paint: dart.fnType(dart.void, [dart.legacy(object.PaintingContext), dart.legacy(ui.Offset)], {activationAnimation: dart.legacy(animation.Animation$(dart.legacy(core.double))), enableAnimation: dart.legacy(animation.Animation$(dart.legacy(core.double))), isDiscrete: dart.legacy(core.bool), labelPainter: dart.legacy(text_painter.TextPainter), parentBox: dart.legacy(box.RenderBox), sizeWithOverflow: dart.legacy(ui.Size), sliderTheme: dart.legacy(slider_theme.SliderThemeData), textDirection: dart.legacy(ui.TextDirection), textScaleFactor: dart.legacy(core.double), value: dart.legacy(core.double)}, {})
  }));
  dart.setGetterSignature(slider_theme.RoundSliderThumbShape, () => ({
    __proto__: dart.getGetters(slider_theme.RoundSliderThumbShape.__proto__),
    [_disabledThumbRadius]: dart.legacy(core.double)
  }));
  dart.setLibraryUri(slider_theme.RoundSliderThumbShape, L49);
  dart.setFieldSignature(slider_theme.RoundSliderThumbShape, () => ({
    __proto__: dart.getFields(slider_theme.RoundSliderThumbShape.__proto__),
    enabledThumbRadius: dart.finalFieldType(dart.legacy(core.double)),
    disabledThumbRadius: dart.finalFieldType(dart.legacy(core.double)),
    elevation: dart.finalFieldType(dart.legacy(core.double)),
    pressedElevation: dart.finalFieldType(dart.legacy(core.double))
  }));
  slider_theme.RoundRangeSliderThumbShape = class RoundRangeSliderThumbShape extends slider_theme.RangeSliderThumbShape {
    get enabledThumbRadius() {
      return this[enabledThumbRadius$0];
    }
    set enabledThumbRadius(value) {
      super.enabledThumbRadius = value;
    }
    get disabledThumbRadius() {
      return this[disabledThumbRadius$0];
    }
    set disabledThumbRadius(value) {
      super.disabledThumbRadius = value;
    }
    get elevation() {
      return this[elevation$9];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get pressedElevation() {
      return this[pressedElevation$0];
    }
    set pressedElevation(value) {
      super.pressedElevation = value;
    }
    get [_disabledThumbRadius]() {
      let t6;
      t6 = this.disabledThumbRadius;
      return t6 == null ? this.enabledThumbRadius : t6;
    }
    getPreferredSize(isEnabled, isDiscrete) {
      return new ui.Size.fromRadius(dart.equals(isEnabled, true) ? this.enabledThumbRadius : this[_disabledThumbRadius]);
    }
    paint(context, center, opts) {
      let t6, t6$, t6$0;
      let activationAnimation = opts && 'activationAnimation' in opts ? opts.activationAnimation : null;
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : false;
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : false;
      let isOnTop = opts && 'isOnTop' in opts ? opts.isOnTop : null;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let thumb = opts && 'thumb' in opts ? opts.thumb : null;
      let isPressed = opts && 'isPressed' in opts ? opts.isPressed : null;
      if (!(context != null)) dart.assertFailed(null, L48, 2490, 12, "context != null");
      if (!(center != null)) dart.assertFailed(null, L48, 2491, 12, "center != null");
      if (!(activationAnimation != null)) dart.assertFailed(null, L48, 2492, 12, "activationAnimation != null");
      if (!(sliderTheme != null)) dart.assertFailed(null, L48, 2493, 12, "sliderTheme != null");
      if (!(sliderTheme.showValueIndicator != null)) dart.assertFailed(null, L48, 2494, 12, "sliderTheme.showValueIndicator != null");
      if (!(sliderTheme.overlappingShapeStrokeColor != null)) dart.assertFailed(null, L48, 2495, 12, "sliderTheme.overlappingShapeStrokeColor != null");
      if (!(enableAnimation != null)) dart.assertFailed(null, L48, 2496, 12, "enableAnimation != null");
      let canvas = context.canvas;
      let radiusTween = new (TweenOfdoubleL()).new({begin: this[_disabledThumbRadius], end: this.enabledThumbRadius});
      let colorTween = new tween.ColorTween.new({begin: sliderTheme.disabledThumbColor, end: sliderTheme.thumbColor});
      let radius = radiusTween.evaluate(enableAnimation);
      let elevationTween = new (TweenOfdoubleL()).new({begin: this.elevation, end: this.pressedElevation});
      if (dart.equals(isOnTop, true)) {
        let strokePaint = (t6 = ui.Paint.new(), (() => {
          t6.color = sliderTheme.overlappingShapeStrokeColor;
          t6.strokeWidth = 1.0;
          t6.style = ui.PaintingStyle.stroke;
          return t6;
        })());
        canvas.drawCircle(center, radius, strokePaint);
      }
      let color = colorTween.evaluate(enableAnimation);
      let evaluatedElevation = dart.test(isPressed) ? elevationTween.evaluate(activationAnimation) : this.elevation;
      let shadowPath = (t6$ = ui.Path.new(), (() => {
        t6$.addArc(new ui.Rect.fromCenter({center: center, width: 2 * dart.notNull(radius), height: 2 * dart.notNull(radius)}), 0.0, 3.141592653589793 * 2);
        return t6$;
      })());
      canvas.drawShadow(shadowPath, colors$.Colors.black, evaluatedElevation, true);
      canvas.drawCircle(center, radius, (t6$0 = ui.Paint.new(), (() => {
        t6$0.color = color;
        return t6$0;
      })()));
    }
  };
  (slider_theme.RoundRangeSliderThumbShape.new = function(opts) {
    let enabledThumbRadius = opts && 'enabledThumbRadius' in opts ? opts.enabledThumbRadius : 10;
    let disabledThumbRadius = opts && 'disabledThumbRadius' in opts ? opts.disabledThumbRadius : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : 1;
    let pressedElevation = opts && 'pressedElevation' in opts ? opts.pressedElevation : 6;
    this[enabledThumbRadius$0] = enabledThumbRadius;
    this[disabledThumbRadius$0] = disabledThumbRadius;
    this[elevation$9] = elevation;
    this[pressedElevation$0] = pressedElevation;
    if (!(enabledThumbRadius != null)) dart.assertFailed(null, L48, 2447, 15, "enabledThumbRadius != null");
    slider_theme.RoundRangeSliderThumbShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.RoundRangeSliderThumbShape.prototype;
  dart.addTypeTests(slider_theme.RoundRangeSliderThumbShape);
  dart.addTypeCaches(slider_theme.RoundRangeSliderThumbShape);
  const enabledThumbRadius$0 = RoundRangeSliderThumbShape_enabledThumbRadius;
  const disabledThumbRadius$0 = RoundRangeSliderThumbShape_disabledThumbRadius;
  const elevation$9 = RoundRangeSliderThumbShape_elevation;
  const pressedElevation$0 = RoundRangeSliderThumbShape_pressedElevation;
  dart.setMethodSignature(slider_theme.RoundRangeSliderThumbShape, () => ({
    __proto__: dart.getMethods(slider_theme.RoundRangeSliderThumbShape.__proto__),
    getPreferredSize: dart.fnType(dart.legacy(ui.Size), [dart.legacy(core.bool), dart.legacy(core.bool)]),
    paint: dart.fnType(dart.void, [dart.legacy(object.PaintingContext), dart.legacy(ui.Offset)], {activationAnimation: dart.legacy(animation.Animation$(dart.legacy(core.double))), enableAnimation: dart.legacy(animation.Animation$(dart.legacy(core.double))), isDiscrete: dart.legacy(core.bool), isEnabled: dart.legacy(core.bool), isOnTop: dart.legacy(core.bool), isPressed: dart.legacy(core.bool), sliderTheme: dart.legacy(slider_theme.SliderThemeData), textDirection: dart.legacy(ui.TextDirection), thumb: dart.legacy(slider_theme.Thumb)}, {})
  }));
  dart.setGetterSignature(slider_theme.RoundRangeSliderThumbShape, () => ({
    __proto__: dart.getGetters(slider_theme.RoundRangeSliderThumbShape.__proto__),
    [_disabledThumbRadius]: dart.legacy(core.double)
  }));
  dart.setLibraryUri(slider_theme.RoundRangeSliderThumbShape, L49);
  dart.setFieldSignature(slider_theme.RoundRangeSliderThumbShape, () => ({
    __proto__: dart.getFields(slider_theme.RoundRangeSliderThumbShape.__proto__),
    enabledThumbRadius: dart.finalFieldType(dart.legacy(core.double)),
    disabledThumbRadius: dart.finalFieldType(dart.legacy(core.double)),
    elevation: dart.finalFieldType(dart.legacy(core.double)),
    pressedElevation: dart.finalFieldType(dart.legacy(core.double))
  }));
  slider_theme.RoundSliderOverlayShape = class RoundSliderOverlayShape extends slider_theme.SliderComponentShape {
    get overlayRadius() {
      return this[overlayRadius$];
    }
    set overlayRadius(value) {
      super.overlayRadius = value;
    }
    getPreferredSize(isEnabled, isDiscrete) {
      return new ui.Size.fromRadius(this.overlayRadius);
    }
    paint(context, center, opts) {
      let t6;
      let activationAnimation = opts && 'activationAnimation' in opts ? opts.activationAnimation : null;
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : false;
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      if (!(context != null)) dart.assertFailed(null, L48, 2582, 12, "context != null");
      if (!(center != null)) dart.assertFailed(null, L48, 2583, 12, "center != null");
      if (!(activationAnimation != null)) dart.assertFailed(null, L48, 2584, 12, "activationAnimation != null");
      if (!(enableAnimation != null)) dart.assertFailed(null, L48, 2585, 12, "enableAnimation != null");
      if (!(labelPainter != null)) dart.assertFailed(null, L48, 2586, 12, "labelPainter != null");
      if (!(parentBox != null)) dart.assertFailed(null, L48, 2587, 12, "parentBox != null");
      if (!(sliderTheme != null)) dart.assertFailed(null, L48, 2588, 12, "sliderTheme != null");
      if (!(textDirection != null)) dart.assertFailed(null, L48, 2589, 12, "textDirection != null");
      if (!(value != null)) dart.assertFailed(null, L48, 2590, 12, "value != null");
      let canvas = context.canvas;
      let radiusTween = new (TweenOfdoubleL()).new({begin: 0.0, end: this.overlayRadius});
      canvas.drawCircle(center, radiusTween.evaluate(activationAnimation), (t6 = ui.Paint.new(), (() => {
        t6.color = sliderTheme.overlayColor;
        return t6;
      })()));
    }
  };
  (slider_theme.RoundSliderOverlayShape.new = function(opts) {
    let overlayRadius = opts && 'overlayRadius' in opts ? opts.overlayRadius : 24;
    this[overlayRadius$] = overlayRadius;
    slider_theme.RoundSliderOverlayShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.RoundSliderOverlayShape.prototype;
  dart.addTypeTests(slider_theme.RoundSliderOverlayShape);
  dart.addTypeCaches(slider_theme.RoundSliderOverlayShape);
  const overlayRadius$ = RoundSliderOverlayShape_overlayRadius;
  dart.setMethodSignature(slider_theme.RoundSliderOverlayShape, () => ({
    __proto__: dart.getMethods(slider_theme.RoundSliderOverlayShape.__proto__),
    getPreferredSize: dart.fnType(dart.legacy(ui.Size), [dart.legacy(core.bool), dart.legacy(core.bool)]),
    paint: dart.fnType(dart.void, [dart.legacy(object.PaintingContext), dart.legacy(ui.Offset)], {activationAnimation: dart.legacy(animation.Animation$(dart.legacy(core.double))), enableAnimation: dart.legacy(animation.Animation$(dart.legacy(core.double))), isDiscrete: dart.legacy(core.bool), labelPainter: dart.legacy(text_painter.TextPainter), parentBox: dart.legacy(box.RenderBox), sizeWithOverflow: dart.legacy(ui.Size), sliderTheme: dart.legacy(slider_theme.SliderThemeData), textDirection: dart.legacy(ui.TextDirection), textScaleFactor: dart.legacy(core.double), value: dart.legacy(core.double)}, {})
  }));
  dart.setLibraryUri(slider_theme.RoundSliderOverlayShape, L49);
  dart.setFieldSignature(slider_theme.RoundSliderOverlayShape, () => ({
    __proto__: dart.getFields(slider_theme.RoundSliderOverlayShape.__proto__),
    overlayRadius: dart.finalFieldType(dart.legacy(core.double))
  }));
  var C1269;
  slider_theme.RectangularSliderValueIndicatorShape = class RectangularSliderValueIndicatorShape extends slider_theme.SliderComponentShape {
    getPreferredSize(isEnabled, isDiscrete, opts) {
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      if (!(labelPainter != null)) dart.assertFailed(null, L48, 2629, 13, "labelPainter != null");
      if (!(textScaleFactor != null && dart.notNull(textScaleFactor) >= 0)) dart.assertFailed(null, L48, 2630, 13, "textScaleFactor != null && textScaleFactor >= 0");
      return slider_theme.RectangularSliderValueIndicatorShape._pathPainter.getPreferredSize(isEnabled, isDiscrete, labelPainter, textScaleFactor);
    }
    paint(context, center, opts) {
      let activationAnimation = opts && 'activationAnimation' in opts ? opts.activationAnimation : null;
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : null;
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      let canvas = context.canvas;
      let scale = activationAnimation.value;
      slider_theme.RectangularSliderValueIndicatorShape._pathPainter.paint({parentBox: parentBox, canvas: canvas, center: center, scale: scale, labelPainter: labelPainter, textScaleFactor: textScaleFactor, sizeWithOverflow: sizeWithOverflow, backgroundPaintColor: sliderTheme.valueIndicatorColor});
    }
  };
  (slider_theme.RectangularSliderValueIndicatorShape.new = function() {
    slider_theme.RectangularSliderValueIndicatorShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.RectangularSliderValueIndicatorShape.prototype;
  dart.addTypeTests(slider_theme.RectangularSliderValueIndicatorShape);
  dart.addTypeCaches(slider_theme.RectangularSliderValueIndicatorShape);
  dart.setMethodSignature(slider_theme.RectangularSliderValueIndicatorShape, () => ({
    __proto__: dart.getMethods(slider_theme.RectangularSliderValueIndicatorShape.__proto__),
    getPreferredSize: dart.fnType(dart.legacy(ui.Size), [dart.legacy(core.bool), dart.legacy(core.bool)], {labelPainter: dart.legacy(text_painter.TextPainter), textScaleFactor: dart.legacy(core.double)}, {}),
    paint: dart.fnType(dart.void, [dart.legacy(object.PaintingContext), dart.legacy(ui.Offset)], {activationAnimation: dart.legacy(animation.Animation$(dart.legacy(core.double))), enableAnimation: dart.legacy(animation.Animation$(dart.legacy(core.double))), isDiscrete: dart.legacy(core.bool), labelPainter: dart.legacy(text_painter.TextPainter), parentBox: dart.legacy(box.RenderBox), sizeWithOverflow: dart.legacy(ui.Size), sliderTheme: dart.legacy(slider_theme.SliderThemeData), textDirection: dart.legacy(ui.TextDirection), textScaleFactor: dart.legacy(core.double), value: dart.legacy(core.double)}, {})
  }));
  dart.setLibraryUri(slider_theme.RectangularSliderValueIndicatorShape, L49);
  dart.defineLazy(slider_theme.RectangularSliderValueIndicatorShape, {
    /*slider_theme.RectangularSliderValueIndicatorShape._pathPainter*/get _pathPainter() {
      return C1269 || CT.C1269;
    }
  }, true);
  slider_theme.RectangularRangeSliderValueIndicatorShape = class RectangularRangeSliderValueIndicatorShape extends slider_theme.RangeSliderValueIndicatorShape {
    getPreferredSize(isEnabled, isDiscrete, opts) {
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      if (!(labelPainter != null)) dart.assertFailed(null, L48, 2687, 12, "labelPainter != null");
      if (!(textScaleFactor != null && dart.notNull(textScaleFactor) >= 0)) dart.assertFailed(null, L48, 2688, 12, "textScaleFactor != null && textScaleFactor >= 0");
      return slider_theme.RectangularRangeSliderValueIndicatorShape._pathPainter.getPreferredSize(isEnabled, isDiscrete, labelPainter, textScaleFactor);
    }
    getHorizontalShift(opts) {
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let center = opts && 'center' in opts ? opts.center : null;
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      let activationAnimation = opts && 'activationAnimation' in opts ? opts.activationAnimation : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      return slider_theme.RectangularRangeSliderValueIndicatorShape._pathPainter.getHorizontalShift({parentBox: parentBox, center: center, labelPainter: labelPainter, textScaleFactor: textScaleFactor, sizeWithOverflow: sizeWithOverflow, scale: activationAnimation.value});
    }
    paint(context, center, opts) {
      let activationAnimation = opts && 'activationAnimation' in opts ? opts.activationAnimation : null;
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : null;
      let isOnTop = opts && 'isOnTop' in opts ? opts.isOnTop : null;
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let thumb = opts && 'thumb' in opts ? opts.thumb : null;
      let canvas = context.canvas;
      let scale = activationAnimation.value;
      slider_theme.RectangularRangeSliderValueIndicatorShape._pathPainter.paint({parentBox: parentBox, canvas: canvas, center: center, scale: scale, labelPainter: labelPainter, textScaleFactor: textScaleFactor, sizeWithOverflow: sizeWithOverflow, backgroundPaintColor: sliderTheme.valueIndicatorColor, strokePaintColor: dart.test(isOnTop) ? sliderTheme.overlappingShapeStrokeColor : null});
    }
  };
  (slider_theme.RectangularRangeSliderValueIndicatorShape.new = function() {
    slider_theme.RectangularRangeSliderValueIndicatorShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.RectangularRangeSliderValueIndicatorShape.prototype;
  dart.addTypeTests(slider_theme.RectangularRangeSliderValueIndicatorShape);
  dart.addTypeCaches(slider_theme.RectangularRangeSliderValueIndicatorShape);
  dart.setMethodSignature(slider_theme.RectangularRangeSliderValueIndicatorShape, () => ({
    __proto__: dart.getMethods(slider_theme.RectangularRangeSliderValueIndicatorShape.__proto__),
    getPreferredSize: dart.fnType(dart.legacy(ui.Size), [dart.legacy(core.bool), dart.legacy(core.bool)], {labelPainter: dart.legacy(text_painter.TextPainter), textScaleFactor: dart.legacy(core.double)}, {}),
    paint: dart.fnType(dart.void, [dart.legacy(object.PaintingContext), dart.legacy(ui.Offset)], {activationAnimation: dart.legacy(animation.Animation$(dart.legacy(core.double))), enableAnimation: dart.legacy(animation.Animation$(dart.legacy(core.double))), isDiscrete: dart.legacy(core.bool), isOnTop: dart.legacy(core.bool), labelPainter: dart.legacy(text_painter.TextPainter), parentBox: dart.legacy(box.RenderBox), sizeWithOverflow: dart.legacy(ui.Size), sliderTheme: dart.legacy(slider_theme.SliderThemeData), textDirection: dart.legacy(ui.TextDirection), textScaleFactor: dart.legacy(core.double), thumb: dart.legacy(slider_theme.Thumb), value: dart.legacy(core.double)}, {})
  }));
  dart.setLibraryUri(slider_theme.RectangularRangeSliderValueIndicatorShape, L49);
  dart.defineLazy(slider_theme.RectangularRangeSliderValueIndicatorShape, {
    /*slider_theme.RectangularRangeSliderValueIndicatorShape._pathPainter*/get _pathPainter() {
      return C1269 || CT.C1269;
    }
  }, true);
  var _upperRectangleWidth = dart.privateName(slider_theme, "_upperRectangleWidth");
  slider_theme._RectangularSliderValueIndicatorPathPainter = class _RectangularSliderValueIndicatorPathPainter extends core.Object {
    getPreferredSize(isEnabled, isDiscrete, labelPainter, textScaleFactor) {
      if (!(labelPainter != null)) dart.assertFailed(null, L48, 2761, 12, "labelPainter != null");
      return new ui.Size.new(this[_upperRectangleWidth](labelPainter, 1.0, textScaleFactor), dart.notNull(labelPainter.height) + 16);
    }
    getHorizontalShift(opts) {
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let center = opts && 'center' in opts ? opts.center : null;
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      let scale = opts && 'scale' in opts ? opts.scale : null;
      if (!!dart.test(sizeWithOverflow.isEmpty)) dart.assertFailed(null, L48, 2776, 12, "!sizeWithOverflow.isEmpty");
      let rectangleWidth = this[_upperRectangleWidth](labelPainter, scale, textScaleFactor);
      let globalCenter = parentBox.localToGlobal(center);
      let overflowLeft = math.max(doubleL(), 0.0, dart.notNull(rectangleWidth) / 2 - dart.notNull(globalCenter.dx) + 8);
      let overflowRight = math.max(doubleL(), 0.0, dart.notNull(rectangleWidth) / 2 - (dart.notNull(sizeWithOverflow.width) - dart.notNull(globalCenter.dx) - 8));
      if (dart.notNull(rectangleWidth) < dart.notNull(sizeWithOverflow.width)) {
        return overflowLeft - overflowRight;
      } else if (overflowLeft - overflowRight > 0) {
        return overflowLeft - 8 * dart.notNull(textScaleFactor);
      } else {
        return -overflowRight + 8 * dart.notNull(textScaleFactor);
      }
    }
    [_upperRectangleWidth](labelPainter, scale, textScaleFactor) {
      let unscaledWidth = math.max(doubleL(), 16 * dart.notNull(textScaleFactor), labelPainter.width) + 16 * 2;
      return unscaledWidth * dart.notNull(scale);
    }
    paint(opts) {
      let t6, t6$, t6$0;
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let canvas = opts && 'canvas' in opts ? opts.canvas : null;
      let center = opts && 'center' in opts ? opts.center : null;
      let scale = opts && 'scale' in opts ? opts.scale : null;
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      let backgroundPaintColor = opts && 'backgroundPaintColor' in opts ? opts.backgroundPaintColor : null;
      let strokePaintColor = opts && 'strokePaintColor' in opts ? opts.strokePaintColor : null;
      if (scale === 0.0) {
        return;
      }
      if (!!dart.test(sizeWithOverflow.isEmpty)) dart.assertFailed(null, L48, 2820, 12, "!sizeWithOverflow.isEmpty");
      let rectangleWidth = this[_upperRectangleWidth](labelPainter, scale, textScaleFactor);
      let horizontalShift = this.getHorizontalShift({parentBox: parentBox, center: center, labelPainter: labelPainter, textScaleFactor: textScaleFactor, sizeWithOverflow: sizeWithOverflow, scale: scale});
      let rectHeight = dart.notNull(labelPainter.height) + 16;
      let upperRect = new ui.Rect.fromLTWH(-dart.notNull(rectangleWidth) / 2 + dart.notNull(horizontalShift), -8 - rectHeight, rectangleWidth, rectHeight);
      let trianglePath = (t6 = ui.Path.new(), (() => {
        t6.lineTo(-8, -8);
        t6.lineTo(8, -8);
        t6.close();
        return t6;
      })());
      let fillPaint = (t6$ = ui.Paint.new(), (() => {
        t6$.color = backgroundPaintColor;
        return t6$;
      })());
      let upperRRect = new ui.RRect.fromRectAndRadius(upperRect, C261 || CT.C261);
      trianglePath.addRRect(upperRRect);
      canvas.save();
      canvas.translate(center.dx, dart.notNull(center.dy) - 14);
      canvas.scale(scale, scale);
      if (strokePaintColor != null) {
        let strokePaint = (t6$0 = ui.Paint.new(), (() => {
          t6$0.color = strokePaintColor;
          t6$0.strokeWidth = 1.0;
          t6$0.style = ui.PaintingStyle.stroke;
          return t6$0;
        })());
        canvas.drawPath(trianglePath, strokePaint);
      }
      canvas.drawPath(trianglePath, fillPaint);
      let bottomTipToUpperRectTranslateY = -16 / 2 - dart.notNull(upperRect.height);
      canvas.translate(0.0, bottomTipToUpperRectTranslateY);
      let boxCenter = new ui.Offset.new(horizontalShift, dart.notNull(upperRect.height) / 2);
      let halfLabelPainterOffset = new ui.Offset.new(dart.notNull(labelPainter.width) / 2, dart.notNull(labelPainter.height) / 2);
      let labelOffset = boxCenter['-'](halfLabelPainterOffset);
      labelPainter.paint(canvas, labelOffset);
      canvas.restore();
    }
  };
  (slider_theme._RectangularSliderValueIndicatorPathPainter.new = function() {
    ;
  }).prototype = slider_theme._RectangularSliderValueIndicatorPathPainter.prototype;
  dart.addTypeTests(slider_theme._RectangularSliderValueIndicatorPathPainter);
  dart.addTypeCaches(slider_theme._RectangularSliderValueIndicatorPathPainter);
  dart.setMethodSignature(slider_theme._RectangularSliderValueIndicatorPathPainter, () => ({
    __proto__: dart.getMethods(slider_theme._RectangularSliderValueIndicatorPathPainter.__proto__),
    getPreferredSize: dart.fnType(dart.legacy(ui.Size), [dart.legacy(core.bool), dart.legacy(core.bool), dart.legacy(text_painter.TextPainter), dart.legacy(core.double)]),
    getHorizontalShift: dart.fnType(dart.legacy(core.double), [], {center: dart.legacy(ui.Offset), labelPainter: dart.legacy(text_painter.TextPainter), parentBox: dart.legacy(box.RenderBox), scale: dart.legacy(core.double), sizeWithOverflow: dart.legacy(ui.Size), textScaleFactor: dart.legacy(core.double)}, {}),
    [_upperRectangleWidth]: dart.fnType(dart.legacy(core.double), [dart.legacy(text_painter.TextPainter), dart.legacy(core.double), dart.legacy(core.double)]),
    paint: dart.fnType(dart.void, [], {backgroundPaintColor: dart.legacy(ui.Color), canvas: dart.legacy(ui.Canvas), center: dart.legacy(ui.Offset), labelPainter: dart.legacy(text_painter.TextPainter), parentBox: dart.legacy(box.RenderBox), scale: dart.legacy(core.double), sizeWithOverflow: dart.legacy(ui.Size), strokePaintColor: dart.legacy(ui.Color), textScaleFactor: dart.legacy(core.double)}, {})
  }));
  dart.setLibraryUri(slider_theme._RectangularSliderValueIndicatorPathPainter, L49);
  dart.defineLazy(slider_theme._RectangularSliderValueIndicatorPathPainter, {
    /*slider_theme._RectangularSliderValueIndicatorPathPainter._triangleHeight*/get _triangleHeight() {
      return 8;
    },
    /*slider_theme._RectangularSliderValueIndicatorPathPainter._labelPadding*/get _labelPadding() {
      return 16;
    },
    /*slider_theme._RectangularSliderValueIndicatorPathPainter._preferredHeight*/get _preferredHeight() {
      return 32;
    },
    /*slider_theme._RectangularSliderValueIndicatorPathPainter._minLabelWidth*/get _minLabelWidth() {
      return 16;
    },
    /*slider_theme._RectangularSliderValueIndicatorPathPainter._bottomTipYOffset*/get _bottomTipYOffset() {
      return 14;
    },
    /*slider_theme._RectangularSliderValueIndicatorPathPainter._preferredHalfHeight*/get _preferredHalfHeight() {
      return 16;
    },
    /*slider_theme._RectangularSliderValueIndicatorPathPainter._upperRectRadius*/get _upperRectRadius() {
      return 4;
    }
  }, true);
  var C1270;
  slider_theme.PaddleSliderValueIndicatorShape = class PaddleSliderValueIndicatorShape extends slider_theme.SliderComponentShape {
    getPreferredSize(isEnabled, isDiscrete, opts) {
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      if (!(labelPainter != null)) dart.assertFailed(null, L48, 2892, 12, "labelPainter != null");
      if (!(textScaleFactor != null && dart.notNull(textScaleFactor) >= 0)) dart.assertFailed(null, L48, 2893, 12, "textScaleFactor != null && textScaleFactor >= 0");
      return slider_theme.PaddleSliderValueIndicatorShape._pathPainter.getPreferredSize(isEnabled, isDiscrete, labelPainter, textScaleFactor);
    }
    paint(context, center, opts) {
      let t6;
      let activationAnimation = opts && 'activationAnimation' in opts ? opts.activationAnimation : null;
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : null;
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      if (!(context != null)) dart.assertFailed(null, L48, 2912, 12, "context != null");
      if (!(center != null)) dart.assertFailed(null, L48, 2913, 12, "center != null");
      if (!(activationAnimation != null)) dart.assertFailed(null, L48, 2914, 12, "activationAnimation != null");
      if (!(enableAnimation != null)) dart.assertFailed(null, L48, 2915, 12, "enableAnimation != null");
      if (!(labelPainter != null)) dart.assertFailed(null, L48, 2916, 12, "labelPainter != null");
      if (!(parentBox != null)) dart.assertFailed(null, L48, 2917, 12, "parentBox != null");
      if (!(sliderTheme != null)) dart.assertFailed(null, L48, 2918, 12, "sliderTheme != null");
      if (!!dart.test(sizeWithOverflow.isEmpty)) dart.assertFailed(null, L48, 2919, 12, "!sizeWithOverflow.isEmpty");
      let enableColor = new tween.ColorTween.new({begin: sliderTheme.disabledThumbColor, end: sliderTheme.valueIndicatorColor});
      slider_theme.PaddleSliderValueIndicatorShape._pathPainter.paint(parentBox, context.canvas, center, (t6 = ui.Paint.new(), (() => {
        t6.color = enableColor.evaluate(enableAnimation);
        return t6;
      })()), activationAnimation.value, labelPainter, textScaleFactor, sizeWithOverflow, null);
    }
  };
  (slider_theme.PaddleSliderValueIndicatorShape.new = function() {
    slider_theme.PaddleSliderValueIndicatorShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.PaddleSliderValueIndicatorShape.prototype;
  dart.addTypeTests(slider_theme.PaddleSliderValueIndicatorShape);
  dart.addTypeCaches(slider_theme.PaddleSliderValueIndicatorShape);
  dart.setMethodSignature(slider_theme.PaddleSliderValueIndicatorShape, () => ({
    __proto__: dart.getMethods(slider_theme.PaddleSliderValueIndicatorShape.__proto__),
    getPreferredSize: dart.fnType(dart.legacy(ui.Size), [dart.legacy(core.bool), dart.legacy(core.bool)], {labelPainter: dart.legacy(text_painter.TextPainter), textScaleFactor: dart.legacy(core.double)}, {}),
    paint: dart.fnType(dart.void, [dart.legacy(object.PaintingContext), dart.legacy(ui.Offset)], {activationAnimation: dart.legacy(animation.Animation$(dart.legacy(core.double))), enableAnimation: dart.legacy(animation.Animation$(dart.legacy(core.double))), isDiscrete: dart.legacy(core.bool), labelPainter: dart.legacy(text_painter.TextPainter), parentBox: dart.legacy(box.RenderBox), sizeWithOverflow: dart.legacy(ui.Size), sliderTheme: dart.legacy(slider_theme.SliderThemeData), textDirection: dart.legacy(ui.TextDirection), textScaleFactor: dart.legacy(core.double), value: dart.legacy(core.double)}, {})
  }));
  dart.setLibraryUri(slider_theme.PaddleSliderValueIndicatorShape, L49);
  dart.defineLazy(slider_theme.PaddleSliderValueIndicatorShape, {
    /*slider_theme.PaddleSliderValueIndicatorShape._pathPainter*/get _pathPainter() {
      return C1270 || CT.C1270;
    }
  }, true);
  slider_theme.PaddleRangeSliderValueIndicatorShape = class PaddleRangeSliderValueIndicatorShape extends slider_theme.RangeSliderValueIndicatorShape {
    getPreferredSize(isEnabled, isDiscrete, opts) {
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      if (!(labelPainter != null)) dart.assertFailed(null, L48, 2962, 12, "labelPainter != null");
      if (!(textScaleFactor != null && dart.notNull(textScaleFactor) >= 0)) dart.assertFailed(null, L48, 2963, 12, "textScaleFactor != null && textScaleFactor >= 0");
      return slider_theme.PaddleRangeSliderValueIndicatorShape._pathPainter.getPreferredSize(isEnabled, isDiscrete, labelPainter, textScaleFactor);
    }
    getHorizontalShift(opts) {
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let center = opts && 'center' in opts ? opts.center : null;
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      let activationAnimation = opts && 'activationAnimation' in opts ? opts.activationAnimation : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      return slider_theme.PaddleRangeSliderValueIndicatorShape._pathPainter.getHorizontalShift({parentBox: parentBox, center: center, labelPainter: labelPainter, scale: activationAnimation.value, textScaleFactor: textScaleFactor, sizeWithOverflow: sizeWithOverflow});
    }
    paint(context, center, opts) {
      let t6;
      let activationAnimation = opts && 'activationAnimation' in opts ? opts.activationAnimation : null;
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : null;
      let isOnTop = opts && 'isOnTop' in opts ? opts.isOnTop : false;
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let thumb = opts && 'thumb' in opts ? opts.thumb : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      if (!(context != null)) dart.assertFailed(null, L48, 3003, 12, "context != null");
      if (!(center != null)) dart.assertFailed(null, L48, 3004, 12, "center != null");
      if (!(activationAnimation != null)) dart.assertFailed(null, L48, 3005, 12, "activationAnimation != null");
      if (!(enableAnimation != null)) dart.assertFailed(null, L48, 3006, 12, "enableAnimation != null");
      if (!(labelPainter != null)) dart.assertFailed(null, L48, 3007, 12, "labelPainter != null");
      if (!(parentBox != null)) dart.assertFailed(null, L48, 3008, 12, "parentBox != null");
      if (!(sliderTheme != null)) dart.assertFailed(null, L48, 3009, 12, "sliderTheme != null");
      if (!!dart.test(sizeWithOverflow.isEmpty)) dart.assertFailed(null, L48, 3010, 12, "!sizeWithOverflow.isEmpty");
      let enableColor = new tween.ColorTween.new({begin: sliderTheme.disabledThumbColor, end: sliderTheme.valueIndicatorColor});
      slider_theme.PaddleRangeSliderValueIndicatorShape._pathPainter.paint(parentBox, context.canvas, center, (t6 = ui.Paint.new(), (() => {
        t6.color = enableColor.evaluate(enableAnimation);
        return t6;
      })()), activationAnimation.value, labelPainter, textScaleFactor, sizeWithOverflow, dart.test(isOnTop) ? sliderTheme.overlappingShapeStrokeColor : null);
    }
  };
  (slider_theme.PaddleRangeSliderValueIndicatorShape.new = function() {
    slider_theme.PaddleRangeSliderValueIndicatorShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.PaddleRangeSliderValueIndicatorShape.prototype;
  dart.addTypeTests(slider_theme.PaddleRangeSliderValueIndicatorShape);
  dart.addTypeCaches(slider_theme.PaddleRangeSliderValueIndicatorShape);
  dart.setMethodSignature(slider_theme.PaddleRangeSliderValueIndicatorShape, () => ({
    __proto__: dart.getMethods(slider_theme.PaddleRangeSliderValueIndicatorShape.__proto__),
    getPreferredSize: dart.fnType(dart.legacy(ui.Size), [dart.legacy(core.bool), dart.legacy(core.bool)], {labelPainter: dart.legacy(text_painter.TextPainter), textScaleFactor: dart.legacy(core.double)}, {}),
    paint: dart.fnType(dart.void, [dart.legacy(object.PaintingContext), dart.legacy(ui.Offset)], {activationAnimation: dart.legacy(animation.Animation$(dart.legacy(core.double))), enableAnimation: dart.legacy(animation.Animation$(dart.legacy(core.double))), isDiscrete: dart.legacy(core.bool), isOnTop: dart.legacy(core.bool), labelPainter: dart.legacy(text_painter.TextPainter), parentBox: dart.legacy(box.RenderBox), sizeWithOverflow: dart.legacy(ui.Size), sliderTheme: dart.legacy(slider_theme.SliderThemeData), textDirection: dart.legacy(ui.TextDirection), textScaleFactor: dart.legacy(core.double), thumb: dart.legacy(slider_theme.Thumb), value: dart.legacy(core.double)}, {})
  }));
  dart.setLibraryUri(slider_theme.PaddleRangeSliderValueIndicatorShape, L49);
  dart.defineLazy(slider_theme.PaddleRangeSliderValueIndicatorShape, {
    /*slider_theme.PaddleRangeSliderValueIndicatorShape._pathPainter*/get _pathPainter() {
      return C1270 || CT.C1270;
    }
  }, true);
  var _getIdealOffset = dart.privateName(slider_theme, "_getIdealOffset");
  var C1271;
  var C1272;
  slider_theme._PaddleSliderValueIndicatorPathPainter = class _PaddleSliderValueIndicatorPathPainter extends core.Object {
    getPreferredSize(isEnabled, isDiscrete, labelPainter, textScaleFactor) {
      if (!(labelPainter != null)) dart.assertFailed(null, L48, 3076, 12, "labelPainter != null");
      if (!(textScaleFactor != null && dart.notNull(textScaleFactor) >= 0)) dart.assertFailed(null, L48, 3077, 12, "textScaleFactor != null && textScaleFactor >= 0");
      let width = math.max(doubleL(), 16 * dart.notNull(textScaleFactor), labelPainter.width) + 8 * 2 * dart.notNull(textScaleFactor);
      return new ui.Size.new(width, 66 * dart.notNull(textScaleFactor));
    }
    static _addArc(path, center, radius, startAngle, endAngle) {
      if (!dart.test(center.isFinite)) dart.assertFailed(null, L48, 3085, 12, "center.isFinite");
      let arcRect = new ui.Rect.fromCircle({center: center, radius: radius});
      path.arcTo(arcRect, startAngle, dart.notNull(endAngle) - dart.notNull(startAngle), false);
    }
    getHorizontalShift(opts) {
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let center = opts && 'center' in opts ? opts.center : null;
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      let scale = opts && 'scale' in opts ? opts.scale : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      if (!!dart.test(sizeWithOverflow.isEmpty)) dart.assertFailed(null, L48, 3098, 12, "!sizeWithOverflow.isEmpty");
      let inverseTextScale = textScaleFactor !== 0 ? 1.0 / dart.notNull(textScaleFactor) : 0.0;
      let labelHalfWidth = dart.notNull(labelPainter.width) / 2.0;
      let halfWidthNeeded = math.max(doubleL(), 0.0, inverseTextScale * labelHalfWidth - (16 - 8));
      let shift = this[_getIdealOffset](parentBox, halfWidthNeeded, dart.notNull(textScaleFactor) * dart.notNull(scale), center, sizeWithOverflow.width);
      return dart.notNull(shift) * dart.notNull(textScaleFactor);
    }
    [_getIdealOffset](parentBox, halfWidthNeeded, scale, center, widthWithOverflow) {
      let topLobeRect = new ui.Rect.fromLTWH(-16 - dart.notNull(halfWidthNeeded), -16 - 40, 2.0 * (16 + dart.notNull(halfWidthNeeded)), 2.0 * 16);
      let topLeft = topLobeRect.topLeft['*'](scale)['+'](center);
      let bottomRight = topLobeRect.bottomRight['*'](scale)['+'](center);
      let shift = 0.0;
      if (dart.notNull(topLeft.dx) < 8) {
        shift = 8 - dart.notNull(topLeft.dx);
      }
      let endGlobal = widthWithOverflow;
      if (dart.notNull(bottomRight.dx) > dart.notNull(endGlobal) - 8) {
        shift = dart.notNull(endGlobal) - 8 - dart.notNull(bottomRight.dx);
      }
      shift = scale === 0.0 ? 0.0 : shift / dart.notNull(scale);
      if (shift < 0.0) {
        shift = math.max(doubleL(), shift, -dart.notNull(halfWidthNeeded));
      } else {
        shift = math.min(doubleL(), shift, halfWidthNeeded);
      }
      return shift;
    }
    paint(parentBox, canvas, center, paint, scale, labelPainter, textScaleFactor, sizeWithOverflow, strokePaintColor) {
      let t6, t6$;
      if (scale === 0.0) {
        return;
      }
      if (!!dart.test(sizeWithOverflow.isEmpty)) dart.assertFailed(null, L48, 3167, 12, "!sizeWithOverflow.isEmpty");
      let overallScale = dart.notNull(scale) * dart.notNull(textScaleFactor);
      let inverseTextScale = textScaleFactor !== 0 ? 1.0 / dart.notNull(textScaleFactor) : 0.0;
      let labelHalfWidth = dart.notNull(labelPainter.width) / 2.0;
      canvas.save();
      canvas.translate(center.dx, center.dy);
      canvas.scale(overallScale, overallScale);
      let bottomNeckTriangleHypotenuse = 4.5 + 10 / overallScale;
      let rightBottomNeckCenterY = -math.sqrt(math.pow(bottomNeckTriangleHypotenuse, 2) - math.pow(6, 2));
      let rightBottomNeckAngleEnd = 3.141592653589793 + math.atan(rightBottomNeckCenterY / 6);
      let path = (t6 = ui.Path.new(), (() => {
        t6.moveTo(3 / 2, rightBottomNeckCenterY);
        return t6;
      })());
      slider_theme._PaddleSliderValueIndicatorPathPainter._addArc(path, new ui.Offset.new(6, rightBottomNeckCenterY), 4.5, 3.141592653589793, rightBottomNeckAngleEnd);
      slider_theme._PaddleSliderValueIndicatorPathPainter._addArc(path, ui.Offset.zero, 10 / overallScale, rightBottomNeckAngleEnd - 3.141592653589793, 2 * 3.141592653589793 - rightBottomNeckAngleEnd);
      slider_theme._PaddleSliderValueIndicatorPathPainter._addArc(path, new ui.Offset.new(-6, rightBottomNeckCenterY), 4.5, 3.141592653589793 - rightBottomNeckAngleEnd, 0.0);
      let halfWidthNeeded = math.max(doubleL(), 0.0, inverseTextScale * labelHalfWidth - (16 - 8));
      let shift = this[_getIdealOffset](parentBox, halfWidthNeeded, overallScale, center, sizeWithOverflow.width);
      let leftWidthNeeded = halfWidthNeeded - dart.notNull(shift);
      let rightWidthNeeded = halfWidthNeeded + dart.notNull(shift);
      let leftAmount = math.max(doubleL(), 0.0, math.min(doubleL(), 1.0, leftWidthNeeded / 14.5));
      let rightAmount = math.max(doubleL(), 0.0, math.min(doubleL(), 1.0, rightWidthNeeded / 14.5));
      let leftTheta = (1.0 - leftAmount) * 0.5235987755982988;
      let rightTheta = (1.0 - rightAmount) * 0.5235987755982988;
      let leftTopNeckCenter = new ui.Offset.new(-14.5, dart.notNull(slider_theme._PaddleSliderValueIndicatorPathPainter._topLobeCenter.dy) + math.cos(leftTheta) * 29);
      let neckRightCenter = new ui.Offset.new(14.5, dart.notNull(slider_theme._PaddleSliderValueIndicatorPathPainter._topLobeCenter.dy) + math.cos(rightTheta) * 29);
      let leftNeckArcAngle = 1.5707963267948966 - leftTheta;
      let rightNeckArcAngle = 3.141592653589793 + 1.5707963267948966 - rightTheta;
      let neckStretchBaseline = math.max(doubleL(), 0.0, rightBottomNeckCenterY - math.max(numL(), leftTopNeckCenter.dy, neckRightCenter.dy));
      let t = math.pow(inverseTextScale, 3.0);
      let stretch = (neckStretchBaseline * t)[$clamp](0.0, 10.0 * neckStretchBaseline);
      let neckStretch = new ui.Offset.new(0.0, neckStretchBaseline - stretch);
      if (!(!false || dart.test(dart.fn(() => {
        let t6;
        let leftCenter = slider_theme._PaddleSliderValueIndicatorPathPainter._topLobeCenter['-'](new ui.Offset.new(leftWidthNeeded, 0.0))['+'](neckStretch);
        let rightCenter = slider_theme._PaddleSliderValueIndicatorPathPainter._topLobeCenter['+'](new ui.Offset.new(rightWidthNeeded, 0.0))['+'](neckStretch);
        let valueRect = new ui.Rect.fromLTRB(dart.notNull(leftCenter.dx) - 16, dart.notNull(leftCenter.dy) - 16, dart.notNull(rightCenter.dx) + 16, dart.notNull(rightCenter.dy) + 16);
        let outlinePaint = (t6 = ui.Paint.new(), (() => {
          t6.color = C1271 || CT.C1271;
          t6.style = ui.PaintingStyle.stroke;
          t6.strokeWidth = 1.0;
          return t6;
        })());
        canvas.drawRect(valueRect, outlinePaint);
        return true;
      }, VoidToboolL())()))) dart.assertFailed(null, L48, 3244, 12, "!_debuggingLabelLocation || () {\r\n      final Offset leftCenter = _topLobeCenter - Offset(leftWidthNeeded, 0.0) + neckStretch;\r\n      final Offset rightCenter = _topLobeCenter + Offset(rightWidthNeeded, 0.0) + neckStretch;\r\n      final Rect valueRect = Rect.fromLTRB(\r\n        leftCenter.dx - _topLobeRadius,\r\n        leftCenter.dy - _topLobeRadius,\r\n        rightCenter.dx + _topLobeRadius,\r\n        rightCenter.dy + _topLobeRadius,\r\n      );\r\n      final Paint outlinePaint = Paint()\r\n        ..color = const Color(0xffff0000)\r\n        ..style = PaintingStyle.stroke\r\n        ..strokeWidth = 1.0;\r\n      canvas.drawRect(valueRect, outlinePaint);\r\n      return true;\r\n    }()");
      slider_theme._PaddleSliderValueIndicatorPathPainter._addArc(path, leftTopNeckCenter['+'](neckStretch), 13, 0.0, -leftNeckArcAngle);
      slider_theme._PaddleSliderValueIndicatorPathPainter._addArc(path, slider_theme._PaddleSliderValueIndicatorPathPainter._topLobeCenter['-'](new ui.Offset.new(leftWidthNeeded, 0.0))['+'](neckStretch), 16, 1.5707963267948966 + leftTheta, 4.71238898038469);
      slider_theme._PaddleSliderValueIndicatorPathPainter._addArc(path, slider_theme._PaddleSliderValueIndicatorPathPainter._topLobeCenter['+'](new ui.Offset.new(rightWidthNeeded, 0.0))['+'](neckStretch), 16, 4.71238898038469, 4.71238898038469 + 3.141592653589793 - rightTheta);
      slider_theme._PaddleSliderValueIndicatorPathPainter._addArc(path, neckRightCenter['+'](neckStretch), 13, rightNeckArcAngle, 3.141592653589793);
      if (strokePaintColor != null) {
        let strokePaint = (t6$ = ui.Paint.new(), (() => {
          t6$.color = strokePaintColor;
          t6$.strokeWidth = 1.0;
          t6$.style = ui.PaintingStyle.stroke;
          return t6$;
        })());
        canvas.drawPath(path, strokePaint);
      }
      canvas.drawPath(path, paint);
      canvas.save();
      canvas.translate(shift, -40 + dart.notNull(neckStretch.dy));
      canvas.scale(inverseTextScale, inverseTextScale);
      labelPainter.paint(canvas, ui.Offset.zero['-'](new ui.Offset.new(labelHalfWidth, dart.notNull(labelPainter.height) / 2.0)));
      canvas.restore();
      canvas.restore();
    }
  };
  (slider_theme._PaddleSliderValueIndicatorPathPainter.new = function() {
    ;
  }).prototype = slider_theme._PaddleSliderValueIndicatorPathPainter.prototype;
  dart.addTypeTests(slider_theme._PaddleSliderValueIndicatorPathPainter);
  dart.addTypeCaches(slider_theme._PaddleSliderValueIndicatorPathPainter);
  dart.setMethodSignature(slider_theme._PaddleSliderValueIndicatorPathPainter, () => ({
    __proto__: dart.getMethods(slider_theme._PaddleSliderValueIndicatorPathPainter.__proto__),
    getPreferredSize: dart.fnType(dart.legacy(ui.Size), [dart.legacy(core.bool), dart.legacy(core.bool), dart.legacy(text_painter.TextPainter), dart.legacy(core.double)]),
    getHorizontalShift: dart.fnType(dart.legacy(core.double), [], {center: dart.legacy(ui.Offset), labelPainter: dart.legacy(text_painter.TextPainter), parentBox: dart.legacy(box.RenderBox), scale: dart.legacy(core.double), sizeWithOverflow: dart.legacy(ui.Size), textScaleFactor: dart.legacy(core.double)}, {}),
    [_getIdealOffset]: dart.fnType(dart.legacy(core.double), [dart.legacy(box.RenderBox), dart.legacy(core.double), dart.legacy(core.double), dart.legacy(ui.Offset), dart.legacy(core.double)]),
    paint: dart.fnType(dart.void, [dart.legacy(box.RenderBox), dart.legacy(ui.Canvas), dart.legacy(ui.Offset), dart.legacy(ui.Paint), dart.legacy(core.double), dart.legacy(text_painter.TextPainter), dart.legacy(core.double), dart.legacy(ui.Size), dart.legacy(ui.Color)])
  }));
  dart.setLibraryUri(slider_theme._PaddleSliderValueIndicatorPathPainter, L49);
  dart.defineLazy(slider_theme._PaddleSliderValueIndicatorPathPainter, {
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._topLobeRadius*/get _topLobeRadius() {
      return 16;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._minLabelWidth*/get _minLabelWidth() {
      return 16;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._bottomLobeRadius*/get _bottomLobeRadius() {
      return 10;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._labelPadding*/get _labelPadding() {
      return 8;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._distanceBetweenTopBottomCenters*/get _distanceBetweenTopBottomCenters() {
      return 40;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._middleNeckWidth*/get _middleNeckWidth() {
      return 3;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._bottomNeckRadius*/get _bottomNeckRadius() {
      return 4.5;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._neckTriangleBase*/get _neckTriangleBase() {
      return 14.5;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._rightBottomNeckCenterX*/get _rightBottomNeckCenterX() {
      return 6;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._rightBottomNeckAngleStart*/get _rightBottomNeckAngleStart() {
      return 3.141592653589793;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._topLobeCenter*/get _topLobeCenter() {
      return C1272 || CT.C1272;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._topNeckRadius*/get _topNeckRadius() {
      return 13;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._neckTriangleHypotenuse*/get _neckTriangleHypotenuse() {
      return 29;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._twoSeventyDegrees*/get _twoSeventyDegrees() {
      return 4.71238898038469;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._ninetyDegrees*/get _ninetyDegrees() {
      return 1.5707963267948966;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._thirtyDegrees*/get _thirtyDegrees() {
      return 0.5235987755982988;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._preferredHeight*/get _preferredHeight() {
      return 66;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._debuggingLabelLocation*/get _debuggingLabelLocation() {
      return false;
    }
  }, true);
  var start$ = dart.privateName(slider_theme, "RangeValues.start");
  var end$ = dart.privateName(slider_theme, "RangeValues.end");
  slider_theme.RangeValues = class RangeValues extends core.Object {
    get start() {
      return this[start$];
    }
    set start(value) {
      super.start = value;
    }
    get end() {
      return this[end$];
    }
    set end(value) {
      super.end = value;
    }
    _equals(other) {
      if (other == null) return false;
      if (!dart.equals(dart.runtimeType(other), this.runtimeType)) return false;
      return RangeValuesL().is(other) && other.start == this.start && other.end == this.end;
    }
    get hashCode() {
      return ui.hashValues(this.start, this.end);
    }
    toString() {
      return dart.str(object$.objectRuntimeType(this, "RangeValues")) + "(" + dart.str(this.start) + ", " + dart.str(this.end) + ")";
    }
  };
  (slider_theme.RangeValues.new = function(start, end) {
    this[start$] = start;
    this[end$] = end;
    ;
  }).prototype = slider_theme.RangeValues.prototype;
  dart.addTypeTests(slider_theme.RangeValues);
  dart.addTypeCaches(slider_theme.RangeValues);
  dart.setMethodSignature(slider_theme.RangeValues, () => ({
    __proto__: dart.getMethods(slider_theme.RangeValues.__proto__),
    _equals: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    [$_equals]: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setGetterSignature(slider_theme.RangeValues, () => ({
    __proto__: dart.getGetters(slider_theme.RangeValues.__proto__),
    hashCode: dart.legacy(core.int),
    [$hashCode]: dart.legacy(core.int)
  }));
  dart.setLibraryUri(slider_theme.RangeValues, L49);
  dart.setFieldSignature(slider_theme.RangeValues, () => ({
    __proto__: dart.getFields(slider_theme.RangeValues.__proto__),
    start: dart.finalFieldType(dart.legacy(core.double)),
    end: dart.finalFieldType(dart.legacy(core.double))
  }));
  dart.defineExtensionMethods(slider_theme.RangeValues, ['_equals', 'toString']);
  dart.defineExtensionAccessors(slider_theme.RangeValues, ['hashCode']);
  var start$0 = dart.privateName(slider_theme, "RangeLabels.start");
  var end$0 = dart.privateName(slider_theme, "RangeLabels.end");
  slider_theme.RangeLabels = class RangeLabels extends core.Object {
    get start() {
      return this[start$0];
    }
    set start(value) {
      super.start = value;
    }
    get end() {
      return this[end$0];
    }
    set end(value) {
      super.end = value;
    }
    _equals(other) {
      if (other == null) return false;
      if (!dart.equals(dart.runtimeType(other), this.runtimeType)) return false;
      return RangeLabelsL().is(other) && other.start == this.start && other.end == this.end;
    }
    get hashCode() {
      return ui.hashValues(this.start, this.end);
    }
    toString() {
      return dart.str(object$.objectRuntimeType(this, "RangeLabels")) + "(" + dart.str(this.start) + ", " + dart.str(this.end) + ")";
    }
  };
  (slider_theme.RangeLabels.new = function(start, end) {
    this[start$0] = start;
    this[end$0] = end;
    ;
  }).prototype = slider_theme.RangeLabels.prototype;
  dart.addTypeTests(slider_theme.RangeLabels);
  dart.addTypeCaches(slider_theme.RangeLabels);
  dart.setMethodSignature(slider_theme.RangeLabels, () => ({
    __proto__: dart.getMethods(slider_theme.RangeLabels.__proto__),
    _equals: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    [$_equals]: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setGetterSignature(slider_theme.RangeLabels, () => ({
    __proto__: dart.getGetters(slider_theme.RangeLabels.__proto__),
    hashCode: dart.legacy(core.int),
    [$hashCode]: dart.legacy(core.int)
  }));
  dart.setLibraryUri(slider_theme.RangeLabels, L49);
  dart.setFieldSignature(slider_theme.RangeLabels, () => ({
    __proto__: dart.getFields(slider_theme.RangeLabels.__proto__),
    start: dart.finalFieldType(dart.legacy(core.String)),
    end: dart.finalFieldType(dart.legacy(core.String))
  }));
  dart.defineExtensionMethods(slider_theme.RangeLabels, ['_equals', 'toString']);
  dart.defineExtensionAccessors(slider_theme.RangeLabels, ['hashCode']);
  var color$8 = dart.privateName(popup_menu_theme, "PopupMenuThemeData.color");
  var shape$12 = dart.privateName(popup_menu_theme, "PopupMenuThemeData.shape");
  var elevation$10 = dart.privateName(popup_menu_theme, "PopupMenuThemeData.elevation");
  var textStyle$4 = dart.privateName(popup_menu_theme, "PopupMenuThemeData.textStyle");
  const Object_Diagnosticable$36$5 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$5.new = function() {
  }).prototype = Object_Diagnosticable$36$5.prototype;
  dart.applyMixin(Object_Diagnosticable$36$5, diagnostics.Diagnosticable);
  popup_menu_theme.PopupMenuThemeData = class PopupMenuThemeData extends Object_Diagnosticable$36$5 {
    get color() {
      return this[color$8];
    }
    set color(value) {
      super.color = value;
    }
    get shape() {
      return this[shape$12];
    }
    set shape(value) {
      super.shape = value;
    }
    get elevation() {
      return this[elevation$10];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get textStyle() {
      return this[textStyle$4];
    }
    set textStyle(value) {
      super.textStyle = value;
    }
    copyWith(opts) {
      let t6, t6$, t6$0, t6$1;
      let color = opts && 'color' in opts ? opts.color : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      return new popup_menu_theme.PopupMenuThemeData.new({color: (t6 = color, t6 == null ? this.color : t6), shape: (t6$ = shape, t6$ == null ? this.shape : t6$), elevation: (t6$0 = elevation, t6$0 == null ? this.elevation : t6$0), textStyle: (t6$1 = textStyle, t6$1 == null ? this.textStyle : t6$1)});
    }
    static lerp(a, b, t) {
      let t6, t6$, t6$0, t6$1, t6$2, t6$3, t6$4, t6$5;
      if (!(t != null)) dart.assertFailed(null, L50, 78, 12, "t != null");
      if (a == null && b == null) return null;
      return new popup_menu_theme.PopupMenuThemeData.new({color: ui.Color.lerp((t6 = a, t6 == null ? null : t6.color), (t6$ = b, t6$ == null ? null : t6$.color), t), shape: borders.ShapeBorder.lerp((t6$0 = a, t6$0 == null ? null : t6$0.shape), (t6$1 = b, t6$1 == null ? null : t6$1.shape), t), elevation: ui.lerpDouble((t6$2 = a, t6$2 == null ? null : t6$2.elevation), (t6$3 = b, t6$3 == null ? null : t6$3.elevation), t), textStyle: text_style.TextStyle.lerp((t6$4 = a, t6$4 == null ? null : t6$4.textStyle), (t6$5 = b, t6$5 == null ? null : t6$5.textStyle), t)});
    }
    get hashCode() {
      return ui.hashValues(this.color, this.shape, this.elevation, this.textStyle);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this.runtimeType)) return false;
      return PopupMenuThemeDataL().is(other) && other.elevation == this.elevation && dart.equals(other.color, this.color) && dart.equals(other.shape, this.shape) && dart.equals(other.textStyle, this.textStyle);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfShapeBorderL()).new("shape", this.shape, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("elevation", this.elevation, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfTextStyleL()).new("text style", this.textStyle, {defaultValue: null}));
    }
  };
  (popup_menu_theme.PopupMenuThemeData.new = function(opts) {
    let color = opts && 'color' in opts ? opts.color : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
    this[color$8] = color;
    this[shape$12] = shape;
    this[elevation$10] = elevation;
    this[textStyle$4] = textStyle;
    ;
  }).prototype = popup_menu_theme.PopupMenuThemeData.prototype;
  dart.addTypeTests(popup_menu_theme.PopupMenuThemeData);
  dart.addTypeCaches(popup_menu_theme.PopupMenuThemeData);
  dart.setMethodSignature(popup_menu_theme.PopupMenuThemeData, () => ({
    __proto__: dart.getMethods(popup_menu_theme.PopupMenuThemeData.__proto__),
    copyWith: dart.fnType(dart.legacy(popup_menu_theme.PopupMenuThemeData), [], {color: dart.legacy(ui.Color), elevation: dart.legacy(core.double), shape: dart.legacy(borders.ShapeBorder), textStyle: dart.legacy(text_style.TextStyle)}, {}),
    _equals: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    [$_equals]: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    debugFillProperties: dart.fnType(dart.void, [dart.legacy(diagnostics.DiagnosticPropertiesBuilder)])
  }));
  dart.setGetterSignature(popup_menu_theme.PopupMenuThemeData, () => ({
    __proto__: dart.getGetters(popup_menu_theme.PopupMenuThemeData.__proto__),
    hashCode: dart.legacy(core.int),
    [$hashCode]: dart.legacy(core.int)
  }));
  dart.setLibraryUri(popup_menu_theme.PopupMenuThemeData, L51);
  dart.setFieldSignature(popup_menu_theme.PopupMenuThemeData, () => ({
    __proto__: dart.getFields(popup_menu_theme.PopupMenuThemeData.__proto__),
    color: dart.finalFieldType(dart.legacy(ui.Color)),
    shape: dart.finalFieldType(dart.legacy(borders.ShapeBorder)),
    elevation: dart.finalFieldType(dart.legacy(core.double)),
    textStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle))
  }));
  dart.defineExtensionMethods(popup_menu_theme.PopupMenuThemeData, ['_equals']);
  dart.defineExtensionAccessors(popup_menu_theme.PopupMenuThemeData, ['hashCode']);
  var C1275;
  var C1276;
  var C1274;
  var C1273;
  var data$4 = dart.privateName(popup_menu_theme, "PopupMenuTheme.data");
  popup_menu_theme.PopupMenuTheme = class PopupMenuTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[data$4];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t6, t6$;
      let popupMenuTheme = context.dependOnInheritedWidgetOfExactType(PopupMenuThemeL());
      t6$ = (t6 = popupMenuTheme, t6 == null ? null : t6.data);
      return t6$ == null ? theme$.Theme.of(context).popupMenuTheme : t6$;
    }
    wrap(context, child) {
      let ancestorTheme = context.findAncestorWidgetOfExactType(PopupMenuThemeL());
      return this === ancestorTheme ? child : new popup_menu_theme.PopupMenuTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C1273 || CT.C1273});
    }
    updateShouldNotify(oldWidget) {
      PopupMenuThemeL().as(oldWidget);
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (popup_menu_theme.PopupMenuTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[data$4] = data;
    if (!(data != null)) dart.assertFailed(null, L50, 136, 15, "data != null");
    popup_menu_theme.PopupMenuTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = popup_menu_theme.PopupMenuTheme.prototype;
  dart.addTypeTests(popup_menu_theme.PopupMenuTheme);
  dart.addTypeCaches(popup_menu_theme.PopupMenuTheme);
  dart.setMethodSignature(popup_menu_theme.PopupMenuTheme, () => ({
    __proto__: dart.getMethods(popup_menu_theme.PopupMenuTheme.__proto__),
    wrap: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext), dart.legacy(framework.Widget)]),
    updateShouldNotify: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)])
  }));
  dart.setLibraryUri(popup_menu_theme.PopupMenuTheme, L51);
  dart.setFieldSignature(popup_menu_theme.PopupMenuTheme, () => ({
    __proto__: dart.getFields(popup_menu_theme.PopupMenuTheme.__proto__),
    data: dart.finalFieldType(dart.legacy(popup_menu_theme.PopupMenuThemeData))
  }));
  var _positionAnimation = dart.privateName(page_transitions_theme, "_positionAnimation");
  var _opacityAnimation = dart.privateName(page_transitions_theme, "_opacityAnimation");
  var C1279;
  var C1280;
  var C1278;
  var C1277;
  var C1283;
  var C1284;
  var C1282;
  var C1281;
  var C1285;
  page_transitions_theme._FadeUpwardsPageTransition = class _FadeUpwardsPageTransition extends framework.StatelessWidget {
    build(context) {
      return new transitions.SlideTransition.new({position: this[_positionAnimation], child: new transitions.FadeTransition.new({opacity: this[_opacityAnimation], child: this.child, $creationLocationd_0dea112b090073317d4: C1277 || CT.C1277}), $creationLocationd_0dea112b090073317d4: C1281 || CT.C1281});
    }
  };
  (page_transitions_theme._FadeUpwardsPageTransition.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let routeAnimation = opts && 'routeAnimation' in opts ? opts.routeAnimation : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this.child = child;
    this[_positionAnimation] = routeAnimation.drive(OffsetL(), page_transitions_theme._FadeUpwardsPageTransition._bottomUpTween.chain(page_transitions_theme._FadeUpwardsPageTransition._fastOutSlowInTween));
    this[_opacityAnimation] = routeAnimation.drive(doubleL(), page_transitions_theme._FadeUpwardsPageTransition._easeInTween);
    page_transitions_theme._FadeUpwardsPageTransition.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = page_transitions_theme._FadeUpwardsPageTransition.prototype;
  dart.addTypeTests(page_transitions_theme._FadeUpwardsPageTransition);
  dart.addTypeCaches(page_transitions_theme._FadeUpwardsPageTransition);
  dart.setMethodSignature(page_transitions_theme._FadeUpwardsPageTransition, () => ({
    __proto__: dart.getMethods(page_transitions_theme._FadeUpwardsPageTransition.__proto__),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(page_transitions_theme._FadeUpwardsPageTransition, L52);
  dart.setFieldSignature(page_transitions_theme._FadeUpwardsPageTransition, () => ({
    __proto__: dart.getFields(page_transitions_theme._FadeUpwardsPageTransition.__proto__),
    [_positionAnimation]: dart.finalFieldType(dart.legacy(animation.Animation$(dart.legacy(ui.Offset)))),
    [_opacityAnimation]: dart.finalFieldType(dart.legacy(animation.Animation$(dart.legacy(core.double)))),
    child: dart.finalFieldType(dart.legacy(framework.Widget))
  }));
  dart.defineLazy(page_transitions_theme._FadeUpwardsPageTransition, {
    /*page_transitions_theme._FadeUpwardsPageTransition._bottomUpTween*/get _bottomUpTween() {
      return new (TweenOfOffsetL()).new({begin: C1285 || CT.C1285, end: ui.Offset.zero});
    },
    /*page_transitions_theme._FadeUpwardsPageTransition._fastOutSlowInTween*/get _fastOutSlowInTween() {
      return new tween.CurveTween.new({curve: curves.Curves.fastOutSlowIn});
    },
    /*page_transitions_theme._FadeUpwardsPageTransition._easeInTween*/get _easeInTween() {
      return new tween.CurveTween.new({curve: curves.Curves.easeIn});
    }
  }, true);
  var C1288;
  var C1289;
  var C1290;
  var C1287;
  var C1286;
  var C1293;
  var C1294;
  var C1292;
  var C1291;
  var C1297;
  var C1296;
  var C1295;
  var C1300;
  var C1301;
  var C1302;
  var C1299;
  var C1298;
  var C1305;
  var C1306;
  var C1304;
  var C1303;
  var C1309;
  var C1310;
  var C1308;
  var C1307;
  var C1313;
  var C1314;
  var C1315;
  var C1312;
  var C1311;
  var C1318;
  var C1319;
  var C1320;
  var C1317;
  var C1316;
  var C1323;
  var C1322;
  var C1321;
  var animation$1 = dart.privateName(page_transitions_theme, "_OpenUpwardsPageTransition.animation");
  var secondaryAnimation$ = dart.privateName(page_transitions_theme, "_OpenUpwardsPageTransition.secondaryAnimation");
  var child$10 = dart.privateName(page_transitions_theme, "_OpenUpwardsPageTransition.child");
  var C1324;
  var C1325;
  var C1326;
  page_transitions_theme._OpenUpwardsPageTransition = class _OpenUpwardsPageTransition extends framework.StatelessWidget {
    get animation() {
      return this[animation$1];
    }
    set animation(value) {
      super.animation = value;
    }
    get secondaryAnimation() {
      return this[secondaryAnimation$];
    }
    set secondaryAnimation(value) {
      super.secondaryAnimation = value;
    }
    get child() {
      return this[child$10];
    }
    set child(value) {
      super.child = value;
    }
    build(context) {
      return new layout_builder.LayoutBuilder.new({builder: dart.fn((context, constraints) => {
          let size = constraints.biggest;
          let primaryAnimation = new animations.CurvedAnimation.new({parent: this.animation, curve: page_transitions_theme._OpenUpwardsPageTransition._transitionCurve, reverseCurve: page_transitions_theme._OpenUpwardsPageTransition._transitionCurve.flipped});
          let clipAnimation = new (TweenOfdoubleL()).new({begin: 0.0, end: size.height}).animate(primaryAnimation);
          let opacityAnimation = page_transitions_theme._OpenUpwardsPageTransition._scrimOpacityTween.animate(primaryAnimation);
          let primaryTranslationAnimation = page_transitions_theme._OpenUpwardsPageTransition._primaryTranslationTween.animate(primaryAnimation);
          let secondaryTranslationAnimation = page_transitions_theme._OpenUpwardsPageTransition._secondaryTranslationTween.animate(new animations.CurvedAnimation.new({parent: this.secondaryAnimation, curve: page_transitions_theme._OpenUpwardsPageTransition._transitionCurve, reverseCurve: page_transitions_theme._OpenUpwardsPageTransition._transitionCurve.flipped}));
          return new transitions.AnimatedBuilder.new({animation: this.animation, builder: dart.fn((context, child) => new container.Container.new({color: colors$.Colors.black.withOpacity(opacityAnimation.value), alignment: alignment.Alignment.bottomLeft, child: new basic.ClipRect.new({child: new basic.SizedBox.new({height: clipAnimation.value, child: new basic.OverflowBox.new({alignment: alignment.Alignment.bottomLeft, maxHeight: size.height, child: child, $creationLocationd_0dea112b090073317d4: C1286 || CT.C1286}), $creationLocationd_0dea112b090073317d4: C1291 || CT.C1291}), $creationLocationd_0dea112b090073317d4: C1295 || CT.C1295}), $creationLocationd_0dea112b090073317d4: C1298 || CT.C1298}), BuildContextLAndWidgetLToContainerL()), child: new transitions.AnimatedBuilder.new({animation: this.secondaryAnimation, child: new basic.FractionalTranslation.new({translation: primaryTranslationAnimation.value, child: this.child, $creationLocationd_0dea112b090073317d4: C1303 || CT.C1303}), builder: dart.fn((context, child) => new basic.FractionalTranslation.new({translation: secondaryTranslationAnimation.value, child: child, $creationLocationd_0dea112b090073317d4: C1307 || CT.C1307}), BuildContextLAndWidgetLToFractionalTranslationL()), $creationLocationd_0dea112b090073317d4: C1311 || CT.C1311}), $creationLocationd_0dea112b090073317d4: C1316 || CT.C1316});
        }, BuildContextLAndBoxConstraintsLToAnimatedBuilderL()), $creationLocationd_0dea112b090073317d4: C1321 || CT.C1321});
    }
  };
  (page_transitions_theme._OpenUpwardsPageTransition.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let animation = opts && 'animation' in opts ? opts.animation : null;
    let secondaryAnimation = opts && 'secondaryAnimation' in opts ? opts.secondaryAnimation : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[animation$1] = animation;
    this[secondaryAnimation$] = secondaryAnimation;
    this[child$10] = child;
    page_transitions_theme._OpenUpwardsPageTransition.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = page_transitions_theme._OpenUpwardsPageTransition.prototype;
  dart.addTypeTests(page_transitions_theme._OpenUpwardsPageTransition);
  dart.addTypeCaches(page_transitions_theme._OpenUpwardsPageTransition);
  dart.setMethodSignature(page_transitions_theme._OpenUpwardsPageTransition, () => ({
    __proto__: dart.getMethods(page_transitions_theme._OpenUpwardsPageTransition.__proto__),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(page_transitions_theme._OpenUpwardsPageTransition, L52);
  dart.setFieldSignature(page_transitions_theme._OpenUpwardsPageTransition, () => ({
    __proto__: dart.getFields(page_transitions_theme._OpenUpwardsPageTransition.__proto__),
    animation: dart.finalFieldType(dart.legacy(animation.Animation$(dart.legacy(core.double)))),
    secondaryAnimation: dart.finalFieldType(dart.legacy(animation.Animation$(dart.legacy(core.double)))),
    child: dart.finalFieldType(dart.legacy(framework.Widget))
  }));
  dart.defineLazy(page_transitions_theme._OpenUpwardsPageTransition, {
    /*page_transitions_theme._OpenUpwardsPageTransition._primaryTranslationTween*/get _primaryTranslationTween() {
      return new (TweenOfOffsetL()).new({begin: C1324 || CT.C1324, end: ui.Offset.zero});
    },
    /*page_transitions_theme._OpenUpwardsPageTransition._secondaryTranslationTween*/get _secondaryTranslationTween() {
      return new (TweenOfOffsetL()).new({begin: ui.Offset.zero, end: C1325 || CT.C1325});
    },
    /*page_transitions_theme._OpenUpwardsPageTransition._scrimOpacityTween*/get _scrimOpacityTween() {
      return new (TweenOfdoubleL()).new({begin: 0.0, end: 0.25});
    },
    /*page_transitions_theme._OpenUpwardsPageTransition._transitionCurve*/get _transitionCurve() {
      return C1326 || CT.C1326;
    }
  }, true);
  var C1329;
  var C1330;
  var C1328;
  var C1327;
  var C1333;
  var C1334;
  var C1335;
  var C1332;
  var C1331;
  var C1338;
  var C1339;
  var C1340;
  var C1337;
  var C1336;
  var C1343;
  var C1344;
  var C1342;
  var C1341;
  var C1347;
  var C1348;
  var C1349;
  var C1350;
  var C1346;
  var C1345;
  var C1353;
  var C1354;
  var C1355;
  var C1356;
  var C1352;
  var C1351;
  var animation$2 = dart.privateName(page_transitions_theme, "_ZoomPageTransition.animation");
  var secondaryAnimation$0 = dart.privateName(page_transitions_theme, "_ZoomPageTransition.secondaryAnimation");
  var child$11 = dart.privateName(page_transitions_theme, "_ZoomPageTransition.child");
  var C1357;
  var C1358;
  page_transitions_theme._ZoomPageTransition = class _ZoomPageTransition extends framework.StatelessWidget {
    get animation() {
      return this[animation$2];
    }
    set animation(value) {
      super.animation = value;
    }
    get secondaryAnimation() {
      return this[secondaryAnimation$0];
    }
    set secondaryAnimation(value) {
      super.secondaryAnimation = value;
    }
    get child() {
      return this[child$11];
    }
    set child(value) {
      super.child = value;
    }
    build(context) {
      return new dual_transition_builder.DualTransitionBuilder.new({animation: this.animation, forwardBuilder: dart.fn((context, animation, child) => new page_transitions_theme._ZoomEnterTransition.new({animation: animation, child: child, $creationLocationd_0dea112b090073317d4: C1327 || CT.C1327}), BuildContextLAndAnimationLOfdoubleLAndWidgetLTo_ZoomEnterTransitionL()), reverseBuilder: dart.fn((context, animation, child) => new page_transitions_theme._ZoomExitTransition.new({animation: animation, reverse: true, child: child, $creationLocationd_0dea112b090073317d4: C1331 || CT.C1331}), BuildContextLAndAnimationLOfdoubleLAndWidgetLTo_ZoomExitTransitionL()), child: new dual_transition_builder.DualTransitionBuilder.new({animation: new animations.ReverseAnimation.new(this.secondaryAnimation), forwardBuilder: dart.fn((context, animation, child) => new page_transitions_theme._ZoomEnterTransition.new({animation: animation, reverse: true, child: child, $creationLocationd_0dea112b090073317d4: C1336 || CT.C1336}), BuildContextLAndAnimationLOfdoubleLAndWidgetLTo_ZoomEnterTransitionL()), reverseBuilder: dart.fn((context, animation, child) => new page_transitions_theme._ZoomExitTransition.new({animation: animation, child: child, $creationLocationd_0dea112b090073317d4: C1341 || CT.C1341}), BuildContextLAndAnimationLOfdoubleLAndWidgetLTo_ZoomExitTransitionL()), child: this.child, $creationLocationd_0dea112b090073317d4: C1345 || CT.C1345}), $creationLocationd_0dea112b090073317d4: C1351 || CT.C1351});
    }
  };
  (page_transitions_theme._ZoomPageTransition.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let animation = opts && 'animation' in opts ? opts.animation : null;
    let secondaryAnimation = opts && 'secondaryAnimation' in opts ? opts.secondaryAnimation : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[animation$2] = animation;
    this[secondaryAnimation$0] = secondaryAnimation;
    this[child$11] = child;
    if (!(animation != null)) dart.assertFailed(null, L53, 163, 15, "animation != null");
    if (!(secondaryAnimation != null)) dart.assertFailed(null, L53, 164, 15, "secondaryAnimation != null");
    page_transitions_theme._ZoomPageTransition.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = page_transitions_theme._ZoomPageTransition.prototype;
  dart.addTypeTests(page_transitions_theme._ZoomPageTransition);
  dart.addTypeCaches(page_transitions_theme._ZoomPageTransition);
  dart.setMethodSignature(page_transitions_theme._ZoomPageTransition, () => ({
    __proto__: dart.getMethods(page_transitions_theme._ZoomPageTransition.__proto__),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(page_transitions_theme._ZoomPageTransition, L52);
  dart.setFieldSignature(page_transitions_theme._ZoomPageTransition, () => ({
    __proto__: dart.getFields(page_transitions_theme._ZoomPageTransition.__proto__),
    animation: dart.finalFieldType(dart.legacy(animation.Animation$(dart.legacy(core.double)))),
    secondaryAnimation: dart.finalFieldType(dart.legacy(animation.Animation$(dart.legacy(core.double)))),
    child: dart.finalFieldType(dart.legacy(framework.Widget))
  }));
  dart.defineLazy(page_transitions_theme._ZoomPageTransition, {
    /*page_transitions_theme._ZoomPageTransition.fastOutExtraSlowInTweenSequenceItems*/get fastOutExtraSlowInTweenSequenceItems() {
      return JSArrayOfTweenSequenceItemLOfdoubleL().of([new (TweenSequenceItemOfdoubleL()).new({tween: new (TweenOfdoubleL()).new({begin: 0.0, end: 0.4}).chain(new tween.CurveTween.new({curve: C1357 || CT.C1357})), weight: 0.166666}), new (TweenSequenceItemOfdoubleL()).new({tween: new (TweenOfdoubleL()).new({begin: 0.4, end: 1.0}).chain(new tween.CurveTween.new({curve: C1358 || CT.C1358})), weight: 1.0 - 0.166666})]);
    },
    /*page_transitions_theme._ZoomPageTransition._scaleCurveSequence*/get _scaleCurveSequence() {
      return new (TweenSequenceOfdoubleL()).new(page_transitions_theme._ZoomPageTransition.fastOutExtraSlowInTweenSequenceItems);
    }
  }, true);
  var C1361;
  var C1362;
  var C1360;
  var C1359;
  var C1365;
  var C1366;
  var C1364;
  var C1363;
  var C1369;
  var C1370;
  var C1368;
  var C1367;
  var C1373;
  var C1374;
  var C1375;
  var C1372;
  var C1371;
  var animation$3 = dart.privateName(page_transitions_theme, "_ZoomEnterTransition.animation");
  var child$12 = dart.privateName(page_transitions_theme, "_ZoomEnterTransition.child");
  var reverse$ = dart.privateName(page_transitions_theme, "_ZoomEnterTransition.reverse");
  var C1376;
  var C1377;
  page_transitions_theme._ZoomEnterTransition = class _ZoomEnterTransition extends framework.StatelessWidget {
    get animation() {
      return this[animation$3];
    }
    set animation(value) {
      super.animation = value;
    }
    get child() {
      return this[child$12];
    }
    set child(value) {
      super.child = value;
    }
    get reverse() {
      return this[reverse$];
    }
    set reverse(value) {
      super.reverse = value;
    }
    build(context) {
      let opacity = 0.0;
      if (!dart.test(this.reverse) && this.animation.status != animation.AnimationStatus.completed) {
        opacity = page_transitions_theme._ZoomEnterTransition._scrimOpacityTween.evaluate(this.animation);
      }
      let fadeTransition = dart.test(this.reverse) ? animations.kAlwaysCompleteAnimation : page_transitions_theme._ZoomEnterTransition._fadeInTransition.animate(this.animation);
      let scaleTransition = (dart.test(this.reverse) ? page_transitions_theme._ZoomEnterTransition._scaleDownTransition : page_transitions_theme._ZoomEnterTransition._scaleUpTransition).animate(this.animation);
      return new transitions.AnimatedBuilder.new({animation: this.animation, builder: dart.fn((context, child) => new container.Container.new({color: colors$.Colors.black.withOpacity(opacity), child: child, $creationLocationd_0dea112b090073317d4: C1359 || CT.C1359}), BuildContextLAndWidgetLToContainerL()), child: new transitions.FadeTransition.new({opacity: fadeTransition, child: new transitions.ScaleTransition.new({scale: scaleTransition, child: this.child, $creationLocationd_0dea112b090073317d4: C1363 || CT.C1363}), $creationLocationd_0dea112b090073317d4: C1367 || CT.C1367}), $creationLocationd_0dea112b090073317d4: C1371 || CT.C1371});
    }
  };
  (page_transitions_theme._ZoomEnterTransition.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let animation = opts && 'animation' in opts ? opts.animation : null;
    let reverse = opts && 'reverse' in opts ? opts.reverse : false;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[animation$3] = animation;
    this[reverse$] = reverse;
    this[child$12] = child;
    if (!(animation != null)) dart.assertFailed(null, L53, 266, 15, "animation != null");
    if (!(reverse != null)) dart.assertFailed(null, L53, 267, 15, "reverse != null");
    page_transitions_theme._ZoomEnterTransition.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = page_transitions_theme._ZoomEnterTransition.prototype;
  dart.addTypeTests(page_transitions_theme._ZoomEnterTransition);
  dart.addTypeCaches(page_transitions_theme._ZoomEnterTransition);
  dart.setMethodSignature(page_transitions_theme._ZoomEnterTransition, () => ({
    __proto__: dart.getMethods(page_transitions_theme._ZoomEnterTransition.__proto__),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(page_transitions_theme._ZoomEnterTransition, L52);
  dart.setFieldSignature(page_transitions_theme._ZoomEnterTransition, () => ({
    __proto__: dart.getFields(page_transitions_theme._ZoomEnterTransition.__proto__),
    animation: dart.finalFieldType(dart.legacy(animation.Animation$(dart.legacy(core.double)))),
    child: dart.finalFieldType(dart.legacy(framework.Widget)),
    reverse: dart.finalFieldType(dart.legacy(core.bool))
  }));
  dart.defineLazy(page_transitions_theme._ZoomEnterTransition, {
    /*page_transitions_theme._ZoomEnterTransition._fadeInTransition*/get _fadeInTransition() {
      return new (TweenOfdoubleL()).new({begin: 0.0, end: 1.0}).chain(new tween.CurveTween.new({curve: C1376 || CT.C1376}));
    },
    /*page_transitions_theme._ZoomEnterTransition._scaleDownTransition*/get _scaleDownTransition() {
      return new (TweenOfdoubleL()).new({begin: 1.1, end: 1.0}).chain(page_transitions_theme._ZoomPageTransition._scaleCurveSequence);
    },
    /*page_transitions_theme._ZoomEnterTransition._scaleUpTransition*/get _scaleUpTransition() {
      return new (TweenOfdoubleL()).new({begin: 0.85, end: 1.0}).chain(page_transitions_theme._ZoomPageTransition._scaleCurveSequence);
    },
    /*page_transitions_theme._ZoomEnterTransition._scrimOpacityTween*/get _scrimOpacityTween() {
      return new (TweenOfdoubleL()).new({begin: 0.0, end: 0.6}).chain(new tween.CurveTween.new({curve: C1377 || CT.C1377}));
    }
  }, true);
  var C1380;
  var C1381;
  var C1379;
  var C1378;
  var C1384;
  var C1385;
  var C1383;
  var C1382;
  var animation$4 = dart.privateName(page_transitions_theme, "_ZoomExitTransition.animation");
  var reverse$0 = dart.privateName(page_transitions_theme, "_ZoomExitTransition.reverse");
  var child$13 = dart.privateName(page_transitions_theme, "_ZoomExitTransition.child");
  var C1386;
  page_transitions_theme._ZoomExitTransition = class _ZoomExitTransition extends framework.StatelessWidget {
    get animation() {
      return this[animation$4];
    }
    set animation(value) {
      super.animation = value;
    }
    get reverse() {
      return this[reverse$0];
    }
    set reverse(value) {
      super.reverse = value;
    }
    get child() {
      return this[child$13];
    }
    set child(value) {
      super.child = value;
    }
    build(context) {
      let fadeTransition = dart.test(this.reverse) ? page_transitions_theme._ZoomExitTransition._fadeOutTransition.animate(this.animation) : animations.kAlwaysCompleteAnimation;
      let scaleTransition = (dart.test(this.reverse) ? page_transitions_theme._ZoomExitTransition._scaleDownTransition : page_transitions_theme._ZoomExitTransition._scaleUpTransition).animate(this.animation);
      return new transitions.FadeTransition.new({opacity: fadeTransition, child: new transitions.ScaleTransition.new({scale: scaleTransition, child: this.child, $creationLocationd_0dea112b090073317d4: C1378 || CT.C1378}), $creationLocationd_0dea112b090073317d4: C1382 || CT.C1382});
    }
  };
  (page_transitions_theme._ZoomExitTransition.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let animation = opts && 'animation' in opts ? opts.animation : null;
    let reverse = opts && 'reverse' in opts ? opts.reverse : false;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[animation$4] = animation;
    this[reverse$0] = reverse;
    this[child$13] = child;
    if (!(animation != null)) dart.assertFailed(null, L53, 345, 15, "animation != null");
    if (!(reverse != null)) dart.assertFailed(null, L53, 346, 15, "reverse != null");
    page_transitions_theme._ZoomExitTransition.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = page_transitions_theme._ZoomExitTransition.prototype;
  dart.addTypeTests(page_transitions_theme._ZoomExitTransition);
  dart.addTypeCaches(page_transitions_theme._ZoomExitTransition);
  dart.setMethodSignature(page_transitions_theme._ZoomExitTransition, () => ({
    __proto__: dart.getMethods(page_transitions_theme._ZoomExitTransition.__proto__),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(page_transitions_theme._ZoomExitTransition, L52);
  dart.setFieldSignature(page_transitions_theme._ZoomExitTransition, () => ({
    __proto__: dart.getFields(page_transitions_theme._ZoomExitTransition.__proto__),
    animation: dart.finalFieldType(dart.legacy(animation.Animation$(dart.legacy(core.double)))),
    reverse: dart.finalFieldType(dart.legacy(core.bool)),
    child: dart.finalFieldType(dart.legacy(framework.Widget))
  }));
  dart.defineLazy(page_transitions_theme._ZoomExitTransition, {
    /*page_transitions_theme._ZoomExitTransition._fadeOutTransition*/get _fadeOutTransition() {
      return new (TweenOfdoubleL()).new({begin: 1.0, end: 0.0}).chain(new tween.CurveTween.new({curve: C1386 || CT.C1386}));
    },
    /*page_transitions_theme._ZoomExitTransition._scaleUpTransition*/get _scaleUpTransition() {
      return new (TweenOfdoubleL()).new({begin: 1.0, end: 1.05}).chain(page_transitions_theme._ZoomPageTransition._scaleCurveSequence);
    },
    /*page_transitions_theme._ZoomExitTransition._scaleDownTransition*/get _scaleDownTransition() {
      return new (TweenOfdoubleL()).new({begin: 1.0, end: 0.9}).chain(page_transitions_theme._ZoomPageTransition._scaleCurveSequence);
    }
  }, true);
  page_transitions_theme.PageTransitionsBuilder = class PageTransitionsBuilder extends core.Object {};
  (page_transitions_theme.PageTransitionsBuilder.new = function() {
    ;
  }).prototype = page_transitions_theme.PageTransitionsBuilder.prototype;
  dart.addTypeTests(page_transitions_theme.PageTransitionsBuilder);
  dart.addTypeCaches(page_transitions_theme.PageTransitionsBuilder);
  dart.setLibraryUri(page_transitions_theme.PageTransitionsBuilder, L52);
  var C1389;
  var C1390;
  var C1388;
  var C1387;
  page_transitions_theme.FadeUpwardsPageTransitionsBuilder = class FadeUpwardsPageTransitionsBuilder extends page_transitions_theme.PageTransitionsBuilder {
    buildTransitions(T, route, context, animation, secondaryAnimation, child) {
      return new page_transitions_theme._FadeUpwardsPageTransition.new({routeAnimation: animation, child: child, $creationLocationd_0dea112b090073317d4: C1387 || CT.C1387});
    }
  };
  (page_transitions_theme.FadeUpwardsPageTransitionsBuilder.new = function() {
    page_transitions_theme.FadeUpwardsPageTransitionsBuilder.__proto__.new.call(this);
    ;
  }).prototype = page_transitions_theme.FadeUpwardsPageTransitionsBuilder.prototype;
  dart.addTypeTests(page_transitions_theme.FadeUpwardsPageTransitionsBuilder);
  dart.addTypeCaches(page_transitions_theme.FadeUpwardsPageTransitionsBuilder);
  dart.setMethodSignature(page_transitions_theme.FadeUpwardsPageTransitionsBuilder, () => ({
    __proto__: dart.getMethods(page_transitions_theme.FadeUpwardsPageTransitionsBuilder.__proto__),
    buildTransitions: dart.gFnType(T => [dart.legacy(framework.Widget), [dart.legacy(pages.PageRoute$(dart.legacy(T))), dart.legacy(framework.BuildContext), dart.legacy(animation.Animation$(dart.legacy(core.double))), dart.legacy(animation.Animation$(dart.legacy(core.double))), dart.legacy(framework.Widget)]])
  }));
  dart.setLibraryUri(page_transitions_theme.FadeUpwardsPageTransitionsBuilder, L52);
  var C1393;
  var C1394;
  var C1395;
  var C1392;
  var C1391;
  page_transitions_theme.OpenUpwardsPageTransitionsBuilder = class OpenUpwardsPageTransitionsBuilder extends page_transitions_theme.PageTransitionsBuilder {
    buildTransitions(T, route, context, animation, secondaryAnimation, child) {
      return new page_transitions_theme._OpenUpwardsPageTransition.new({animation: animation, secondaryAnimation: secondaryAnimation, child: child, $creationLocationd_0dea112b090073317d4: C1391 || CT.C1391});
    }
  };
  (page_transitions_theme.OpenUpwardsPageTransitionsBuilder.new = function() {
    page_transitions_theme.OpenUpwardsPageTransitionsBuilder.__proto__.new.call(this);
    ;
  }).prototype = page_transitions_theme.OpenUpwardsPageTransitionsBuilder.prototype;
  dart.addTypeTests(page_transitions_theme.OpenUpwardsPageTransitionsBuilder);
  dart.addTypeCaches(page_transitions_theme.OpenUpwardsPageTransitionsBuilder);
  dart.setMethodSignature(page_transitions_theme.OpenUpwardsPageTransitionsBuilder, () => ({
    __proto__: dart.getMethods(page_transitions_theme.OpenUpwardsPageTransitionsBuilder.__proto__),
    buildTransitions: dart.gFnType(T => [dart.legacy(framework.Widget), [dart.legacy(pages.PageRoute$(dart.legacy(T))), dart.legacy(framework.BuildContext), dart.legacy(animation.Animation$(dart.legacy(core.double))), dart.legacy(animation.Animation$(dart.legacy(core.double))), dart.legacy(framework.Widget)]])
  }));
  dart.setLibraryUri(page_transitions_theme.OpenUpwardsPageTransitionsBuilder, L52);
  var C1398;
  var C1399;
  var C1400;
  var C1397;
  var C1396;
  page_transitions_theme.ZoomPageTransitionsBuilder = class ZoomPageTransitionsBuilder extends page_transitions_theme.PageTransitionsBuilder {
    buildTransitions(T, route, context, animation, secondaryAnimation, child) {
      return new page_transitions_theme._ZoomPageTransition.new({animation: animation, secondaryAnimation: secondaryAnimation, child: child, $creationLocationd_0dea112b090073317d4: C1396 || CT.C1396});
    }
  };
  (page_transitions_theme.ZoomPageTransitionsBuilder.new = function() {
    page_transitions_theme.ZoomPageTransitionsBuilder.__proto__.new.call(this);
    ;
  }).prototype = page_transitions_theme.ZoomPageTransitionsBuilder.prototype;
  dart.addTypeTests(page_transitions_theme.ZoomPageTransitionsBuilder);
  dart.addTypeCaches(page_transitions_theme.ZoomPageTransitionsBuilder);
  dart.setMethodSignature(page_transitions_theme.ZoomPageTransitionsBuilder, () => ({
    __proto__: dart.getMethods(page_transitions_theme.ZoomPageTransitionsBuilder.__proto__),
    buildTransitions: dart.gFnType(T => [dart.legacy(framework.Widget), [dart.legacy(pages.PageRoute$(dart.legacy(T))), dart.legacy(framework.BuildContext), dart.legacy(animation.Animation$(dart.legacy(core.double))), dart.legacy(animation.Animation$(dart.legacy(core.double))), dart.legacy(framework.Widget)]])
  }));
  dart.setLibraryUri(page_transitions_theme.ZoomPageTransitionsBuilder, L52);
  page_transitions_theme.CupertinoPageTransitionsBuilder = class CupertinoPageTransitionsBuilder extends page_transitions_theme.PageTransitionsBuilder {
    buildTransitions(T, route, context, animation, secondaryAnimation, child) {
      return route$.CupertinoRouteTransitionMixin.buildPageTransitions(dart.legacy(T), route, context, animation, secondaryAnimation, child);
    }
  };
  (page_transitions_theme.CupertinoPageTransitionsBuilder.new = function() {
    page_transitions_theme.CupertinoPageTransitionsBuilder.__proto__.new.call(this);
    ;
  }).prototype = page_transitions_theme.CupertinoPageTransitionsBuilder.prototype;
  dart.addTypeTests(page_transitions_theme.CupertinoPageTransitionsBuilder);
  dart.addTypeCaches(page_transitions_theme.CupertinoPageTransitionsBuilder);
  dart.setMethodSignature(page_transitions_theme.CupertinoPageTransitionsBuilder, () => ({
    __proto__: dart.getMethods(page_transitions_theme.CupertinoPageTransitionsBuilder.__proto__),
    buildTransitions: dart.gFnType(T => [dart.legacy(framework.Widget), [dart.legacy(pages.PageRoute$(dart.legacy(T))), dart.legacy(framework.BuildContext), dart.legacy(animation.Animation$(dart.legacy(core.double))), dart.legacy(animation.Animation$(dart.legacy(core.double))), dart.legacy(framework.Widget)]])
  }));
  dart.setLibraryUri(page_transitions_theme.CupertinoPageTransitionsBuilder, L52);
  var _builders = dart.privateName(page_transitions_theme, "_builders");
  var C1401;
  var _all = dart.privateName(page_transitions_theme, "_all");
  var _builders$ = dart.privateName(page_transitions_theme, "PageTransitionsTheme._builders");
  var C1403;
  var C1402;
  const Object_Diagnosticable$36$6 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$6.new = function() {
  }).prototype = Object_Diagnosticable$36$6.prototype;
  dart.applyMixin(Object_Diagnosticable$36$6, diagnostics.Diagnosticable);
  page_transitions_theme.PageTransitionsTheme = class PageTransitionsTheme extends Object_Diagnosticable$36$6 {
    get [_builders]() {
      return this[_builders$];
    }
    set [_builders](value) {
      super[_builders] = value;
    }
    get builders() {
      let t6;
      t6 = this[_builders];
      return t6 == null ? page_transitions_theme.PageTransitionsTheme._defaultBuilders : t6;
    }
    buildTransitions(T, route, context, animation, secondaryAnimation, child) {
      let t6;
      let platform = theme$.Theme.of(context).platform;
      if (dart.test(route$.CupertinoRouteTransitionMixin.isPopGestureInProgress(route))) platform = platform$.TargetPlatform.iOS;
      let matchingBuilder = (t6 = this.builders[$_get](platform), t6 == null ? C1401 || CT.C1401 : t6);
      return matchingBuilder.buildTransitions(dart.legacy(T), route, context, animation, secondaryAnimation, child);
    }
    [_all](builders) {
      return platform$.TargetPlatform.values[$map](PageTransitionsBuilderL(), dart.fn(platform => builders[$_get](platform), TargetPlatformLToPageTransitionsBuilderL()))[$toList]();
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this.runtimeType)) return false;
      if (PageTransitionsThemeL().is(other) && this.builders == other.builders) return true;
      return PageTransitionsThemeL().is(other) && dart.test(collections.listEquals(PageTransitionsBuilderL(), this[_all](other.builders), this[_all](this.builders)));
    }
    get hashCode() {
      return ui.hashList(this[_all](this.builders));
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfMapLOfTargetPlatformL$PageTransitionsBuilderL()).new("builders", this.builders, {defaultValue: page_transitions_theme.PageTransitionsTheme._defaultBuilders}));
    }
  };
  (page_transitions_theme.PageTransitionsTheme.new = function(opts) {
    let builders = opts && 'builders' in opts ? opts.builders : null;
    this[_builders$] = builders;
    ;
  }).prototype = page_transitions_theme.PageTransitionsTheme.prototype;
  dart.addTypeTests(page_transitions_theme.PageTransitionsTheme);
  dart.addTypeCaches(page_transitions_theme.PageTransitionsTheme);
  dart.setMethodSignature(page_transitions_theme.PageTransitionsTheme, () => ({
    __proto__: dart.getMethods(page_transitions_theme.PageTransitionsTheme.__proto__),
    buildTransitions: dart.gFnType(T => [dart.legacy(framework.Widget), [dart.legacy(pages.PageRoute$(dart.legacy(T))), dart.legacy(framework.BuildContext), dart.legacy(animation.Animation$(dart.legacy(core.double))), dart.legacy(animation.Animation$(dart.legacy(core.double))), dart.legacy(framework.Widget)]]),
    [_all]: dart.fnType(dart.legacy(core.List$(dart.legacy(page_transitions_theme.PageTransitionsBuilder))), [dart.legacy(core.Map$(dart.legacy(platform$.TargetPlatform), dart.legacy(page_transitions_theme.PageTransitionsBuilder)))]),
    _equals: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    [$_equals]: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    debugFillProperties: dart.fnType(dart.void, [dart.legacy(diagnostics.DiagnosticPropertiesBuilder)])
  }));
  dart.setGetterSignature(page_transitions_theme.PageTransitionsTheme, () => ({
    __proto__: dart.getGetters(page_transitions_theme.PageTransitionsTheme.__proto__),
    builders: dart.legacy(core.Map$(dart.legacy(platform$.TargetPlatform), dart.legacy(page_transitions_theme.PageTransitionsBuilder))),
    hashCode: dart.legacy(core.int),
    [$hashCode]: dart.legacy(core.int)
  }));
  dart.setLibraryUri(page_transitions_theme.PageTransitionsTheme, L52);
  dart.setFieldSignature(page_transitions_theme.PageTransitionsTheme, () => ({
    __proto__: dart.getFields(page_transitions_theme.PageTransitionsTheme.__proto__),
    [_builders]: dart.finalFieldType(dart.legacy(core.Map$(dart.legacy(platform$.TargetPlatform), dart.legacy(page_transitions_theme.PageTransitionsBuilder))))
  }));
  dart.defineExtensionMethods(page_transitions_theme.PageTransitionsTheme, ['_equals']);
  dart.defineExtensionAccessors(page_transitions_theme.PageTransitionsTheme, ['hashCode']);
  dart.defineLazy(page_transitions_theme.PageTransitionsTheme, {
    /*page_transitions_theme.PageTransitionsTheme._defaultBuilders*/get _defaultBuilders() {
      return C1402 || CT.C1402;
    }
  }, true);
  var style$1 = dart.privateName(outlined_button_theme, "OutlinedButtonThemeData.style");
  const Object_Diagnosticable$36$7 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$7.new = function() {
  }).prototype = Object_Diagnosticable$36$7.prototype;
  dart.applyMixin(Object_Diagnosticable$36$7, diagnostics.Diagnosticable);
  outlined_button_theme.OutlinedButtonThemeData = class OutlinedButtonThemeData extends Object_Diagnosticable$36$7 {
    get style() {
      return this[style$1];
    }
    set style(value) {
      super.style = value;
    }
    static lerp(a, b, t) {
      let t6, t6$;
      if (!(t != null)) dart.assertFailed(null, L54, 51, 13, "t != null");
      if (a == null && b == null) return null;
      return new outlined_button_theme.OutlinedButtonThemeData.new({style: button_style.ButtonStyle.lerp((t6 = a, t6 == null ? null : t6.style), (t6$ = b, t6$ == null ? null : t6$.style), t)});
    }
    get hashCode() {
      return dart.hashCode(this.style);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this.runtimeType)) return false;
      return OutlinedButtonThemeDataL().is(other) && dart.equals(other.style, this.style);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfButtonStyleL()).new("style", this.style, {defaultValue: null}));
    }
  };
  (outlined_button_theme.OutlinedButtonThemeData.new = function(opts) {
    let style = opts && 'style' in opts ? opts.style : null;
    this[style$1] = style;
    ;
  }).prototype = outlined_button_theme.OutlinedButtonThemeData.prototype;
  dart.addTypeTests(outlined_button_theme.OutlinedButtonThemeData);
  dart.addTypeCaches(outlined_button_theme.OutlinedButtonThemeData);
  dart.setMethodSignature(outlined_button_theme.OutlinedButtonThemeData, () => ({
    __proto__: dart.getMethods(outlined_button_theme.OutlinedButtonThemeData.__proto__),
    _equals: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    [$_equals]: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    debugFillProperties: dart.fnType(dart.void, [dart.legacy(diagnostics.DiagnosticPropertiesBuilder)])
  }));
  dart.setGetterSignature(outlined_button_theme.OutlinedButtonThemeData, () => ({
    __proto__: dart.getGetters(outlined_button_theme.OutlinedButtonThemeData.__proto__),
    hashCode: dart.legacy(core.int),
    [$hashCode]: dart.legacy(core.int)
  }));
  dart.setLibraryUri(outlined_button_theme.OutlinedButtonThemeData, L55);
  dart.setFieldSignature(outlined_button_theme.OutlinedButtonThemeData, () => ({
    __proto__: dart.getFields(outlined_button_theme.OutlinedButtonThemeData.__proto__),
    style: dart.finalFieldType(dart.legacy(button_style.ButtonStyle))
  }));
  dart.defineExtensionMethods(outlined_button_theme.OutlinedButtonThemeData, ['_equals']);
  dart.defineExtensionAccessors(outlined_button_theme.OutlinedButtonThemeData, ['hashCode']);
  var C1406;
  var C1407;
  var C1405;
  var C1404;
  var data$5 = dart.privateName(outlined_button_theme, "OutlinedButtonTheme.data");
  outlined_button_theme.OutlinedButtonTheme = class OutlinedButtonTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[data$5];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t6, t6$;
      let buttonTheme = context.dependOnInheritedWidgetOfExactType(OutlinedButtonThemeL());
      t6$ = (t6 = buttonTheme, t6 == null ? null : t6.data);
      return t6$ == null ? theme$.Theme.of(context).outlinedButtonTheme : t6$;
    }
    wrap(context, child) {
      let ancestorTheme = context.findAncestorWidgetOfExactType(OutlinedButtonThemeL());
      return this === ancestorTheme ? child : new outlined_button_theme.OutlinedButtonTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C1404 || CT.C1404});
    }
    updateShouldNotify(oldWidget) {
      OutlinedButtonThemeL().as(oldWidget);
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (outlined_button_theme.OutlinedButtonTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[data$5] = data;
    if (!(data != null)) dart.assertFailed(null, L54, 99, 15, "data != null");
    outlined_button_theme.OutlinedButtonTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = outlined_button_theme.OutlinedButtonTheme.prototype;
  dart.addTypeTests(outlined_button_theme.OutlinedButtonTheme);
  dart.addTypeCaches(outlined_button_theme.OutlinedButtonTheme);
  dart.setMethodSignature(outlined_button_theme.OutlinedButtonTheme, () => ({
    __proto__: dart.getMethods(outlined_button_theme.OutlinedButtonTheme.__proto__),
    wrap: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext), dart.legacy(framework.Widget)]),
    updateShouldNotify: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)])
  }));
  dart.setLibraryUri(outlined_button_theme.OutlinedButtonTheme, L55);
  dart.setFieldSignature(outlined_button_theme.OutlinedButtonTheme, () => ({
    __proto__: dart.getFields(outlined_button_theme.OutlinedButtonTheme.__proto__),
    data: dart.finalFieldType(dart.legacy(outlined_button_theme.OutlinedButtonThemeData))
  }));
  var backgroundColor$7 = dart.privateName(navigation_rail, "NavigationRail.backgroundColor");
  var extended$ = dart.privateName(navigation_rail, "NavigationRail.extended");
  var leading$1 = dart.privateName(navigation_rail, "NavigationRail.leading");
  var trailing$1 = dart.privateName(navigation_rail, "NavigationRail.trailing");
  var destinations$ = dart.privateName(navigation_rail, "NavigationRail.destinations");
  var selectedIndex$ = dart.privateName(navigation_rail, "NavigationRail.selectedIndex");
  var onDestinationSelected$ = dart.privateName(navigation_rail, "NavigationRail.onDestinationSelected");
  var elevation$11 = dart.privateName(navigation_rail, "NavigationRail.elevation");
  var groupAlignment$ = dart.privateName(navigation_rail, "NavigationRail.groupAlignment");
  var labelType$ = dart.privateName(navigation_rail, "NavigationRail.labelType");
  var unselectedLabelTextStyle$ = dart.privateName(navigation_rail, "NavigationRail.unselectedLabelTextStyle");
  var selectedLabelTextStyle$ = dart.privateName(navigation_rail, "NavigationRail.selectedLabelTextStyle");
  var unselectedIconTheme$ = dart.privateName(navigation_rail, "NavigationRail.unselectedIconTheme");
  var selectedIconTheme$ = dart.privateName(navigation_rail, "NavigationRail.selectedIconTheme");
  var minWidth$0 = dart.privateName(navigation_rail, "NavigationRail.minWidth");
  var minExtendedWidth$ = dart.privateName(navigation_rail, "NavigationRail.minExtendedWidth");
  navigation_rail.NavigationRail = class NavigationRail extends framework.StatefulWidget {
    get backgroundColor() {
      return this[backgroundColor$7];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get extended() {
      return this[extended$];
    }
    set extended(value) {
      super.extended = value;
    }
    get leading() {
      return this[leading$1];
    }
    set leading(value) {
      super.leading = value;
    }
    get trailing() {
      return this[trailing$1];
    }
    set trailing(value) {
      super.trailing = value;
    }
    get destinations() {
      return this[destinations$];
    }
    set destinations(value) {
      super.destinations = value;
    }
    get selectedIndex() {
      return this[selectedIndex$];
    }
    set selectedIndex(value) {
      super.selectedIndex = value;
    }
    get onDestinationSelected() {
      return this[onDestinationSelected$];
    }
    set onDestinationSelected(value) {
      super.onDestinationSelected = value;
    }
    get elevation() {
      return this[elevation$11];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get groupAlignment() {
      return this[groupAlignment$];
    }
    set groupAlignment(value) {
      super.groupAlignment = value;
    }
    get labelType() {
      return this[labelType$];
    }
    set labelType(value) {
      super.labelType = value;
    }
    get unselectedLabelTextStyle() {
      return this[unselectedLabelTextStyle$];
    }
    set unselectedLabelTextStyle(value) {
      super.unselectedLabelTextStyle = value;
    }
    get selectedLabelTextStyle() {
      return this[selectedLabelTextStyle$];
    }
    set selectedLabelTextStyle(value) {
      super.selectedLabelTextStyle = value;
    }
    get unselectedIconTheme() {
      return this[unselectedIconTheme$];
    }
    set unselectedIconTheme(value) {
      super.unselectedIconTheme = value;
    }
    get selectedIconTheme() {
      return this[selectedIconTheme$];
    }
    set selectedIconTheme(value) {
      super.selectedIconTheme = value;
    }
    get minWidth() {
      return this[minWidth$0];
    }
    set minWidth(value) {
      super.minWidth = value;
    }
    get minExtendedWidth() {
      return this[minExtendedWidth$];
    }
    set minExtendedWidth(value) {
      super.minExtendedWidth = value;
    }
    static extendedAnimation(context) {
      return context.dependOnInheritedWidgetOfExactType(_ExtendedNavigationRailAnimationL()).animation;
    }
    createState() {
      return new navigation_rail._NavigationRailState.new();
    }
  };
  (navigation_rail.NavigationRail.new = function(opts) {
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let extended = opts && 'extended' in opts ? opts.extended : false;
    let leading = opts && 'leading' in opts ? opts.leading : null;
    let trailing = opts && 'trailing' in opts ? opts.trailing : null;
    let destinations = opts && 'destinations' in opts ? opts.destinations : null;
    let selectedIndex = opts && 'selectedIndex' in opts ? opts.selectedIndex : null;
    let onDestinationSelected = opts && 'onDestinationSelected' in opts ? opts.onDestinationSelected : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let groupAlignment = opts && 'groupAlignment' in opts ? opts.groupAlignment : null;
    let labelType = opts && 'labelType' in opts ? opts.labelType : null;
    let unselectedLabelTextStyle = opts && 'unselectedLabelTextStyle' in opts ? opts.unselectedLabelTextStyle : null;
    let selectedLabelTextStyle = opts && 'selectedLabelTextStyle' in opts ? opts.selectedLabelTextStyle : null;
    let unselectedIconTheme = opts && 'unselectedIconTheme' in opts ? opts.unselectedIconTheme : null;
    let selectedIconTheme = opts && 'selectedIconTheme' in opts ? opts.selectedIconTheme : null;
    let minWidth = opts && 'minWidth' in opts ? opts.minWidth : null;
    let minExtendedWidth = opts && 'minExtendedWidth' in opts ? opts.minExtendedWidth : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[backgroundColor$7] = backgroundColor;
    this[extended$] = extended;
    this[leading$1] = leading;
    this[trailing$1] = trailing;
    this[destinations$] = destinations;
    this[selectedIndex$] = selectedIndex;
    this[onDestinationSelected$] = onDestinationSelected;
    this[elevation$11] = elevation;
    this[groupAlignment$] = groupAlignment;
    this[labelType$] = labelType;
    this[unselectedLabelTextStyle$] = unselectedLabelTextStyle;
    this[selectedLabelTextStyle$] = selectedLabelTextStyle;
    this[unselectedIconTheme$] = unselectedIconTheme;
    this[selectedIconTheme$] = selectedIconTheme;
    this[minWidth$0] = minWidth;
    this[minExtendedWidth$] = minExtendedWidth;
    if (!(destinations != null && dart.notNull(destinations[$length]) >= 2)) dart.assertFailed(null, L56, 147, 16, "destinations != null && destinations.length >= 2");
    if (!(selectedIndex != null)) dart.assertFailed(null, L56, 148, 16, "selectedIndex != null");
    if (!(0 <= dart.notNull(selectedIndex) && dart.notNull(selectedIndex) < dart.notNull(destinations[$length]))) dart.assertFailed(null, L56, 149, 16, "0 <= selectedIndex && selectedIndex < destinations.length");
    if (!(elevation == null || dart.notNull(elevation) > 0)) dart.assertFailed(null, L56, 150, 16, "elevation == null || elevation > 0");
    if (!(minWidth == null || dart.notNull(minWidth) > 0)) dart.assertFailed(null, L56, 151, 16, "minWidth == null || minWidth > 0");
    if (!(minExtendedWidth == null || dart.notNull(minExtendedWidth) > 0)) dart.assertFailed(null, L56, 152, 16, "minExtendedWidth == null || minExtendedWidth > 0");
    if (!(minWidth == null || minExtendedWidth == null || dart.notNull(minExtendedWidth) >= dart.notNull(minWidth))) dart.assertFailed(null, L56, 153, 16, "(minWidth == null || minExtendedWidth == null) || minExtendedWidth >= minWidth");
    if (!(extended != null)) dart.assertFailed(null, L56, 154, 16, "extended != null");
    if (!(!dart.test(extended) || labelType == null || labelType == navigation_rail.NavigationRailLabelType.none)) dart.assertFailed(null, L56, 155, 16, "!extended || (labelType == null || labelType == NavigationRailLabelType.none)");
    navigation_rail.NavigationRail.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = navigation_rail.NavigationRail.prototype;
  dart.addTypeTests(navigation_rail.NavigationRail);
  dart.addTypeCaches(navigation_rail.NavigationRail);
  dart.setMethodSignature(navigation_rail.NavigationRail, () => ({
    __proto__: dart.getMethods(navigation_rail.NavigationRail.__proto__),
    createState: dart.fnType(dart.legacy(navigation_rail._NavigationRailState), [])
  }));
  dart.setLibraryUri(navigation_rail.NavigationRail, L57);
  dart.setFieldSignature(navigation_rail.NavigationRail, () => ({
    __proto__: dart.getFields(navigation_rail.NavigationRail.__proto__),
    backgroundColor: dart.finalFieldType(dart.legacy(ui.Color)),
    extended: dart.finalFieldType(dart.legacy(core.bool)),
    leading: dart.finalFieldType(dart.legacy(framework.Widget)),
    trailing: dart.finalFieldType(dart.legacy(framework.Widget)),
    destinations: dart.finalFieldType(dart.legacy(core.List$(dart.legacy(navigation_rail.NavigationRailDestination)))),
    selectedIndex: dart.finalFieldType(dart.legacy(core.int)),
    onDestinationSelected: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, [dart.legacy(core.int)]))),
    elevation: dart.finalFieldType(dart.legacy(core.double)),
    groupAlignment: dart.finalFieldType(dart.legacy(core.double)),
    labelType: dart.finalFieldType(dart.legacy(navigation_rail.NavigationRailLabelType)),
    unselectedLabelTextStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    selectedLabelTextStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    unselectedIconTheme: dart.finalFieldType(dart.legacy(icon_theme_data.IconThemeData)),
    selectedIconTheme: dart.finalFieldType(dart.legacy(icon_theme_data.IconThemeData)),
    minWidth: dart.finalFieldType(dart.legacy(core.double)),
    minExtendedWidth: dart.finalFieldType(dart.legacy(core.double))
  }));
  var _destinationControllers = dart.privateName(navigation_rail, "_destinationControllers");
  var _destinationAnimations = dart.privateName(navigation_rail, "_destinationAnimations");
  var _extendedController = dart.privateName(navigation_rail, "_extendedController");
  var _extendedAnimation = dart.privateName(navigation_rail, "_extendedAnimation");
  var _initControllers = dart.privateName(navigation_rail, "_initControllers");
  var _disposeControllers = dart.privateName(navigation_rail, "_disposeControllers");
  var _resetState = dart.privateName(navigation_rail, "_resetState");
  var C1410;
  var C1411;
  var C1409;
  var C1408;
  var C1414;
  var C1415;
  var C1416;
  var C1417;
  var C1418;
  var C1419;
  var C1420;
  var C1421;
  var C1422;
  var C1423;
  var C1424;
  var C1425;
  var C1413;
  var C1412;
  var C1428;
  var C1429;
  var C1427;
  var C1426;
  var C1432;
  var C1433;
  var C1431;
  var C1430;
  var C1436;
  var C1437;
  var C1435;
  var C1434;
  var C1440;
  var C1439;
  var C1438;
  var C1443;
  var C1442;
  var C1441;
  var C1446;
  var C1447;
  var C1448;
  var C1445;
  var C1444;
  var C1451;
  var C1452;
  var C1450;
  var C1449;
  var C1455;
  var C1456;
  var C1454;
  var C1453;
  var _rebuild = dart.privateName(navigation_rail, "_rebuild");
  const State_TickerProviderStateMixin$36 = class State_TickerProviderStateMixin extends framework.State$(dart.legacy(navigation_rail.NavigationRail)) {};
  (State_TickerProviderStateMixin$36.new = function() {
    ticker_provider.TickerProviderStateMixin$(dart.legacy(navigation_rail.NavigationRail))[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36, ticker_provider.TickerProviderStateMixin$(dart.legacy(navigation_rail.NavigationRail)));
  navigation_rail._NavigationRailState = class _NavigationRailState extends State_TickerProviderStateMixin$36 {
    initState() {
      super.initState();
      this[_initControllers]();
    }
    dispose() {
      this[_disposeControllers]();
      super.dispose();
    }
    didUpdateWidget(oldWidget) {
      NavigationRailL().as(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.extended, oldWidget.extended)) {
        if (dart.test(this.widget.extended)) {
          this[_extendedController].forward();
        } else {
          this[_extendedController].reverse();
        }
      }
      if (this.widget.destinations[$length] != oldWidget.destinations[$length]) {
        this[_resetState]();
        return;
      }
      if (this.widget.selectedIndex != oldWidget.selectedIndex) {
        this[_destinationControllers][$_get](oldWidget.selectedIndex).reverse();
        this[_destinationControllers][$_get](this.widget.selectedIndex).forward();
        return;
      }
    }
    build(context) {
      let t6, t6$, t6$0, t6$1, t6$2, t6$3, t6$4, t6$5, t6$6, t6$7, t6$8, t6$9, t6$10, t6$11, t6$12, t6$13, t6$14, t6$15, t6$16, t6$17, t6$18, t6$19, t6$20, t6$21, t6$22, t6$23;
      let theme = theme$.Theme.of(context);
      let navigationRailTheme = navigation_rail_theme.NavigationRailTheme.of(context);
      let localizations = material_localizations.MaterialLocalizations.of(context);
      let backgroundColor = (t6$ = (t6 = this.widget.backgroundColor, t6 == null ? navigationRailTheme.backgroundColor : t6), t6$ == null ? theme.colorScheme.surface : t6$);
      let elevation = (t6$1 = (t6$0 = this.widget.elevation, t6$0 == null ? navigationRailTheme.elevation : t6$0), t6$1 == null ? 0.0 : t6$1);
      let minWidth = (t6$2 = this.widget.minWidth, t6$2 == null ? 72 : t6$2);
      let minExtendedWidth = (t6$3 = this.widget.minExtendedWidth, t6$3 == null ? 256 : t6$3);
      let baseSelectedColor = theme.colorScheme.primary;
      let baseUnselectedColor = theme.colorScheme.onSurface.withOpacity(0.64);
      let defaultUnselectedIconTheme = (t6$4 = this.widget.unselectedIconTheme, t6$4 == null ? navigationRailTheme.unselectedIconTheme : t6$4);
      let unselectedIconTheme = new icon_theme_data.IconThemeData.new({size: (t6$6 = (t6$5 = defaultUnselectedIconTheme, t6$5 == null ? null : t6$5.size), t6$6 == null ? 24.0 : t6$6), color: (t6$8 = (t6$7 = defaultUnselectedIconTheme, t6$7 == null ? null : t6$7.color), t6$8 == null ? theme.colorScheme.onSurface : t6$8), opacity: (t6$10 = (t6$9 = defaultUnselectedIconTheme, t6$9 == null ? null : t6$9.opacity), t6$10 == null ? 0.64 : t6$10)});
      let defaultSelectedIconTheme = (t6$11 = this.widget.selectedIconTheme, t6$11 == null ? navigationRailTheme.selectedIconTheme : t6$11);
      let selectedIconTheme = new icon_theme_data.IconThemeData.new({size: (t6$13 = (t6$12 = defaultSelectedIconTheme, t6$12 == null ? null : t6$12.size), t6$13 == null ? 24.0 : t6$13), color: (t6$15 = (t6$14 = defaultSelectedIconTheme, t6$14 == null ? null : t6$14.color), t6$15 == null ? theme.colorScheme.primary : t6$15), opacity: (t6$17 = (t6$16 = defaultSelectedIconTheme, t6$16 == null ? null : t6$16.opacity), t6$17 == null ? 1.0 : t6$17)});
      let unselectedLabelTextStyle = theme.textTheme.bodyText1.copyWith({color: baseUnselectedColor}).merge((t6$18 = this.widget.unselectedLabelTextStyle, t6$18 == null ? navigationRailTheme.unselectedLabelTextStyle : t6$18));
      let selectedLabelTextStyle = theme.textTheme.bodyText1.copyWith({color: baseSelectedColor}).merge((t6$19 = this.widget.selectedLabelTextStyle, t6$19 == null ? navigationRailTheme.selectedLabelTextStyle : t6$19));
      let groupAlignment = (t6$21 = (t6$20 = this.widget.groupAlignment, t6$20 == null ? navigationRailTheme.groupAlignment : t6$20), t6$21 == null ? -1.0 : t6$21);
      let labelType = (t6$23 = (t6$22 = this.widget.labelType, t6$22 == null ? navigationRailTheme.labelType : t6$22), t6$23 == null ? navigation_rail.NavigationRailLabelType.none : t6$23);
      return new navigation_rail._ExtendedNavigationRailAnimation.new({animation: this[_extendedAnimation], child: new basic.Semantics.new({explicitChildNodes: true, child: new material.Material.new({elevation: elevation, color: backgroundColor, child: new basic.Column.new({children: (() => {
                let t6 = JSArrayOfWidgetL().of([]);
                t6[$add](navigation_rail._verticalSpacer);
                if (this.widget.leading != null) for (let t7 of JSArrayOfWidgetL().of([new basic.ConstrainedBox.new({constraints: new box.BoxConstraints.new({minWidth: ui.lerpDouble(minWidth, minExtendedWidth, this[_extendedAnimation].value)}), child: this.widget.leading, $creationLocationd_0dea112b090073317d4: C1408 || CT.C1408}), navigation_rail._verticalSpacer]))
                  t6[$add](t7);
                t6[$add](new basic.Expanded.new({child: new basic.Align.new({alignment: new alignment.Alignment.new(0.0, groupAlignment), child: new basic.Column.new({mainAxisSize: flex.MainAxisSize.min, children: (() => {
                        let t8 = JSArrayOfWidgetL().of([]);
                        for (let i = 0; i < dart.notNull(this.widget.destinations[$length]); i = i + 1)
                          t8[$add](new navigation_rail._RailDestination.new({minWidth: minWidth, minExtendedWidth: minExtendedWidth, extendedTransitionAnimation: this[_extendedAnimation], selected: this.widget.selectedIndex === i, icon: this.widget.selectedIndex === i ? this.widget.destinations[$_get](i).selectedIcon : this.widget.destinations[$_get](i).icon, label: this.widget.destinations[$_get](i).label, destinationAnimation: this[_destinationAnimations][$_get](i), labelType: labelType, iconTheme: this.widget.selectedIndex === i ? selectedIconTheme : unselectedIconTheme, labelTextStyle: this.widget.selectedIndex === i ? selectedLabelTextStyle : unselectedLabelTextStyle, onTap: dart.fn(() => {
                              let t10, t9;
                              t9 = this.widget;
                              t10 = i;
                              t9.onDestinationSelected(t10);
                            }, VoidToNullN()), indexLabel: localizations.tabLabel({tabIndex: i + 1, tabCount: this.widget.destinations[$length]}), $creationLocationd_0dea112b090073317d4: C1412 || CT.C1412}));
                        if (this.widget.trailing != null) t8[$add](new basic.ConstrainedBox.new({constraints: new box.BoxConstraints.new({minWidth: ui.lerpDouble(minWidth, minExtendedWidth, this[_extendedAnimation].value)}), child: this.widget.trailing, $creationLocationd_0dea112b090073317d4: C1426 || CT.C1426}));
                        return t8;
                      })(), $creationLocationd_0dea112b090073317d4: C1430 || CT.C1430}), $creationLocationd_0dea112b090073317d4: C1434 || CT.C1434}), $creationLocationd_0dea112b090073317d4: C1438 || CT.C1438}));
                return t6;
              })(), $creationLocationd_0dea112b090073317d4: C1441 || CT.C1441}), $creationLocationd_0dea112b090073317d4: C1444 || CT.C1444}), $creationLocationd_0dea112b090073317d4: C1449 || CT.C1449}), $creationLocationd_0dea112b090073317d4: C1453 || CT.C1453});
    }
    [_disposeControllers]() {
      for (let controller of this[_destinationControllers]) {
        controller.dispose();
      }
      this[_extendedController].dispose();
    }
    [_initControllers]() {
      this[_destinationControllers] = ListOfAnimationControllerL().generate(this.widget.destinations[$length], dart.fn(index => {
        let t9;
        t9 = new animation_controller.AnimationController.new({duration: theme$.kThemeAnimationDuration, vsync: this});
        return (() => {
          t9.addListener(dart.bind(this, _rebuild));
          return t9;
        })();
      }, intLToAnimationControllerL()));
      this[_destinationAnimations] = this[_destinationControllers][$map](AnimationLOfdoubleL(), dart.fn(controller => controller.view, AnimationControllerLToAnimationLOfdoubleL()))[$toList]();
      this[_destinationControllers][$_get](this.widget.selectedIndex).value = 1.0;
      this[_extendedController] = new animation_controller.AnimationController.new({duration: theme$.kThemeAnimationDuration, vsync: this, value: dart.test(this.widget.extended) ? 1.0 : 0.0});
      this[_extendedAnimation] = new animations.CurvedAnimation.new({parent: this[_extendedController], curve: curves.Curves.easeInOut});
      this[_extendedController].addListener(dart.fn(() => {
        this[_rebuild]();
      }, VoidToNullN()));
    }
    [_resetState]() {
      this[_disposeControllers]();
      this[_initControllers]();
    }
    [_rebuild]() {
      this.setState(dart.fn(() => {
      }, VoidToNullN()));
    }
  };
  (navigation_rail._NavigationRailState.new = function() {
    this[_destinationControllers] = JSArrayOfAnimationControllerL().of([]);
    this[_destinationAnimations] = null;
    this[_extendedController] = null;
    this[_extendedAnimation] = null;
    navigation_rail._NavigationRailState.__proto__.new.call(this);
    ;
  }).prototype = navigation_rail._NavigationRailState.prototype;
  dart.addTypeTests(navigation_rail._NavigationRailState);
  dart.addTypeCaches(navigation_rail._NavigationRailState);
  dart.setMethodSignature(navigation_rail._NavigationRailState, () => ({
    __proto__: dart.getMethods(navigation_rail._NavigationRailState.__proto__),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)]),
    [_disposeControllers]: dart.fnType(dart.void, []),
    [_initControllers]: dart.fnType(dart.void, []),
    [_resetState]: dart.fnType(dart.void, []),
    [_rebuild]: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(navigation_rail._NavigationRailState, L57);
  dart.setFieldSignature(navigation_rail._NavigationRailState, () => ({
    __proto__: dart.getFields(navigation_rail._NavigationRailState.__proto__),
    [_destinationControllers]: dart.fieldType(dart.legacy(core.List$(dart.legacy(animation_controller.AnimationController)))),
    [_destinationAnimations]: dart.fieldType(dart.legacy(core.List$(dart.legacy(animation.Animation$(dart.legacy(core.double)))))),
    [_extendedController]: dart.fieldType(dart.legacy(animation_controller.AnimationController)),
    [_extendedAnimation]: dart.fieldType(dart.legacy(animation.Animation$(dart.legacy(core.double))))
  }));
  var _positionAnimation$ = dart.privateName(navigation_rail, "_positionAnimation");
  var C1459;
  var C1460;
  var C1458;
  var C1457;
  var C1463;
  var C1464;
  var C1462;
  var C1461;
  var C1467;
  var C1468;
  var C1466;
  var C1465;
  var C1471;
  var C1472;
  var C1473;
  var C1470;
  var C1469;
  var C1476;
  var C1477;
  var C1478;
  var C1475;
  var C1474;
  var C1481;
  var C1482;
  var C1483;
  var C1480;
  var C1479;
  var C1486;
  var C1485;
  var C1484;
  var _extendedLabelFadeValue = dart.privateName(navigation_rail, "_extendedLabelFadeValue");
  var C1489;
  var C1490;
  var C1491;
  var C1488;
  var C1487;
  var C1494;
  var C1495;
  var C1496;
  var C1497;
  var C1493;
  var C1492;
  var C1501;
  var C1500;
  var C1499;
  var C1498;
  var C1504;
  var C1503;
  var C1502;
  var C1507;
  var C1506;
  var C1505;
  var C1510;
  var C1511;
  var C1509;
  var C1508;
  var _name$12 = dart.privateName(navigation_rail, "_name");
  var C1512;
  var C1513;
  var C1516;
  var C1515;
  var C1514;
  var _normalLabelFadeInValue = dart.privateName(navigation_rail, "_normalLabelFadeInValue");
  var _normalLabelFadeOutValue = dart.privateName(navigation_rail, "_normalLabelFadeOutValue");
  var C1519;
  var C1520;
  var C1521;
  var C1518;
  var C1517;
  var C1524;
  var C1525;
  var C1526;
  var C1527;
  var C1523;
  var C1522;
  var C1530;
  var C1529;
  var C1528;
  var C1533;
  var C1534;
  var C1535;
  var C1532;
  var C1531;
  var C1538;
  var C1537;
  var C1536;
  var C1541;
  var C1542;
  var C1543;
  var C1540;
  var C1539;
  var C1544;
  var C1548;
  var C1547;
  var C1546;
  var C1545;
  var C1552;
  var C1551;
  var C1550;
  var C1549;
  var C1555;
  var C1554;
  var C1553;
  var C1558;
  var C1559;
  var C1560;
  var C1557;
  var C1556;
  var C1561;
  var C1564;
  var C1565;
  var C1566;
  var C1567;
  var C1568;
  var C1569;
  var C1570;
  var C1571;
  var C1563;
  var C1562;
  var C1574;
  var C1575;
  var C1576;
  var C1573;
  var C1572;
  var C1579;
  var C1578;
  var C1577;
  var C1582;
  var C1581;
  var C1580;
  var C1585;
  var C1586;
  var C1587;
  var C1584;
  var C1583;
  navigation_rail._RailDestination = class _RailDestination extends framework.StatelessWidget {
    build(context) {
      let themedIcon = new icon_theme.IconTheme.new({data: this.iconTheme, child: this.icon, $creationLocationd_0dea112b090073317d4: C1457 || CT.C1457});
      let styledLabel = new text$.DefaultTextStyle.new({style: this.labelTextStyle, child: this.label, $creationLocationd_0dea112b090073317d4: C1461 || CT.C1461});
      let content = null;
      switch (this.labelType) {
        case C1512 || CT.C1512:
        {
          let iconPart = new basic.SizedBox.new({width: this.minWidth, height: this.minWidth, child: new basic.Align.new({alignment: alignment.Alignment.center, child: themedIcon, $creationLocationd_0dea112b090073317d4: C1465 || CT.C1465}), $creationLocationd_0dea112b090073317d4: C1469 || CT.C1469});
          if (this.extendedTransitionAnimation.value === 0) {
            content = new basic.Stack.new({children: JSArrayOfWidgetL().of([iconPart, new basic.SizedBox.new({width: 0.0, height: 0.0, child: new basic.Opacity.new({alwaysIncludeSemantics: true, opacity: 0.0, child: this.label, $creationLocationd_0dea112b090073317d4: C1474 || CT.C1474}), $creationLocationd_0dea112b090073317d4: C1479 || CT.C1479})]), $creationLocationd_0dea112b090073317d4: C1484 || CT.C1484});
          } else {
            content = new basic.ConstrainedBox.new({constraints: new box.BoxConstraints.new({minWidth: ui.lerpDouble(this.minWidth, this.minExtendedWidth, this.extendedTransitionAnimation.value)}), child: new basic.ClipRect.new({child: new basic.Row.new({children: JSArrayOfWidgetL().of([iconPart, new basic.Align.new({heightFactor: 1.0, widthFactor: this.extendedTransitionAnimation.value, alignment: alignment.AlignmentDirectional.centerStart, child: new basic.Opacity.new({alwaysIncludeSemantics: true, opacity: this[_extendedLabelFadeValue](), child: styledLabel, $creationLocationd_0dea112b090073317d4: C1487 || CT.C1487}), $creationLocationd_0dea112b090073317d4: C1492 || CT.C1492}), C1498 || CT.C1498]), $creationLocationd_0dea112b090073317d4: C1502 || CT.C1502}), $creationLocationd_0dea112b090073317d4: C1505 || CT.C1505}), $creationLocationd_0dea112b090073317d4: C1508 || CT.C1508});
          }
          break;
        }
        case C1544 || CT.C1544:
        {
          let appearingAnimationValue = 1 - dart.notNull(this[_positionAnimation$].value);
          let verticalPadding = ui.lerpDouble(24, 16, appearingAnimationValue);
          content = new container.Container.new({constraints: new box.BoxConstraints.new({minWidth: this.minWidth, minHeight: this.minWidth}), padding: C1513 || CT.C1513, child: new basic.ClipRect.new({child: new basic.Column.new({mainAxisSize: flex.MainAxisSize.min, mainAxisAlignment: flex.MainAxisAlignment.center, children: JSArrayOfWidgetL().of([new basic.SizedBox.new({height: verticalPadding, $creationLocationd_0dea112b090073317d4: C1514 || CT.C1514}), themedIcon, new basic.Align.new({alignment: alignment.Alignment.topCenter, heightFactor: appearingAnimationValue, widthFactor: 1.0, child: new basic.Opacity.new({alwaysIncludeSemantics: true, opacity: dart.test(this.selected) ? this[_normalLabelFadeInValue]() : this[_normalLabelFadeOutValue](), child: styledLabel, $creationLocationd_0dea112b090073317d4: C1517 || CT.C1517}), $creationLocationd_0dea112b090073317d4: C1522 || CT.C1522}), new basic.SizedBox.new({height: verticalPadding, $creationLocationd_0dea112b090073317d4: C1528 || CT.C1528})]), $creationLocationd_0dea112b090073317d4: C1531 || CT.C1531}), $creationLocationd_0dea112b090073317d4: C1536 || CT.C1536}), $creationLocationd_0dea112b090073317d4: C1539 || CT.C1539});
          break;
        }
        case C1561 || CT.C1561:
        {
          content = new container.Container.new({constraints: new box.BoxConstraints.new({minWidth: this.minWidth, minHeight: this.minWidth}), padding: C1513 || CT.C1513, child: new basic.Column.new({children: JSArrayOfWidgetL().of([C1545 || CT.C1545, themedIcon, styledLabel, C1549 || CT.C1549]), $creationLocationd_0dea112b090073317d4: C1553 || CT.C1553}), $creationLocationd_0dea112b090073317d4: C1556 || CT.C1556});
          break;
        }
      }
      let colors = theme$.Theme.of(context).colorScheme;
      return new basic.Semantics.new({container: true, selected: this.selected, child: new basic.Stack.new({children: JSArrayOfWidgetL().of([new material.Material.new({type: material.MaterialType.transparency, clipBehavior: ui.Clip.none, child: new ink_well.InkResponse.new({onTap: this.onTap, onHover: dart.fn(_ => {
                }, boolLToNullN()), highlightShape: box_border.BoxShape.rectangle, borderRadius: new border_radius.BorderRadius.all(new ui.Radius.circular(dart.notNull(this.minWidth) / 2.0)), containedInkWell: true, splashColor: colors.primary.withOpacity(0.12), hoverColor: colors.primary.withOpacity(0.04), child: content, $creationLocationd_0dea112b090073317d4: C1562 || CT.C1562}), $creationLocationd_0dea112b090073317d4: C1572 || CT.C1572}), new basic.Semantics.new({label: this.indexLabel, $creationLocationd_0dea112b090073317d4: C1577 || CT.C1577})]), $creationLocationd_0dea112b090073317d4: C1580 || CT.C1580}), $creationLocationd_0dea112b090073317d4: C1583 || CT.C1583});
    }
    [_normalLabelFadeInValue]() {
      if (dart.notNull(this.destinationAnimation.value) < 0.25) {
        return 0.0;
      } else if (dart.notNull(this.destinationAnimation.value) < 0.75) {
        return (dart.notNull(this.destinationAnimation.value) - 0.25) * 2;
      } else {
        return 1.0;
      }
    }
    [_normalLabelFadeOutValue]() {
      if (dart.notNull(this.destinationAnimation.value) > 0.75) {
        return (dart.notNull(this.destinationAnimation.value) - 0.75) * 4.0;
      } else {
        return 0.0;
      }
    }
    [_extendedLabelFadeValue]() {
      return dart.notNull(this.extendedTransitionAnimation.value) < 0.25 ? dart.notNull(this.extendedTransitionAnimation.value) * 4.0 : 1.0;
    }
  };
  (navigation_rail._RailDestination.new = function(opts) {
    let minWidth = opts && 'minWidth' in opts ? opts.minWidth : null;
    let minExtendedWidth = opts && 'minExtendedWidth' in opts ? opts.minExtendedWidth : null;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    let label = opts && 'label' in opts ? opts.label : null;
    let destinationAnimation = opts && 'destinationAnimation' in opts ? opts.destinationAnimation : null;
    let extendedTransitionAnimation = opts && 'extendedTransitionAnimation' in opts ? opts.extendedTransitionAnimation : null;
    let labelType = opts && 'labelType' in opts ? opts.labelType : null;
    let selected = opts && 'selected' in opts ? opts.selected : null;
    let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
    let labelTextStyle = opts && 'labelTextStyle' in opts ? opts.labelTextStyle : null;
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    let indexLabel = opts && 'indexLabel' in opts ? opts.indexLabel : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this.minWidth = minWidth;
    this.minExtendedWidth = minExtendedWidth;
    this.icon = icon;
    this.label = label;
    this.destinationAnimation = destinationAnimation;
    this.extendedTransitionAnimation = extendedTransitionAnimation;
    this.labelType = labelType;
    this.selected = selected;
    this.iconTheme = iconTheme;
    this.labelTextStyle = labelTextStyle;
    this.onTap = onTap;
    this.indexLabel = indexLabel;
    if (!(minWidth != null)) dart.assertFailed(null, L56, 585, 15, "minWidth != null");
    if (!(minExtendedWidth != null)) dart.assertFailed(null, L56, 586, 15, "minExtendedWidth != null");
    if (!(icon != null)) dart.assertFailed(null, L56, 587, 15, "icon != null");
    if (!(label != null)) dart.assertFailed(null, L56, 588, 15, "label != null");
    if (!(destinationAnimation != null)) dart.assertFailed(null, L56, 589, 15, "destinationAnimation != null");
    if (!(extendedTransitionAnimation != null)) dart.assertFailed(null, L56, 590, 15, "extendedTransitionAnimation != null");
    if (!(labelType != null)) dart.assertFailed(null, L56, 591, 15, "labelType != null");
    if (!(selected != null)) dart.assertFailed(null, L56, 592, 15, "selected != null");
    if (!(iconTheme != null)) dart.assertFailed(null, L56, 593, 15, "iconTheme != null");
    if (!(labelTextStyle != null)) dart.assertFailed(null, L56, 594, 15, "labelTextStyle != null");
    if (!(onTap != null)) dart.assertFailed(null, L56, 595, 15, "onTap != null");
    if (!(indexLabel != null)) dart.assertFailed(null, L56, 596, 15, "indexLabel != null");
    this[_positionAnimation$] = new animations.CurvedAnimation.new({parent: new animations.ReverseAnimation.new(destinationAnimation), curve: curves.Curves.easeInOut, reverseCurve: curves.Curves.easeInOut.flipped});
    navigation_rail._RailDestination.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = navigation_rail._RailDestination.prototype;
  dart.addTypeTests(navigation_rail._RailDestination);
  dart.addTypeCaches(navigation_rail._RailDestination);
  dart.setMethodSignature(navigation_rail._RailDestination, () => ({
    __proto__: dart.getMethods(navigation_rail._RailDestination.__proto__),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)]),
    [_normalLabelFadeInValue]: dart.fnType(dart.legacy(core.double), []),
    [_normalLabelFadeOutValue]: dart.fnType(dart.legacy(core.double), []),
    [_extendedLabelFadeValue]: dart.fnType(dart.legacy(core.double), [])
  }));
  dart.setLibraryUri(navigation_rail._RailDestination, L57);
  dart.setFieldSignature(navigation_rail._RailDestination, () => ({
    __proto__: dart.getFields(navigation_rail._RailDestination.__proto__),
    minWidth: dart.finalFieldType(dart.legacy(core.double)),
    minExtendedWidth: dart.finalFieldType(dart.legacy(core.double)),
    icon: dart.finalFieldType(dart.legacy(framework.Widget)),
    label: dart.finalFieldType(dart.legacy(framework.Widget)),
    destinationAnimation: dart.finalFieldType(dart.legacy(animation.Animation$(dart.legacy(core.double)))),
    labelType: dart.finalFieldType(dart.legacy(navigation_rail.NavigationRailLabelType)),
    selected: dart.finalFieldType(dart.legacy(core.bool)),
    extendedTransitionAnimation: dart.finalFieldType(dart.legacy(animation.Animation$(dart.legacy(core.double)))),
    iconTheme: dart.finalFieldType(dart.legacy(icon_theme_data.IconThemeData)),
    labelTextStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    onTap: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, []))),
    indexLabel: dart.finalFieldType(dart.legacy(core.String)),
    [_positionAnimation$]: dart.finalFieldType(dart.legacy(animation.Animation$(dart.legacy(core.double))))
  }));
  var C1588;
  navigation_rail.NavigationRailLabelType = class NavigationRailLabelType extends core.Object {
    toString() {
      return this[_name$12];
    }
  };
  (navigation_rail.NavigationRailLabelType.new = function(index, _name) {
    this.index = index;
    this[_name$12] = _name;
    ;
  }).prototype = navigation_rail.NavigationRailLabelType.prototype;
  dart.addTypeTests(navigation_rail.NavigationRailLabelType);
  dart.addTypeCaches(navigation_rail.NavigationRailLabelType);
  dart.setMethodSignature(navigation_rail.NavigationRailLabelType, () => ({
    __proto__: dart.getMethods(navigation_rail.NavigationRailLabelType.__proto__),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setLibraryUri(navigation_rail.NavigationRailLabelType, L57);
  dart.setFieldSignature(navigation_rail.NavigationRailLabelType, () => ({
    __proto__: dart.getFields(navigation_rail.NavigationRailLabelType.__proto__),
    index: dart.finalFieldType(dart.legacy(core.int)),
    [_name$12]: dart.finalFieldType(dart.legacy(core.String))
  }));
  dart.defineExtensionMethods(navigation_rail.NavigationRailLabelType, ['toString']);
  navigation_rail.NavigationRailLabelType.none = C1512 || CT.C1512;
  navigation_rail.NavigationRailLabelType.selected = C1544 || CT.C1544;
  navigation_rail.NavigationRailLabelType.all = C1561 || CT.C1561;
  navigation_rail.NavigationRailLabelType.values = C1588 || CT.C1588;
  var icon$1 = dart.privateName(navigation_rail, "NavigationRailDestination.icon");
  var selectedIcon$ = dart.privateName(navigation_rail, "NavigationRailDestination.selectedIcon");
  var label$0 = dart.privateName(navigation_rail, "NavigationRailDestination.label");
  navigation_rail.NavigationRailDestination = class NavigationRailDestination extends core.Object {
    get icon() {
      return this[icon$1];
    }
    set icon(value) {
      super.icon = value;
    }
    get selectedIcon() {
      return this[selectedIcon$];
    }
    set selectedIcon(value) {
      super.selectedIcon = value;
    }
    get label() {
      return this[label$0];
    }
    set label(value) {
      super.label = value;
    }
  };
  (navigation_rail.NavigationRailDestination.new = function(opts) {
    let t9;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    let selectedIcon = opts && 'selectedIcon' in opts ? opts.selectedIcon : null;
    let label = opts && 'label' in opts ? opts.label : null;
    this[icon$1] = icon;
    this[label$0] = label;
    this[selectedIcon$] = (t9 = selectedIcon, t9 == null ? icon : t9);
    if (!(icon != null)) dart.assertFailed(null, L56, 818, 15, "icon != null");
    ;
  }).prototype = navigation_rail.NavigationRailDestination.prototype;
  dart.addTypeTests(navigation_rail.NavigationRailDestination);
  dart.addTypeCaches(navigation_rail.NavigationRailDestination);
  dart.setLibraryUri(navigation_rail.NavigationRailDestination, L57);
  dart.setFieldSignature(navigation_rail.NavigationRailDestination, () => ({
    __proto__: dart.getFields(navigation_rail.NavigationRailDestination.__proto__),
    icon: dart.finalFieldType(dart.legacy(framework.Widget)),
    selectedIcon: dart.finalFieldType(dart.legacy(framework.Widget)),
    label: dart.finalFieldType(dart.legacy(framework.Widget))
  }));
  var animation$5 = dart.privateName(navigation_rail, "_ExtendedNavigationRailAnimation.animation");
  navigation_rail._ExtendedNavigationRailAnimation = class _ExtendedNavigationRailAnimation extends framework.InheritedWidget {
    get animation() {
      return this[animation$5];
    }
    set animation(value) {
      super.animation = value;
    }
    updateShouldNotify(old) {
      _ExtendedNavigationRailAnimationL().as(old);
      return !dart.equals(this.animation, old.animation);
    }
  };
  (navigation_rail._ExtendedNavigationRailAnimation.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let animation = opts && 'animation' in opts ? opts.animation : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[animation$5] = animation;
    if (!(child != null)) dart.assertFailed(null, L56, 861, 15, "child != null");
    navigation_rail._ExtendedNavigationRailAnimation.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = navigation_rail._ExtendedNavigationRailAnimation.prototype;
  dart.addTypeTests(navigation_rail._ExtendedNavigationRailAnimation);
  dart.addTypeCaches(navigation_rail._ExtendedNavigationRailAnimation);
  dart.setMethodSignature(navigation_rail._ExtendedNavigationRailAnimation, () => ({
    __proto__: dart.getMethods(navigation_rail._ExtendedNavigationRailAnimation.__proto__),
    updateShouldNotify: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)])
  }));
  dart.setLibraryUri(navigation_rail._ExtendedNavigationRailAnimation, L57);
  dart.setFieldSignature(navigation_rail._ExtendedNavigationRailAnimation, () => ({
    __proto__: dart.getFields(navigation_rail._ExtendedNavigationRailAnimation.__proto__),
    animation: dart.finalFieldType(dart.legacy(animation.Animation$(dart.legacy(core.double))))
  }));
  var C1592;
  var C1591;
  var C1590;
  var C1589;
  dart.defineLazy(navigation_rail, {
    /*navigation_rail._minRailWidth*/get _minRailWidth() {
      return 72;
    },
    /*navigation_rail._minExtendedRailWidth*/get _minExtendedRailWidth() {
      return 256;
    },
    /*navigation_rail._horizontalDestinationPadding*/get _horizontalDestinationPadding() {
      return 8;
    },
    /*navigation_rail._verticalDestinationPaddingNoLabel*/get _verticalDestinationPaddingNoLabel() {
      return 24;
    },
    /*navigation_rail._verticalDestinationPaddingWithLabel*/get _verticalDestinationPaddingWithLabel() {
      return 16;
    },
    /*navigation_rail._verticalSpacer*/get _verticalSpacer() {
      return C1589 || CT.C1589;
    }
  }, true);
  var NavigationRailThemeData_labelType = dart.privateName(navigation_rail_theme, "NavigationRailThemeData.labelType");
  var NavigationRailThemeData_groupAlignment = dart.privateName(navigation_rail_theme, "NavigationRailThemeData.groupAlignment");
  var NavigationRailThemeData_selectedIconTheme = dart.privateName(navigation_rail_theme, "NavigationRailThemeData.selectedIconTheme");
  var NavigationRailThemeData_unselectedIconTheme = dart.privateName(navigation_rail_theme, "NavigationRailThemeData.unselectedIconTheme");
  var NavigationRailThemeData_selectedLabelTextStyle = dart.privateName(navigation_rail_theme, "NavigationRailThemeData.selectedLabelTextStyle");
  var NavigationRailThemeData_unselectedLabelTextStyle = dart.privateName(navigation_rail_theme, "NavigationRailThemeData.unselectedLabelTextStyle");
  var NavigationRailThemeData_elevation = dart.privateName(navigation_rail_theme, "NavigationRailThemeData.elevation");
  var NavigationRailThemeData_backgroundColor = dart.privateName(navigation_rail_theme, "NavigationRailThemeData.backgroundColor");
  var C1593;
  const Object_Diagnosticable$36$8 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$8.new = function() {
  }).prototype = Object_Diagnosticable$36$8.prototype;
  dart.applyMixin(Object_Diagnosticable$36$8, diagnostics.Diagnosticable);
  navigation_rail_theme.NavigationRailThemeData = class NavigationRailThemeData extends Object_Diagnosticable$36$8 {
    get backgroundColor() {
      return this[backgroundColor$8];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get elevation() {
      return this[elevation$12];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get unselectedLabelTextStyle() {
      return this[unselectedLabelTextStyle$0];
    }
    set unselectedLabelTextStyle(value) {
      super.unselectedLabelTextStyle = value;
    }
    get selectedLabelTextStyle() {
      return this[selectedLabelTextStyle$0];
    }
    set selectedLabelTextStyle(value) {
      super.selectedLabelTextStyle = value;
    }
    get unselectedIconTheme() {
      return this[unselectedIconTheme$0];
    }
    set unselectedIconTheme(value) {
      super.unselectedIconTheme = value;
    }
    get selectedIconTheme() {
      return this[selectedIconTheme$0];
    }
    set selectedIconTheme(value) {
      super.selectedIconTheme = value;
    }
    get groupAlignment() {
      return this[groupAlignment$0];
    }
    set groupAlignment(value) {
      super.groupAlignment = value;
    }
    get labelType() {
      return this[labelType$0];
    }
    set labelType(value) {
      super.labelType = value;
    }
    copyWith(opts) {
      let t9, t9$, t9$0, t9$1, t9$2, t9$3, t9$4, t9$5;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let unselectedLabelTextStyle = opts && 'unselectedLabelTextStyle' in opts ? opts.unselectedLabelTextStyle : null;
      let selectedLabelTextStyle = opts && 'selectedLabelTextStyle' in opts ? opts.selectedLabelTextStyle : null;
      let unselectedIconTheme = opts && 'unselectedIconTheme' in opts ? opts.unselectedIconTheme : null;
      let selectedIconTheme = opts && 'selectedIconTheme' in opts ? opts.selectedIconTheme : null;
      let groupAlignment = opts && 'groupAlignment' in opts ? opts.groupAlignment : null;
      let labelType = opts && 'labelType' in opts ? opts.labelType : null;
      return new navigation_rail_theme.NavigationRailThemeData.new({backgroundColor: (t9 = backgroundColor, t9 == null ? this.backgroundColor : t9), elevation: (t9$ = elevation, t9$ == null ? this.elevation : t9$), unselectedLabelTextStyle: (t9$0 = unselectedLabelTextStyle, t9$0 == null ? this.unselectedLabelTextStyle : t9$0), selectedLabelTextStyle: (t9$1 = selectedLabelTextStyle, t9$1 == null ? this.selectedLabelTextStyle : t9$1), unselectedIconTheme: (t9$2 = unselectedIconTheme, t9$2 == null ? this.unselectedIconTheme : t9$2), selectedIconTheme: (t9$3 = selectedIconTheme, t9$3 == null ? this.selectedIconTheme : t9$3), groupAlignment: (t9$4 = groupAlignment, t9$4 == null ? this.groupAlignment : t9$4), labelType: (t9$5 = labelType, t9$5 == null ? this.labelType : t9$5)});
    }
    static lerp(a, b, t) {
      let t9, t9$, t9$0, t9$1, t9$2, t9$3, t9$4, t9$5, t9$6, t9$7, t9$8, t9$9, t9$10, t9$11, t9$12, t9$13;
      if (!(t != null)) dart.assertFailed(null, L58, 112, 12, "t != null");
      if (a == null && b == null) return null;
      return new navigation_rail_theme.NavigationRailThemeData.new({backgroundColor: ui.Color.lerp((t9 = a, t9 == null ? null : t9.backgroundColor), (t9$ = b, t9$ == null ? null : t9$.backgroundColor), t), elevation: ui.lerpDouble((t9$0 = a, t9$0 == null ? null : t9$0.elevation), (t9$1 = b, t9$1 == null ? null : t9$1.elevation), t), unselectedLabelTextStyle: text_style.TextStyle.lerp((t9$2 = a, t9$2 == null ? null : t9$2.unselectedLabelTextStyle), (t9$3 = b, t9$3 == null ? null : t9$3.unselectedLabelTextStyle), t), selectedLabelTextStyle: text_style.TextStyle.lerp((t9$4 = a, t9$4 == null ? null : t9$4.selectedLabelTextStyle), (t9$5 = b, t9$5 == null ? null : t9$5.selectedLabelTextStyle), t), unselectedIconTheme: icon_theme_data.IconThemeData.lerp((t9$6 = a, t9$6 == null ? null : t9$6.unselectedIconTheme), (t9$7 = b, t9$7 == null ? null : t9$7.unselectedIconTheme), t), selectedIconTheme: icon_theme_data.IconThemeData.lerp((t9$8 = a, t9$8 == null ? null : t9$8.selectedIconTheme), (t9$9 = b, t9$9 == null ? null : t9$9.selectedIconTheme), t), groupAlignment: ui.lerpDouble((t9$10 = a, t9$10 == null ? null : t9$10.groupAlignment), (t9$11 = b, t9$11 == null ? null : t9$11.groupAlignment), t), labelType: dart.notNull(t) < 0.5 ? (t9$12 = a, t9$12 == null ? null : t9$12.labelType) : (t9$13 = b, t9$13 == null ? null : t9$13.labelType)});
    }
    get hashCode() {
      return ui.hashValues(this.backgroundColor, this.elevation, this.unselectedLabelTextStyle, this.selectedLabelTextStyle, this.unselectedIconTheme, this.selectedIconTheme, this.groupAlignment, this.labelType);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this.runtimeType)) return false;
      return NavigationRailThemeDataL().is(other) && dart.equals(other.backgroundColor, this.backgroundColor) && other.elevation == this.elevation && dart.equals(other.unselectedLabelTextStyle, this.unselectedLabelTextStyle) && dart.equals(other.selectedLabelTextStyle, this.selectedLabelTextStyle) && dart.equals(other.unselectedIconTheme, this.unselectedIconTheme) && dart.equals(other.selectedIconTheme, this.selectedIconTheme) && other.groupAlignment == this.groupAlignment && other.labelType == this.labelType;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      let defaultData = C1593 || CT.C1593;
      properties.add(new colors.ColorProperty.new("backgroundColor", this.backgroundColor, {defaultValue: defaultData.backgroundColor}));
      properties.add(new diagnostics.DoubleProperty.new("elevation", this.elevation, {defaultValue: defaultData.elevation}));
      properties.add(new (DiagnosticsPropertyOfTextStyleL()).new("unselectedLabelTextStyle", this.unselectedLabelTextStyle, {defaultValue: defaultData.unselectedLabelTextStyle}));
      properties.add(new (DiagnosticsPropertyOfTextStyleL()).new("selectedLabelTextStyle", this.selectedLabelTextStyle, {defaultValue: defaultData.selectedLabelTextStyle}));
      properties.add(new (DiagnosticsPropertyOfIconThemeDataL()).new("unselectedIconTheme", this.unselectedIconTheme, {defaultValue: defaultData.unselectedIconTheme}));
      properties.add(new (DiagnosticsPropertyOfIconThemeDataL()).new("selectedIconTheme", this.selectedIconTheme, {defaultValue: defaultData.selectedIconTheme}));
      properties.add(new diagnostics.DoubleProperty.new("groupAlignment", this.groupAlignment, {defaultValue: defaultData.groupAlignment}));
      properties.add(new (DiagnosticsPropertyOfNavigationRailLabelTypeL()).new("labelType", this.labelType, {defaultValue: defaultData.labelType}));
    }
  };
  (navigation_rail_theme.NavigationRailThemeData.new = function(opts) {
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let unselectedLabelTextStyle = opts && 'unselectedLabelTextStyle' in opts ? opts.unselectedLabelTextStyle : null;
    let selectedLabelTextStyle = opts && 'selectedLabelTextStyle' in opts ? opts.selectedLabelTextStyle : null;
    let unselectedIconTheme = opts && 'unselectedIconTheme' in opts ? opts.unselectedIconTheme : null;
    let selectedIconTheme = opts && 'selectedIconTheme' in opts ? opts.selectedIconTheme : null;
    let groupAlignment = opts && 'groupAlignment' in opts ? opts.groupAlignment : null;
    let labelType = opts && 'labelType' in opts ? opts.labelType : null;
    this[backgroundColor$8] = backgroundColor;
    this[elevation$12] = elevation;
    this[unselectedLabelTextStyle$0] = unselectedLabelTextStyle;
    this[selectedLabelTextStyle$0] = selectedLabelTextStyle;
    this[unselectedIconTheme$0] = unselectedIconTheme;
    this[selectedIconTheme$0] = selectedIconTheme;
    this[groupAlignment$0] = groupAlignment;
    this[labelType$0] = labelType;
    ;
  }).prototype = navigation_rail_theme.NavigationRailThemeData.prototype;
  dart.addTypeTests(navigation_rail_theme.NavigationRailThemeData);
  dart.addTypeCaches(navigation_rail_theme.NavigationRailThemeData);
  const backgroundColor$8 = NavigationRailThemeData_backgroundColor;
  const elevation$12 = NavigationRailThemeData_elevation;
  const unselectedLabelTextStyle$0 = NavigationRailThemeData_unselectedLabelTextStyle;
  const selectedLabelTextStyle$0 = NavigationRailThemeData_selectedLabelTextStyle;
  const unselectedIconTheme$0 = NavigationRailThemeData_unselectedIconTheme;
  const selectedIconTheme$0 = NavigationRailThemeData_selectedIconTheme;
  const groupAlignment$0 = NavigationRailThemeData_groupAlignment;
  const labelType$0 = NavigationRailThemeData_labelType;
  dart.setMethodSignature(navigation_rail_theme.NavigationRailThemeData, () => ({
    __proto__: dart.getMethods(navigation_rail_theme.NavigationRailThemeData.__proto__),
    copyWith: dart.fnType(dart.legacy(navigation_rail_theme.NavigationRailThemeData), [], {backgroundColor: dart.legacy(ui.Color), elevation: dart.legacy(core.double), groupAlignment: dart.legacy(core.double), labelType: dart.legacy(navigation_rail.NavigationRailLabelType), selectedIconTheme: dart.legacy(icon_theme_data.IconThemeData), selectedLabelTextStyle: dart.legacy(text_style.TextStyle), unselectedIconTheme: dart.legacy(icon_theme_data.IconThemeData), unselectedLabelTextStyle: dart.legacy(text_style.TextStyle)}, {}),
    _equals: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    [$_equals]: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    debugFillProperties: dart.fnType(dart.void, [dart.legacy(diagnostics.DiagnosticPropertiesBuilder)])
  }));
  dart.setGetterSignature(navigation_rail_theme.NavigationRailThemeData, () => ({
    __proto__: dart.getGetters(navigation_rail_theme.NavigationRailThemeData.__proto__),
    hashCode: dart.legacy(core.int),
    [$hashCode]: dart.legacy(core.int)
  }));
  dart.setLibraryUri(navigation_rail_theme.NavigationRailThemeData, L59);
  dart.setFieldSignature(navigation_rail_theme.NavigationRailThemeData, () => ({
    __proto__: dart.getFields(navigation_rail_theme.NavigationRailThemeData.__proto__),
    backgroundColor: dart.finalFieldType(dart.legacy(ui.Color)),
    elevation: dart.finalFieldType(dart.legacy(core.double)),
    unselectedLabelTextStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    selectedLabelTextStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    unselectedIconTheme: dart.finalFieldType(dart.legacy(icon_theme_data.IconThemeData)),
    selectedIconTheme: dart.finalFieldType(dart.legacy(icon_theme_data.IconThemeData)),
    groupAlignment: dart.finalFieldType(dart.legacy(core.double)),
    labelType: dart.finalFieldType(dart.legacy(navigation_rail.NavigationRailLabelType))
  }));
  dart.defineExtensionMethods(navigation_rail_theme.NavigationRailThemeData, ['_equals']);
  dart.defineExtensionAccessors(navigation_rail_theme.NavigationRailThemeData, ['hashCode']);
  var C1596;
  var C1597;
  var C1595;
  var C1594;
  var data$6 = dart.privateName(navigation_rail_theme, "NavigationRailTheme.data");
  navigation_rail_theme.NavigationRailTheme = class NavigationRailTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[data$6];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t9, t9$;
      let navigationRailTheme = context.dependOnInheritedWidgetOfExactType(NavigationRailThemeL());
      t9$ = (t9 = navigationRailTheme, t9 == null ? null : t9.data);
      return t9$ == null ? theme$.Theme.of(context).navigationRailTheme : t9$;
    }
    wrap(context, child) {
      let ancestorTheme = context.findAncestorWidgetOfExactType(NavigationRailThemeL());
      return this === ancestorTheme ? child : new navigation_rail_theme.NavigationRailTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C1594 || CT.C1594});
    }
    updateShouldNotify(oldWidget) {
      NavigationRailThemeL().as(oldWidget);
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (navigation_rail_theme.NavigationRailTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[data$6] = data;
    if (!(data != null)) dart.assertFailed(null, L58, 188, 15, "data != null");
    navigation_rail_theme.NavigationRailTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = navigation_rail_theme.NavigationRailTheme.prototype;
  dart.addTypeTests(navigation_rail_theme.NavigationRailTheme);
  dart.addTypeCaches(navigation_rail_theme.NavigationRailTheme);
  dart.setMethodSignature(navigation_rail_theme.NavigationRailTheme, () => ({
    __proto__: dart.getMethods(navigation_rail_theme.NavigationRailTheme.__proto__),
    wrap: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext), dart.legacy(framework.Widget)]),
    updateShouldNotify: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)])
  }));
  dart.setLibraryUri(navigation_rail_theme.NavigationRailTheme, L59);
  dart.setFieldSignature(navigation_rail_theme.NavigationRailTheme, () => ({
    __proto__: dart.getFields(navigation_rail_theme.NavigationRailTheme.__proto__),
    data: dart.finalFieldType(dart.legacy(navigation_rail_theme.NavigationRailThemeData))
  }));
  var _start = dart.privateName(input_decorator, "_start");
  var _extent = dart.privateName(input_decorator, "_extent");
  input_decorator._InputBorderGap = class _InputBorderGap extends change_notifier.ChangeNotifier {
    get start() {
      return this[_start];
    }
    set start(value) {
      if (value != this[_start]) {
        this[_start] = value;
        this.notifyListeners();
      }
    }
    get extent() {
      return this[_extent];
    }
    set extent(value) {
      if (value != this[_extent]) {
        this[_extent] = value;
        this.notifyListeners();
      }
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this.runtimeType)) return false;
      return _InputBorderGapL().is(other) && other.start == this.start && other.extent == this.extent;
    }
    get hashCode() {
      return ui.hashValues(this.start, this.extent);
    }
  };
  (input_decorator._InputBorderGap.new = function() {
    this[_start] = null;
    this[_extent] = 0.0;
    input_decorator._InputBorderGap.__proto__.new.call(this);
    ;
  }).prototype = input_decorator._InputBorderGap.prototype;
  dart.addTypeTests(input_decorator._InputBorderGap);
  dart.addTypeCaches(input_decorator._InputBorderGap);
  dart.setMethodSignature(input_decorator._InputBorderGap, () => ({
    __proto__: dart.getMethods(input_decorator._InputBorderGap.__proto__),
    _equals: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    [$_equals]: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)])
  }));
  dart.setGetterSignature(input_decorator._InputBorderGap, () => ({
    __proto__: dart.getGetters(input_decorator._InputBorderGap.__proto__),
    start: dart.legacy(core.double),
    extent: dart.legacy(core.double),
    hashCode: dart.legacy(core.int),
    [$hashCode]: dart.legacy(core.int)
  }));
  dart.setSetterSignature(input_decorator._InputBorderGap, () => ({
    __proto__: dart.getSetters(input_decorator._InputBorderGap.__proto__),
    start: dart.legacy(core.double),
    extent: dart.legacy(core.double)
  }));
  dart.setLibraryUri(input_decorator._InputBorderGap, L60);
  dart.setFieldSignature(input_decorator._InputBorderGap, () => ({
    __proto__: dart.getFields(input_decorator._InputBorderGap.__proto__),
    [_start]: dart.fieldType(dart.legacy(core.double)),
    [_extent]: dart.fieldType(dart.legacy(core.double))
  }));
  dart.defineExtensionMethods(input_decorator._InputBorderGap, ['_equals']);
  dart.defineExtensionAccessors(input_decorator._InputBorderGap, ['hashCode']);
  input_decorator._InputBorderTween = class _InputBorderTween extends tween.Tween$(dart.legacy(input_border.InputBorder)) {
    lerp(t) {
      return InputBorderL().as(borders.ShapeBorder.lerp(this.begin, this.end, t));
    }
  };
  (input_decorator._InputBorderTween.new = function(opts) {
    let begin = opts && 'begin' in opts ? opts.begin : null;
    let end = opts && 'end' in opts ? opts.end : null;
    input_decorator._InputBorderTween.__proto__.new.call(this, {begin: begin, end: end});
    ;
  }).prototype = input_decorator._InputBorderTween.prototype;
  dart.addTypeTests(input_decorator._InputBorderTween);
  dart.addTypeCaches(input_decorator._InputBorderTween);
  dart.setLibraryUri(input_decorator._InputBorderTween, L60);
  input_decorator._InputBorderPainter = class _InputBorderPainter extends custom_paint.CustomPainter {
    get blendedColor() {
      return ui.Color.alphaBlend(this.hoverColorTween.evaluate(this.hoverAnimation), this.fillColor);
    }
    paint(canvas, size) {
      let t9;
      let borderValue = this.border.evaluate(this.borderAnimation);
      let canvasRect = ui.Offset.zero['&'](size);
      let blendedFillColor = this.blendedColor;
      if (dart.notNull(blendedFillColor.alpha) > 0) {
        canvas.drawPath(borderValue.getOuterPath(canvasRect, {textDirection: this.textDirection}), (t9 = ui.Paint.new(), (() => {
          t9.color = blendedFillColor;
          t9.style = ui.PaintingStyle.fill;
          return t9;
        })()));
      }
      borderValue.paint(canvas, canvasRect, {gapStart: this.gap.start, gapExtent: this.gap.extent, gapPercentage: this.gapAnimation.value, textDirection: this.textDirection});
    }
    shouldRepaint(oldPainter) {
      _InputBorderPainterL().as(oldPainter);
      return !dart.equals(this.borderAnimation, oldPainter.borderAnimation) || !dart.equals(this.hoverAnimation, oldPainter.hoverAnimation) || !dart.equals(this.gapAnimation, oldPainter.gapAnimation) || !dart.equals(this.border, oldPainter.border) || !dart.equals(this.gap, oldPainter.gap) || !dart.equals(this.textDirection, oldPainter.textDirection);
    }
  };
  (input_decorator._InputBorderPainter.new = function(opts) {
    let repaint = opts && 'repaint' in opts ? opts.repaint : null;
    let borderAnimation = opts && 'borderAnimation' in opts ? opts.borderAnimation : null;
    let border = opts && 'border' in opts ? opts.border : null;
    let gapAnimation = opts && 'gapAnimation' in opts ? opts.gapAnimation : null;
    let gap = opts && 'gap' in opts ? opts.gap : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
    let hoverAnimation = opts && 'hoverAnimation' in opts ? opts.hoverAnimation : null;
    let hoverColorTween = opts && 'hoverColorTween' in opts ? opts.hoverColorTween : null;
    this.borderAnimation = borderAnimation;
    this.border = border;
    this.gapAnimation = gapAnimation;
    this.gap = gap;
    this.textDirection = textDirection;
    this.fillColor = fillColor;
    this.hoverAnimation = hoverAnimation;
    this.hoverColorTween = hoverColorTween;
    input_decorator._InputBorderPainter.__proto__.new.call(this, {repaint: repaint});
    ;
  }).prototype = input_decorator._InputBorderPainter.prototype;
  dart.addTypeTests(input_decorator._InputBorderPainter);
  dart.addTypeCaches(input_decorator._InputBorderPainter);
  dart.setMethodSignature(input_decorator._InputBorderPainter, () => ({
    __proto__: dart.getMethods(input_decorator._InputBorderPainter.__proto__),
    paint: dart.fnType(dart.void, [dart.legacy(ui.Canvas), dart.legacy(ui.Size)]),
    shouldRepaint: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)])
  }));
  dart.setGetterSignature(input_decorator._InputBorderPainter, () => ({
    __proto__: dart.getGetters(input_decorator._InputBorderPainter.__proto__),
    blendedColor: dart.legacy(ui.Color)
  }));
  dart.setLibraryUri(input_decorator._InputBorderPainter, L60);
  dart.setFieldSignature(input_decorator._InputBorderPainter, () => ({
    __proto__: dart.getFields(input_decorator._InputBorderPainter.__proto__),
    borderAnimation: dart.finalFieldType(dart.legacy(animation.Animation$(dart.legacy(core.double)))),
    border: dart.finalFieldType(dart.legacy(input_decorator._InputBorderTween)),
    gapAnimation: dart.finalFieldType(dart.legacy(animation.Animation$(dart.legacy(core.double)))),
    gap: dart.finalFieldType(dart.legacy(input_decorator._InputBorderGap)),
    textDirection: dart.finalFieldType(dart.legacy(ui.TextDirection)),
    fillColor: dart.finalFieldType(dart.legacy(ui.Color)),
    hoverColorTween: dart.finalFieldType(dart.legacy(tween.ColorTween)),
    hoverAnimation: dart.finalFieldType(dart.legacy(animation.Animation$(dart.legacy(core.double))))
  }));
  var border$ = dart.privateName(input_decorator, "_BorderContainer.border");
  var gap$ = dart.privateName(input_decorator, "_BorderContainer.gap");
  var gapAnimation$ = dart.privateName(input_decorator, "_BorderContainer.gapAnimation");
  var fillColor$1 = dart.privateName(input_decorator, "_BorderContainer.fillColor");
  var hoverColor$6 = dart.privateName(input_decorator, "_BorderContainer.hoverColor");
  var isHovering$ = dart.privateName(input_decorator, "_BorderContainer.isHovering");
  var child$14 = dart.privateName(input_decorator, "_BorderContainer.child");
  input_decorator._BorderContainer = class _BorderContainer extends framework.StatefulWidget {
    get border() {
      return this[border$];
    }
    set border(value) {
      super.border = value;
    }
    get gap() {
      return this[gap$];
    }
    set gap(value) {
      super.gap = value;
    }
    get gapAnimation() {
      return this[gapAnimation$];
    }
    set gapAnimation(value) {
      super.gapAnimation = value;
    }
    get fillColor() {
      return this[fillColor$1];
    }
    set fillColor(value) {
      super.fillColor = value;
    }
    get hoverColor() {
      return this[hoverColor$6];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get isHovering() {
      return this[isHovering$];
    }
    set isHovering(value) {
      super.isHovering = value;
    }
    get child() {
      return this[child$14];
    }
    set child(value) {
      super.child = value;
    }
    createState() {
      return new input_decorator._BorderContainerState.new();
    }
  };
  (input_decorator._BorderContainer.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let border = opts && 'border' in opts ? opts.border : null;
    let gap = opts && 'gap' in opts ? opts.gap : null;
    let gapAnimation = opts && 'gapAnimation' in opts ? opts.gapAnimation : null;
    let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let isHovering = opts && 'isHovering' in opts ? opts.isHovering : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[border$] = border;
    this[gap$] = gap;
    this[gapAnimation$] = gapAnimation;
    this[fillColor$1] = fillColor;
    this[hoverColor$6] = hoverColor;
    this[isHovering$] = isHovering;
    this[child$14] = child;
    if (!(border != null)) dart.assertFailed(null, L61, 144, 15, "border != null");
    if (!(gap != null)) dart.assertFailed(null, L61, 145, 15, "gap != null");
    if (!(fillColor != null)) dart.assertFailed(null, L61, 146, 15, "fillColor != null");
    input_decorator._BorderContainer.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = input_decorator._BorderContainer.prototype;
  dart.addTypeTests(input_decorator._BorderContainer);
  dart.addTypeCaches(input_decorator._BorderContainer);
  dart.setMethodSignature(input_decorator._BorderContainer, () => ({
    __proto__: dart.getMethods(input_decorator._BorderContainer.__proto__),
    createState: dart.fnType(dart.legacy(input_decorator._BorderContainerState), [])
  }));
  dart.setLibraryUri(input_decorator._BorderContainer, L60);
  dart.setFieldSignature(input_decorator._BorderContainer, () => ({
    __proto__: dart.getFields(input_decorator._BorderContainer.__proto__),
    border: dart.finalFieldType(dart.legacy(input_border.InputBorder)),
    gap: dart.finalFieldType(dart.legacy(input_decorator._InputBorderGap)),
    gapAnimation: dart.finalFieldType(dart.legacy(animation.Animation$(dart.legacy(core.double)))),
    fillColor: dart.finalFieldType(dart.legacy(ui.Color)),
    hoverColor: dart.finalFieldType(dart.legacy(ui.Color)),
    isHovering: dart.finalFieldType(dart.legacy(core.bool)),
    child: dart.finalFieldType(dart.legacy(framework.Widget))
  }));
  var _controller$2 = dart.privateName(input_decorator, "_controller");
  var _hoverColorController = dart.privateName(input_decorator, "_hoverColorController");
  var _borderAnimation = dart.privateName(input_decorator, "_borderAnimation");
  var _border = dart.privateName(input_decorator, "_border");
  var _hoverAnimation = dart.privateName(input_decorator, "_hoverAnimation");
  var _hoverColorTween = dart.privateName(input_decorator, "_hoverColorTween");
  var C1600;
  var C1599;
  var C1598;
  var C1601;
  const State_TickerProviderStateMixin$36$ = class State_TickerProviderStateMixin extends framework.State$(dart.legacy(input_decorator._BorderContainer)) {};
  (State_TickerProviderStateMixin$36$.new = function() {
    ticker_provider.TickerProviderStateMixin$(dart.legacy(input_decorator._BorderContainer))[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$, ticker_provider.TickerProviderStateMixin$(dart.legacy(input_decorator._BorderContainer)));
  input_decorator._BorderContainerState = class _BorderContainerState extends State_TickerProviderStateMixin$36$ {
    initState() {
      super.initState();
      this[_hoverColorController] = new animation_controller.AnimationController.new({duration: input_decorator._BorderContainerState._kHoverDuration, value: dart.test(this.widget.isHovering) ? 1.0 : 0.0, vsync: this});
      this[_controller$2] = new animation_controller.AnimationController.new({duration: input_decorator._kTransitionDuration, vsync: this});
      this[_borderAnimation] = new animations.CurvedAnimation.new({parent: this[_controller$2], curve: input_decorator._kTransitionCurve});
      this[_border] = new input_decorator._InputBorderTween.new({begin: this.widget.border, end: this.widget.border});
      this[_hoverAnimation] = new animations.CurvedAnimation.new({parent: this[_hoverColorController], curve: curves.Curves.linear});
      this[_hoverColorTween] = new tween.ColorTween.new({begin: colors$.Colors.transparent, end: this.widget.hoverColor});
    }
    dispose() {
      this[_controller$2].dispose();
      this[_hoverColorController].dispose();
      super.dispose();
    }
    didUpdateWidget(oldWidget) {
      let t9;
      _BorderContainerL().as(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.border, oldWidget.border)) {
        this[_border] = new input_decorator._InputBorderTween.new({begin: oldWidget.border, end: this.widget.border});
        t9 = this[_controller$2];
        (() => {
          t9.value = 0.0;
          t9.forward();
          return t9;
        })();
      }
      if (!dart.equals(this.widget.hoverColor, oldWidget.hoverColor)) {
        this[_hoverColorTween] = new tween.ColorTween.new({begin: colors$.Colors.transparent, end: this.widget.hoverColor});
      }
      if (!dart.equals(this.widget.isHovering, oldWidget.isHovering)) {
        if (dart.test(this.widget.isHovering)) {
          this[_hoverColorController].forward();
        } else {
          this[_hoverColorController].reverse();
        }
      }
    }
    build(context) {
      return new basic.CustomPaint.new({foregroundPainter: new input_decorator._InputBorderPainter.new({repaint: new change_notifier._MergingListenable.new(JSArrayOfListenableL().of([this[_borderAnimation], this.widget.gap, this[_hoverColorController]])), borderAnimation: this[_borderAnimation], border: this[_border], gapAnimation: this.widget.gapAnimation, gap: this.widget.gap, textDirection: basic.Directionality.of(context), fillColor: this.widget.fillColor, hoverColorTween: this[_hoverColorTween], hoverAnimation: this[_hoverAnimation]}), child: this.widget.child, $creationLocationd_0dea112b090073317d4: C1598 || CT.C1598});
    }
  };
  (input_decorator._BorderContainerState.new = function() {
    this[_controller$2] = null;
    this[_hoverColorController] = null;
    this[_borderAnimation] = null;
    this[_border] = null;
    this[_hoverAnimation] = null;
    this[_hoverColorTween] = null;
    input_decorator._BorderContainerState.__proto__.new.call(this);
    ;
  }).prototype = input_decorator._BorderContainerState.prototype;
  dart.addTypeTests(input_decorator._BorderContainerState);
  dart.addTypeCaches(input_decorator._BorderContainerState);
  dart.setMethodSignature(input_decorator._BorderContainerState, () => ({
    __proto__: dart.getMethods(input_decorator._BorderContainerState.__proto__),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(input_decorator._BorderContainerState, L60);
  dart.setFieldSignature(input_decorator._BorderContainerState, () => ({
    __proto__: dart.getFields(input_decorator._BorderContainerState.__proto__),
    [_controller$2]: dart.fieldType(dart.legacy(animation_controller.AnimationController)),
    [_hoverColorController]: dart.fieldType(dart.legacy(animation_controller.AnimationController)),
    [_borderAnimation]: dart.fieldType(dart.legacy(animation.Animation$(dart.legacy(core.double)))),
    [_border]: dart.fieldType(dart.legacy(input_decorator._InputBorderTween)),
    [_hoverAnimation]: dart.fieldType(dart.legacy(animation.Animation$(dart.legacy(core.double)))),
    [_hoverColorTween]: dart.fieldType(dart.legacy(tween.ColorTween))
  }));
  dart.defineLazy(input_decorator._BorderContainerState, {
    /*input_decorator._BorderContainerState._kHoverDuration*/get _kHoverDuration() {
      return C1601 || CT.C1601;
    }
  }, true);
  var C1604;
  var C1605;
  var C1603;
  var C1602;
  var child$15 = dart.privateName(input_decorator, "_Shaker.child");
  input_decorator._Shaker = class _Shaker extends transitions.AnimatedWidget {
    get child() {
      return this[child$15];
    }
    set child(value) {
      super.child = value;
    }
    get animation() {
      return AnimationLOfdoubleL().as(this.listenable);
    }
    get translateX() {
      let t = this.animation.value;
      if (dart.notNull(t) <= 0.25)
        return -dart.notNull(t) * 4;
      else if (dart.notNull(t) < 0.75)
        return (dart.notNull(t) - 0.5) * 4;
      else
        return (1.0 - dart.notNull(t)) * 4.0 * 4;
    }
    build(context) {
      return new basic.Transform.new({transform: vector_math_64.Matrix4.translationValues(this.translateX, 0.0, 0.0), child: this.child, $creationLocationd_0dea112b090073317d4: C1602 || CT.C1602});
    }
  };
  (input_decorator._Shaker.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let animation = opts && 'animation' in opts ? opts.animation : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$15] = child;
    input_decorator._Shaker.__proto__.new.call(this, {key: key, listenable: animation, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = input_decorator._Shaker.prototype;
  dart.addTypeTests(input_decorator._Shaker);
  dart.addTypeCaches(input_decorator._Shaker);
  dart.setMethodSignature(input_decorator._Shaker, () => ({
    __proto__: dart.getMethods(input_decorator._Shaker.__proto__),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setGetterSignature(input_decorator._Shaker, () => ({
    __proto__: dart.getGetters(input_decorator._Shaker.__proto__),
    animation: dart.legacy(animation.Animation$(dart.legacy(core.double))),
    translateX: dart.legacy(core.double)
  }));
  dart.setLibraryUri(input_decorator._Shaker, L60);
  dart.setFieldSignature(input_decorator._Shaker, () => ({
    __proto__: dart.getFields(input_decorator._Shaker.__proto__),
    child: dart.finalFieldType(dart.legacy(framework.Widget))
  }));
  var textAlign$ = dart.privateName(input_decorator, "_HelperError.textAlign");
  var helperText$ = dart.privateName(input_decorator, "_HelperError.helperText");
  var helperStyle$ = dart.privateName(input_decorator, "_HelperError.helperStyle");
  var helperMaxLines$ = dart.privateName(input_decorator, "_HelperError.helperMaxLines");
  var errorText$ = dart.privateName(input_decorator, "_HelperError.errorText");
  var errorStyle$ = dart.privateName(input_decorator, "_HelperError.errorStyle");
  var errorMaxLines$ = dart.privateName(input_decorator, "_HelperError.errorMaxLines");
  input_decorator._HelperError = class _HelperError extends framework.StatefulWidget {
    get textAlign() {
      return this[textAlign$];
    }
    set textAlign(value) {
      super.textAlign = value;
    }
    get helperText() {
      return this[helperText$];
    }
    set helperText(value) {
      super.helperText = value;
    }
    get helperStyle() {
      return this[helperStyle$];
    }
    set helperStyle(value) {
      super.helperStyle = value;
    }
    get helperMaxLines() {
      return this[helperMaxLines$];
    }
    set helperMaxLines(value) {
      super.helperMaxLines = value;
    }
    get errorText() {
      return this[errorText$];
    }
    set errorText(value) {
      super.errorText = value;
    }
    get errorStyle() {
      return this[errorStyle$];
    }
    set errorStyle(value) {
      super.errorStyle = value;
    }
    get errorMaxLines() {
      return this[errorMaxLines$];
    }
    set errorMaxLines(value) {
      super.errorMaxLines = value;
    }
    createState() {
      return new input_decorator._HelperErrorState.new();
    }
  };
  (input_decorator._HelperError.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let textAlign = opts && 'textAlign' in opts ? opts.textAlign : null;
    let helperText = opts && 'helperText' in opts ? opts.helperText : null;
    let helperStyle = opts && 'helperStyle' in opts ? opts.helperStyle : null;
    let helperMaxLines = opts && 'helperMaxLines' in opts ? opts.helperMaxLines : null;
    let errorText = opts && 'errorText' in opts ? opts.errorText : null;
    let errorStyle = opts && 'errorStyle' in opts ? opts.errorStyle : null;
    let errorMaxLines = opts && 'errorMaxLines' in opts ? opts.errorMaxLines : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[textAlign$] = textAlign;
    this[helperText$] = helperText;
    this[helperStyle$] = helperStyle;
    this[helperMaxLines$] = helperMaxLines;
    this[errorText$] = errorText;
    this[errorStyle$] = errorStyle;
    this[errorMaxLines$] = errorMaxLines;
    input_decorator._HelperError.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = input_decorator._HelperError.prototype;
  dart.addTypeTests(input_decorator._HelperError);
  dart.addTypeCaches(input_decorator._HelperError);
  dart.setMethodSignature(input_decorator._HelperError, () => ({
    __proto__: dart.getMethods(input_decorator._HelperError.__proto__),
    createState: dart.fnType(dart.legacy(input_decorator._HelperErrorState), [])
  }));
  dart.setLibraryUri(input_decorator._HelperError, L60);
  dart.setFieldSignature(input_decorator._HelperError, () => ({
    __proto__: dart.getFields(input_decorator._HelperError.__proto__),
    textAlign: dart.finalFieldType(dart.legacy(ui.TextAlign)),
    helperText: dart.finalFieldType(dart.legacy(core.String)),
    helperStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    helperMaxLines: dart.finalFieldType(dart.legacy(core.int)),
    errorText: dart.finalFieldType(dart.legacy(core.String)),
    errorStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    errorMaxLines: dart.finalFieldType(dart.legacy(core.int))
  }));
  var _helper = dart.privateName(input_decorator, "_helper");
  var _error = dart.privateName(input_decorator, "_error");
  var _buildError = dart.privateName(input_decorator, "_buildError");
  var _buildHelper = dart.privateName(input_decorator, "_buildHelper");
  var _handleChange = dart.privateName(input_decorator, "_handleChange");
  var C1608;
  var C1609;
  var C1610;
  var C1611;
  var C1612;
  var C1607;
  var C1606;
  var C1615;
  var C1616;
  var C1614;
  var C1613;
  var C1619;
  var C1620;
  var C1618;
  var C1617;
  var C1621;
  var C1624;
  var C1625;
  var C1626;
  var C1627;
  var C1628;
  var C1623;
  var C1622;
  var C1631;
  var C1632;
  var C1630;
  var C1629;
  var C1635;
  var C1636;
  var C1634;
  var C1633;
  var C1639;
  var C1640;
  var C1641;
  var C1638;
  var C1637;
  var C1644;
  var C1645;
  var C1643;
  var C1642;
  var C1648;
  var C1647;
  var C1646;
  var C1651;
  var C1652;
  var C1650;
  var C1649;
  var C1655;
  var C1654;
  var C1653;
  var C1657;
  var C1656;
  const State_SingleTickerProviderStateMixin$36$1 = class State_SingleTickerProviderStateMixin extends framework.State$(dart.legacy(input_decorator._HelperError)) {};
  (State_SingleTickerProviderStateMixin$36$1.new = function() {
    ticker_provider.SingleTickerProviderStateMixin$(dart.legacy(input_decorator._HelperError))[dart.mixinNew].call(this);
    State_SingleTickerProviderStateMixin$36$1.__proto__.new.call(this);
  }).prototype = State_SingleTickerProviderStateMixin$36$1.prototype;
  dart.applyMixin(State_SingleTickerProviderStateMixin$36$1, ticker_provider.SingleTickerProviderStateMixin$(dart.legacy(input_decorator._HelperError)));
  input_decorator._HelperErrorState = class _HelperErrorState extends State_SingleTickerProviderStateMixin$36$1 {
    initState() {
      super.initState();
      this[_controller$2] = new animation_controller.AnimationController.new({duration: input_decorator._kTransitionDuration, vsync: this});
      if (this.widget.errorText != null) {
        this[_error] = this[_buildError]();
        this[_controller$2].value = 1.0;
      } else if (this.widget.helperText != null) {
        this[_helper] = this[_buildHelper]();
      }
      this[_controller$2].addListener(dart.bind(this, _handleChange));
    }
    dispose() {
      this[_controller$2].dispose();
      super.dispose();
    }
    [_handleChange]() {
      this.setState(dart.fn(() => {
      }, VoidToNullN()));
    }
    didUpdateWidget(old) {
      _HelperErrorL().as(old);
      super.didUpdateWidget(old);
      let newErrorText = this.widget.errorText;
      let newHelperText = this.widget.helperText;
      let oldErrorText = old.errorText;
      let oldHelperText = old.helperText;
      let errorTextStateChanged = !(newErrorText != null)[$_equals](oldErrorText != null);
      let helperTextStateChanged = newErrorText == null && !(newHelperText != null)[$_equals](oldHelperText != null);
      if (errorTextStateChanged || helperTextStateChanged) {
        if (newErrorText != null) {
          this[_error] = this[_buildError]();
          this[_controller$2].forward();
        } else if (newHelperText != null) {
          this[_helper] = this[_buildHelper]();
          this[_controller$2].reverse();
        } else {
          this[_controller$2].reverse();
        }
      }
    }
    [_buildHelper]() {
      if (!(this.widget.helperText != null)) dart.assertFailed(null, L61, 375, 12, "widget.helperText != null");
      return new basic.Semantics.new({container: true, child: new basic.Opacity.new({opacity: 1.0 - dart.notNull(this[_controller$2].value), child: new text$.Text.new(this.widget.helperText, {style: this.widget.helperStyle, textAlign: this.widget.textAlign, overflow: paragraph.TextOverflow.ellipsis, maxLines: this.widget.helperMaxLines, $creationLocationd_0dea112b090073317d4: C1606 || CT.C1606}), $creationLocationd_0dea112b090073317d4: C1613 || CT.C1613}), $creationLocationd_0dea112b090073317d4: C1617 || CT.C1617});
    }
    [_buildError]() {
      if (!(this.widget.errorText != null)) dart.assertFailed(null, L61, 392, 12, "widget.errorText != null");
      return new basic.Semantics.new({container: true, liveRegion: true, child: new basic.Opacity.new({opacity: this[_controller$2].value, child: new basic.FractionalTranslation.new({translation: new (TweenOfOffsetL()).new({begin: C1621 || CT.C1621, end: C1268 || CT.C1268}).evaluate(this[_controller$2].view), child: new text$.Text.new(this.widget.errorText, {style: this.widget.errorStyle, textAlign: this.widget.textAlign, overflow: paragraph.TextOverflow.ellipsis, maxLines: this.widget.errorMaxLines, $creationLocationd_0dea112b090073317d4: C1622 || CT.C1622}), $creationLocationd_0dea112b090073317d4: C1629 || CT.C1629}), $creationLocationd_0dea112b090073317d4: C1633 || CT.C1633}), $creationLocationd_0dea112b090073317d4: C1637 || CT.C1637});
    }
    build(context) {
      if (dart.test(this[_controller$2].isDismissed)) {
        this[_error] = null;
        if (this.widget.helperText != null) {
          return this[_helper] = this[_buildHelper]();
        } else {
          this[_helper] = null;
          return input_decorator._HelperErrorState.empty;
        }
      }
      if (dart.test(this[_controller$2].isCompleted)) {
        this[_helper] = null;
        if (this.widget.errorText != null) {
          return this[_error] = this[_buildError]();
        } else {
          this[_error] = null;
          return input_decorator._HelperErrorState.empty;
        }
      }
      if (this[_helper] == null && this.widget.errorText != null) return this[_buildError]();
      if (this[_error] == null && this.widget.helperText != null) return this[_buildHelper]();
      if (this.widget.errorText != null) {
        return new basic.Stack.new({children: JSArrayOfWidgetL().of([new basic.Opacity.new({opacity: 1.0 - dart.notNull(this[_controller$2].value), child: this[_helper], $creationLocationd_0dea112b090073317d4: C1642 || CT.C1642}), this[_buildError]()]), $creationLocationd_0dea112b090073317d4: C1646 || CT.C1646});
      }
      if (this.widget.helperText != null) {
        return new basic.Stack.new({children: JSArrayOfWidgetL().of([this[_buildHelper](), new basic.Opacity.new({opacity: this[_controller$2].value, child: this[_error], $creationLocationd_0dea112b090073317d4: C1649 || CT.C1649})]), $creationLocationd_0dea112b090073317d4: C1653 || CT.C1653});
      }
      return input_decorator._HelperErrorState.empty;
    }
  };
  (input_decorator._HelperErrorState.new = function() {
    this[_controller$2] = null;
    this[_helper] = null;
    this[_error] = null;
    input_decorator._HelperErrorState.__proto__.new.call(this);
    ;
  }).prototype = input_decorator._HelperErrorState.prototype;
  dart.addTypeTests(input_decorator._HelperErrorState);
  dart.addTypeCaches(input_decorator._HelperErrorState);
  dart.setMethodSignature(input_decorator._HelperErrorState, () => ({
    __proto__: dart.getMethods(input_decorator._HelperErrorState.__proto__),
    [_handleChange]: dart.fnType(dart.void, []),
    [_buildHelper]: dart.fnType(dart.legacy(framework.Widget), []),
    [_buildError]: dart.fnType(dart.legacy(framework.Widget), []),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(input_decorator._HelperErrorState, L60);
  dart.setFieldSignature(input_decorator._HelperErrorState, () => ({
    __proto__: dart.getFields(input_decorator._HelperErrorState.__proto__),
    [_controller$2]: dart.fieldType(dart.legacy(animation_controller.AnimationController)),
    [_helper]: dart.fieldType(dart.legacy(framework.Widget)),
    [_error]: dart.fieldType(dart.legacy(framework.Widget))
  }));
  dart.defineLazy(input_decorator._HelperErrorState, {
    /*input_decorator._HelperErrorState.empty*/get empty() {
      return C1656 || CT.C1656;
    }
  }, true);
  var _name$13 = dart.privateName(input_decorator, "_name");
  var C1658;
  var C1659;
  var C1660;
  var C1661;
  input_decorator.FloatingLabelBehavior = class FloatingLabelBehavior extends core.Object {
    toString() {
      return this[_name$13];
    }
  };
  (input_decorator.FloatingLabelBehavior.new = function(index, _name) {
    this.index = index;
    this[_name$13] = _name;
    ;
  }).prototype = input_decorator.FloatingLabelBehavior.prototype;
  dart.addTypeTests(input_decorator.FloatingLabelBehavior);
  dart.addTypeCaches(input_decorator.FloatingLabelBehavior);
  dart.setMethodSignature(input_decorator.FloatingLabelBehavior, () => ({
    __proto__: dart.getMethods(input_decorator.FloatingLabelBehavior.__proto__),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setLibraryUri(input_decorator.FloatingLabelBehavior, L60);
  dart.setFieldSignature(input_decorator.FloatingLabelBehavior, () => ({
    __proto__: dart.getFields(input_decorator.FloatingLabelBehavior.__proto__),
    index: dart.finalFieldType(dart.legacy(core.int)),
    [_name$13]: dart.finalFieldType(dart.legacy(core.String))
  }));
  dart.defineExtensionMethods(input_decorator.FloatingLabelBehavior, ['toString']);
  input_decorator.FloatingLabelBehavior.never = C1658 || CT.C1658;
  input_decorator.FloatingLabelBehavior.auto = C1659 || CT.C1659;
  input_decorator.FloatingLabelBehavior.always = C1660 || CT.C1660;
  input_decorator.FloatingLabelBehavior.values = C1661 || CT.C1661;
  var C1662;
  var C1663;
  var C1664;
  var C1665;
  var C1666;
  var C1667;
  var C1668;
  var C1669;
  var C1670;
  var C1671;
  var C1672;
  var C1673;
  input_decorator._DecorationSlot = class _DecorationSlot extends core.Object {
    toString() {
      return this[_name$13];
    }
  };
  (input_decorator._DecorationSlot.new = function(index, _name) {
    this.index = index;
    this[_name$13] = _name;
    ;
  }).prototype = input_decorator._DecorationSlot.prototype;
  dart.addTypeTests(input_decorator._DecorationSlot);
  dart.addTypeCaches(input_decorator._DecorationSlot);
  dart.setMethodSignature(input_decorator._DecorationSlot, () => ({
    __proto__: dart.getMethods(input_decorator._DecorationSlot.__proto__),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setLibraryUri(input_decorator._DecorationSlot, L60);
  dart.setFieldSignature(input_decorator._DecorationSlot, () => ({
    __proto__: dart.getFields(input_decorator._DecorationSlot.__proto__),
    index: dart.finalFieldType(dart.legacy(core.int)),
    [_name$13]: dart.finalFieldType(dart.legacy(core.String))
  }));
  dart.defineExtensionMethods(input_decorator._DecorationSlot, ['toString']);
  input_decorator._DecorationSlot.icon = C1662 || CT.C1662;
  input_decorator._DecorationSlot.input = C1663 || CT.C1663;
  input_decorator._DecorationSlot.label = C1664 || CT.C1664;
  input_decorator._DecorationSlot.hint = C1665 || CT.C1665;
  input_decorator._DecorationSlot.prefix = C1666 || CT.C1666;
  input_decorator._DecorationSlot.suffix = C1667 || CT.C1667;
  input_decorator._DecorationSlot.prefixIcon = C1668 || CT.C1668;
  input_decorator._DecorationSlot.suffixIcon = C1669 || CT.C1669;
  input_decorator._DecorationSlot.helperError = C1670 || CT.C1670;
  input_decorator._DecorationSlot.counter = C1671 || CT.C1671;
  input_decorator._DecorationSlot.container = C1672 || CT.C1672;
  input_decorator._DecorationSlot.values = C1673 || CT.C1673;
  var contentPadding$3 = dart.privateName(input_decorator, "_Decoration.contentPadding");
  var isCollapsed$ = dart.privateName(input_decorator, "_Decoration.isCollapsed");
  var floatingLabelHeight$ = dart.privateName(input_decorator, "_Decoration.floatingLabelHeight");
  var floatingLabelProgress$ = dart.privateName(input_decorator, "_Decoration.floatingLabelProgress");
  var border$0 = dart.privateName(input_decorator, "_Decoration.border");
  var borderGap$ = dart.privateName(input_decorator, "_Decoration.borderGap");
  var alignLabelWithHint$ = dart.privateName(input_decorator, "_Decoration.alignLabelWithHint");
  var isDense$0 = dart.privateName(input_decorator, "_Decoration.isDense");
  var visualDensity$5 = dart.privateName(input_decorator, "_Decoration.visualDensity");
  var icon$2 = dart.privateName(input_decorator, "_Decoration.icon");
  var input$ = dart.privateName(input_decorator, "_Decoration.input");
  var label$1 = dart.privateName(input_decorator, "_Decoration.label");
  var hint$ = dart.privateName(input_decorator, "_Decoration.hint");
  var prefix$ = dart.privateName(input_decorator, "_Decoration.prefix");
  var suffix$ = dart.privateName(input_decorator, "_Decoration.suffix");
  var prefixIcon$ = dart.privateName(input_decorator, "_Decoration.prefixIcon");
  var suffixIcon$ = dart.privateName(input_decorator, "_Decoration.suffixIcon");
  var helperError$ = dart.privateName(input_decorator, "_Decoration.helperError");
  var counter$ = dart.privateName(input_decorator, "_Decoration.counter");
  var container$ = dart.privateName(input_decorator, "_Decoration.container");
  var fixTextFieldOutlineLabel$ = dart.privateName(input_decorator, "_Decoration.fixTextFieldOutlineLabel");
  input_decorator._Decoration = class _Decoration extends core.Object {
    get contentPadding() {
      return this[contentPadding$3];
    }
    set contentPadding(value) {
      super.contentPadding = value;
    }
    get isCollapsed() {
      return this[isCollapsed$];
    }
    set isCollapsed(value) {
      super.isCollapsed = value;
    }
    get floatingLabelHeight() {
      return this[floatingLabelHeight$];
    }
    set floatingLabelHeight(value) {
      super.floatingLabelHeight = value;
    }
    get floatingLabelProgress() {
      return this[floatingLabelProgress$];
    }
    set floatingLabelProgress(value) {
      super.floatingLabelProgress = value;
    }
    get border() {
      return this[border$0];
    }
    set border(value) {
      super.border = value;
    }
    get borderGap() {
      return this[borderGap$];
    }
    set borderGap(value) {
      super.borderGap = value;
    }
    get alignLabelWithHint() {
      return this[alignLabelWithHint$];
    }
    set alignLabelWithHint(value) {
      super.alignLabelWithHint = value;
    }
    get isDense() {
      return this[isDense$0];
    }
    set isDense(value) {
      super.isDense = value;
    }
    get visualDensity() {
      return this[visualDensity$5];
    }
    set visualDensity(value) {
      super.visualDensity = value;
    }
    get icon() {
      return this[icon$2];
    }
    set icon(value) {
      super.icon = value;
    }
    get input() {
      return this[input$];
    }
    set input(value) {
      super.input = value;
    }
    get label() {
      return this[label$1];
    }
    set label(value) {
      super.label = value;
    }
    get hint() {
      return this[hint$];
    }
    set hint(value) {
      super.hint = value;
    }
    get prefix() {
      return this[prefix$];
    }
    set prefix(value) {
      super.prefix = value;
    }
    get suffix() {
      return this[suffix$];
    }
    set suffix(value) {
      super.suffix = value;
    }
    get prefixIcon() {
      return this[prefixIcon$];
    }
    set prefixIcon(value) {
      super.prefixIcon = value;
    }
    get suffixIcon() {
      return this[suffixIcon$];
    }
    set suffixIcon(value) {
      super.suffixIcon = value;
    }
    get helperError() {
      return this[helperError$];
    }
    set helperError(value) {
      super.helperError = value;
    }
    get counter() {
      return this[counter$];
    }
    set counter(value) {
      super.counter = value;
    }
    get container() {
      return this[container$];
    }
    set container(value) {
      super.container = value;
    }
    get fixTextFieldOutlineLabel() {
      return this[fixTextFieldOutlineLabel$];
    }
    set fixTextFieldOutlineLabel(value) {
      super.fixTextFieldOutlineLabel = value;
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this.runtimeType)) return false;
      return _DecorationL().is(other) && dart.equals(other.contentPadding, this.contentPadding) && dart.equals(other.isCollapsed, this.isCollapsed) && other.floatingLabelHeight == this.floatingLabelHeight && other.floatingLabelProgress == this.floatingLabelProgress && dart.equals(other.border, this.border) && dart.equals(other.borderGap, this.borderGap) && dart.equals(other.alignLabelWithHint, this.alignLabelWithHint) && dart.equals(other.isDense, this.isDense) && dart.equals(other.visualDensity, this.visualDensity) && dart.equals(other.icon, this.icon) && dart.equals(other.input, this.input) && dart.equals(other.label, this.label) && dart.equals(other.hint, this.hint) && dart.equals(other.prefix, this.prefix) && dart.equals(other.suffix, this.suffix) && dart.equals(other.prefixIcon, this.prefixIcon) && dart.equals(other.suffixIcon, this.suffixIcon) && dart.equals(other.helperError, this.helperError) && dart.equals(other.counter, this.counter) && dart.equals(other.container, this.container) && dart.equals(other.fixTextFieldOutlineLabel, this.fixTextFieldOutlineLabel);
    }
    get hashCode() {
      return ui.hashValues(this.contentPadding, this.floatingLabelHeight, this.floatingLabelProgress, this.border, this.borderGap, this.alignLabelWithHint, this.isDense, this.visualDensity, this.icon, this.input, this.label, this.hint, this.prefix, this.suffix, this.prefixIcon, this.suffixIcon, this.helperError, this.counter, this.container, this.fixTextFieldOutlineLabel);
    }
  };
  (input_decorator._Decoration.new = function(opts) {
    let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : null;
    let isCollapsed = opts && 'isCollapsed' in opts ? opts.isCollapsed : null;
    let floatingLabelHeight = opts && 'floatingLabelHeight' in opts ? opts.floatingLabelHeight : null;
    let floatingLabelProgress = opts && 'floatingLabelProgress' in opts ? opts.floatingLabelProgress : null;
    let border = opts && 'border' in opts ? opts.border : null;
    let borderGap = opts && 'borderGap' in opts ? opts.borderGap : null;
    let alignLabelWithHint = opts && 'alignLabelWithHint' in opts ? opts.alignLabelWithHint : null;
    let isDense = opts && 'isDense' in opts ? opts.isDense : null;
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    let input = opts && 'input' in opts ? opts.input : null;
    let label = opts && 'label' in opts ? opts.label : null;
    let hint = opts && 'hint' in opts ? opts.hint : null;
    let prefix = opts && 'prefix' in opts ? opts.prefix : null;
    let suffix = opts && 'suffix' in opts ? opts.suffix : null;
    let prefixIcon = opts && 'prefixIcon' in opts ? opts.prefixIcon : null;
    let suffixIcon = opts && 'suffixIcon' in opts ? opts.suffixIcon : null;
    let helperError = opts && 'helperError' in opts ? opts.helperError : null;
    let counter = opts && 'counter' in opts ? opts.counter : null;
    let container = opts && 'container' in opts ? opts.container : null;
    let fixTextFieldOutlineLabel = opts && 'fixTextFieldOutlineLabel' in opts ? opts.fixTextFieldOutlineLabel : false;
    this[contentPadding$3] = contentPadding;
    this[isCollapsed$] = isCollapsed;
    this[floatingLabelHeight$] = floatingLabelHeight;
    this[floatingLabelProgress$] = floatingLabelProgress;
    this[border$0] = border;
    this[borderGap$] = borderGap;
    this[alignLabelWithHint$] = alignLabelWithHint;
    this[isDense$0] = isDense;
    this[visualDensity$5] = visualDensity;
    this[icon$2] = icon;
    this[input$] = input;
    this[label$1] = label;
    this[hint$] = hint;
    this[prefix$] = prefix;
    this[suffix$] = suffix;
    this[prefixIcon$] = prefixIcon;
    this[suffixIcon$] = suffixIcon;
    this[helperError$] = helperError;
    this[counter$] = counter;
    this[container$] = container;
    this[fixTextFieldOutlineLabel$] = fixTextFieldOutlineLabel;
    if (!(contentPadding != null)) dart.assertFailed(null, L61, 521, 15, "contentPadding != null");
    if (!(isCollapsed != null)) dart.assertFailed(null, L61, 522, 15, "isCollapsed != null");
    if (!(floatingLabelHeight != null)) dart.assertFailed(null, L61, 523, 15, "floatingLabelHeight != null");
    if (!(floatingLabelProgress != null)) dart.assertFailed(null, L61, 524, 15, "floatingLabelProgress != null");
    if (!(fixTextFieldOutlineLabel != null)) dart.assertFailed(null, L61, 525, 15, "fixTextFieldOutlineLabel != null");
    ;
  }).prototype = input_decorator._Decoration.prototype;
  dart.addTypeTests(input_decorator._Decoration);
  dart.addTypeCaches(input_decorator._Decoration);
  dart.setMethodSignature(input_decorator._Decoration, () => ({
    __proto__: dart.getMethods(input_decorator._Decoration.__proto__),
    _equals: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    [$_equals]: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)])
  }));
  dart.setGetterSignature(input_decorator._Decoration, () => ({
    __proto__: dart.getGetters(input_decorator._Decoration.__proto__),
    hashCode: dart.legacy(core.int),
    [$hashCode]: dart.legacy(core.int)
  }));
  dart.setLibraryUri(input_decorator._Decoration, L60);
  dart.setFieldSignature(input_decorator._Decoration, () => ({
    __proto__: dart.getFields(input_decorator._Decoration.__proto__),
    contentPadding: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsetsGeometry)),
    isCollapsed: dart.finalFieldType(dart.legacy(core.bool)),
    floatingLabelHeight: dart.finalFieldType(dart.legacy(core.double)),
    floatingLabelProgress: dart.finalFieldType(dart.legacy(core.double)),
    border: dart.finalFieldType(dart.legacy(input_border.InputBorder)),
    borderGap: dart.finalFieldType(dart.legacy(input_decorator._InputBorderGap)),
    alignLabelWithHint: dart.finalFieldType(dart.legacy(core.bool)),
    isDense: dart.finalFieldType(dart.legacy(core.bool)),
    visualDensity: dart.finalFieldType(dart.legacy(theme_data.VisualDensity)),
    icon: dart.finalFieldType(dart.legacy(framework.Widget)),
    input: dart.finalFieldType(dart.legacy(framework.Widget)),
    label: dart.finalFieldType(dart.legacy(framework.Widget)),
    hint: dart.finalFieldType(dart.legacy(framework.Widget)),
    prefix: dart.finalFieldType(dart.legacy(framework.Widget)),
    suffix: dart.finalFieldType(dart.legacy(framework.Widget)),
    prefixIcon: dart.finalFieldType(dart.legacy(framework.Widget)),
    suffixIcon: dart.finalFieldType(dart.legacy(framework.Widget)),
    helperError: dart.finalFieldType(dart.legacy(framework.Widget)),
    counter: dart.finalFieldType(dart.legacy(framework.Widget)),
    container: dart.finalFieldType(dart.legacy(framework.Widget)),
    fixTextFieldOutlineLabel: dart.finalFieldType(dart.legacy(core.bool))
  }));
  dart.defineExtensionMethods(input_decorator._Decoration, ['_equals']);
  dart.defineExtensionAccessors(input_decorator._Decoration, ['hashCode']);
  var boxToBaseline$ = dart.privateName(input_decorator, "_RenderDecorationLayout.boxToBaseline");
  var inputBaseline$ = dart.privateName(input_decorator, "_RenderDecorationLayout.inputBaseline");
  var outlineBaseline$ = dart.privateName(input_decorator, "_RenderDecorationLayout.outlineBaseline");
  var subtextBaseline$ = dart.privateName(input_decorator, "_RenderDecorationLayout.subtextBaseline");
  var containerHeight$ = dart.privateName(input_decorator, "_RenderDecorationLayout.containerHeight");
  var subtextHeight$ = dart.privateName(input_decorator, "_RenderDecorationLayout.subtextHeight");
  input_decorator._RenderDecorationLayout = class _RenderDecorationLayout extends core.Object {
    get boxToBaseline() {
      return this[boxToBaseline$];
    }
    set boxToBaseline(value) {
      super.boxToBaseline = value;
    }
    get inputBaseline() {
      return this[inputBaseline$];
    }
    set inputBaseline(value) {
      super.inputBaseline = value;
    }
    get outlineBaseline() {
      return this[outlineBaseline$];
    }
    set outlineBaseline(value) {
      super.outlineBaseline = value;
    }
    get subtextBaseline() {
      return this[subtextBaseline$];
    }
    set subtextBaseline(value) {
      super.subtextBaseline = value;
    }
    get containerHeight() {
      return this[containerHeight$];
    }
    set containerHeight(value) {
      super.containerHeight = value;
    }
    get subtextHeight() {
      return this[subtextHeight$];
    }
    set subtextHeight(value) {
      super.subtextHeight = value;
    }
  };
  (input_decorator._RenderDecorationLayout.new = function(opts) {
    let boxToBaseline = opts && 'boxToBaseline' in opts ? opts.boxToBaseline : null;
    let inputBaseline = opts && 'inputBaseline' in opts ? opts.inputBaseline : null;
    let outlineBaseline = opts && 'outlineBaseline' in opts ? opts.outlineBaseline : null;
    let subtextBaseline = opts && 'subtextBaseline' in opts ? opts.subtextBaseline : null;
    let containerHeight = opts && 'containerHeight' in opts ? opts.containerHeight : null;
    let subtextHeight = opts && 'subtextHeight' in opts ? opts.subtextHeight : null;
    this[boxToBaseline$] = boxToBaseline;
    this[inputBaseline$] = inputBaseline;
    this[outlineBaseline$] = outlineBaseline;
    this[subtextBaseline$] = subtextBaseline;
    this[containerHeight$] = containerHeight;
    this[subtextHeight$] = subtextHeight;
    ;
  }).prototype = input_decorator._RenderDecorationLayout.prototype;
  dart.addTypeTests(input_decorator._RenderDecorationLayout);
  dart.addTypeCaches(input_decorator._RenderDecorationLayout);
  dart.setLibraryUri(input_decorator._RenderDecorationLayout, L60);
  dart.setFieldSignature(input_decorator._RenderDecorationLayout, () => ({
    __proto__: dart.getFields(input_decorator._RenderDecorationLayout.__proto__),
    boxToBaseline: dart.finalFieldType(dart.legacy(core.Map$(dart.legacy(box.RenderBox), dart.legacy(core.double)))),
    inputBaseline: dart.finalFieldType(dart.legacy(core.double)),
    outlineBaseline: dart.finalFieldType(dart.legacy(core.double)),
    subtextBaseline: dart.finalFieldType(dart.legacy(core.double)),
    containerHeight: dart.finalFieldType(dart.legacy(core.double)),
    subtextHeight: dart.finalFieldType(dart.legacy(core.double))
  }));
  var _icon = dart.privateName(input_decorator, "_icon");
  var _input = dart.privateName(input_decorator, "_input");
  var _label = dart.privateName(input_decorator, "_label");
  var _hint = dart.privateName(input_decorator, "_hint");
  var _prefix = dart.privateName(input_decorator, "_prefix");
  var _suffix = dart.privateName(input_decorator, "_suffix");
  var _prefixIcon = dart.privateName(input_decorator, "_prefixIcon");
  var _suffixIcon = dart.privateName(input_decorator, "_suffixIcon");
  var _helperError = dart.privateName(input_decorator, "_helperError");
  var _counter = dart.privateName(input_decorator, "_counter");
  var _container = dart.privateName(input_decorator, "_container");
  var _expands = dart.privateName(input_decorator, "_expands");
  var _labelTransform = dart.privateName(input_decorator, "_labelTransform");
  var _decoration = dart.privateName(input_decorator, "_decoration");
  var _textDirection$ = dart.privateName(input_decorator, "_textDirection");
  var _textBaseline = dart.privateName(input_decorator, "_textBaseline");
  var _textAlignVertical = dart.privateName(input_decorator, "_textAlignVertical");
  var _isFocused = dart.privateName(input_decorator, "_isFocused");
  var _updateChild$ = dart.privateName(input_decorator, "_updateChild");
  var _children$0 = dart.privateName(input_decorator, "_children");
  var _isOutlineAligned = dart.privateName(input_decorator, "_isOutlineAligned");
  var _defaultTextAlignVertical = dart.privateName(input_decorator, "_defaultTextAlignVertical");
  var _layoutLineBox = dart.privateName(input_decorator, "_layoutLineBox");
  var _interpolateThree = dart.privateName(input_decorator, "_interpolateThree");
  var _layout = dart.privateName(input_decorator, "_layout");
  var _lineHeight = dart.privateName(input_decorator, "_lineHeight");
  var _paintLabel = dart.privateName(input_decorator, "_paintLabel");
  input_decorator._RenderDecoration = class _RenderDecoration extends box.RenderBox {
    [_updateChild$](oldChild, newChild, slot) {
      if (oldChild != null) {
        this.dropChild(oldChild);
        this.childToSlot[$remove](oldChild);
        this.slotToChild[$remove](slot);
      }
      if (newChild != null) {
        this.childToSlot[$_set](newChild, slot);
        this.slotToChild[$_set](slot, newChild);
        this.adoptChild(newChild);
      }
      return newChild;
    }
    get icon() {
      return this[_icon];
    }
    set icon(value) {
      this[_icon] = this[_updateChild$](this[_icon], value, input_decorator._DecorationSlot.icon);
    }
    get input() {
      return this[_input];
    }
    set input(value) {
      this[_input] = this[_updateChild$](this[_input], value, input_decorator._DecorationSlot.input);
    }
    get label() {
      return this[_label];
    }
    set label(value) {
      this[_label] = this[_updateChild$](this[_label], value, input_decorator._DecorationSlot.label);
    }
    get hint() {
      return this[_hint];
    }
    set hint(value) {
      this[_hint] = this[_updateChild$](this[_hint], value, input_decorator._DecorationSlot.hint);
    }
    get prefix() {
      return this[_prefix];
    }
    set prefix(value) {
      this[_prefix] = this[_updateChild$](this[_prefix], value, input_decorator._DecorationSlot.prefix);
    }
    get suffix() {
      return this[_suffix];
    }
    set suffix(value) {
      this[_suffix] = this[_updateChild$](this[_suffix], value, input_decorator._DecorationSlot.suffix);
    }
    get prefixIcon() {
      return this[_prefixIcon];
    }
    set prefixIcon(value) {
      this[_prefixIcon] = this[_updateChild$](this[_prefixIcon], value, input_decorator._DecorationSlot.prefixIcon);
    }
    get suffixIcon() {
      return this[_suffixIcon];
    }
    set suffixIcon(value) {
      this[_suffixIcon] = this[_updateChild$](this[_suffixIcon], value, input_decorator._DecorationSlot.suffixIcon);
    }
    get helperError() {
      return this[_helperError];
    }
    set helperError(value) {
      this[_helperError] = this[_updateChild$](this[_helperError], value, input_decorator._DecorationSlot.helperError);
    }
    get counter() {
      return this[_counter];
    }
    set counter(value) {
      this[_counter] = this[_updateChild$](this[_counter], value, input_decorator._DecorationSlot.counter);
    }
    get container() {
      return this[_container];
    }
    set container(value) {
      this[_container] = this[_updateChild$](this[_container], value, input_decorator._DecorationSlot.container);
    }
    get [_children$0]() {
      return new (SyncIterableOfRenderBoxL()).new((function* _children() {
        if (this.icon != null) yield this.icon;
        if (this.input != null) yield this.input;
        if (this.prefixIcon != null) yield this.prefixIcon;
        if (this.suffixIcon != null) yield this.suffixIcon;
        if (this.prefix != null) yield this.prefix;
        if (this.suffix != null) yield this.suffix;
        if (this.label != null) yield this.label;
        if (this.hint != null) yield this.hint;
        if (this.helperError != null) yield this.helperError;
        if (this.counter != null) yield this.counter;
        if (this.container != null) yield this.container;
      }).bind(this));
    }
    get decoration() {
      return this[_decoration];
    }
    set decoration(value) {
      if (!(value != null)) dart.assertFailed(null, L61, 760, 12, "value != null");
      if (dart.equals(this[_decoration], value)) return;
      this[_decoration] = value;
      this.markNeedsLayout();
    }
    get textDirection() {
      return this[_textDirection$];
    }
    set textDirection(value) {
      if (!(value != null)) dart.assertFailed(null, L61, 770, 12, "value != null");
      if (dart.equals(this[_textDirection$], value)) return;
      this[_textDirection$] = value;
      this.markNeedsLayout();
    }
    get textBaseline() {
      return this[_textBaseline];
    }
    set textBaseline(value) {
      if (!(value != null)) dart.assertFailed(null, L61, 780, 12, "value != null");
      if (dart.equals(this[_textBaseline], value)) return;
      this[_textBaseline] = value;
      this.markNeedsLayout();
    }
    get [_defaultTextAlignVertical]() {
      return dart.test(this[_isOutlineAligned]) ? alignment.TextAlignVertical.center : alignment.TextAlignVertical.top;
    }
    get textAlignVertical() {
      if (this[_textAlignVertical] == null) {
        return this[_defaultTextAlignVertical];
      }
      return this[_textAlignVertical];
    }
    set textAlignVertical(value) {
      let t9, t9$;
      if (dart.equals(this[_textAlignVertical], value)) {
        return;
      }
      if (this.textAlignVertical.y == (t9$ = (t9 = value, t9 == null ? null : t9.y), t9$ == null ? this[_defaultTextAlignVertical].y : t9$)) {
        this[_textAlignVertical] = value;
        return;
      }
      this[_textAlignVertical] = value;
      this.markNeedsLayout();
    }
    get isFocused() {
      return this[_isFocused];
    }
    set isFocused(value) {
      if (!(value != null)) dart.assertFailed(null, L61, 813, 12, "value != null");
      if (dart.equals(this[_isFocused], value)) return;
      this[_isFocused] = value;
      this.markNeedsSemanticsUpdate();
    }
    get expands() {
      return this[_expands];
    }
    set expands(value) {
      if (!(value != null)) dart.assertFailed(null, L61, 823, 12, "value != null");
      if (dart.equals(this[_expands], value)) return;
      this[_expands] = value;
      this.markNeedsLayout();
    }
    get [_isOutlineAligned]() {
      return !dart.test(this.decoration.isCollapsed) && dart.test(this.decoration.border.isOutline);
    }
    attach(owner) {
      PipelineOwnerL().as(owner);
      super.attach(owner);
      for (let child of this[_children$0])
        child.attach(owner);
    }
    detach() {
      super.detach();
      for (let child of this[_children$0])
        child.detach();
    }
    redepthChildren() {
      this[_children$0][$forEach](dart.bind(this, 'redepthChild'));
    }
    visitChildren(visitor) {
      this[_children$0][$forEach](visitor);
    }
    visitChildrenForSemantics(visitor) {
      if (this.icon != null) visitor(this.icon);
      if (this.prefix != null) visitor(this.prefix);
      if (this.prefixIcon != null) visitor(this.prefixIcon);
      if (this.label != null) {
        visitor(this.label);
      }
      if (this.hint != null) {
        if (dart.test(this.isFocused)) {
          visitor(this.hint);
        } else if (this.label == null) {
          visitor(this.hint);
        }
      }
      if (this.input != null) visitor(this.input);
      if (this.suffixIcon != null) visitor(this.suffixIcon);
      if (this.suffix != null) visitor(this.suffix);
      if (this.container != null) visitor(this.container);
      if (this.helperError != null) visitor(this.helperError);
      if (this.counter != null) visitor(this.counter);
    }
    debugDescribeChildren() {
      let value = JSArrayOfDiagnosticsNodeL().of([]);
      function add(child, name) {
        if (child != null) value[$add](child.toDiagnosticsNode({name: name}));
      }
      dart.fn(add, RenderBoxLAndStringLTovoid());
      add(this.icon, "icon");
      add(this.input, "input");
      add(this.label, "label");
      add(this.hint, "hint");
      add(this.prefix, "prefix");
      add(this.suffix, "suffix");
      add(this.prefixIcon, "prefixIcon");
      add(this.suffixIcon, "suffixIcon");
      add(this.helperError, "helperError");
      add(this.counter, "counter");
      add(this.container, "container");
      return value;
    }
    get sizedByParent() {
      return false;
    }
    static _minWidth(box, height) {
      return box == null ? 0.0 : box.getMinIntrinsicWidth(height);
    }
    static _maxWidth(box, height) {
      return box == null ? 0.0 : box.getMaxIntrinsicWidth(height);
    }
    static _minHeight(box, width) {
      return box == null ? 0.0 : box.getMinIntrinsicHeight(width);
    }
    static _boxSize(box) {
      return box == null ? ui.Size.zero : box.size;
    }
    static _boxParentData(box) {
      return BoxParentDataL().as(box.parentData);
    }
    get contentPadding() {
      return EdgeInsetsL().as(this.decoration.contentPadding);
    }
    [_layoutLineBox](box, constraints) {
      if (box == null) {
        return 0.0;
      }
      box.layout(constraints, {parentUsesSize: true});
      let baseline = box.getDistanceToBaseline(ui.TextBaseline.alphabetic);
      if (!(baseline != null && dart.notNull(baseline) >= 0.0)) dart.assertFailed(null, L61, 949, 12, "baseline != null && baseline >= 0.0");
      return baseline;
    }
    [_layout](layoutConstraints) {
      let t9;
      if (!(dart.notNull(layoutConstraints.maxWidth) < 1 / 0)) dart.assertFailed("An InputDecorator, which is typically created by a TextField, cannot " + "have an unbounded width.\n" + "This happens when the parent widget does not provide a finite width " + "constraint. For example, if the InputDecorator is contained by a Row, " + "then its width must be constrained. An Expanded widget or a SizedBox " + "can be used to constrain the width of the InputDecorator or the " + "TextField that contains it.", L61, 958, 7, "layoutConstraints.maxWidth < double.infinity");
      let boxToBaseline = new (LinkedMapOfRenderBoxL$doubleL()).new();
      let boxConstraints = layoutConstraints.loosen();
      boxToBaseline[$_set](this.prefix, this[_layoutLineBox](this.prefix, boxConstraints));
      boxToBaseline[$_set](this.suffix, this[_layoutLineBox](this.suffix, boxConstraints));
      boxToBaseline[$_set](this.icon, this[_layoutLineBox](this.icon, boxConstraints));
      boxToBaseline[$_set](this.prefixIcon, this[_layoutLineBox](this.prefixIcon, boxConstraints));
      boxToBaseline[$_set](this.suffixIcon, this[_layoutLineBox](this.suffixIcon, boxConstraints));
      let inputWidth = math.max(doubleL(), 0.0, dart.notNull(this.constraints.maxWidth) - (dart.notNull(input_decorator._RenderDecoration._boxSize(this.icon).width) + dart.notNull(this.contentPadding.left) + dart.notNull(input_decorator._RenderDecoration._boxSize(this.prefixIcon).width) + dart.notNull(input_decorator._RenderDecoration._boxSize(this.prefix).width) + dart.notNull(input_decorator._RenderDecoration._boxSize(this.suffix).width) + dart.notNull(input_decorator._RenderDecoration._boxSize(this.suffixIcon).width) + dart.notNull(this.contentPadding.right)));
      let invertedLabelScale = ui.lerpDouble(1.0, 1 / 0.75, this.decoration.floatingLabelProgress);
      let labelWidth = math.max(doubleL(), 0.0, dart.notNull(this.constraints.maxWidth) - (dart.notNull(input_decorator._RenderDecoration._boxSize(this.icon).width) + dart.notNull(this.contentPadding.left) + dart.notNull(input_decorator._RenderDecoration._boxSize(this.prefixIcon).width) + dart.notNull(input_decorator._RenderDecoration._boxSize(this.suffixIcon).width) + dart.notNull(this.contentPadding.right)));
      boxToBaseline[$_set](this.label, this[_layoutLineBox](this.label, boxConstraints.copyWith({maxWidth: labelWidth * dart.notNull(invertedLabelScale)})));
      boxToBaseline[$_set](this.hint, this[_layoutLineBox](this.hint, boxConstraints.copyWith({minWidth: inputWidth, maxWidth: inputWidth})));
      boxToBaseline[$_set](this.counter, this[_layoutLineBox](this.counter, boxConstraints));
      boxToBaseline[$_set](this.helperError, this[_layoutLineBox](this.helperError, boxConstraints.copyWith({maxWidth: math.max(doubleL(), 0.0, dart.notNull(boxConstraints.maxWidth) - dart.notNull(input_decorator._RenderDecoration._boxSize(this.icon).width) - dart.notNull(input_decorator._RenderDecoration._boxSize(this.counter).width) - dart.notNull(this.contentPadding.horizontal))})));
      let labelHeight = this.label == null ? 0.0 : this.decoration.floatingLabelHeight;
      let topHeight = dart.test(this.decoration.border.isOutline) ? math.max(doubleL(), dart.notNull(labelHeight) - dart.notNull(boxToBaseline[$_get](this.label)), 0.0) : labelHeight;
      let counterHeight = this.counter == null ? 0.0 : dart.notNull(boxToBaseline[$_get](this.counter)) + 8;
      let helperErrorExists = (t9 = this.helperError, t9 == null ? null : t9.size) != null && dart.notNull(this.helperError.size.height) > 0;
      let helperErrorHeight = !helperErrorExists ? 0.0 : dart.notNull(this.helperError.size.height) + 8;
      let bottomHeight = math.max(doubleL(), counterHeight, helperErrorHeight);
      boxToBaseline[$_set](this.input, this[_layoutLineBox](this.input, boxConstraints.deflate(new edge_insets.EdgeInsets.only({top: dart.notNull(this.contentPadding.top) + dart.notNull(topHeight), bottom: dart.notNull(this.contentPadding.bottom) + bottomHeight})).copyWith({minWidth: inputWidth, maxWidth: inputWidth})));
      let hintHeight = this.hint == null ? 0.0 : this.hint.size.height;
      let inputDirectHeight = this.input == null ? 0.0 : this.input.size.height;
      let inputHeight = math.max(doubleL(), hintHeight, inputDirectHeight);
      let inputInternalBaseline = math.max(doubleL(), boxToBaseline[$_get](this.input), boxToBaseline[$_get](this.hint));
      let prefixHeight = this.prefix == null ? 0.0 : this.prefix.size.height;
      let suffixHeight = this.suffix == null ? 0.0 : this.suffix.size.height;
      let fixHeight = math.max(doubleL(), boxToBaseline[$_get](this.prefix), boxToBaseline[$_get](this.suffix));
      let fixAboveInput = math.max(doubleL(), 0.0, fixHeight - inputInternalBaseline);
      let fixBelowBaseline = math.max(doubleL(), dart.notNull(prefixHeight) - dart.notNull(boxToBaseline[$_get](this.prefix)), dart.notNull(suffixHeight) - dart.notNull(boxToBaseline[$_get](this.suffix)));
      let fixBelowInput = math.max(doubleL(), 0.0, fixBelowBaseline - (inputHeight - inputInternalBaseline));
      let densityOffset = this.decoration.visualDensity.baseSizeAdjustment;
      let prefixIconHeight = this.prefixIcon == null ? 0.0 : this.prefixIcon.size.height;
      let suffixIconHeight = this.suffixIcon == null ? 0.0 : this.suffixIcon.size.height;
      let fixIconHeight = math.max(doubleL(), prefixIconHeight, suffixIconHeight);
      let contentHeight = math.max(doubleL(), fixIconHeight, dart.notNull(topHeight) + dart.notNull(this.contentPadding.top) + fixAboveInput + inputHeight + fixBelowInput + dart.notNull(this.contentPadding.bottom) + dart.notNull(densityOffset.dy));
      let minContainerHeight = dart.test(this.decoration.isDense) || dart.test(this.decoration.isCollapsed) || dart.test(this.expands) ? 0.0 : 48 + dart.notNull(densityOffset.dy);
      let maxContainerHeight = dart.notNull(boxConstraints.maxHeight) - bottomHeight + dart.notNull(densityOffset.dy);
      let containerHeight = dart.test(this.expands) ? maxContainerHeight : math.min(doubleL(), math.max(doubleL(), contentHeight, minContainerHeight), maxContainerHeight);
      let interactiveAdjustment = minContainerHeight > contentHeight ? (minContainerHeight - contentHeight) / 2.0 : 0.0;
      let overflow = math.max(doubleL(), 0.0, contentHeight - maxContainerHeight);
      let textAlignVerticalFactor = (dart.notNull(this.textAlignVertical.y) + 1.0) / 2.0;
      let baselineAdjustment = fixAboveInput - overflow * (1 - textAlignVerticalFactor);
      let topInputBaseline = dart.notNull(this.contentPadding.top) + dart.notNull(topHeight) + inputInternalBaseline + baselineAdjustment + interactiveAdjustment;
      let maxContentHeight = containerHeight - dart.notNull(this.contentPadding.top) - dart.notNull(topHeight) - dart.notNull(this.contentPadding.bottom);
      let alignableHeight = fixAboveInput + inputHeight + fixBelowInput;
      let maxVerticalOffset = maxContentHeight - alignableHeight;
      let textAlignVerticalOffset = maxVerticalOffset * textAlignVerticalFactor;
      let inputBaseline = topInputBaseline + textAlignVerticalOffset + dart.notNull(densityOffset.dy) / 2.0;
      let outlineCenterBaseline = inputInternalBaseline + baselineAdjustment / 2.0 + (containerHeight - (2.0 + inputHeight)) / 2.0;
      let outlineTopBaseline = topInputBaseline;
      let outlineBottomBaseline = topInputBaseline + maxVerticalOffset;
      let outlineBaseline = this[_interpolateThree](outlineTopBaseline, outlineCenterBaseline, outlineBottomBaseline, this.textAlignVertical);
      let subtextCounterBaseline = 0.0;
      let subtextHelperBaseline = 0.0;
      let subtextCounterHeight = 0.0;
      let subtextHelperHeight = 0.0;
      if (this.counter != null) {
        subtextCounterBaseline = containerHeight + 8 + dart.notNull(boxToBaseline[$_get](this.counter));
        subtextCounterHeight = dart.notNull(this.counter.size.height) + 8;
      }
      if (helperErrorExists) {
        subtextHelperBaseline = containerHeight + 8 + dart.notNull(boxToBaseline[$_get](this.helperError));
        subtextHelperHeight = helperErrorHeight;
      }
      let subtextBaseline = math.max(doubleL(), subtextCounterBaseline, subtextHelperBaseline);
      let subtextHeight = math.max(doubleL(), subtextCounterHeight, subtextHelperHeight);
      return new input_decorator._RenderDecorationLayout.new({boxToBaseline: boxToBaseline, containerHeight: containerHeight, inputBaseline: inputBaseline, outlineBaseline: outlineBaseline, subtextBaseline: subtextBaseline, subtextHeight: subtextHeight});
    }
    [_interpolateThree](begin, middle, end, textAlignVertical) {
      if (dart.notNull(textAlignVertical.y) <= 0) {
        if (dart.notNull(begin) >= dart.notNull(middle)) {
          return middle;
        }
        let t = dart.notNull(textAlignVertical.y) + 1;
        return dart.notNull(begin) + (dart.notNull(middle) - dart.notNull(begin)) * t;
      }
      if (dart.notNull(middle) >= dart.notNull(end)) {
        return middle;
      }
      let t = textAlignVertical.y;
      return dart.notNull(middle) + (dart.notNull(end) - dart.notNull(middle)) * dart.notNull(t);
    }
    computeMinIntrinsicWidth(height) {
      return dart.notNull(input_decorator._RenderDecoration._minWidth(this.icon, height)) + dart.notNull(this.contentPadding.left) + dart.notNull(input_decorator._RenderDecoration._minWidth(this.prefixIcon, height)) + dart.notNull(input_decorator._RenderDecoration._minWidth(this.prefix, height)) + math.max(numL(), input_decorator._RenderDecoration._minWidth(this.input, height), input_decorator._RenderDecoration._minWidth(this.hint, height)) + dart.notNull(input_decorator._RenderDecoration._minWidth(this.suffix, height)) + dart.notNull(input_decorator._RenderDecoration._minWidth(this.suffixIcon, height)) + dart.notNull(this.contentPadding.right);
    }
    computeMaxIntrinsicWidth(height) {
      return dart.notNull(input_decorator._RenderDecoration._maxWidth(this.icon, height)) + dart.notNull(this.contentPadding.left) + dart.notNull(input_decorator._RenderDecoration._maxWidth(this.prefixIcon, height)) + dart.notNull(input_decorator._RenderDecoration._maxWidth(this.prefix, height)) + math.max(numL(), input_decorator._RenderDecoration._maxWidth(this.input, height), input_decorator._RenderDecoration._maxWidth(this.hint, height)) + dart.notNull(input_decorator._RenderDecoration._maxWidth(this.suffix, height)) + dart.notNull(input_decorator._RenderDecoration._maxWidth(this.suffixIcon, height)) + dart.notNull(this.contentPadding.right);
    }
    [_lineHeight](width, boxes) {
      let height = 0.0;
      for (let box of boxes) {
        if (box == null) continue;
        height = math.max(doubleL(), input_decorator._RenderDecoration._minHeight(box, width), height);
      }
      return height;
    }
    computeMinIntrinsicHeight(width) {
      let subtextHeight = this[_lineHeight](width, JSArrayOfRenderBoxL().of([this.helperError, this.counter]));
      if (dart.notNull(subtextHeight) > 0.0) subtextHeight = dart.notNull(subtextHeight) + 8;
      let densityOffset = this.decoration.visualDensity.baseSizeAdjustment;
      let containerHeight = dart.notNull(this.contentPadding.top) + dart.notNull(this.label == null ? 0.0 : this.decoration.floatingLabelHeight) + dart.notNull(this[_lineHeight](width, JSArrayOfRenderBoxL().of([this.prefix, this.input, this.suffix]))) + dart.notNull(subtextHeight) + dart.notNull(this.contentPadding.bottom);
      let minContainerHeight = dart.test(this.decoration.isDense) || dart.test(this.expands) ? 0.0 : 48 + dart.notNull(densityOffset.dy);
      return math.max(doubleL(), containerHeight, minContainerHeight);
    }
    computeMaxIntrinsicHeight(width) {
      return this.computeMinIntrinsicHeight(width);
    }
    computeDistanceToActualBaseline(baseline) {
      return dart.notNull(input_decorator._RenderDecoration._boxParentData(this.input).offset.dy) + dart.notNull(this.input.computeDistanceToActualBaseline(baseline));
    }
    performLayout() {
      let constraints = this.constraints;
      this[_labelTransform] = null;
      let layout = this[_layout](constraints);
      let overallWidth = constraints.maxWidth;
      let overallHeight = dart.notNull(layout.containerHeight) + dart.notNull(layout.subtextHeight);
      if (this.container != null) {
        let containerConstraints = new box.BoxConstraints.tightFor({height: layout.containerHeight, width: dart.notNull(overallWidth) - dart.notNull(input_decorator._RenderDecoration._boxSize(this.icon).width)});
        this.container.layout(containerConstraints, {parentUsesSize: true});
        let x = null;
        switch (this.textDirection) {
          case C237 || CT.C237:
          {
            x = 0.0;
            break;
          }
          case C238 || CT.C238:
          {
            x = input_decorator._RenderDecoration._boxSize(this.icon).width;
            break;
          }
        }
        input_decorator._RenderDecoration._boxParentData(this.container).offset = new ui.Offset.new(x, 0.0);
      }
      let height = null;
      function centerLayout(box, x) {
        input_decorator._RenderDecoration._boxParentData(box).offset = new ui.Offset.new(x, (dart.notNull(height) - dart.notNull(box.size.height)) / 2.0);
        return box.size.width;
      }
      dart.fn(centerLayout, RenderBoxLAnddoubleLTodoubleL());
      let baseline = null;
      function baselineLayout(box, x) {
        input_decorator._RenderDecoration._boxParentData(box).offset = new ui.Offset.new(x, dart.notNull(baseline) - dart.notNull(layout.boxToBaseline[$_get](box)));
        return box.size.width;
      }
      dart.fn(baselineLayout, RenderBoxLAnddoubleLTodoubleL());
      let left = this.contentPadding.left;
      let right = dart.notNull(overallWidth) - dart.notNull(this.contentPadding.right);
      height = layout.containerHeight;
      baseline = dart.test(this[_isOutlineAligned]) ? layout.outlineBaseline : layout.inputBaseline;
      if (this.icon != null) {
        let x = null;
        switch (this.textDirection) {
          case C237 || CT.C237:
          {
            x = dart.notNull(overallWidth) - dart.notNull(this.icon.size.width);
            break;
          }
          case C238 || CT.C238:
          {
            x = 0.0;
            break;
          }
        }
        centerLayout(this.icon, x);
      }
      switch (this.textDirection) {
        case C237 || CT.C237:
        {
          {
            let start = right - dart.notNull(input_decorator._RenderDecoration._boxSize(this.icon).width);
            let end = left;
            if (this.prefixIcon != null) {
              start = start + dart.notNull(this.contentPadding.left);
              start = start - dart.notNull(centerLayout(this.prefixIcon, start - dart.notNull(this.prefixIcon.size.width)));
            }
            if (this.label != null) {
              if (dart.test(this.decoration.alignLabelWithHint)) {
                baselineLayout(this.label, start - dart.notNull(this.label.size.width));
              } else {
                centerLayout(this.label, start - dart.notNull(this.label.size.width));
              }
            }
            if (this.prefix != null) start = start - dart.notNull(baselineLayout(this.prefix, start - dart.notNull(this.prefix.size.width)));
            if (this.input != null) baselineLayout(this.input, start - dart.notNull(this.input.size.width));
            if (this.hint != null) baselineLayout(this.hint, start - dart.notNull(this.hint.size.width));
            if (this.suffixIcon != null) {
              end = dart.notNull(end) - dart.notNull(this.contentPadding.left);
              end = dart.notNull(end) + dart.notNull(centerLayout(this.suffixIcon, end));
            }
            if (this.suffix != null) end = dart.notNull(end) + dart.notNull(baselineLayout(this.suffix, end));
            break;
          }
        }
        case C238 || CT.C238:
        {
          {
            let start = dart.notNull(left) + dart.notNull(input_decorator._RenderDecoration._boxSize(this.icon).width);
            let end = right;
            if (this.prefixIcon != null) {
              start = start - dart.notNull(this.contentPadding.left);
              start = start + dart.notNull(centerLayout(this.prefixIcon, start));
            }
            if (this.label != null) {
              if (dart.test(this.decoration.alignLabelWithHint)) {
                baselineLayout(this.label, start);
              } else {
                centerLayout(this.label, start);
              }
            }
            if (this.prefix != null) start = start + dart.notNull(baselineLayout(this.prefix, start));
            if (this.input != null) baselineLayout(this.input, start);
            if (this.hint != null) baselineLayout(this.hint, start);
            if (this.suffixIcon != null) {
              end = end + dart.notNull(this.contentPadding.right);
              end = end - dart.notNull(centerLayout(this.suffixIcon, end - dart.notNull(this.suffixIcon.size.width)));
            }
            if (this.suffix != null) end = end - dart.notNull(baselineLayout(this.suffix, end - dart.notNull(this.suffix.size.width)));
            break;
          }
        }
      }
      if (this.helperError != null || this.counter != null) {
        height = layout.subtextHeight;
        baseline = layout.subtextBaseline;
        switch (this.textDirection) {
          case C237 || CT.C237:
          {
            if (this.helperError != null) baselineLayout(this.helperError, right - dart.notNull(this.helperError.size.width) - dart.notNull(input_decorator._RenderDecoration._boxSize(this.icon).width));
            if (this.counter != null) baselineLayout(this.counter, left);
            break;
          }
          case C238 || CT.C238:
          {
            if (this.helperError != null) baselineLayout(this.helperError, dart.notNull(left) + dart.notNull(input_decorator._RenderDecoration._boxSize(this.icon).width));
            if (this.counter != null) baselineLayout(this.counter, right - dart.notNull(this.counter.size.width));
            break;
          }
        }
      }
      if (this.label != null) {
        let labelX = input_decorator._RenderDecoration._boxParentData(this.label).offset.dx;
        switch (this.textDirection) {
          case C237 || CT.C237:
          {
            this.decoration.borderGap.start = dart.notNull(labelX) + dart.notNull(this.label.size.width);
            break;
          }
          case C238 || CT.C238:
          {
            this.decoration.borderGap.start = dart.notNull(labelX) - dart.notNull(input_decorator._RenderDecoration._boxSize(this.icon).width);
            break;
          }
        }
        this.decoration.borderGap.extent = dart.notNull(this.label.size.width) * 0.75;
      } else {
        this.decoration.borderGap.start = null;
        this.decoration.borderGap.extent = 0.0;
      }
      this.size = constraints.constrain(new ui.Size.new(overallWidth, overallHeight));
      if (!(this.size.width == constraints.constrainWidth(overallWidth))) dart.assertFailed(null, L61, 1440, 12, "size.width == constraints.constrainWidth(overallWidth)");
      if (!(this.size.height == constraints.constrainHeight(overallHeight))) dart.assertFailed(null, L61, 1441, 12, "size.height == constraints.constrainHeight(overallHeight)");
    }
    [_paintLabel](context, offset) {
      context.paintChild(this.label, offset);
    }
    paint(context, offset) {
      let t9;
      function doPaint(child) {
        if (child != null) context.paintChild(child, input_decorator._RenderDecoration._boxParentData(child).offset['+'](offset));
      }
      dart.fn(doPaint, RenderBoxLTovoid());
      doPaint(this.container);
      if (this.label != null) {
        let labelOffset = input_decorator._RenderDecoration._boxParentData(this.label).offset;
        let labelHeight = this.label.size.height;
        let borderWeight = this.decoration.border.borderSide.width;
        let t = this.decoration.floatingLabelProgress;
        let isOutlineBorder = this.decoration.border != null && dart.test(this.decoration.border.isOutline);
        let floatingY = dart.test(this.decoration.fixTextFieldOutlineLabel) ? isOutlineBorder ? -dart.notNull(labelHeight) * 0.75 / 2.0 + dart.notNull(borderWeight) / 2.0 : this.contentPadding.top : isOutlineBorder ? -dart.notNull(labelHeight) * 0.25 : this.contentPadding.top;
        let scale = ui.lerpDouble(1.0, 0.75, t);
        let dx = null;
        switch (this.textDirection) {
          case C237 || CT.C237:
          {
            dx = dart.notNull(labelOffset.dx) + dart.notNull(this.label.size.width) * (1.0 - dart.notNull(scale));
            break;
          }
          case C238 || CT.C238:
          {
            dx = labelOffset.dx;
            break;
          }
        }
        let dy = ui.lerpDouble(0.0, dart.notNull(floatingY) - dart.notNull(labelOffset.dy), t);
        this[_labelTransform] = (t9 = vector_math_64.Matrix4.identity(), (() => {
          t9.translate(dx, dart.notNull(labelOffset.dy) + dart.notNull(dy));
          t9.scale(scale);
          return t9;
        })());
        context.pushTransform(this.needsCompositing, offset, this[_labelTransform], dart.bind(this, _paintLabel));
      }
      doPaint(this.icon);
      doPaint(this.prefix);
      doPaint(this.suffix);
      doPaint(this.prefixIcon);
      doPaint(this.suffixIcon);
      doPaint(this.hint);
      doPaint(this.input);
      doPaint(this.helperError);
      doPaint(this.counter);
    }
    hitTestSelf(position) {
      return true;
    }
    hitTestChildren(result, opts) {
      let position = opts && 'position' in opts ? opts.position : null;
      if (!(position != null)) dart.assertFailed(null, L61, 1502, 12, "position != null");
      for (let child of this[_children$0]) {
        let offset = input_decorator._RenderDecoration._boxParentData(child).offset;
        let isHit = result.addWithPaintOffset({offset: offset, position: position, hitTest: dart.fn((result, transformed) => {
            if (!dart.equals(transformed, position['-'](offset))) dart.assertFailed(null, L61, 1510, 18, "transformed == position - offset");
            return child.hitTest(result, {position: transformed});
          }, BoxHitTestResultLAndOffsetLToboolL())});
        if (dart.test(isHit)) return true;
      }
      return false;
    }
    applyPaintTransform(child, transform) {
      let t9;
      RenderObjectL().as(child);
      if (dart.equals(child, this.label) && this[_labelTransform] != null) {
        let labelOffset = input_decorator._RenderDecoration._boxParentData(this.label).offset;
        t9 = transform;
        (() => {
          t9.multiply(this[_labelTransform]);
          t9.translate(-dart.notNull(labelOffset.dx), -dart.notNull(labelOffset.dy));
          return t9;
        })();
      }
      super.applyPaintTransform(child, transform);
    }
  };
  (input_decorator._RenderDecoration.new = function(opts) {
    let decoration = opts && 'decoration' in opts ? opts.decoration : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
    let isFocused = opts && 'isFocused' in opts ? opts.isFocused : null;
    let expands = opts && 'expands' in opts ? opts.expands : null;
    let textAlignVertical = opts && 'textAlignVertical' in opts ? opts.textAlignVertical : null;
    this.slotToChild = new (LinkedMapOf_DecorationSlotL$RenderBoxL()).new();
    this.childToSlot = new (LinkedMapOfRenderBoxL$_DecorationSlotL()).new();
    this[_icon] = null;
    this[_input] = null;
    this[_label] = null;
    this[_hint] = null;
    this[_prefix] = null;
    this[_suffix] = null;
    this[_prefixIcon] = null;
    this[_suffixIcon] = null;
    this[_helperError] = null;
    this[_counter] = null;
    this[_container] = null;
    this[_expands] = false;
    this[_labelTransform] = null;
    if (!(decoration != null)) dart.assertFailed(null, L61, 636, 15, "decoration != null");
    if (!(textDirection != null)) dart.assertFailed(null, L61, 637, 15, "textDirection != null");
    if (!(textBaseline != null)) dart.assertFailed(null, L61, 638, 15, "textBaseline != null");
    if (!(expands != null)) dart.assertFailed(null, L61, 639, 15, "expands != null");
    this[_decoration] = decoration;
    this[_textDirection$] = textDirection;
    this[_textBaseline] = textBaseline;
    this[_textAlignVertical] = textAlignVertical;
    this[_isFocused] = isFocused;
    this[_expands] = expands;
    input_decorator._RenderDecoration.__proto__.new.call(this);
    ;
  }).prototype = input_decorator._RenderDecoration.prototype;
  dart.addTypeTests(input_decorator._RenderDecoration);
  dart.addTypeCaches(input_decorator._RenderDecoration);
  dart.setMethodSignature(input_decorator._RenderDecoration, () => ({
    __proto__: dart.getMethods(input_decorator._RenderDecoration.__proto__),
    [_updateChild$]: dart.fnType(dart.legacy(box.RenderBox), [dart.legacy(box.RenderBox), dart.legacy(box.RenderBox), dart.legacy(input_decorator._DecorationSlot)]),
    [_layoutLineBox]: dart.fnType(dart.legacy(core.double), [dart.legacy(box.RenderBox), dart.legacy(box.BoxConstraints)]),
    [_layout]: dart.fnType(dart.legacy(input_decorator._RenderDecorationLayout), [dart.legacy(box.BoxConstraints)]),
    [_interpolateThree]: dart.fnType(dart.legacy(core.double), [dart.legacy(core.double), dart.legacy(core.double), dart.legacy(core.double), dart.legacy(alignment.TextAlignVertical)]),
    [_lineHeight]: dart.fnType(dart.legacy(core.double), [dart.legacy(core.double), dart.legacy(core.List$(dart.legacy(box.RenderBox)))]),
    [_paintLabel]: dart.fnType(dart.void, [dart.legacy(object.PaintingContext), dart.legacy(ui.Offset)])
  }));
  dart.setGetterSignature(input_decorator._RenderDecoration, () => ({
    __proto__: dart.getGetters(input_decorator._RenderDecoration.__proto__),
    icon: dart.legacy(box.RenderBox),
    input: dart.legacy(box.RenderBox),
    label: dart.legacy(box.RenderBox),
    hint: dart.legacy(box.RenderBox),
    prefix: dart.legacy(box.RenderBox),
    suffix: dart.legacy(box.RenderBox),
    prefixIcon: dart.legacy(box.RenderBox),
    suffixIcon: dart.legacy(box.RenderBox),
    helperError: dart.legacy(box.RenderBox),
    counter: dart.legacy(box.RenderBox),
    container: dart.legacy(box.RenderBox),
    [_children$0]: dart.legacy(core.Iterable$(dart.legacy(box.RenderBox))),
    decoration: dart.legacy(input_decorator._Decoration),
    textDirection: dart.legacy(ui.TextDirection),
    textBaseline: dart.legacy(ui.TextBaseline),
    [_defaultTextAlignVertical]: dart.legacy(alignment.TextAlignVertical),
    textAlignVertical: dart.legacy(alignment.TextAlignVertical),
    isFocused: dart.legacy(core.bool),
    expands: dart.legacy(core.bool),
    [_isOutlineAligned]: dart.legacy(core.bool),
    contentPadding: dart.legacy(edge_insets.EdgeInsets)
  }));
  dart.setSetterSignature(input_decorator._RenderDecoration, () => ({
    __proto__: dart.getSetters(input_decorator._RenderDecoration.__proto__),
    icon: dart.legacy(box.RenderBox),
    input: dart.legacy(box.RenderBox),
    label: dart.legacy(box.RenderBox),
    hint: dart.legacy(box.RenderBox),
    prefix: dart.legacy(box.RenderBox),
    suffix: dart.legacy(box.RenderBox),
    prefixIcon: dart.legacy(box.RenderBox),
    suffixIcon: dart.legacy(box.RenderBox),
    helperError: dart.legacy(box.RenderBox),
    counter: dart.legacy(box.RenderBox),
    container: dart.legacy(box.RenderBox),
    decoration: dart.legacy(input_decorator._Decoration),
    textDirection: dart.legacy(ui.TextDirection),
    textBaseline: dart.legacy(ui.TextBaseline),
    textAlignVertical: dart.legacy(alignment.TextAlignVertical),
    isFocused: dart.legacy(core.bool),
    expands: dart.legacy(core.bool)
  }));
  dart.setLibraryUri(input_decorator._RenderDecoration, L60);
  dart.setFieldSignature(input_decorator._RenderDecoration, () => ({
    __proto__: dart.getFields(input_decorator._RenderDecoration.__proto__),
    slotToChild: dart.finalFieldType(dart.legacy(core.Map$(dart.legacy(input_decorator._DecorationSlot), dart.legacy(box.RenderBox)))),
    childToSlot: dart.finalFieldType(dart.legacy(core.Map$(dart.legacy(box.RenderBox), dart.legacy(input_decorator._DecorationSlot)))),
    [_icon]: dart.fieldType(dart.legacy(box.RenderBox)),
    [_input]: dart.fieldType(dart.legacy(box.RenderBox)),
    [_label]: dart.fieldType(dart.legacy(box.RenderBox)),
    [_hint]: dart.fieldType(dart.legacy(box.RenderBox)),
    [_prefix]: dart.fieldType(dart.legacy(box.RenderBox)),
    [_suffix]: dart.fieldType(dart.legacy(box.RenderBox)),
    [_prefixIcon]: dart.fieldType(dart.legacy(box.RenderBox)),
    [_suffixIcon]: dart.fieldType(dart.legacy(box.RenderBox)),
    [_helperError]: dart.fieldType(dart.legacy(box.RenderBox)),
    [_counter]: dart.fieldType(dart.legacy(box.RenderBox)),
    [_container]: dart.fieldType(dart.legacy(box.RenderBox)),
    [_decoration]: dart.fieldType(dart.legacy(input_decorator._Decoration)),
    [_textDirection$]: dart.fieldType(dart.legacy(ui.TextDirection)),
    [_textBaseline]: dart.fieldType(dart.legacy(ui.TextBaseline)),
    [_textAlignVertical]: dart.fieldType(dart.legacy(alignment.TextAlignVertical)),
    [_isFocused]: dart.fieldType(dart.legacy(core.bool)),
    [_expands]: dart.fieldType(dart.legacy(core.bool)),
    [_labelTransform]: dart.fieldType(dart.legacy(vector_math_64.Matrix4))
  }));
  dart.defineLazy(input_decorator._RenderDecoration, {
    /*input_decorator._RenderDecoration.subtextGap*/get subtextGap() {
      return 8;
    }
  }, true);
  var _mountChild$ = dart.privateName(input_decorator, "_mountChild");
  var _updateRenderObject$ = dart.privateName(input_decorator, "_updateRenderObject");
  input_decorator._RenderDecorationElement = class _RenderDecorationElement extends framework.RenderObjectElement {
    get widget() {
      return _DecoratorL().as(super.widget);
    }
    get renderObject() {
      return _RenderDecorationL().as(super.renderObject);
    }
    visitChildren(visitor) {
      this.slotToChild[$values][$forEach](visitor);
    }
    forgetChild(child) {
      if (!dart.test(this.slotToChild[$values][$contains](child))) dart.assertFailed(null, L61, 1551, 12, "slotToChild.values.contains(child)");
      if (!dart.test(this.childToSlot[$keys][$contains](child))) dart.assertFailed(null, L61, 1552, 12, "childToSlot.keys.contains(child)");
      let slot = this.childToSlot[$_get](child);
      this.childToSlot[$remove](child);
      this.slotToChild[$remove](slot);
      super.forgetChild(child);
    }
    [_mountChild$](widget, slot) {
      let oldChild = this.slotToChild[$_get](slot);
      let newChild = this.updateChild(oldChild, widget, slot);
      if (oldChild != null) {
        this.slotToChild[$remove](slot);
        this.childToSlot[$remove](oldChild);
      }
      if (newChild != null) {
        this.slotToChild[$_set](slot, newChild);
        this.childToSlot[$_set](newChild, slot);
      }
    }
    mount(parent, newSlot) {
      super.mount(parent, newSlot);
      this[_mountChild$](this.widget.decoration.icon, input_decorator._DecorationSlot.icon);
      this[_mountChild$](this.widget.decoration.input, input_decorator._DecorationSlot.input);
      this[_mountChild$](this.widget.decoration.label, input_decorator._DecorationSlot.label);
      this[_mountChild$](this.widget.decoration.hint, input_decorator._DecorationSlot.hint);
      this[_mountChild$](this.widget.decoration.prefix, input_decorator._DecorationSlot.prefix);
      this[_mountChild$](this.widget.decoration.suffix, input_decorator._DecorationSlot.suffix);
      this[_mountChild$](this.widget.decoration.prefixIcon, input_decorator._DecorationSlot.prefixIcon);
      this[_mountChild$](this.widget.decoration.suffixIcon, input_decorator._DecorationSlot.suffixIcon);
      this[_mountChild$](this.widget.decoration.helperError, input_decorator._DecorationSlot.helperError);
      this[_mountChild$](this.widget.decoration.counter, input_decorator._DecorationSlot.counter);
      this[_mountChild$](this.widget.decoration.container, input_decorator._DecorationSlot.container);
    }
    [_updateChild$](widget, slot) {
      let oldChild = this.slotToChild[$_get](slot);
      let newChild = this.updateChild(oldChild, widget, slot);
      if (oldChild != null) {
        this.childToSlot[$remove](oldChild);
        this.slotToChild[$remove](slot);
      }
      if (newChild != null) {
        this.slotToChild[$_set](slot, newChild);
        this.childToSlot[$_set](newChild, slot);
      }
    }
    update(newWidget) {
      _DecoratorL().as(newWidget);
      super.update(newWidget);
      if (!dart.equals(this.widget, newWidget)) dart.assertFailed(null, L61, 1604, 12, "widget == newWidget");
      this[_updateChild$](this.widget.decoration.icon, input_decorator._DecorationSlot.icon);
      this[_updateChild$](this.widget.decoration.input, input_decorator._DecorationSlot.input);
      this[_updateChild$](this.widget.decoration.label, input_decorator._DecorationSlot.label);
      this[_updateChild$](this.widget.decoration.hint, input_decorator._DecorationSlot.hint);
      this[_updateChild$](this.widget.decoration.prefix, input_decorator._DecorationSlot.prefix);
      this[_updateChild$](this.widget.decoration.suffix, input_decorator._DecorationSlot.suffix);
      this[_updateChild$](this.widget.decoration.prefixIcon, input_decorator._DecorationSlot.prefixIcon);
      this[_updateChild$](this.widget.decoration.suffixIcon, input_decorator._DecorationSlot.suffixIcon);
      this[_updateChild$](this.widget.decoration.helperError, input_decorator._DecorationSlot.helperError);
      this[_updateChild$](this.widget.decoration.counter, input_decorator._DecorationSlot.counter);
      this[_updateChild$](this.widget.decoration.container, input_decorator._DecorationSlot.container);
    }
    [_updateRenderObject$](child, slot) {
      switch (slot) {
        case C1662 || CT.C1662:
        {
          this.renderObject.icon = child;
          break;
        }
        case C1663 || CT.C1663:
        {
          this.renderObject.input = child;
          break;
        }
        case C1664 || CT.C1664:
        {
          this.renderObject.label = child;
          break;
        }
        case C1665 || CT.C1665:
        {
          this.renderObject.hint = child;
          break;
        }
        case C1666 || CT.C1666:
        {
          this.renderObject.prefix = child;
          break;
        }
        case C1667 || CT.C1667:
        {
          this.renderObject.suffix = child;
          break;
        }
        case C1668 || CT.C1668:
        {
          this.renderObject.prefixIcon = child;
          break;
        }
        case C1669 || CT.C1669:
        {
          this.renderObject.suffixIcon = child;
          break;
        }
        case C1670 || CT.C1670:
        {
          this.renderObject.helperError = child;
          break;
        }
        case C1671 || CT.C1671:
        {
          this.renderObject.counter = child;
          break;
        }
        case C1672 || CT.C1672:
        {
          this.renderObject.container = child;
          break;
        }
      }
    }
    insertChildRenderObject(child, slotValue) {
      RenderObjectL().as(child);
      if (!RenderBoxL().is(child)) dart.assertFailed(null, L61, 1658, 12, "child is RenderBox");
      if (!_DecorationSlotL().is(slotValue)) dart.assertFailed(null, L61, 1659, 12, "slotValue is _DecorationSlot");
      let slot = _DecorationSlotL().as(slotValue);
      this[_updateRenderObject$](RenderBoxL().as(child), slot);
      if (!dart.test(this.renderObject.childToSlot[$keys][$contains](child))) dart.assertFailed(null, L61, 1662, 12, "renderObject.childToSlot.keys.contains(child)");
      if (!dart.test(this.renderObject.slotToChild[$keys][$contains](slot))) dart.assertFailed(null, L61, 1663, 12, "renderObject.slotToChild.keys.contains(slot)");
    }
    removeChildRenderObject(child) {
      RenderObjectL().as(child);
      if (!RenderBoxL().is(child)) dart.assertFailed(null, L61, 1668, 12, "child is RenderBox");
      if (!dart.test(this.renderObject.childToSlot[$keys][$contains](child))) dart.assertFailed(null, L61, 1669, 12, "renderObject.childToSlot.keys.contains(child)");
      this[_updateRenderObject$](null, this.renderObject.childToSlot[$_get](child));
      if (!!dart.test(this.renderObject.childToSlot[$keys][$contains](child))) dart.assertFailed(null, L61, 1671, 12, "!renderObject.childToSlot.keys.contains(child)");
      if (!!dart.test(this.renderObject.slotToChild[$keys][$contains](this.slot))) dart.assertFailed(null, L61, 1672, 12, "!renderObject.slotToChild.keys.contains(slot)");
    }
    moveChildRenderObject(child, slotValue) {
      RenderObjectL().as(child);
      if (!false) dart.assertFailed("not reachable", L61, 1677, 12, "false");
    }
  };
  (input_decorator._RenderDecorationElement.new = function(widget) {
    this.slotToChild = new (LinkedMapOf_DecorationSlotL$ElementL()).new();
    this.childToSlot = new (LinkedMapOfElementL$_DecorationSlotL()).new();
    input_decorator._RenderDecorationElement.__proto__.new.call(this, widget);
    ;
  }).prototype = input_decorator._RenderDecorationElement.prototype;
  dart.addTypeTests(input_decorator._RenderDecorationElement);
  dart.addTypeCaches(input_decorator._RenderDecorationElement);
  dart.setMethodSignature(input_decorator._RenderDecorationElement, () => ({
    __proto__: dart.getMethods(input_decorator._RenderDecorationElement.__proto__),
    [_mountChild$]: dart.fnType(dart.void, [dart.legacy(framework.Widget), dart.legacy(input_decorator._DecorationSlot)]),
    [_updateChild$]: dart.fnType(dart.void, [dart.legacy(framework.Widget), dart.legacy(input_decorator._DecorationSlot)]),
    [_updateRenderObject$]: dart.fnType(dart.void, [dart.legacy(box.RenderBox), dart.legacy(input_decorator._DecorationSlot)]),
    insertChildRenderObject: dart.fnType(dart.void, [dart.legacy(core.Object), dart.legacy(core.Object)]),
    removeChildRenderObject: dart.fnType(dart.void, [dart.legacy(core.Object)]),
    moveChildRenderObject: dart.fnType(dart.void, [dart.legacy(core.Object), dart.legacy(core.Object)])
  }));
  dart.setGetterSignature(input_decorator._RenderDecorationElement, () => ({
    __proto__: dart.getGetters(input_decorator._RenderDecorationElement.__proto__),
    widget: dart.legacy(input_decorator._Decorator),
    renderObject: dart.legacy(input_decorator._RenderDecoration)
  }));
  dart.setLibraryUri(input_decorator._RenderDecorationElement, L60);
  dart.setFieldSignature(input_decorator._RenderDecorationElement, () => ({
    __proto__: dart.getFields(input_decorator._RenderDecorationElement.__proto__),
    slotToChild: dart.finalFieldType(dart.legacy(core.Map$(dart.legacy(input_decorator._DecorationSlot), dart.legacy(framework.Element)))),
    childToSlot: dart.finalFieldType(dart.legacy(core.Map$(dart.legacy(framework.Element), dart.legacy(input_decorator._DecorationSlot))))
  }));
  var decoration$2 = dart.privateName(input_decorator, "_Decorator.decoration");
  var textDirection$0 = dart.privateName(input_decorator, "_Decorator.textDirection");
  var textBaseline$ = dart.privateName(input_decorator, "_Decorator.textBaseline");
  var textAlignVertical$ = dart.privateName(input_decorator, "_Decorator.textAlignVertical");
  var isFocused$ = dart.privateName(input_decorator, "_Decorator.isFocused");
  var expands$ = dart.privateName(input_decorator, "_Decorator.expands");
  input_decorator._Decorator = class _Decorator extends framework.RenderObjectWidget {
    get decoration() {
      return this[decoration$2];
    }
    set decoration(value) {
      super.decoration = value;
    }
    get textDirection() {
      return this[textDirection$0];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
    get textBaseline() {
      return this[textBaseline$];
    }
    set textBaseline(value) {
      super.textBaseline = value;
    }
    get textAlignVertical() {
      return this[textAlignVertical$];
    }
    set textAlignVertical(value) {
      super.textAlignVertical = value;
    }
    get isFocused() {
      return this[isFocused$];
    }
    set isFocused(value) {
      super.isFocused = value;
    }
    get expands() {
      return this[expands$];
    }
    set expands(value) {
      super.expands = value;
    }
    createElement() {
      return new input_decorator._RenderDecorationElement.new(this);
    }
    createRenderObject(context) {
      return new input_decorator._RenderDecoration.new({decoration: this.decoration, textDirection: this.textDirection, textBaseline: this.textBaseline, textAlignVertical: this.textAlignVertical, isFocused: this.isFocused, expands: this.expands});
    }
    updateRenderObject(context, renderObject) {
      let t9;
      _RenderDecorationL().as(renderObject);
      t9 = renderObject;
      (() => {
        t9.decoration = this.decoration;
        t9.expands = this.expands;
        t9.isFocused = this.isFocused;
        t9.textAlignVertical = this.textAlignVertical;
        t9.textBaseline = this.textBaseline;
        t9.textDirection = this.textDirection;
        return t9;
      })();
    }
  };
  (input_decorator._Decorator.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let textAlignVertical = opts && 'textAlignVertical' in opts ? opts.textAlignVertical : null;
    let decoration = opts && 'decoration' in opts ? opts.decoration : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
    let isFocused = opts && 'isFocused' in opts ? opts.isFocused : null;
    let expands = opts && 'expands' in opts ? opts.expands : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[textAlignVertical$] = textAlignVertical;
    this[decoration$2] = decoration;
    this[textDirection$0] = textDirection;
    this[textBaseline$] = textBaseline;
    this[isFocused$] = isFocused;
    this[expands$] = expands;
    if (!(decoration != null)) dart.assertFailed(null, L61, 1690, 15, "decoration != null");
    if (!(textDirection != null)) dart.assertFailed(null, L61, 1691, 15, "textDirection != null");
    if (!(textBaseline != null)) dart.assertFailed(null, L61, 1692, 15, "textBaseline != null");
    if (!(expands != null)) dart.assertFailed(null, L61, 1693, 15, "expands != null");
    input_decorator._Decorator.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = input_decorator._Decorator.prototype;
  dart.addTypeTests(input_decorator._Decorator);
  dart.addTypeCaches(input_decorator._Decorator);
  dart.setMethodSignature(input_decorator._Decorator, () => ({
    __proto__: dart.getMethods(input_decorator._Decorator.__proto__),
    createElement: dart.fnType(dart.legacy(input_decorator._RenderDecorationElement), []),
    createRenderObject: dart.fnType(dart.legacy(input_decorator._RenderDecoration), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(input_decorator._Decorator, L60);
  dart.setFieldSignature(input_decorator._Decorator, () => ({
    __proto__: dart.getFields(input_decorator._Decorator.__proto__),
    decoration: dart.finalFieldType(dart.legacy(input_decorator._Decoration)),
    textDirection: dart.finalFieldType(dart.legacy(ui.TextDirection)),
    textBaseline: dart.finalFieldType(dart.legacy(ui.TextBaseline)),
    textAlignVertical: dart.finalFieldType(dart.legacy(alignment.TextAlignVertical)),
    isFocused: dart.finalFieldType(dart.legacy(core.bool)),
    expands: dart.finalFieldType(dart.legacy(core.bool))
  }));
  var C1676;
  var C1677;
  var C1675;
  var C1674;
  var C1680;
  var C1681;
  var C1682;
  var C1683;
  var C1679;
  var C1678;
  var labelIsFloating$ = dart.privateName(input_decorator, "_AffixText.labelIsFloating");
  var text$1 = dart.privateName(input_decorator, "_AffixText.text");
  var style$2 = dart.privateName(input_decorator, "_AffixText.style");
  var child$16 = dart.privateName(input_decorator, "_AffixText.child");
  input_decorator._AffixText = class _AffixText extends framework.StatelessWidget {
    get labelIsFloating() {
      return this[labelIsFloating$];
    }
    set labelIsFloating(value) {
      super.labelIsFloating = value;
    }
    get text() {
      return this[text$1];
    }
    set text(value) {
      super.text = value;
    }
    get style() {
      return this[style$2];
    }
    set style(value) {
      super.style = value;
    }
    get child() {
      return this[child$16];
    }
    set child(value) {
      super.child = value;
    }
    build(context) {
      let t9;
      return text$.DefaultTextStyle.merge({style: this.style, child: new implicit_animations.AnimatedOpacity.new({duration: input_decorator._kTransitionDuration, curve: input_decorator._kTransitionCurve, opacity: dart.test(this.labelIsFloating) ? 1.0 : 0.0, child: (t9 = this.child, t9 == null ? new text$.Text.new(this.text, {style: this.style, $creationLocationd_0dea112b090073317d4: C1674 || CT.C1674}) : t9), $creationLocationd_0dea112b090073317d4: C1678 || CT.C1678})});
    }
  };
  (input_decorator._AffixText.new = function(opts) {
    let labelIsFloating = opts && 'labelIsFloating' in opts ? opts.labelIsFloating : null;
    let text = opts && 'text' in opts ? opts.text : null;
    let style = opts && 'style' in opts ? opts.style : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[labelIsFloating$] = labelIsFloating;
    this[text$1] = text;
    this[style$2] = style;
    this[child$16] = child;
    input_decorator._AffixText.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = input_decorator._AffixText.prototype;
  dart.addTypeTests(input_decorator._AffixText);
  dart.addTypeCaches(input_decorator._AffixText);
  dart.setMethodSignature(input_decorator._AffixText, () => ({
    __proto__: dart.getMethods(input_decorator._AffixText.__proto__),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(input_decorator._AffixText, L60);
  dart.setFieldSignature(input_decorator._AffixText, () => ({
    __proto__: dart.getFields(input_decorator._AffixText.__proto__),
    labelIsFloating: dart.finalFieldType(dart.legacy(core.bool)),
    text: dart.finalFieldType(dart.legacy(core.String)),
    style: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    child: dart.finalFieldType(dart.legacy(framework.Widget))
  }));
  var _labelShouldWithdraw = dart.privateName(input_decorator, "_labelShouldWithdraw");
  var decoration$3 = dart.privateName(input_decorator, "InputDecorator.decoration");
  var baseStyle$ = dart.privateName(input_decorator, "InputDecorator.baseStyle");
  var textAlign$0 = dart.privateName(input_decorator, "InputDecorator.textAlign");
  var textAlignVertical$0 = dart.privateName(input_decorator, "InputDecorator.textAlignVertical");
  var isFocused$0 = dart.privateName(input_decorator, "InputDecorator.isFocused");
  var isHovering$0 = dart.privateName(input_decorator, "InputDecorator.isHovering");
  var expands$0 = dart.privateName(input_decorator, "InputDecorator.expands");
  var isEmpty$ = dart.privateName(input_decorator, "InputDecorator.isEmpty");
  var child$17 = dart.privateName(input_decorator, "InputDecorator.child");
  input_decorator.InputDecorator = class InputDecorator extends framework.StatefulWidget {
    get decoration() {
      return this[decoration$3];
    }
    set decoration(value) {
      super.decoration = value;
    }
    get baseStyle() {
      return this[baseStyle$];
    }
    set baseStyle(value) {
      super.baseStyle = value;
    }
    get textAlign() {
      return this[textAlign$0];
    }
    set textAlign(value) {
      super.textAlign = value;
    }
    get textAlignVertical() {
      return this[textAlignVertical$0];
    }
    set textAlignVertical(value) {
      super.textAlignVertical = value;
    }
    get isFocused() {
      return this[isFocused$0];
    }
    set isFocused(value) {
      super.isFocused = value;
    }
    get isHovering() {
      return this[isHovering$0];
    }
    set isHovering(value) {
      super.isHovering = value;
    }
    get expands() {
      return this[expands$0];
    }
    set expands(value) {
      super.expands = value;
    }
    get isEmpty() {
      return this[isEmpty$];
    }
    set isEmpty(value) {
      super.isEmpty = value;
    }
    get child() {
      return this[child$17];
    }
    set child(value) {
      super.child = value;
    }
    get [_labelShouldWithdraw]() {
      return !dart.test(this.isEmpty) || dart.test(this.isFocused) && dart.test(this.decoration.enabled);
    }
    createState() {
      return new input_decorator._InputDecoratorState.new();
    }
    static containerOf(context) {
      let t9;
      let result = context.findAncestorRenderObjectOfType(_RenderDecorationL());
      t9 = result;
      return t9 == null ? null : t9.container;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfInputDecorationL()).new("decoration", this.decoration));
      properties.add(new (DiagnosticsPropertyOfTextStyleL()).new("baseStyle", this.baseStyle, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfboolL()).new("isFocused", this.isFocused));
      properties.add(new (DiagnosticsPropertyOfboolL()).new("expands", this.expands, {defaultValue: false}));
      properties.add(new (DiagnosticsPropertyOfboolL()).new("isEmpty", this.isEmpty));
    }
  };
  (input_decorator.InputDecorator.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let decoration = opts && 'decoration' in opts ? opts.decoration : null;
    let baseStyle = opts && 'baseStyle' in opts ? opts.baseStyle : null;
    let textAlign = opts && 'textAlign' in opts ? opts.textAlign : null;
    let textAlignVertical = opts && 'textAlignVertical' in opts ? opts.textAlignVertical : null;
    let isFocused = opts && 'isFocused' in opts ? opts.isFocused : false;
    let isHovering = opts && 'isHovering' in opts ? opts.isHovering : false;
    let expands = opts && 'expands' in opts ? opts.expands : false;
    let isEmpty = opts && 'isEmpty' in opts ? opts.isEmpty : false;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[decoration$3] = decoration;
    this[baseStyle$] = baseStyle;
    this[textAlign$0] = textAlign;
    this[textAlignVertical$0] = textAlignVertical;
    this[isFocused$0] = isFocused;
    this[isHovering$0] = isHovering;
    this[expands$0] = expands;
    this[isEmpty$] = isEmpty;
    this[child$17] = child;
    if (!(decoration != null)) dart.assertFailed(null, L61, 1794, 15, "decoration != null");
    if (!(isFocused != null)) dart.assertFailed(null, L61, 1795, 15, "isFocused != null");
    if (!(isHovering != null)) dart.assertFailed(null, L61, 1796, 15, "isHovering != null");
    if (!(expands != null)) dart.assertFailed(null, L61, 1797, 15, "expands != null");
    if (!(isEmpty != null)) dart.assertFailed(null, L61, 1798, 15, "isEmpty != null");
    input_decorator.InputDecorator.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = input_decorator.InputDecorator.prototype;
  dart.addTypeTests(input_decorator.InputDecorator);
  dart.addTypeCaches(input_decorator.InputDecorator);
  dart.setMethodSignature(input_decorator.InputDecorator, () => ({
    __proto__: dart.getMethods(input_decorator.InputDecorator.__proto__),
    createState: dart.fnType(dart.legacy(input_decorator._InputDecoratorState), [])
  }));
  dart.setGetterSignature(input_decorator.InputDecorator, () => ({
    __proto__: dart.getGetters(input_decorator.InputDecorator.__proto__),
    [_labelShouldWithdraw]: dart.legacy(core.bool)
  }));
  dart.setLibraryUri(input_decorator.InputDecorator, L60);
  dart.setFieldSignature(input_decorator.InputDecorator, () => ({
    __proto__: dart.getFields(input_decorator.InputDecorator.__proto__),
    decoration: dart.finalFieldType(dart.legacy(input_decorator.InputDecoration)),
    baseStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    textAlign: dart.finalFieldType(dart.legacy(ui.TextAlign)),
    textAlignVertical: dart.finalFieldType(dart.legacy(alignment.TextAlignVertical)),
    isFocused: dart.finalFieldType(dart.legacy(core.bool)),
    isHovering: dart.finalFieldType(dart.legacy(core.bool)),
    expands: dart.finalFieldType(dart.legacy(core.bool)),
    isEmpty: dart.finalFieldType(dart.legacy(core.bool)),
    child: dart.finalFieldType(dart.legacy(framework.Widget))
  }));
  var _floatingLabelController = dart.privateName(input_decorator, "_floatingLabelController");
  var _shakingLabelController = dart.privateName(input_decorator, "_shakingLabelController");
  var _borderGap = dart.privateName(input_decorator, "_borderGap");
  var _effectiveDecoration = dart.privateName(input_decorator, "_effectiveDecoration");
  var _floatingLabelEnabled = dart.privateName(input_decorator, "_floatingLabelEnabled");
  var _getActiveColor = dart.privateName(input_decorator, "_getActiveColor");
  var _getDefaultBorderColor = dart.privateName(input_decorator, "_getDefaultBorderColor");
  var C1684;
  var C1685;
  var C1686;
  var C1687;
  var _getFillColor$ = dart.privateName(input_decorator, "_getFillColor");
  var _getHoverColor = dart.privateName(input_decorator, "_getHoverColor");
  var _getDefaultIconColor = dart.privateName(input_decorator, "_getDefaultIconColor");
  var _hasInlineLabel = dart.privateName(input_decorator, "_hasInlineLabel");
  var _shouldShowLabel = dart.privateName(input_decorator, "_shouldShowLabel");
  var _getInlineStyle = dart.privateName(input_decorator, "_getInlineStyle");
  var _getFloatingLabelStyle = dart.privateName(input_decorator, "_getFloatingLabelStyle");
  var _getHelperStyle = dart.privateName(input_decorator, "_getHelperStyle");
  var _getErrorStyle = dart.privateName(input_decorator, "_getErrorStyle");
  var C1689;
  var InputBorder_borderSide = dart.privateName(input_border, "InputBorder.borderSide");
  var C1690;
  var UnderlineInputBorder_borderRadius = dart.privateName(input_border, "UnderlineInputBorder.borderRadius");
  var C1688;
  var _getDefaultBorder = dart.privateName(input_decorator, "_getDefaultBorder");
  var C1693;
  var C1694;
  var C1695;
  var C1696;
  var C1697;
  var C1692;
  var C1691;
  var C1700;
  var C1701;
  var C1702;
  var C1703;
  var C1704;
  var C1699;
  var C1698;
  var C1707;
  var C1708;
  var C1709;
  var C1710;
  var C1711;
  var C1712;
  var C1706;
  var C1705;
  var C1715;
  var C1716;
  var C1717;
  var C1714;
  var C1713;
  var C1720;
  var C1721;
  var C1722;
  var C1723;
  var C1719;
  var C1718;
  var C1726;
  var C1727;
  var C1728;
  var C1729;
  var C1725;
  var C1724;
  var C1732;
  var C1733;
  var C1731;
  var C1730;
  var C1736;
  var C1737;
  var C1738;
  var C1739;
  var C1735;
  var C1734;
  var C1742;
  var C1743;
  var C1744;
  var C1745;
  var C1741;
  var C1740;
  var EdgeInsetsDirectional_bottom = dart.privateName(edge_insets, "EdgeInsetsDirectional.bottom");
  var EdgeInsetsDirectional_end = dart.privateName(edge_insets, "EdgeInsetsDirectional.end");
  var EdgeInsetsDirectional_top = dart.privateName(edge_insets, "EdgeInsetsDirectional.top");
  var EdgeInsetsDirectional_start = dart.privateName(edge_insets, "EdgeInsetsDirectional.start");
  var C1746;
  var C1749;
  var C1750;
  var C1748;
  var C1747;
  var C1753;
  var C1754;
  var C1752;
  var C1751;
  var C1757;
  var C1758;
  var C1759;
  var C1756;
  var C1755;
  var C1762;
  var C1763;
  var C1761;
  var C1760;
  var C1766;
  var C1767;
  var C1768;
  var C1765;
  var C1764;
  var C1771;
  var C1772;
  var C1773;
  var C1774;
  var C1775;
  var C1776;
  var C1777;
  var C1770;
  var C1769;
  var C1780;
  var C1781;
  var C1782;
  var C1783;
  var C1779;
  var C1778;
  var C1786;
  var C1787;
  var C1788;
  var C1785;
  var C1784;
  var C1789;
  var C1790;
  var C1791;
  var C1792;
  var C1793;
  var C1794;
  var C1797;
  var C1798;
  var C1799;
  var C1800;
  var C1801;
  var C1802;
  var C1796;
  var C1795;
  const State_TickerProviderStateMixin$36$0 = class State_TickerProviderStateMixin extends framework.State$(dart.legacy(input_decorator.InputDecorator)) {};
  (State_TickerProviderStateMixin$36$0.new = function() {
    ticker_provider.TickerProviderStateMixin$(dart.legacy(input_decorator.InputDecorator))[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$0.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$0.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$0, ticker_provider.TickerProviderStateMixin$(dart.legacy(input_decorator.InputDecorator)));
  input_decorator._InputDecoratorState = class _InputDecoratorState extends State_TickerProviderStateMixin$36$0 {
    initState() {
      super.initState();
      let labelIsInitiallyFloating = this.widget.decoration.floatingLabelBehavior == input_decorator.FloatingLabelBehavior.always || this.widget.decoration.floatingLabelBehavior != input_decorator.FloatingLabelBehavior.never && dart.test(this.widget.decoration.hasFloatingPlaceholder) && dart.test(this.widget[_labelShouldWithdraw]);
      this[_floatingLabelController] = new animation_controller.AnimationController.new({duration: input_decorator._kTransitionDuration, vsync: this, value: labelIsInitiallyFloating ? 1.0 : 0.0});
      this[_floatingLabelController].addListener(dart.bind(this, _handleChange));
      this[_shakingLabelController] = new animation_controller.AnimationController.new({duration: input_decorator._kTransitionDuration, vsync: this});
    }
    didChangeDependencies() {
      super.didChangeDependencies();
      this[_effectiveDecoration] = null;
    }
    dispose() {
      this[_floatingLabelController].dispose();
      this[_shakingLabelController].dispose();
      super.dispose();
    }
    [_handleChange]() {
      this.setState(dart.fn(() => {
      }, VoidToNullN()));
    }
    get decoration() {
      this[_effectiveDecoration] == null ? this[_effectiveDecoration] = this.widget.decoration.applyDefaults(theme$.Theme.of(this.context).inputDecorationTheme) : null;
      return this[_effectiveDecoration];
    }
    get textAlign() {
      return this.widget.textAlign;
    }
    get isFocused() {
      return this.widget.isFocused;
    }
    get isHovering() {
      return dart.test(this.widget.isHovering) && dart.test(this.decoration.enabled);
    }
    get isEmpty() {
      return this.widget.isEmpty;
    }
    get [_floatingLabelEnabled]() {
      return dart.test(this.decoration.hasFloatingPlaceholder) && this.decoration.floatingLabelBehavior != input_decorator.FloatingLabelBehavior.never;
    }
    didUpdateWidget(old) {
      let t9;
      InputDecoratorL().as(old);
      super.didUpdateWidget(old);
      if (!dart.equals(this.widget.decoration, old.decoration)) this[_effectiveDecoration] = null;
      let floatBehaviorChanged = this.widget.decoration.floatingLabelBehavior != old.decoration.floatingLabelBehavior || !dart.equals(this.widget.decoration.hasFloatingPlaceholder, old.decoration.hasFloatingPlaceholder);
      if (!dart.equals(this.widget[_labelShouldWithdraw], old[_labelShouldWithdraw]) || floatBehaviorChanged) {
        if (dart.test(this[_floatingLabelEnabled]) && (dart.test(this.widget[_labelShouldWithdraw]) || this.widget.decoration.floatingLabelBehavior == input_decorator.FloatingLabelBehavior.always))
          this[_floatingLabelController].forward();
        else
          this[_floatingLabelController].reverse();
      }
      let errorText = this.decoration.errorText;
      let oldErrorText = old.decoration.errorText;
      if (dart.test(this[_floatingLabelController].isCompleted) && errorText != null && errorText != oldErrorText) {
        t9 = this[_shakingLabelController];
        (() => {
          t9.value = 0.0;
          t9.forward();
          return t9;
        })();
      }
    }
    [_getActiveColor](themeData) {
      if (dart.test(this.isFocused)) {
        switch (themeData.brightness) {
          case C512 || CT.C512:
          {
            return themeData.accentColor;
          }
          case C511 || CT.C511:
          {
            return themeData.primaryColor;
          }
        }
      }
      return themeData.hintColor;
    }
    [_getDefaultBorderColor](themeData) {
      let t10, t9, t9$;
      if (dart.test(this.isFocused)) {
        switch (themeData.brightness) {
          case C512 || CT.C512:
          {
            return themeData.accentColor;
          }
          case C511 || CT.C511:
          {
            return themeData.primaryColor;
          }
        }
      }
      if (dart.test(this.decoration.filled)) {
        return themeData.hintColor;
      }
      let enabledColor = themeData.colorScheme.onSurface.withOpacity(0.38);
      if (dart.test(this.isHovering)) {
        let hoverColor = (t9$ = (t9 = this.decoration.hoverColor, t9 == null ? (t10 = themeData.inputDecorationTheme, t10 == null ? null : t10.hoverColor) : t9), t9$ == null ? themeData.hoverColor : t9$);
        return ui.Color.alphaBlend(hoverColor.withOpacity(0.12), enabledColor);
      }
      return enabledColor;
    }
    [_getFillColor$](themeData) {
      if (!dart.equals(this.decoration.filled, true)) return colors$.Colors.transparent;
      if (this.decoration.fillColor != null) return this.decoration.fillColor;
      let darkEnabled = C1684 || CT.C1684;
      let darkDisabled = C1685 || CT.C1685;
      let lightEnabled = C1686 || CT.C1686;
      let lightDisabled = C1687 || CT.C1687;
      switch (themeData.brightness) {
        case C512 || CT.C512:
        {
          return dart.test(this.decoration.enabled) ? darkEnabled : darkDisabled;
        }
        case C511 || CT.C511:
        {
          return dart.test(this.decoration.enabled) ? lightEnabled : lightDisabled;
        }
      }
      return lightEnabled;
    }
    [_getHoverColor](themeData) {
      let t10, t9, t9$;
      if (this.decoration.filled == null || !dart.test(this.decoration.filled) || dart.test(this.isFocused) || !dart.test(this.decoration.enabled)) return colors$.Colors.transparent;
      t9$ = (t9 = this.decoration.hoverColor, t9 == null ? (t10 = themeData.inputDecorationTheme, t10 == null ? null : t10.hoverColor) : t9);
      return t9$ == null ? themeData.hoverColor : t9$;
    }
    [_getDefaultIconColor](themeData) {
      if (!dart.test(this.decoration.enabled) && !dart.test(this.isFocused)) return themeData.disabledColor;
      switch (themeData.brightness) {
        case C512 || CT.C512:
        {
          return colors$.Colors.white70;
        }
        case C511 || CT.C511:
        {
          return colors$.Colors.black45;
        }
        default:
        {
          return themeData.iconTheme.color;
        }
      }
    }
    get [_hasInlineLabel]() {
      return !dart.test(this.widget[_labelShouldWithdraw]) && this.decoration.labelText != null && this.decoration.floatingLabelBehavior != input_decorator.FloatingLabelBehavior.always;
    }
    get [_shouldShowLabel]() {
      return dart.test(this[_hasInlineLabel]) || dart.test(this[_floatingLabelEnabled]);
    }
    [_getInlineStyle](themeData) {
      return themeData.textTheme.subtitle1.merge(this.widget.baseStyle).copyWith({color: dart.test(this.decoration.enabled) ? themeData.hintColor : themeData.disabledColor});
    }
    [_getFloatingLabelStyle](themeData) {
      let t9, t9$;
      let color = this.decoration.errorText != null ? (t9$ = (t9 = this.decoration.errorStyle, t9 == null ? null : t9.color), t9$ == null ? themeData.errorColor : t9$) : this[_getActiveColor](themeData);
      let style = themeData.textTheme.subtitle1.merge(this.widget.baseStyle);
      return dart.test(themeData.fixTextFieldOutlineLabel) ? style.copyWith({height: 1.0, color: dart.test(this.decoration.enabled) ? color : themeData.disabledColor}).merge(this.decoration.labelStyle) : style.copyWith({color: dart.test(this.decoration.enabled) ? color : themeData.disabledColor}).merge(this.decoration.labelStyle);
    }
    [_getHelperStyle](themeData) {
      let color = dart.test(this.decoration.enabled) ? themeData.hintColor : colors$.Colors.transparent;
      return themeData.textTheme.caption.copyWith({color: color}).merge(this.decoration.helperStyle);
    }
    [_getErrorStyle](themeData) {
      let color = dart.test(this.decoration.enabled) ? themeData.errorColor : colors$.Colors.transparent;
      return themeData.textTheme.caption.copyWith({color: color}).merge(this.decoration.errorStyle);
    }
    [_getDefaultBorder](themeData) {
      let t9, t9$, t9$0, t9$1;
      if (dart.equals((t9 = this.decoration.border, t9 == null ? null : t9.borderSide), borders.BorderSide.none)) {
        return this.decoration.border;
      }
      let borderColor = null;
      if (dart.test(this.decoration.enabled) || dart.test(this.isFocused)) {
        borderColor = this.decoration.errorText == null ? this[_getDefaultBorderColor](themeData) : themeData.errorColor;
      } else {
        borderColor = dart.equals(this.decoration.filled, true) && !dart.equals((t9$ = this.decoration.border, t9$ == null ? null : t9$.isOutline), true) ? colors$.Colors.transparent : themeData.disabledColor;
      }
      let borderWeight = null;
      if (dart.test(this.decoration.isCollapsed) || dart.equals((t9$0 = this.decoration, t9$0 == null ? null : t9$0.border), input_border.InputBorder.none) || !dart.test(this.decoration.enabled))
        borderWeight = 0.0;
      else
        borderWeight = dart.test(this.isFocused) ? 2.0 : 1.0;
      let border = (t9$1 = this.decoration.border, t9$1 == null ? C1688 || CT.C1688 : t9$1);
      return border.copyWith({borderSide: new borders.BorderSide.new({color: borderColor, width: borderWeight})});
    }
    build(context) {
      let t9, t9$, t9$0, t9$1, t9$2, t9$3, t9$4, t9$5, t9$6;
      let themeData = theme$.Theme.of(context);
      let inlineStyle = this[_getInlineStyle](themeData);
      let textBaseline = inlineStyle.textBaseline;
      let hintStyle = inlineStyle.merge(this.decoration.hintStyle);
      let hint = this.decoration.hintText == null ? null : new implicit_animations.AnimatedOpacity.new({opacity: dart.test(this.isEmpty) && !dart.test(this[_hasInlineLabel]) ? 1.0 : 0.0, duration: input_decorator._kTransitionDuration, curve: input_decorator._kTransitionCurve, alwaysIncludeSemantics: true, child: new text$.Text.new(this.decoration.hintText, {style: hintStyle, overflow: paragraph.TextOverflow.ellipsis, textAlign: this.textAlign, maxLines: this.decoration.hintMaxLines, $creationLocationd_0dea112b090073317d4: C1691 || CT.C1691}), $creationLocationd_0dea112b090073317d4: C1698 || CT.C1698});
      let isError = this.decoration.errorText != null;
      let border = null;
      if (!dart.test(this.decoration.enabled))
        border = isError ? this.decoration.errorBorder : this.decoration.disabledBorder;
      else if (dart.test(this.isFocused))
        border = isError ? this.decoration.focusedErrorBorder : this.decoration.focusedBorder;
      else
        border = isError ? this.decoration.errorBorder : this.decoration.enabledBorder;
      border == null ? border = this[_getDefaultBorder](themeData) : null;
      let container = new input_decorator._BorderContainer.new({border: border, gap: this[_borderGap], gapAnimation: this[_floatingLabelController].view, fillColor: this[_getFillColor$](themeData), hoverColor: this[_getHoverColor](themeData), isHovering: this.isHovering, $creationLocationd_0dea112b090073317d4: C1705 || CT.C1705});
      let inlineLabelStyle = dart.test(themeData.fixTextFieldOutlineLabel) ? inlineStyle.merge(this.decoration.labelStyle).copyWith({height: 1.0}) : inlineStyle.merge(this.decoration.labelStyle);
      let label = this.decoration.labelText == null ? null : new input_decorator._Shaker.new({animation: this[_shakingLabelController].view, child: new implicit_animations.AnimatedOpacity.new({duration: input_decorator._kTransitionDuration, curve: input_decorator._kTransitionCurve, opacity: dart.test(this[_shouldShowLabel]) ? 1.0 : 0.0, child: new implicit_animations.AnimatedDefaultTextStyle.new({duration: input_decorator._kTransitionDuration, curve: input_decorator._kTransitionCurve, style: dart.test(this.widget[_labelShouldWithdraw]) ? this[_getFloatingLabelStyle](themeData) : inlineLabelStyle, child: new text$.Text.new(this.decoration.labelText, {overflow: paragraph.TextOverflow.ellipsis, textAlign: this.textAlign, $creationLocationd_0dea112b090073317d4: C1713 || CT.C1713}), $creationLocationd_0dea112b090073317d4: C1718 || CT.C1718}), $creationLocationd_0dea112b090073317d4: C1724 || CT.C1724}), $creationLocationd_0dea112b090073317d4: C1730 || CT.C1730});
      let prefix = this.decoration.prefix == null && this.decoration.prefixText == null ? null : new input_decorator._AffixText.new({labelIsFloating: this.widget[_labelShouldWithdraw], text: this.decoration.prefixText, style: (t9 = this.decoration.prefixStyle, t9 == null ? hintStyle : t9), child: this.decoration.prefix, $creationLocationd_0dea112b090073317d4: C1734 || CT.C1734});
      let suffix = this.decoration.suffix == null && this.decoration.suffixText == null ? null : new input_decorator._AffixText.new({labelIsFloating: this.widget[_labelShouldWithdraw], text: this.decoration.suffixText, style: (t9$ = this.decoration.suffixStyle, t9$ == null ? hintStyle : t9$), child: this.decoration.suffix, $creationLocationd_0dea112b090073317d4: C1740 || CT.C1740});
      let activeColor = this[_getActiveColor](themeData);
      let decorationIsDense = dart.equals(this.decoration.isDense, true);
      let iconSize = decorationIsDense ? 18.0 : 24.0;
      let iconColor = dart.test(this.isFocused) ? activeColor : this[_getDefaultIconColor](themeData);
      let icon = this.decoration.icon == null ? null : new basic.Padding.new({padding: C1746 || CT.C1746, child: icon_theme.IconTheme.merge({data: new icon_theme_data.IconThemeData.new({color: iconColor, size: iconSize}), child: this.decoration.icon}), $creationLocationd_0dea112b090073317d4: C1747 || CT.C1747});
      let prefixIcon = this.decoration.prefixIcon == null ? null : new basic.Center.new({widthFactor: 1.0, heightFactor: 1.0, child: new basic.ConstrainedBox.new({constraints: (t9$0 = this.decoration.prefixIconConstraints, t9$0 == null ? themeData.visualDensity.effectiveConstraints(C3 || CT.C3) : t9$0), child: icon_theme.IconTheme.merge({data: new icon_theme_data.IconThemeData.new({color: iconColor, size: iconSize}), child: this.decoration.prefixIcon}), $creationLocationd_0dea112b090073317d4: C1751 || CT.C1751}), $creationLocationd_0dea112b090073317d4: C1755 || CT.C1755});
      let suffixIcon = this.decoration.suffixIcon == null ? null : new basic.Center.new({widthFactor: 1.0, heightFactor: 1.0, child: new basic.ConstrainedBox.new({constraints: (t9$1 = this.decoration.suffixIconConstraints, t9$1 == null ? themeData.visualDensity.effectiveConstraints(C3 || CT.C3) : t9$1), child: icon_theme.IconTheme.merge({data: new icon_theme_data.IconThemeData.new({color: iconColor, size: iconSize}), child: this.decoration.suffixIcon}), $creationLocationd_0dea112b090073317d4: C1760 || CT.C1760}), $creationLocationd_0dea112b090073317d4: C1764 || CT.C1764});
      let helperError = new input_decorator._HelperError.new({textAlign: this.textAlign, helperText: this.decoration.helperText, helperStyle: this[_getHelperStyle](themeData), helperMaxLines: this.decoration.helperMaxLines, errorText: this.decoration.errorText, errorStyle: this[_getErrorStyle](themeData), errorMaxLines: this.decoration.errorMaxLines, $creationLocationd_0dea112b090073317d4: C1769 || CT.C1769});
      let counter = null;
      if (this.decoration.counter != null) {
        counter = this.decoration.counter;
      } else if (this.decoration.counterText != null && this.decoration.counterText !== "") {
        counter = new basic.Semantics.new({container: true, liveRegion: this.isFocused, child: new text$.Text.new(this.decoration.counterText, {style: this[_getHelperStyle](themeData).merge(this.decoration.counterStyle), overflow: paragraph.TextOverflow.ellipsis, semanticsLabel: this.decoration.semanticCounterText, $creationLocationd_0dea112b090073317d4: C1778 || CT.C1778}), $creationLocationd_0dea112b090073317d4: C1784 || CT.C1784});
      }
      let textDirection = basic.Directionality.of(context);
      let decorationContentPadding = (t9$2 = this.decoration.contentPadding, t9$2 == null ? null : t9$2.resolve(textDirection));
      let contentPadding = null;
      let floatingLabelHeight = null;
      if (dart.test(this.decoration.isCollapsed)) {
        floatingLabelHeight = 0.0;
        contentPadding = (t9$3 = decorationContentPadding, t9$3 == null ? edge_insets.EdgeInsets.zero : t9$3);
      } else if (!dart.test(border.isOutline)) {
        floatingLabelHeight = (4.0 + 0.75 * dart.notNull(inlineLabelStyle.fontSize)) * dart.notNull(media_query.MediaQuery.textScaleFactorOf(context));
        if (dart.equals(this.decoration.filled, true)) {
          contentPadding = (t9$4 = decorationContentPadding, t9$4 == null ? decorationIsDense ? C1789 || CT.C1789 : C1790 || CT.C1790 : t9$4);
        } else {
          contentPadding = (t9$5 = decorationContentPadding, t9$5 == null ? decorationIsDense ? C1791 || CT.C1791 : C1792 || CT.C1792 : t9$5);
        }
      } else {
        floatingLabelHeight = 0.0;
        contentPadding = (t9$6 = decorationContentPadding, t9$6 == null ? decorationIsDense ? C1793 || CT.C1793 : C1794 || CT.C1794 : t9$6);
      }
      return new input_decorator._Decorator.new({decoration: new input_decorator._Decoration.new({contentPadding: contentPadding, isCollapsed: this.decoration.isCollapsed, floatingLabelHeight: floatingLabelHeight, floatingLabelProgress: this[_floatingLabelController].value, border: border, borderGap: this[_borderGap], alignLabelWithHint: this.decoration.alignLabelWithHint, isDense: this.decoration.isDense, visualDensity: themeData.visualDensity, icon: icon, input: this.widget.child, label: label, hint: hint, prefix: prefix, suffix: suffix, prefixIcon: prefixIcon, suffixIcon: suffixIcon, helperError: helperError, counter: counter, container: container, fixTextFieldOutlineLabel: themeData.fixTextFieldOutlineLabel}), textDirection: textDirection, textBaseline: textBaseline, textAlignVertical: this.widget.textAlignVertical, isFocused: this.isFocused, expands: this.widget.expands, $creationLocationd_0dea112b090073317d4: C1795 || CT.C1795});
    }
  };
  (input_decorator._InputDecoratorState.new = function() {
    this[_floatingLabelController] = null;
    this[_shakingLabelController] = null;
    this[_borderGap] = new input_decorator._InputBorderGap.new();
    this[_effectiveDecoration] = null;
    input_decorator._InputDecoratorState.__proto__.new.call(this);
    ;
  }).prototype = input_decorator._InputDecoratorState.prototype;
  dart.addTypeTests(input_decorator._InputDecoratorState);
  dart.addTypeCaches(input_decorator._InputDecoratorState);
  dart.setMethodSignature(input_decorator._InputDecoratorState, () => ({
    __proto__: dart.getMethods(input_decorator._InputDecoratorState.__proto__),
    [_handleChange]: dart.fnType(dart.void, []),
    [_getActiveColor]: dart.fnType(dart.legacy(ui.Color), [dart.legacy(theme_data.ThemeData)]),
    [_getDefaultBorderColor]: dart.fnType(dart.legacy(ui.Color), [dart.legacy(theme_data.ThemeData)]),
    [_getFillColor$]: dart.fnType(dart.legacy(ui.Color), [dart.legacy(theme_data.ThemeData)]),
    [_getHoverColor]: dart.fnType(dart.legacy(ui.Color), [dart.legacy(theme_data.ThemeData)]),
    [_getDefaultIconColor]: dart.fnType(dart.legacy(ui.Color), [dart.legacy(theme_data.ThemeData)]),
    [_getInlineStyle]: dart.fnType(dart.legacy(text_style.TextStyle), [dart.legacy(theme_data.ThemeData)]),
    [_getFloatingLabelStyle]: dart.fnType(dart.legacy(text_style.TextStyle), [dart.legacy(theme_data.ThemeData)]),
    [_getHelperStyle]: dart.fnType(dart.legacy(text_style.TextStyle), [dart.legacy(theme_data.ThemeData)]),
    [_getErrorStyle]: dart.fnType(dart.legacy(text_style.TextStyle), [dart.legacy(theme_data.ThemeData)]),
    [_getDefaultBorder]: dart.fnType(dart.legacy(input_border.InputBorder), [dart.legacy(theme_data.ThemeData)]),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setGetterSignature(input_decorator._InputDecoratorState, () => ({
    __proto__: dart.getGetters(input_decorator._InputDecoratorState.__proto__),
    decoration: dart.legacy(input_decorator.InputDecoration),
    textAlign: dart.legacy(ui.TextAlign),
    isFocused: dart.legacy(core.bool),
    isHovering: dart.legacy(core.bool),
    isEmpty: dart.legacy(core.bool),
    [_floatingLabelEnabled]: dart.legacy(core.bool),
    [_hasInlineLabel]: dart.legacy(core.bool),
    [_shouldShowLabel]: dart.legacy(core.bool)
  }));
  dart.setLibraryUri(input_decorator._InputDecoratorState, L60);
  dart.setFieldSignature(input_decorator._InputDecoratorState, () => ({
    __proto__: dart.getFields(input_decorator._InputDecoratorState.__proto__),
    [_floatingLabelController]: dart.fieldType(dart.legacy(animation_controller.AnimationController)),
    [_shakingLabelController]: dart.fieldType(dart.legacy(animation_controller.AnimationController)),
    [_borderGap]: dart.finalFieldType(dart.legacy(input_decorator._InputBorderGap)),
    [_effectiveDecoration]: dart.fieldType(dart.legacy(input_decorator.InputDecoration))
  }));
  var C1803;
  var icon$3 = dart.privateName(input_decorator, "InputDecoration.icon");
  var labelText$ = dart.privateName(input_decorator, "InputDecoration.labelText");
  var labelStyle$2 = dart.privateName(input_decorator, "InputDecoration.labelStyle");
  var helperText$0 = dart.privateName(input_decorator, "InputDecoration.helperText");
  var helperStyle$0 = dart.privateName(input_decorator, "InputDecoration.helperStyle");
  var helperMaxLines$0 = dart.privateName(input_decorator, "InputDecoration.helperMaxLines");
  var hintText$ = dart.privateName(input_decorator, "InputDecoration.hintText");
  var hintStyle$ = dart.privateName(input_decorator, "InputDecoration.hintStyle");
  var hintMaxLines$ = dart.privateName(input_decorator, "InputDecoration.hintMaxLines");
  var errorText$0 = dart.privateName(input_decorator, "InputDecoration.errorText");
  var errorStyle$0 = dart.privateName(input_decorator, "InputDecoration.errorStyle");
  var errorMaxLines$0 = dart.privateName(input_decorator, "InputDecoration.errorMaxLines");
  var hasFloatingPlaceholder$ = dart.privateName(input_decorator, "InputDecoration.hasFloatingPlaceholder");
  var floatingLabelBehavior$ = dart.privateName(input_decorator, "InputDecoration.floatingLabelBehavior");
  var isDense$1 = dart.privateName(input_decorator, "InputDecoration.isDense");
  var contentPadding$4 = dart.privateName(input_decorator, "InputDecoration.contentPadding");
  var isCollapsed$0 = dart.privateName(input_decorator, "InputDecoration.isCollapsed");
  var prefixIcon$0 = dart.privateName(input_decorator, "InputDecoration.prefixIcon");
  var prefixIconConstraints$ = dart.privateName(input_decorator, "InputDecoration.prefixIconConstraints");
  var prefix$0 = dart.privateName(input_decorator, "InputDecoration.prefix");
  var prefixText$ = dart.privateName(input_decorator, "InputDecoration.prefixText");
  var prefixStyle$ = dart.privateName(input_decorator, "InputDecoration.prefixStyle");
  var suffixIcon$0 = dart.privateName(input_decorator, "InputDecoration.suffixIcon");
  var suffix$0 = dart.privateName(input_decorator, "InputDecoration.suffix");
  var suffixText$ = dart.privateName(input_decorator, "InputDecoration.suffixText");
  var suffixStyle$ = dart.privateName(input_decorator, "InputDecoration.suffixStyle");
  var suffixIconConstraints$ = dart.privateName(input_decorator, "InputDecoration.suffixIconConstraints");
  var counterText$ = dart.privateName(input_decorator, "InputDecoration.counterText");
  var counter$0 = dart.privateName(input_decorator, "InputDecoration.counter");
  var counterStyle$ = dart.privateName(input_decorator, "InputDecoration.counterStyle");
  var filled$ = dart.privateName(input_decorator, "InputDecoration.filled");
  var fillColor$2 = dart.privateName(input_decorator, "InputDecoration.fillColor");
  var focusColor$6 = dart.privateName(input_decorator, "InputDecoration.focusColor");
  var hoverColor$7 = dart.privateName(input_decorator, "InputDecoration.hoverColor");
  var errorBorder$ = dart.privateName(input_decorator, "InputDecoration.errorBorder");
  var focusedBorder$ = dart.privateName(input_decorator, "InputDecoration.focusedBorder");
  var focusedErrorBorder$ = dart.privateName(input_decorator, "InputDecoration.focusedErrorBorder");
  var disabledBorder$ = dart.privateName(input_decorator, "InputDecoration.disabledBorder");
  var enabledBorder$ = dart.privateName(input_decorator, "InputDecoration.enabledBorder");
  var border$1 = dart.privateName(input_decorator, "InputDecoration.border");
  var enabled$0 = dart.privateName(input_decorator, "InputDecoration.enabled");
  var semanticCounterText$ = dart.privateName(input_decorator, "InputDecoration.semanticCounterText");
  var alignLabelWithHint$0 = dart.privateName(input_decorator, "InputDecoration.alignLabelWithHint");
  input_decorator.InputDecoration = class InputDecoration extends core.Object {
    get icon() {
      return this[icon$3];
    }
    set icon(value) {
      super.icon = value;
    }
    get labelText() {
      return this[labelText$];
    }
    set labelText(value) {
      super.labelText = value;
    }
    get labelStyle() {
      return this[labelStyle$2];
    }
    set labelStyle(value) {
      super.labelStyle = value;
    }
    get helperText() {
      return this[helperText$0];
    }
    set helperText(value) {
      super.helperText = value;
    }
    get helperStyle() {
      return this[helperStyle$0];
    }
    set helperStyle(value) {
      super.helperStyle = value;
    }
    get helperMaxLines() {
      return this[helperMaxLines$0];
    }
    set helperMaxLines(value) {
      super.helperMaxLines = value;
    }
    get hintText() {
      return this[hintText$];
    }
    set hintText(value) {
      super.hintText = value;
    }
    get hintStyle() {
      return this[hintStyle$];
    }
    set hintStyle(value) {
      super.hintStyle = value;
    }
    get hintMaxLines() {
      return this[hintMaxLines$];
    }
    set hintMaxLines(value) {
      super.hintMaxLines = value;
    }
    get errorText() {
      return this[errorText$0];
    }
    set errorText(value) {
      super.errorText = value;
    }
    get errorStyle() {
      return this[errorStyle$0];
    }
    set errorStyle(value) {
      super.errorStyle = value;
    }
    get errorMaxLines() {
      return this[errorMaxLines$0];
    }
    set errorMaxLines(value) {
      super.errorMaxLines = value;
    }
    get hasFloatingPlaceholder() {
      return this[hasFloatingPlaceholder$];
    }
    set hasFloatingPlaceholder(value) {
      super.hasFloatingPlaceholder = value;
    }
    get floatingLabelBehavior() {
      return this[floatingLabelBehavior$];
    }
    set floatingLabelBehavior(value) {
      super.floatingLabelBehavior = value;
    }
    get isDense() {
      return this[isDense$1];
    }
    set isDense(value) {
      super.isDense = value;
    }
    get contentPadding() {
      return this[contentPadding$4];
    }
    set contentPadding(value) {
      super.contentPadding = value;
    }
    get isCollapsed() {
      return this[isCollapsed$0];
    }
    set isCollapsed(value) {
      super.isCollapsed = value;
    }
    get prefixIcon() {
      return this[prefixIcon$0];
    }
    set prefixIcon(value) {
      super.prefixIcon = value;
    }
    get prefixIconConstraints() {
      return this[prefixIconConstraints$];
    }
    set prefixIconConstraints(value) {
      super.prefixIconConstraints = value;
    }
    get prefix() {
      return this[prefix$0];
    }
    set prefix(value) {
      super.prefix = value;
    }
    get prefixText() {
      return this[prefixText$];
    }
    set prefixText(value) {
      super.prefixText = value;
    }
    get prefixStyle() {
      return this[prefixStyle$];
    }
    set prefixStyle(value) {
      super.prefixStyle = value;
    }
    get suffixIcon() {
      return this[suffixIcon$0];
    }
    set suffixIcon(value) {
      super.suffixIcon = value;
    }
    get suffix() {
      return this[suffix$0];
    }
    set suffix(value) {
      super.suffix = value;
    }
    get suffixText() {
      return this[suffixText$];
    }
    set suffixText(value) {
      super.suffixText = value;
    }
    get suffixStyle() {
      return this[suffixStyle$];
    }
    set suffixStyle(value) {
      super.suffixStyle = value;
    }
    get suffixIconConstraints() {
      return this[suffixIconConstraints$];
    }
    set suffixIconConstraints(value) {
      super.suffixIconConstraints = value;
    }
    get counterText() {
      return this[counterText$];
    }
    set counterText(value) {
      super.counterText = value;
    }
    get counter() {
      return this[counter$0];
    }
    set counter(value) {
      super.counter = value;
    }
    get counterStyle() {
      return this[counterStyle$];
    }
    set counterStyle(value) {
      super.counterStyle = value;
    }
    get filled() {
      return this[filled$];
    }
    set filled(value) {
      super.filled = value;
    }
    get fillColor() {
      return this[fillColor$2];
    }
    set fillColor(value) {
      super.fillColor = value;
    }
    get focusColor() {
      return this[focusColor$6];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get hoverColor() {
      return this[hoverColor$7];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get errorBorder() {
      return this[errorBorder$];
    }
    set errorBorder(value) {
      super.errorBorder = value;
    }
    get focusedBorder() {
      return this[focusedBorder$];
    }
    set focusedBorder(value) {
      super.focusedBorder = value;
    }
    get focusedErrorBorder() {
      return this[focusedErrorBorder$];
    }
    set focusedErrorBorder(value) {
      super.focusedErrorBorder = value;
    }
    get disabledBorder() {
      return this[disabledBorder$];
    }
    set disabledBorder(value) {
      super.disabledBorder = value;
    }
    get enabledBorder() {
      return this[enabledBorder$];
    }
    set enabledBorder(value) {
      super.enabledBorder = value;
    }
    get border() {
      return this[border$1];
    }
    set border(value) {
      super.border = value;
    }
    get enabled() {
      return this[enabled$0];
    }
    set enabled(value) {
      super.enabled = value;
    }
    get semanticCounterText() {
      return this[semanticCounterText$];
    }
    set semanticCounterText(value) {
      super.semanticCounterText = value;
    }
    get alignLabelWithHint() {
      return this[alignLabelWithHint$0];
    }
    set alignLabelWithHint(value) {
      super.alignLabelWithHint = value;
    }
    copyWith(opts) {
      let t9, t9$, t9$0, t9$1, t9$2, t9$3, t9$4, t9$5, t9$6, t9$7, t9$8, t9$9, t9$10, t9$11, t9$12, t9$13, t9$14, t9$15, t9$16, t9$17, t9$18, t9$19, t9$20, t9$21, t9$22, t9$23, t9$24, t9$25, t9$26, t9$27, t9$28, t9$29, t9$30, t9$31, t9$32, t9$33, t9$34, t9$35, t9$36, t9$37, t9$38, t9$39, t9$40;
      let icon = opts && 'icon' in opts ? opts.icon : null;
      let labelText = opts && 'labelText' in opts ? opts.labelText : null;
      let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
      let helperText = opts && 'helperText' in opts ? opts.helperText : null;
      let helperStyle = opts && 'helperStyle' in opts ? opts.helperStyle : null;
      let helperMaxLines = opts && 'helperMaxLines' in opts ? opts.helperMaxLines : null;
      let hintText = opts && 'hintText' in opts ? opts.hintText : null;
      let hintStyle = opts && 'hintStyle' in opts ? opts.hintStyle : null;
      let hintMaxLines = opts && 'hintMaxLines' in opts ? opts.hintMaxLines : null;
      let errorText = opts && 'errorText' in opts ? opts.errorText : null;
      let errorStyle = opts && 'errorStyle' in opts ? opts.errorStyle : null;
      let errorMaxLines = opts && 'errorMaxLines' in opts ? opts.errorMaxLines : null;
      let hasFloatingPlaceholder = opts && 'hasFloatingPlaceholder' in opts ? opts.hasFloatingPlaceholder : null;
      let floatingLabelBehavior = opts && 'floatingLabelBehavior' in opts ? opts.floatingLabelBehavior : null;
      let isCollapsed = opts && 'isCollapsed' in opts ? opts.isCollapsed : null;
      let isDense = opts && 'isDense' in opts ? opts.isDense : null;
      let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : null;
      let prefixIcon = opts && 'prefixIcon' in opts ? opts.prefixIcon : null;
      let prefix = opts && 'prefix' in opts ? opts.prefix : null;
      let prefixText = opts && 'prefixText' in opts ? opts.prefixText : null;
      let prefixIconConstraints = opts && 'prefixIconConstraints' in opts ? opts.prefixIconConstraints : null;
      let prefixStyle = opts && 'prefixStyle' in opts ? opts.prefixStyle : null;
      let suffixIcon = opts && 'suffixIcon' in opts ? opts.suffixIcon : null;
      let suffix = opts && 'suffix' in opts ? opts.suffix : null;
      let suffixText = opts && 'suffixText' in opts ? opts.suffixText : null;
      let suffixStyle = opts && 'suffixStyle' in opts ? opts.suffixStyle : null;
      let suffixIconConstraints = opts && 'suffixIconConstraints' in opts ? opts.suffixIconConstraints : null;
      let counter = opts && 'counter' in opts ? opts.counter : null;
      let counterText = opts && 'counterText' in opts ? opts.counterText : null;
      let counterStyle = opts && 'counterStyle' in opts ? opts.counterStyle : null;
      let filled = opts && 'filled' in opts ? opts.filled : null;
      let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
      let errorBorder = opts && 'errorBorder' in opts ? opts.errorBorder : null;
      let focusedBorder = opts && 'focusedBorder' in opts ? opts.focusedBorder : null;
      let focusedErrorBorder = opts && 'focusedErrorBorder' in opts ? opts.focusedErrorBorder : null;
      let disabledBorder = opts && 'disabledBorder' in opts ? opts.disabledBorder : null;
      let enabledBorder = opts && 'enabledBorder' in opts ? opts.enabledBorder : null;
      let border = opts && 'border' in opts ? opts.border : null;
      let enabled = opts && 'enabled' in opts ? opts.enabled : null;
      let semanticCounterText = opts && 'semanticCounterText' in opts ? opts.semanticCounterText : null;
      let alignLabelWithHint = opts && 'alignLabelWithHint' in opts ? opts.alignLabelWithHint : null;
      return new input_decorator.InputDecoration.new({icon: (t9 = icon, t9 == null ? this.icon : t9), labelText: (t9$ = labelText, t9$ == null ? this.labelText : t9$), labelStyle: (t9$0 = labelStyle, t9$0 == null ? this.labelStyle : t9$0), helperText: (t9$1 = helperText, t9$1 == null ? this.helperText : t9$1), helperStyle: (t9$2 = helperStyle, t9$2 == null ? this.helperStyle : t9$2), helperMaxLines: (t9$3 = helperMaxLines, t9$3 == null ? this.helperMaxLines : t9$3), hintText: (t9$4 = hintText, t9$4 == null ? this.hintText : t9$4), hintStyle: (t9$5 = hintStyle, t9$5 == null ? this.hintStyle : t9$5), hintMaxLines: (t9$6 = hintMaxLines, t9$6 == null ? this.hintMaxLines : t9$6), errorText: (t9$7 = errorText, t9$7 == null ? this.errorText : t9$7), errorStyle: (t9$8 = errorStyle, t9$8 == null ? this.errorStyle : t9$8), errorMaxLines: (t9$9 = errorMaxLines, t9$9 == null ? this.errorMaxLines : t9$9), hasFloatingPlaceholder: (t9$10 = hasFloatingPlaceholder, t9$10 == null ? this.hasFloatingPlaceholder : t9$10), floatingLabelBehavior: (t9$11 = floatingLabelBehavior, t9$11 == null ? this.floatingLabelBehavior : t9$11), isCollapsed: (t9$12 = isCollapsed, t9$12 == null ? this.isCollapsed : t9$12), isDense: (t9$13 = isDense, t9$13 == null ? this.isDense : t9$13), contentPadding: (t9$14 = contentPadding, t9$14 == null ? this.contentPadding : t9$14), prefixIcon: (t9$15 = prefixIcon, t9$15 == null ? this.prefixIcon : t9$15), prefix: (t9$16 = prefix, t9$16 == null ? this.prefix : t9$16), prefixText: (t9$17 = prefixText, t9$17 == null ? this.prefixText : t9$17), prefixStyle: (t9$18 = prefixStyle, t9$18 == null ? this.prefixStyle : t9$18), prefixIconConstraints: (t9$19 = prefixIconConstraints, t9$19 == null ? this.prefixIconConstraints : t9$19), suffixIcon: (t9$20 = suffixIcon, t9$20 == null ? this.suffixIcon : t9$20), suffix: (t9$21 = suffix, t9$21 == null ? this.suffix : t9$21), suffixText: (t9$22 = suffixText, t9$22 == null ? this.suffixText : t9$22), suffixStyle: (t9$23 = suffixStyle, t9$23 == null ? this.suffixStyle : t9$23), suffixIconConstraints: (t9$24 = suffixIconConstraints, t9$24 == null ? this.suffixIconConstraints : t9$24), counter: (t9$25 = counter, t9$25 == null ? this.counter : t9$25), counterText: (t9$26 = counterText, t9$26 == null ? this.counterText : t9$26), counterStyle: (t9$27 = counterStyle, t9$27 == null ? this.counterStyle : t9$27), filled: (t9$28 = filled, t9$28 == null ? this.filled : t9$28), fillColor: (t9$29 = fillColor, t9$29 == null ? this.fillColor : t9$29), focusColor: (t9$30 = focusColor, t9$30 == null ? this.focusColor : t9$30), hoverColor: (t9$31 = hoverColor, t9$31 == null ? this.hoverColor : t9$31), errorBorder: (t9$32 = errorBorder, t9$32 == null ? this.errorBorder : t9$32), focusedBorder: (t9$33 = focusedBorder, t9$33 == null ? this.focusedBorder : t9$33), focusedErrorBorder: (t9$34 = focusedErrorBorder, t9$34 == null ? this.focusedErrorBorder : t9$34), disabledBorder: (t9$35 = disabledBorder, t9$35 == null ? this.disabledBorder : t9$35), enabledBorder: (t9$36 = enabledBorder, t9$36 == null ? this.enabledBorder : t9$36), border: (t9$37 = border, t9$37 == null ? this.border : t9$37), enabled: (t9$38 = enabled, t9$38 == null ? this.enabled : t9$38), semanticCounterText: (t9$39 = semanticCounterText, t9$39 == null ? this.semanticCounterText : t9$39), alignLabelWithHint: (t9$40 = alignLabelWithHint, t9$40 == null ? this.alignLabelWithHint : t9$40)});
    }
    applyDefaults(theme) {
      let t9, t9$, t9$0, t9$1, t9$2, t9$3, t9$4, t9$5, t9$6, t9$7, t9$8, t9$9, t9$10, t9$11, t9$12, t9$13, t9$14, t9$15, t9$16, t9$17, t9$18, t9$19, t9$20, t9$21, t9$22;
      return this.copyWith({labelStyle: (t9 = this.labelStyle, t9 == null ? theme.labelStyle : t9), helperStyle: (t9$ = this.helperStyle, t9$ == null ? theme.helperStyle : t9$), helperMaxLines: (t9$0 = this.helperMaxLines, t9$0 == null ? theme.helperMaxLines : t9$0), hintStyle: (t9$1 = this.hintStyle, t9$1 == null ? theme.hintStyle : t9$1), errorStyle: (t9$2 = this.errorStyle, t9$2 == null ? theme.errorStyle : t9$2), errorMaxLines: (t9$3 = this.errorMaxLines, t9$3 == null ? theme.errorMaxLines : t9$3), hasFloatingPlaceholder: (t9$4 = this.hasFloatingPlaceholder, t9$4 == null ? theme.hasFloatingPlaceholder : t9$4), floatingLabelBehavior: (t9$5 = this.floatingLabelBehavior, t9$5 == null ? theme.floatingLabelBehavior : t9$5), isCollapsed: (t9$6 = this.isCollapsed, t9$6 == null ? theme.isCollapsed : t9$6), isDense: (t9$7 = this.isDense, t9$7 == null ? theme.isDense : t9$7), contentPadding: (t9$8 = this.contentPadding, t9$8 == null ? theme.contentPadding : t9$8), prefixStyle: (t9$9 = this.prefixStyle, t9$9 == null ? theme.prefixStyle : t9$9), suffixStyle: (t9$10 = this.suffixStyle, t9$10 == null ? theme.suffixStyle : t9$10), counterStyle: (t9$11 = this.counterStyle, t9$11 == null ? theme.counterStyle : t9$11), filled: (t9$12 = this.filled, t9$12 == null ? theme.filled : t9$12), fillColor: (t9$13 = this.fillColor, t9$13 == null ? theme.fillColor : t9$13), focusColor: (t9$14 = this.focusColor, t9$14 == null ? theme.focusColor : t9$14), hoverColor: (t9$15 = this.hoverColor, t9$15 == null ? theme.hoverColor : t9$15), errorBorder: (t9$16 = this.errorBorder, t9$16 == null ? theme.errorBorder : t9$16), focusedBorder: (t9$17 = this.focusedBorder, t9$17 == null ? theme.focusedBorder : t9$17), focusedErrorBorder: (t9$18 = this.focusedErrorBorder, t9$18 == null ? theme.focusedErrorBorder : t9$18), disabledBorder: (t9$19 = this.disabledBorder, t9$19 == null ? theme.disabledBorder : t9$19), enabledBorder: (t9$20 = this.enabledBorder, t9$20 == null ? theme.enabledBorder : t9$20), border: (t9$21 = this.border, t9$21 == null ? theme.border : t9$21), alignLabelWithHint: (t9$22 = this.alignLabelWithHint, t9$22 == null ? theme.alignLabelWithHint : t9$22)});
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this.runtimeType)) return false;
      return InputDecorationL().is(other) && dart.equals(other.icon, this.icon) && other.labelText == this.labelText && dart.equals(other.labelStyle, this.labelStyle) && other.helperText == this.helperText && dart.equals(other.helperStyle, this.helperStyle) && other.helperMaxLines == this.helperMaxLines && other.hintText == this.hintText && dart.equals(other.hintStyle, this.hintStyle) && other.hintMaxLines == this.hintMaxLines && other.errorText == this.errorText && dart.equals(other.errorStyle, this.errorStyle) && other.errorMaxLines == this.errorMaxLines && dart.equals(other.hasFloatingPlaceholder, this.hasFloatingPlaceholder) && other.floatingLabelBehavior == this.floatingLabelBehavior && dart.equals(other.isDense, this.isDense) && dart.equals(other.contentPadding, this.contentPadding) && dart.equals(other.isCollapsed, this.isCollapsed) && dart.equals(other.prefixIcon, this.prefixIcon) && dart.equals(other.prefix, this.prefix) && other.prefixText == this.prefixText && dart.equals(other.prefixStyle, this.prefixStyle) && dart.equals(other.prefixIconConstraints, this.prefixIconConstraints) && dart.equals(other.suffixIcon, this.suffixIcon) && dart.equals(other.suffix, this.suffix) && other.suffixText == this.suffixText && dart.equals(other.suffixStyle, this.suffixStyle) && dart.equals(other.suffixIconConstraints, this.suffixIconConstraints) && dart.equals(other.counter, this.counter) && other.counterText == this.counterText && dart.equals(other.counterStyle, this.counterStyle) && dart.equals(other.filled, this.filled) && dart.equals(other.fillColor, this.fillColor) && dart.equals(other.focusColor, this.focusColor) && dart.equals(other.hoverColor, this.hoverColor) && dart.equals(other.errorBorder, this.errorBorder) && dart.equals(other.focusedBorder, this.focusedBorder) && dart.equals(other.focusedErrorBorder, this.focusedErrorBorder) && dart.equals(other.disabledBorder, this.disabledBorder) && dart.equals(other.enabledBorder, this.enabledBorder) && dart.equals(other.border, this.border) && dart.equals(other.enabled, this.enabled) && other.semanticCounterText == this.semanticCounterText && dart.equals(other.alignLabelWithHint, this.alignLabelWithHint);
    }
    get hashCode() {
      let values = JSArrayOfObjectL().of([this.icon, this.labelText, this.labelStyle, this.helperText, this.helperStyle, this.helperMaxLines, this.hintText, this.hintStyle, this.hintMaxLines, this.errorText, this.errorStyle, this.errorMaxLines, this.hasFloatingPlaceholder, this.floatingLabelBehavior, this.isDense, this.contentPadding, this.isCollapsed, this.filled, this.fillColor, this.focusColor, this.hoverColor, this.border, this.enabled, this.prefixIcon, this.prefix, this.prefixText, this.prefixStyle, this.prefixIconConstraints, this.suffixIcon, this.suffix, this.suffixText, this.suffixStyle, this.suffixIconConstraints, this.counter, this.counterText, this.counterStyle, this.errorBorder, this.focusedBorder, this.focusedErrorBorder, this.disabledBorder, this.enabledBorder, this.border, this.enabled, this.semanticCounterText, this.alignLabelWithHint]);
      return ui.hashList(values);
    }
    toString() {
      let t10;
      let description = (() => {
        let t9 = JSArrayOfStringL().of([]);
        if (this.icon != null) t9[$add]("icon: " + dart.str(this.icon));
        if (this.labelText != null) t9[$add]("labelText: \"" + dart.str(this.labelText) + "\"");
        if (this.helperText != null) t9[$add]("helperText: \"" + dart.str(this.helperText) + "\"");
        if (this.helperMaxLines != null) t9[$add]("helperMaxLines: \"" + dart.str(this.helperMaxLines) + "\"");
        if (this.hintText != null) t9[$add]("hintText: \"" + dart.str(this.hintText) + "\"");
        if (this.hintMaxLines != null) t9[$add]("hintMaxLines: \"" + dart.str(this.hintMaxLines) + "\"");
        if (this.errorText != null) t9[$add]("errorText: \"" + dart.str(this.errorText) + "\"");
        if (this.errorStyle != null) t9[$add]("errorStyle: \"" + dart.str(this.errorStyle) + "\"");
        if (this.errorMaxLines != null) t9[$add]("errorMaxLines: \"" + dart.str(this.errorMaxLines) + "\"");
        if (dart.equals(this.hasFloatingPlaceholder, false)) t9[$add]("hasFloatingPlaceholder: false");
        if (this.floatingLabelBehavior != null) t9[$add]("floatingLabelBehavior: " + dart.str(this.floatingLabelBehavior));
        if (dart.test((t10 = this.isDense, t10 == null ? false : t10))) t9[$add]("isDense: " + dart.str(this.isDense));
        if (this.contentPadding != null) t9[$add]("contentPadding: " + dart.str(this.contentPadding));
        if (dart.test(this.isCollapsed)) t9[$add]("isCollapsed: " + dart.str(this.isCollapsed));
        if (this.prefixIcon != null) t9[$add]("prefixIcon: " + dart.str(this.prefixIcon));
        if (this.prefix != null) t9[$add]("prefix: " + dart.str(this.prefix));
        if (this.prefixText != null) t9[$add]("prefixText: " + dart.str(this.prefixText));
        if (this.prefixStyle != null) t9[$add]("prefixStyle: " + dart.str(this.prefixStyle));
        if (this.prefixIconConstraints != null) t9[$add]("prefixIconConstraints: " + dart.str(this.prefixIconConstraints));
        if (this.suffixIcon != null) t9[$add]("suffixIcon: " + dart.str(this.suffixIcon));
        if (this.suffix != null) t9[$add]("suffix: " + dart.str(this.suffix));
        if (this.suffixText != null) t9[$add]("suffixText: " + dart.str(this.suffixText));
        if (this.suffixStyle != null) t9[$add]("suffixStyle: " + dart.str(this.suffixStyle));
        if (this.suffixIconConstraints != null) t9[$add]("suffixIconConstraints: " + dart.str(this.suffixIconConstraints));
        if (this.counter != null) t9[$add]("counter: " + dart.str(this.counter));
        if (this.counterText != null) t9[$add]("counterText: " + dart.str(this.counterText));
        if (this.counterStyle != null) t9[$add]("counterStyle: " + dart.str(this.counterStyle));
        if (dart.equals(this.filled, true)) t9[$add]("filled: true");
        if (this.fillColor != null) t9[$add]("fillColor: " + dart.str(this.fillColor));
        if (this.focusColor != null) t9[$add]("focusColor: " + dart.str(this.focusColor));
        if (this.hoverColor != null) t9[$add]("hoverColor: " + dart.str(this.hoverColor));
        if (this.errorBorder != null) t9[$add]("errorBorder: " + dart.str(this.errorBorder));
        if (this.focusedBorder != null) t9[$add]("focusedBorder: " + dart.str(this.focusedBorder));
        if (this.focusedErrorBorder != null) t9[$add]("focusedErrorBorder: " + dart.str(this.focusedErrorBorder));
        if (this.disabledBorder != null) t9[$add]("disabledBorder: " + dart.str(this.disabledBorder));
        if (this.enabledBorder != null) t9[$add]("enabledBorder: " + dart.str(this.enabledBorder));
        if (this.border != null) t9[$add]("border: " + dart.str(this.border));
        if (!dart.test(this.enabled)) t9[$add]("enabled: false");
        if (this.semanticCounterText != null) t9[$add]("semanticCounterText: " + dart.str(this.semanticCounterText));
        if (this.alignLabelWithHint != null) t9[$add]("alignLabelWithHint: " + dart.str(this.alignLabelWithHint));
        return t9;
      })();
      return "InputDecoration(" + dart.str(description[$join](", ")) + ")";
    }
  };
  (input_decorator.InputDecoration.new = function(opts) {
    let icon = opts && 'icon' in opts ? opts.icon : null;
    let labelText = opts && 'labelText' in opts ? opts.labelText : null;
    let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
    let helperText = opts && 'helperText' in opts ? opts.helperText : null;
    let helperStyle = opts && 'helperStyle' in opts ? opts.helperStyle : null;
    let helperMaxLines = opts && 'helperMaxLines' in opts ? opts.helperMaxLines : null;
    let hintText = opts && 'hintText' in opts ? opts.hintText : null;
    let hintStyle = opts && 'hintStyle' in opts ? opts.hintStyle : null;
    let hintMaxLines = opts && 'hintMaxLines' in opts ? opts.hintMaxLines : null;
    let errorText = opts && 'errorText' in opts ? opts.errorText : null;
    let errorStyle = opts && 'errorStyle' in opts ? opts.errorStyle : null;
    let errorMaxLines = opts && 'errorMaxLines' in opts ? opts.errorMaxLines : null;
    let hasFloatingPlaceholder = opts && 'hasFloatingPlaceholder' in opts ? opts.hasFloatingPlaceholder : true;
    let floatingLabelBehavior = opts && 'floatingLabelBehavior' in opts ? opts.floatingLabelBehavior : C1659 || CT.C1659;
    let isCollapsed = opts && 'isCollapsed' in opts ? opts.isCollapsed : false;
    let isDense = opts && 'isDense' in opts ? opts.isDense : null;
    let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : null;
    let prefixIcon = opts && 'prefixIcon' in opts ? opts.prefixIcon : null;
    let prefixIconConstraints = opts && 'prefixIconConstraints' in opts ? opts.prefixIconConstraints : null;
    let prefix = opts && 'prefix' in opts ? opts.prefix : null;
    let prefixText = opts && 'prefixText' in opts ? opts.prefixText : null;
    let prefixStyle = opts && 'prefixStyle' in opts ? opts.prefixStyle : null;
    let suffixIcon = opts && 'suffixIcon' in opts ? opts.suffixIcon : null;
    let suffix = opts && 'suffix' in opts ? opts.suffix : null;
    let suffixText = opts && 'suffixText' in opts ? opts.suffixText : null;
    let suffixStyle = opts && 'suffixStyle' in opts ? opts.suffixStyle : null;
    let suffixIconConstraints = opts && 'suffixIconConstraints' in opts ? opts.suffixIconConstraints : null;
    let counter = opts && 'counter' in opts ? opts.counter : null;
    let counterText = opts && 'counterText' in opts ? opts.counterText : null;
    let counterStyle = opts && 'counterStyle' in opts ? opts.counterStyle : null;
    let filled = opts && 'filled' in opts ? opts.filled : null;
    let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let errorBorder = opts && 'errorBorder' in opts ? opts.errorBorder : null;
    let focusedBorder = opts && 'focusedBorder' in opts ? opts.focusedBorder : null;
    let focusedErrorBorder = opts && 'focusedErrorBorder' in opts ? opts.focusedErrorBorder : null;
    let disabledBorder = opts && 'disabledBorder' in opts ? opts.disabledBorder : null;
    let enabledBorder = opts && 'enabledBorder' in opts ? opts.enabledBorder : null;
    let border = opts && 'border' in opts ? opts.border : null;
    let enabled = opts && 'enabled' in opts ? opts.enabled : true;
    let semanticCounterText = opts && 'semanticCounterText' in opts ? opts.semanticCounterText : null;
    let alignLabelWithHint = opts && 'alignLabelWithHint' in opts ? opts.alignLabelWithHint : null;
    this[icon$3] = icon;
    this[labelText$] = labelText;
    this[labelStyle$2] = labelStyle;
    this[helperText$0] = helperText;
    this[helperStyle$0] = helperStyle;
    this[helperMaxLines$0] = helperMaxLines;
    this[hintText$] = hintText;
    this[hintStyle$] = hintStyle;
    this[hintMaxLines$] = hintMaxLines;
    this[errorText$0] = errorText;
    this[errorStyle$0] = errorStyle;
    this[errorMaxLines$0] = errorMaxLines;
    this[hasFloatingPlaceholder$] = hasFloatingPlaceholder;
    this[floatingLabelBehavior$] = floatingLabelBehavior;
    this[isCollapsed$0] = isCollapsed;
    this[isDense$1] = isDense;
    this[contentPadding$4] = contentPadding;
    this[prefixIcon$0] = prefixIcon;
    this[prefixIconConstraints$] = prefixIconConstraints;
    this[prefix$0] = prefix;
    this[prefixText$] = prefixText;
    this[prefixStyle$] = prefixStyle;
    this[suffixIcon$0] = suffixIcon;
    this[suffix$0] = suffix;
    this[suffixText$] = suffixText;
    this[suffixStyle$] = suffixStyle;
    this[suffixIconConstraints$] = suffixIconConstraints;
    this[counter$0] = counter;
    this[counterText$] = counterText;
    this[counterStyle$] = counterStyle;
    this[filled$] = filled;
    this[fillColor$2] = fillColor;
    this[focusColor$6] = focusColor;
    this[hoverColor$7] = hoverColor;
    this[errorBorder$] = errorBorder;
    this[focusedBorder$] = focusedBorder;
    this[focusedErrorBorder$] = focusedErrorBorder;
    this[disabledBorder$] = disabledBorder;
    this[enabledBorder$] = enabledBorder;
    this[border$1] = border;
    this[enabled$0] = enabled;
    this[semanticCounterText$] = semanticCounterText;
    this[alignLabelWithHint$0] = alignLabelWithHint;
    if (!(enabled != null)) dart.assertFailed(null, L61, 2562, 15, "enabled != null");
    if (!!(prefix != null && prefixText != null)) dart.assertFailed("Declaring both prefix and prefixText is not supported.", L61, 2563, 15, "!(prefix != null && prefixText != null)");
    if (!!(suffix != null && suffixText != null)) dart.assertFailed("Declaring both suffix and suffixText is not supported.", L61, 2564, 15, "!(suffix != null && suffixText != null)");
    ;
  }).prototype = input_decorator.InputDecoration.prototype;
  (input_decorator.InputDecoration.collapsed = function(opts) {
    let hintText = opts && 'hintText' in opts ? opts.hintText : null;
    let hasFloatingPlaceholder = opts && 'hasFloatingPlaceholder' in opts ? opts.hasFloatingPlaceholder : true;
    let floatingLabelBehavior = opts && 'floatingLabelBehavior' in opts ? opts.floatingLabelBehavior : C1659 || CT.C1659;
    let hintStyle = opts && 'hintStyle' in opts ? opts.hintStyle : null;
    let filled = opts && 'filled' in opts ? opts.filled : false;
    let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let border = opts && 'border' in opts ? opts.border : C1803 || CT.C1803;
    let enabled = opts && 'enabled' in opts ? opts.enabled : true;
    this[hintText$] = hintText;
    this[hasFloatingPlaceholder$] = hasFloatingPlaceholder;
    this[floatingLabelBehavior$] = floatingLabelBehavior;
    this[hintStyle$] = hintStyle;
    this[filled$] = filled;
    this[fillColor$2] = fillColor;
    this[focusColor$6] = focusColor;
    this[hoverColor$7] = hoverColor;
    this[border$1] = border;
    this[enabled$0] = enabled;
    if (!(enabled != null)) dart.assertFailed(null, L61, 2586, 15, "enabled != null");
    if (!!(!dart.test(hasFloatingPlaceholder) && floatingLabelBehavior == input_decorator.FloatingLabelBehavior.always)) dart.assertFailed("hasFloatingPlaceholder=false conflicts with FloatingLabelBehavior.always", L61, 2587, 15, "!(!hasFloatingPlaceholder && identical(floatingLabelBehavior, FloatingLabelBehavior.always))");
    this[icon$3] = null;
    this[labelText$] = null;
    this[labelStyle$2] = null;
    this[helperText$0] = null;
    this[helperStyle$0] = null;
    this[helperMaxLines$0] = null;
    this[hintMaxLines$] = null;
    this[errorText$0] = null;
    this[errorStyle$0] = null;
    this[errorMaxLines$0] = null;
    this[isDense$1] = false;
    this[contentPadding$4] = edge_insets.EdgeInsets.zero;
    this[isCollapsed$0] = true;
    this[prefixIcon$0] = null;
    this[prefix$0] = null;
    this[prefixText$] = null;
    this[prefixStyle$] = null;
    this[prefixIconConstraints$] = null;
    this[suffix$0] = null;
    this[suffixIcon$0] = null;
    this[suffixText$] = null;
    this[suffixStyle$] = null;
    this[suffixIconConstraints$] = null;
    this[counter$0] = null;
    this[counterText$] = null;
    this[counterStyle$] = null;
    this[errorBorder$] = null;
    this[focusedBorder$] = null;
    this[focusedErrorBorder$] = null;
    this[disabledBorder$] = null;
    this[enabledBorder$] = null;
    this[semanticCounterText$] = null;
    this[alignLabelWithHint$0] = false;
    ;
  }).prototype = input_decorator.InputDecoration.prototype;
  dart.addTypeTests(input_decorator.InputDecoration);
  dart.addTypeCaches(input_decorator.InputDecoration);
  dart.setMethodSignature(input_decorator.InputDecoration, () => ({
    __proto__: dart.getMethods(input_decorator.InputDecoration.__proto__),
    copyWith: dart.fnType(dart.legacy(input_decorator.InputDecoration), [], {alignLabelWithHint: dart.legacy(core.bool), border: dart.legacy(input_border.InputBorder), contentPadding: dart.legacy(edge_insets.EdgeInsetsGeometry), counter: dart.legacy(framework.Widget), counterStyle: dart.legacy(text_style.TextStyle), counterText: dart.legacy(core.String), disabledBorder: dart.legacy(input_border.InputBorder), enabled: dart.legacy(core.bool), enabledBorder: dart.legacy(input_border.InputBorder), errorBorder: dart.legacy(input_border.InputBorder), errorMaxLines: dart.legacy(core.int), errorStyle: dart.legacy(text_style.TextStyle), errorText: dart.legacy(core.String), fillColor: dart.legacy(ui.Color), filled: dart.legacy(core.bool), floatingLabelBehavior: dart.legacy(input_decorator.FloatingLabelBehavior), focusColor: dart.legacy(ui.Color), focusedBorder: dart.legacy(input_border.InputBorder), focusedErrorBorder: dart.legacy(input_border.InputBorder), hasFloatingPlaceholder: dart.legacy(core.bool), helperMaxLines: dart.legacy(core.int), helperStyle: dart.legacy(text_style.TextStyle), helperText: dart.legacy(core.String), hintMaxLines: dart.legacy(core.int), hintStyle: dart.legacy(text_style.TextStyle), hintText: dart.legacy(core.String), hoverColor: dart.legacy(ui.Color), icon: dart.legacy(framework.Widget), isCollapsed: dart.legacy(core.bool), isDense: dart.legacy(core.bool), labelStyle: dart.legacy(text_style.TextStyle), labelText: dart.legacy(core.String), prefix: dart.legacy(framework.Widget), prefixIcon: dart.legacy(framework.Widget), prefixIconConstraints: dart.legacy(box.BoxConstraints), prefixStyle: dart.legacy(text_style.TextStyle), prefixText: dart.legacy(core.String), semanticCounterText: dart.legacy(core.String), suffix: dart.legacy(framework.Widget), suffixIcon: dart.legacy(framework.Widget), suffixIconConstraints: dart.legacy(box.BoxConstraints), suffixStyle: dart.legacy(text_style.TextStyle), suffixText: dart.legacy(core.String)}, {}),
    applyDefaults: dart.fnType(dart.legacy(input_decorator.InputDecoration), [dart.legacy(input_decorator.InputDecorationTheme)]),
    _equals: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    [$_equals]: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setGetterSignature(input_decorator.InputDecoration, () => ({
    __proto__: dart.getGetters(input_decorator.InputDecoration.__proto__),
    hashCode: dart.legacy(core.int),
    [$hashCode]: dart.legacy(core.int)
  }));
  dart.setLibraryUri(input_decorator.InputDecoration, L60);
  dart.setFieldSignature(input_decorator.InputDecoration, () => ({
    __proto__: dart.getFields(input_decorator.InputDecoration.__proto__),
    icon: dart.finalFieldType(dart.legacy(framework.Widget)),
    labelText: dart.finalFieldType(dart.legacy(core.String)),
    labelStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    helperText: dart.finalFieldType(dart.legacy(core.String)),
    helperStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    helperMaxLines: dart.finalFieldType(dart.legacy(core.int)),
    hintText: dart.finalFieldType(dart.legacy(core.String)),
    hintStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    hintMaxLines: dart.finalFieldType(dart.legacy(core.int)),
    errorText: dart.finalFieldType(dart.legacy(core.String)),
    errorStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    errorMaxLines: dart.finalFieldType(dart.legacy(core.int)),
    hasFloatingPlaceholder: dart.finalFieldType(dart.legacy(core.bool)),
    floatingLabelBehavior: dart.finalFieldType(dart.legacy(input_decorator.FloatingLabelBehavior)),
    isDense: dart.finalFieldType(dart.legacy(core.bool)),
    contentPadding: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsetsGeometry)),
    isCollapsed: dart.finalFieldType(dart.legacy(core.bool)),
    prefixIcon: dart.finalFieldType(dart.legacy(framework.Widget)),
    prefixIconConstraints: dart.finalFieldType(dart.legacy(box.BoxConstraints)),
    prefix: dart.finalFieldType(dart.legacy(framework.Widget)),
    prefixText: dart.finalFieldType(dart.legacy(core.String)),
    prefixStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    suffixIcon: dart.finalFieldType(dart.legacy(framework.Widget)),
    suffix: dart.finalFieldType(dart.legacy(framework.Widget)),
    suffixText: dart.finalFieldType(dart.legacy(core.String)),
    suffixStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    suffixIconConstraints: dart.finalFieldType(dart.legacy(box.BoxConstraints)),
    counterText: dart.finalFieldType(dart.legacy(core.String)),
    counter: dart.finalFieldType(dart.legacy(framework.Widget)),
    counterStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    filled: dart.finalFieldType(dart.legacy(core.bool)),
    fillColor: dart.finalFieldType(dart.legacy(ui.Color)),
    focusColor: dart.finalFieldType(dart.legacy(ui.Color)),
    hoverColor: dart.finalFieldType(dart.legacy(ui.Color)),
    errorBorder: dart.finalFieldType(dart.legacy(input_border.InputBorder)),
    focusedBorder: dart.finalFieldType(dart.legacy(input_border.InputBorder)),
    focusedErrorBorder: dart.finalFieldType(dart.legacy(input_border.InputBorder)),
    disabledBorder: dart.finalFieldType(dart.legacy(input_border.InputBorder)),
    enabledBorder: dart.finalFieldType(dart.legacy(input_border.InputBorder)),
    border: dart.finalFieldType(dart.legacy(input_border.InputBorder)),
    enabled: dart.finalFieldType(dart.legacy(core.bool)),
    semanticCounterText: dart.finalFieldType(dart.legacy(core.String)),
    alignLabelWithHint: dart.finalFieldType(dart.legacy(core.bool))
  }));
  dart.defineExtensionMethods(input_decorator.InputDecoration, ['_equals', 'toString']);
  dart.defineExtensionAccessors(input_decorator.InputDecoration, ['hashCode']);
  var InputDecorationTheme_alignLabelWithHint = dart.privateName(input_decorator, "InputDecorationTheme.alignLabelWithHint");
  var InputDecorationTheme_border = dart.privateName(input_decorator, "InputDecorationTheme.border");
  var InputDecorationTheme_enabledBorder = dart.privateName(input_decorator, "InputDecorationTheme.enabledBorder");
  var InputDecorationTheme_disabledBorder = dart.privateName(input_decorator, "InputDecorationTheme.disabledBorder");
  var InputDecorationTheme_focusedErrorBorder = dart.privateName(input_decorator, "InputDecorationTheme.focusedErrorBorder");
  var InputDecorationTheme_focusedBorder = dart.privateName(input_decorator, "InputDecorationTheme.focusedBorder");
  var InputDecorationTheme_errorBorder = dart.privateName(input_decorator, "InputDecorationTheme.errorBorder");
  var InputDecorationTheme_hoverColor = dart.privateName(input_decorator, "InputDecorationTheme.hoverColor");
  var InputDecorationTheme_focusColor = dart.privateName(input_decorator, "InputDecorationTheme.focusColor");
  var InputDecorationTheme_fillColor = dart.privateName(input_decorator, "InputDecorationTheme.fillColor");
  var InputDecorationTheme_filled = dart.privateName(input_decorator, "InputDecorationTheme.filled");
  var InputDecorationTheme_counterStyle = dart.privateName(input_decorator, "InputDecorationTheme.counterStyle");
  var InputDecorationTheme_suffixStyle = dart.privateName(input_decorator, "InputDecorationTheme.suffixStyle");
  var InputDecorationTheme_prefixStyle = dart.privateName(input_decorator, "InputDecorationTheme.prefixStyle");
  var InputDecorationTheme_isCollapsed = dart.privateName(input_decorator, "InputDecorationTheme.isCollapsed");
  var InputDecorationTheme_contentPadding = dart.privateName(input_decorator, "InputDecorationTheme.contentPadding");
  var InputDecorationTheme_isDense = dart.privateName(input_decorator, "InputDecorationTheme.isDense");
  var InputDecorationTheme_floatingLabelBehavior = dart.privateName(input_decorator, "InputDecorationTheme.floatingLabelBehavior");
  var InputDecorationTheme_hasFloatingPlaceholder = dart.privateName(input_decorator, "InputDecorationTheme.hasFloatingPlaceholder");
  var InputDecorationTheme_errorMaxLines = dart.privateName(input_decorator, "InputDecorationTheme.errorMaxLines");
  var InputDecorationTheme_errorStyle = dart.privateName(input_decorator, "InputDecorationTheme.errorStyle");
  var InputDecorationTheme_hintStyle = dart.privateName(input_decorator, "InputDecorationTheme.hintStyle");
  var InputDecorationTheme_helperMaxLines = dart.privateName(input_decorator, "InputDecorationTheme.helperMaxLines");
  var InputDecorationTheme_helperStyle = dart.privateName(input_decorator, "InputDecorationTheme.helperStyle");
  var InputDecorationTheme_labelStyle = dart.privateName(input_decorator, "InputDecorationTheme.labelStyle");
  var C1804;
  const Object_Diagnosticable$36$9 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$9.new = function() {
  }).prototype = Object_Diagnosticable$36$9.prototype;
  dart.applyMixin(Object_Diagnosticable$36$9, diagnostics.Diagnosticable);
  input_decorator.InputDecorationTheme = class InputDecorationTheme extends Object_Diagnosticable$36$9 {
    get labelStyle() {
      return this[labelStyle$3];
    }
    set labelStyle(value) {
      super.labelStyle = value;
    }
    get helperStyle() {
      return this[helperStyle$1];
    }
    set helperStyle(value) {
      super.helperStyle = value;
    }
    get helperMaxLines() {
      return this[helperMaxLines$1];
    }
    set helperMaxLines(value) {
      super.helperMaxLines = value;
    }
    get hintStyle() {
      return this[hintStyle$0];
    }
    set hintStyle(value) {
      super.hintStyle = value;
    }
    get errorStyle() {
      return this[errorStyle$1];
    }
    set errorStyle(value) {
      super.errorStyle = value;
    }
    get errorMaxLines() {
      return this[errorMaxLines$1];
    }
    set errorMaxLines(value) {
      super.errorMaxLines = value;
    }
    get hasFloatingPlaceholder() {
      return this[hasFloatingPlaceholder$0];
    }
    set hasFloatingPlaceholder(value) {
      super.hasFloatingPlaceholder = value;
    }
    get floatingLabelBehavior() {
      return this[floatingLabelBehavior$0];
    }
    set floatingLabelBehavior(value) {
      super.floatingLabelBehavior = value;
    }
    get isDense() {
      return this[isDense$2];
    }
    set isDense(value) {
      super.isDense = value;
    }
    get contentPadding() {
      return this[contentPadding$5];
    }
    set contentPadding(value) {
      super.contentPadding = value;
    }
    get isCollapsed() {
      return this[isCollapsed$1];
    }
    set isCollapsed(value) {
      super.isCollapsed = value;
    }
    get prefixStyle() {
      return this[prefixStyle$0];
    }
    set prefixStyle(value) {
      super.prefixStyle = value;
    }
    get suffixStyle() {
      return this[suffixStyle$0];
    }
    set suffixStyle(value) {
      super.suffixStyle = value;
    }
    get counterStyle() {
      return this[counterStyle$0];
    }
    set counterStyle(value) {
      super.counterStyle = value;
    }
    get filled() {
      return this[filled$0];
    }
    set filled(value) {
      super.filled = value;
    }
    get fillColor() {
      return this[fillColor$3];
    }
    set fillColor(value) {
      super.fillColor = value;
    }
    get focusColor() {
      return this[focusColor$7];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get hoverColor() {
      return this[hoverColor$8];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get errorBorder() {
      return this[errorBorder$0];
    }
    set errorBorder(value) {
      super.errorBorder = value;
    }
    get focusedBorder() {
      return this[focusedBorder$0];
    }
    set focusedBorder(value) {
      super.focusedBorder = value;
    }
    get focusedErrorBorder() {
      return this[focusedErrorBorder$0];
    }
    set focusedErrorBorder(value) {
      super.focusedErrorBorder = value;
    }
    get disabledBorder() {
      return this[disabledBorder$0];
    }
    set disabledBorder(value) {
      super.disabledBorder = value;
    }
    get enabledBorder() {
      return this[enabledBorder$0];
    }
    set enabledBorder(value) {
      super.enabledBorder = value;
    }
    get border() {
      return this[border$2];
    }
    set border(value) {
      super.border = value;
    }
    get alignLabelWithHint() {
      return this[alignLabelWithHint$1];
    }
    set alignLabelWithHint(value) {
      super.alignLabelWithHint = value;
    }
    copyWith(opts) {
      let t10, t10$, t10$0, t10$1, t10$2, t10$3, t10$4, t10$5, t10$6, t10$7, t10$8, t10$9, t10$10, t10$11, t10$12, t10$13, t10$14, t10$15, t10$16, t10$17, t10$18, t10$19, t10$20, t10$21, t10$22;
      let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
      let helperStyle = opts && 'helperStyle' in opts ? opts.helperStyle : null;
      let helperMaxLines = opts && 'helperMaxLines' in opts ? opts.helperMaxLines : null;
      let hintStyle = opts && 'hintStyle' in opts ? opts.hintStyle : null;
      let errorStyle = opts && 'errorStyle' in opts ? opts.errorStyle : null;
      let errorMaxLines = opts && 'errorMaxLines' in opts ? opts.errorMaxLines : null;
      let hasFloatingPlaceholder = opts && 'hasFloatingPlaceholder' in opts ? opts.hasFloatingPlaceholder : null;
      let floatingLabelBehavior = opts && 'floatingLabelBehavior' in opts ? opts.floatingLabelBehavior : null;
      let isDense = opts && 'isDense' in opts ? opts.isDense : null;
      let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : null;
      let isCollapsed = opts && 'isCollapsed' in opts ? opts.isCollapsed : null;
      let prefixStyle = opts && 'prefixStyle' in opts ? opts.prefixStyle : null;
      let suffixStyle = opts && 'suffixStyle' in opts ? opts.suffixStyle : null;
      let counterStyle = opts && 'counterStyle' in opts ? opts.counterStyle : null;
      let filled = opts && 'filled' in opts ? opts.filled : null;
      let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
      let errorBorder = opts && 'errorBorder' in opts ? opts.errorBorder : null;
      let focusedBorder = opts && 'focusedBorder' in opts ? opts.focusedBorder : null;
      let focusedErrorBorder = opts && 'focusedErrorBorder' in opts ? opts.focusedErrorBorder : null;
      let disabledBorder = opts && 'disabledBorder' in opts ? opts.disabledBorder : null;
      let enabledBorder = opts && 'enabledBorder' in opts ? opts.enabledBorder : null;
      let border = opts && 'border' in opts ? opts.border : null;
      let alignLabelWithHint = opts && 'alignLabelWithHint' in opts ? opts.alignLabelWithHint : null;
      return new input_decorator.InputDecorationTheme.new({labelStyle: (t10 = labelStyle, t10 == null ? this.labelStyle : t10), helperStyle: (t10$ = helperStyle, t10$ == null ? this.helperStyle : t10$), helperMaxLines: (t10$0 = helperMaxLines, t10$0 == null ? this.helperMaxLines : t10$0), hintStyle: (t10$1 = hintStyle, t10$1 == null ? this.hintStyle : t10$1), errorStyle: (t10$2 = errorStyle, t10$2 == null ? this.errorStyle : t10$2), errorMaxLines: (t10$3 = errorMaxLines, t10$3 == null ? this.errorMaxLines : t10$3), hasFloatingPlaceholder: (t10$4 = hasFloatingPlaceholder, t10$4 == null ? this.hasFloatingPlaceholder : t10$4), floatingLabelBehavior: (t10$5 = floatingLabelBehavior, t10$5 == null ? this.floatingLabelBehavior : t10$5), isDense: (t10$6 = isDense, t10$6 == null ? this.isDense : t10$6), contentPadding: (t10$7 = contentPadding, t10$7 == null ? this.contentPadding : t10$7), isCollapsed: (t10$8 = isCollapsed, t10$8 == null ? this.isCollapsed : t10$8), prefixStyle: (t10$9 = prefixStyle, t10$9 == null ? this.prefixStyle : t10$9), suffixStyle: (t10$10 = suffixStyle, t10$10 == null ? this.suffixStyle : t10$10), counterStyle: (t10$11 = counterStyle, t10$11 == null ? this.counterStyle : t10$11), filled: (t10$12 = filled, t10$12 == null ? this.filled : t10$12), fillColor: (t10$13 = fillColor, t10$13 == null ? this.fillColor : t10$13), focusColor: (t10$14 = focusColor, t10$14 == null ? this.focusColor : t10$14), hoverColor: (t10$15 = hoverColor, t10$15 == null ? this.hoverColor : t10$15), errorBorder: (t10$16 = errorBorder, t10$16 == null ? this.errorBorder : t10$16), focusedBorder: (t10$17 = focusedBorder, t10$17 == null ? this.focusedBorder : t10$17), focusedErrorBorder: (t10$18 = focusedErrorBorder, t10$18 == null ? this.focusedErrorBorder : t10$18), disabledBorder: (t10$19 = disabledBorder, t10$19 == null ? this.disabledBorder : t10$19), enabledBorder: (t10$20 = enabledBorder, t10$20 == null ? this.enabledBorder : t10$20), border: (t10$21 = border, t10$21 == null ? this.border : t10$21), alignLabelWithHint: (t10$22 = alignLabelWithHint, t10$22 == null ? this.alignLabelWithHint : t10$22)});
    }
    get hashCode() {
      return ui.hashList([this.labelStyle, this.helperStyle, this.helperMaxLines, this.hintStyle, this.errorStyle, this.errorMaxLines, this.hasFloatingPlaceholder, this.floatingLabelBehavior, this.isDense, this.contentPadding, this.isCollapsed, this.prefixStyle, this.suffixStyle, this.counterStyle, this.filled, this.fillColor, this.focusColor, this.hoverColor, this.errorBorder, this.focusedBorder, this.focusedErrorBorder, this.disabledBorder, this.enabledBorder, this.border, this.alignLabelWithHint]);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this.runtimeType)) return false;
      return InputDecorationThemeL().is(other) && dart.equals(other.labelStyle, this.labelStyle) && dart.equals(other.helperStyle, this.helperStyle) && other.helperMaxLines == this.helperMaxLines && dart.equals(other.hintStyle, this.hintStyle) && dart.equals(other.errorStyle, this.errorStyle) && other.errorMaxLines == this.errorMaxLines && dart.equals(other.isDense, this.isDense) && dart.equals(other.contentPadding, this.contentPadding) && dart.equals(other.isCollapsed, this.isCollapsed) && dart.equals(other.prefixStyle, this.prefixStyle) && dart.equals(other.suffixStyle, this.suffixStyle) && dart.equals(other.counterStyle, this.counterStyle) && other.floatingLabelBehavior == this.floatingLabelBehavior && dart.equals(other.filled, this.filled) && dart.equals(other.fillColor, this.fillColor) && dart.equals(other.focusColor, this.focusColor) && dart.equals(other.hoverColor, this.hoverColor) && dart.equals(other.errorBorder, this.errorBorder) && dart.equals(other.focusedBorder, this.focusedBorder) && dart.equals(other.focusedErrorBorder, this.focusedErrorBorder) && dart.equals(other.disabledBorder, this.disabledBorder) && dart.equals(other.enabledBorder, this.enabledBorder) && dart.equals(other.border, this.border) && dart.equals(other.alignLabelWithHint, this.alignLabelWithHint) && dart.equals(other.disabledBorder, this.disabledBorder);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      let defaultTheme = C1804 || CT.C1804;
      properties.add(new (DiagnosticsPropertyOfTextStyleL()).new("labelStyle", this.labelStyle, {defaultValue: defaultTheme.labelStyle}));
      properties.add(new (DiagnosticsPropertyOfTextStyleL()).new("helperStyle", this.helperStyle, {defaultValue: defaultTheme.helperStyle}));
      properties.add(new diagnostics.IntProperty.new("helperMaxLines", this.helperMaxLines, {defaultValue: defaultTheme.helperMaxLines}));
      properties.add(new (DiagnosticsPropertyOfTextStyleL()).new("hintStyle", this.hintStyle, {defaultValue: defaultTheme.hintStyle}));
      properties.add(new (DiagnosticsPropertyOfTextStyleL()).new("errorStyle", this.errorStyle, {defaultValue: defaultTheme.errorStyle}));
      properties.add(new diagnostics.IntProperty.new("errorMaxLines", this.errorMaxLines, {defaultValue: defaultTheme.errorMaxLines}));
      properties.add(new (DiagnosticsPropertyOfboolL()).new("hasFloatingPlaceholder", this.hasFloatingPlaceholder, {defaultValue: defaultTheme.hasFloatingPlaceholder}));
      properties.add(new (DiagnosticsPropertyOfFloatingLabelBehaviorL()).new("floatingLabelBehavior", this.floatingLabelBehavior, {defaultValue: defaultTheme.floatingLabelBehavior}));
      properties.add(new (DiagnosticsPropertyOfboolL()).new("isDense", this.isDense, {defaultValue: defaultTheme.isDense}));
      properties.add(new (DiagnosticsPropertyOfEdgeInsetsGeometryL()).new("contentPadding", this.contentPadding, {defaultValue: defaultTheme.contentPadding}));
      properties.add(new (DiagnosticsPropertyOfboolL()).new("isCollapsed", this.isCollapsed, {defaultValue: defaultTheme.isCollapsed}));
      properties.add(new (DiagnosticsPropertyOfTextStyleL()).new("prefixStyle", this.prefixStyle, {defaultValue: defaultTheme.prefixStyle}));
      properties.add(new (DiagnosticsPropertyOfTextStyleL()).new("suffixStyle", this.suffixStyle, {defaultValue: defaultTheme.suffixStyle}));
      properties.add(new (DiagnosticsPropertyOfTextStyleL()).new("counterStyle", this.counterStyle, {defaultValue: defaultTheme.counterStyle}));
      properties.add(new (DiagnosticsPropertyOfboolL()).new("filled", this.filled, {defaultValue: defaultTheme.filled}));
      properties.add(new colors.ColorProperty.new("fillColor", this.fillColor, {defaultValue: defaultTheme.fillColor}));
      properties.add(new colors.ColorProperty.new("focusColor", this.focusColor, {defaultValue: defaultTheme.focusColor}));
      properties.add(new colors.ColorProperty.new("hoverColor", this.hoverColor, {defaultValue: defaultTheme.hoverColor}));
      properties.add(new (DiagnosticsPropertyOfInputBorderL()).new("errorBorder", this.errorBorder, {defaultValue: defaultTheme.errorBorder}));
      properties.add(new (DiagnosticsPropertyOfInputBorderL()).new("focusedBorder", this.focusedBorder, {defaultValue: defaultTheme.focusedErrorBorder}));
      properties.add(new (DiagnosticsPropertyOfInputBorderL()).new("focusedErrorBorder", this.focusedErrorBorder, {defaultValue: defaultTheme.focusedErrorBorder}));
      properties.add(new (DiagnosticsPropertyOfInputBorderL()).new("disabledBorder", this.disabledBorder, {defaultValue: defaultTheme.disabledBorder}));
      properties.add(new (DiagnosticsPropertyOfInputBorderL()).new("enabledBorder", this.enabledBorder, {defaultValue: defaultTheme.enabledBorder}));
      properties.add(new (DiagnosticsPropertyOfInputBorderL()).new("border", this.border, {defaultValue: defaultTheme.border}));
      properties.add(new (DiagnosticsPropertyOfboolL()).new("alignLabelWithHint", this.alignLabelWithHint, {defaultValue: defaultTheme.alignLabelWithHint}));
    }
  };
  (input_decorator.InputDecorationTheme.new = function(opts) {
    let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
    let helperStyle = opts && 'helperStyle' in opts ? opts.helperStyle : null;
    let helperMaxLines = opts && 'helperMaxLines' in opts ? opts.helperMaxLines : null;
    let hintStyle = opts && 'hintStyle' in opts ? opts.hintStyle : null;
    let errorStyle = opts && 'errorStyle' in opts ? opts.errorStyle : null;
    let errorMaxLines = opts && 'errorMaxLines' in opts ? opts.errorMaxLines : null;
    let hasFloatingPlaceholder = opts && 'hasFloatingPlaceholder' in opts ? opts.hasFloatingPlaceholder : true;
    let floatingLabelBehavior = opts && 'floatingLabelBehavior' in opts ? opts.floatingLabelBehavior : C1659 || CT.C1659;
    let isDense = opts && 'isDense' in opts ? opts.isDense : false;
    let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : null;
    let isCollapsed = opts && 'isCollapsed' in opts ? opts.isCollapsed : false;
    let prefixStyle = opts && 'prefixStyle' in opts ? opts.prefixStyle : null;
    let suffixStyle = opts && 'suffixStyle' in opts ? opts.suffixStyle : null;
    let counterStyle = opts && 'counterStyle' in opts ? opts.counterStyle : null;
    let filled = opts && 'filled' in opts ? opts.filled : false;
    let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let errorBorder = opts && 'errorBorder' in opts ? opts.errorBorder : null;
    let focusedBorder = opts && 'focusedBorder' in opts ? opts.focusedBorder : null;
    let focusedErrorBorder = opts && 'focusedErrorBorder' in opts ? opts.focusedErrorBorder : null;
    let disabledBorder = opts && 'disabledBorder' in opts ? opts.disabledBorder : null;
    let enabledBorder = opts && 'enabledBorder' in opts ? opts.enabledBorder : null;
    let border = opts && 'border' in opts ? opts.border : null;
    let alignLabelWithHint = opts && 'alignLabelWithHint' in opts ? opts.alignLabelWithHint : false;
    this[labelStyle$3] = labelStyle;
    this[helperStyle$1] = helperStyle;
    this[helperMaxLines$1] = helperMaxLines;
    this[hintStyle$0] = hintStyle;
    this[errorStyle$1] = errorStyle;
    this[errorMaxLines$1] = errorMaxLines;
    this[hasFloatingPlaceholder$0] = hasFloatingPlaceholder;
    this[floatingLabelBehavior$0] = floatingLabelBehavior;
    this[isDense$2] = isDense;
    this[contentPadding$5] = contentPadding;
    this[isCollapsed$1] = isCollapsed;
    this[prefixStyle$0] = prefixStyle;
    this[suffixStyle$0] = suffixStyle;
    this[counterStyle$0] = counterStyle;
    this[filled$0] = filled;
    this[fillColor$3] = fillColor;
    this[focusColor$7] = focusColor;
    this[hoverColor$8] = hoverColor;
    this[errorBorder$0] = errorBorder;
    this[focusedBorder$0] = focusedBorder;
    this[focusedErrorBorder$0] = focusedErrorBorder;
    this[disabledBorder$0] = disabledBorder;
    this[enabledBorder$0] = enabledBorder;
    this[border$2] = border;
    this[alignLabelWithHint$1] = alignLabelWithHint;
    if (!(isDense != null)) dart.assertFailed(null, L61, 3648, 15, "isDense != null");
    if (!(isCollapsed != null)) dart.assertFailed(null, L61, 3649, 15, "isCollapsed != null");
    if (!(filled != null)) dart.assertFailed(null, L61, 3650, 15, "filled != null");
    if (!(alignLabelWithHint != null)) dart.assertFailed(null, L61, 3651, 15, "alignLabelWithHint != null");
    if (!!(!dart.test(hasFloatingPlaceholder) && floatingLabelBehavior == input_decorator.FloatingLabelBehavior.always)) dart.assertFailed("hasFloatingPlaceholder=false conflicts with FloatingLabelBehavior.always", L61, 3652, 15, "!(!hasFloatingPlaceholder && identical(floatingLabelBehavior, FloatingLabelBehavior.always))");
    ;
  }).prototype = input_decorator.InputDecorationTheme.prototype;
  dart.addTypeTests(input_decorator.InputDecorationTheme);
  dart.addTypeCaches(input_decorator.InputDecorationTheme);
  const labelStyle$3 = InputDecorationTheme_labelStyle;
  const helperStyle$1 = InputDecorationTheme_helperStyle;
  const helperMaxLines$1 = InputDecorationTheme_helperMaxLines;
  const hintStyle$0 = InputDecorationTheme_hintStyle;
  const errorStyle$1 = InputDecorationTheme_errorStyle;
  const errorMaxLines$1 = InputDecorationTheme_errorMaxLines;
  const hasFloatingPlaceholder$0 = InputDecorationTheme_hasFloatingPlaceholder;
  const floatingLabelBehavior$0 = InputDecorationTheme_floatingLabelBehavior;
  const isDense$2 = InputDecorationTheme_isDense;
  const contentPadding$5 = InputDecorationTheme_contentPadding;
  const isCollapsed$1 = InputDecorationTheme_isCollapsed;
  const prefixStyle$0 = InputDecorationTheme_prefixStyle;
  const suffixStyle$0 = InputDecorationTheme_suffixStyle;
  const counterStyle$0 = InputDecorationTheme_counterStyle;
  const filled$0 = InputDecorationTheme_filled;
  const fillColor$3 = InputDecorationTheme_fillColor;
  const focusColor$7 = InputDecorationTheme_focusColor;
  const hoverColor$8 = InputDecorationTheme_hoverColor;
  const errorBorder$0 = InputDecorationTheme_errorBorder;
  const focusedBorder$0 = InputDecorationTheme_focusedBorder;
  const focusedErrorBorder$0 = InputDecorationTheme_focusedErrorBorder;
  const disabledBorder$0 = InputDecorationTheme_disabledBorder;
  const enabledBorder$0 = InputDecorationTheme_enabledBorder;
  const border$2 = InputDecorationTheme_border;
  const alignLabelWithHint$1 = InputDecorationTheme_alignLabelWithHint;
  dart.setMethodSignature(input_decorator.InputDecorationTheme, () => ({
    __proto__: dart.getMethods(input_decorator.InputDecorationTheme.__proto__),
    copyWith: dart.fnType(dart.legacy(input_decorator.InputDecorationTheme), [], {alignLabelWithHint: dart.legacy(core.bool), border: dart.legacy(input_border.InputBorder), contentPadding: dart.legacy(edge_insets.EdgeInsetsGeometry), counterStyle: dart.legacy(text_style.TextStyle), disabledBorder: dart.legacy(input_border.InputBorder), enabledBorder: dart.legacy(input_border.InputBorder), errorBorder: dart.legacy(input_border.InputBorder), errorMaxLines: dart.legacy(core.int), errorStyle: dart.legacy(text_style.TextStyle), fillColor: dart.legacy(ui.Color), filled: dart.legacy(core.bool), floatingLabelBehavior: dart.legacy(input_decorator.FloatingLabelBehavior), focusColor: dart.legacy(ui.Color), focusedBorder: dart.legacy(input_border.InputBorder), focusedErrorBorder: dart.legacy(input_border.InputBorder), hasFloatingPlaceholder: dart.legacy(core.bool), helperMaxLines: dart.legacy(core.int), helperStyle: dart.legacy(text_style.TextStyle), hintStyle: dart.legacy(text_style.TextStyle), hoverColor: dart.legacy(ui.Color), isCollapsed: dart.legacy(core.bool), isDense: dart.legacy(core.bool), labelStyle: dart.legacy(text_style.TextStyle), prefixStyle: dart.legacy(text_style.TextStyle), suffixStyle: dart.legacy(text_style.TextStyle)}, {}),
    _equals: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    [$_equals]: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    debugFillProperties: dart.fnType(dart.void, [dart.legacy(diagnostics.DiagnosticPropertiesBuilder)])
  }));
  dart.setGetterSignature(input_decorator.InputDecorationTheme, () => ({
    __proto__: dart.getGetters(input_decorator.InputDecorationTheme.__proto__),
    hashCode: dart.legacy(core.int),
    [$hashCode]: dart.legacy(core.int)
  }));
  dart.setLibraryUri(input_decorator.InputDecorationTheme, L60);
  dart.setFieldSignature(input_decorator.InputDecorationTheme, () => ({
    __proto__: dart.getFields(input_decorator.InputDecorationTheme.__proto__),
    labelStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    helperStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    helperMaxLines: dart.finalFieldType(dart.legacy(core.int)),
    hintStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    errorStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    errorMaxLines: dart.finalFieldType(dart.legacy(core.int)),
    hasFloatingPlaceholder: dart.finalFieldType(dart.legacy(core.bool)),
    floatingLabelBehavior: dart.finalFieldType(dart.legacy(input_decorator.FloatingLabelBehavior)),
    isDense: dart.finalFieldType(dart.legacy(core.bool)),
    contentPadding: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsetsGeometry)),
    isCollapsed: dart.finalFieldType(dart.legacy(core.bool)),
    prefixStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    suffixStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    counterStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    filled: dart.finalFieldType(dart.legacy(core.bool)),
    fillColor: dart.finalFieldType(dart.legacy(ui.Color)),
    focusColor: dart.finalFieldType(dart.legacy(ui.Color)),
    hoverColor: dart.finalFieldType(dart.legacy(ui.Color)),
    errorBorder: dart.finalFieldType(dart.legacy(input_border.InputBorder)),
    focusedBorder: dart.finalFieldType(dart.legacy(input_border.InputBorder)),
    focusedErrorBorder: dart.finalFieldType(dart.legacy(input_border.InputBorder)),
    disabledBorder: dart.finalFieldType(dart.legacy(input_border.InputBorder)),
    enabledBorder: dart.finalFieldType(dart.legacy(input_border.InputBorder)),
    border: dart.finalFieldType(dart.legacy(input_border.InputBorder)),
    alignLabelWithHint: dart.finalFieldType(dart.legacy(core.bool))
  }));
  dart.defineExtensionMethods(input_decorator.InputDecorationTheme, ['_equals']);
  dart.defineExtensionAccessors(input_decorator.InputDecorationTheme, ['hashCode']);
  dart.defineLazy(input_decorator, {
    /*input_decorator._kTransitionDuration*/get _kTransitionDuration() {
      return C243 || CT.C243;
    },
    /*input_decorator._kTransitionCurve*/get _kTransitionCurve() {
      return C216 || CT.C216;
    },
    /*input_decorator._kFinalLabelScale*/get _kFinalLabelScale() {
      return 0.75;
    }
  }, true);
  ink_well.InteractiveInkFeatureFactory = class InteractiveInkFeatureFactory extends core.Object {};
  (ink_well.InteractiveInkFeatureFactory.new = function() {
    ;
  }).prototype = ink_well.InteractiveInkFeatureFactory.prototype;
  dart.addTypeTests(ink_well.InteractiveInkFeatureFactory);
  dart.addTypeCaches(ink_well.InteractiveInkFeatureFactory);
  dart.setLibraryUri(ink_well.InteractiveInkFeatureFactory, L62);
  ink_splash._InkSplashFactory = class _InkSplashFactory extends ink_well.InteractiveInkFeatureFactory {
    create(opts) {
      let controller = opts && 'controller' in opts ? opts.controller : null;
      let referenceBox = opts && 'referenceBox' in opts ? opts.referenceBox : null;
      let position = opts && 'position' in opts ? opts.position : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let containedInkWell = opts && 'containedInkWell' in opts ? opts.containedInkWell : false;
      let rectCallback = opts && 'rectCallback' in opts ? opts.rectCallback : null;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
      let customBorder = opts && 'customBorder' in opts ? opts.customBorder : null;
      let radius = opts && 'radius' in opts ? opts.radius : null;
      let onRemoved = opts && 'onRemoved' in opts ? opts.onRemoved : null;
      return new ink_splash.InkSplash.new({controller: controller, referenceBox: referenceBox, position: position, color: color, containedInkWell: containedInkWell, rectCallback: rectCallback, borderRadius: borderRadius, customBorder: customBorder, radius: radius, onRemoved: onRemoved, textDirection: textDirection});
    }
  };
  (ink_splash._InkSplashFactory.new = function() {
    ink_splash._InkSplashFactory.__proto__.new.call(this);
    ;
  }).prototype = ink_splash._InkSplashFactory.prototype;
  dart.addTypeTests(ink_splash._InkSplashFactory);
  dart.addTypeCaches(ink_splash._InkSplashFactory);
  dart.setMethodSignature(ink_splash._InkSplashFactory, () => ({
    __proto__: dart.getMethods(ink_splash._InkSplashFactory.__proto__),
    create: dart.fnType(dart.legacy(ink_well.InteractiveInkFeature), [], {borderRadius: dart.legacy(border_radius.BorderRadius), color: dart.legacy(ui.Color), containedInkWell: dart.legacy(core.bool), controller: dart.legacy(material.MaterialInkController), customBorder: dart.legacy(borders.ShapeBorder), onRemoved: dart.legacy(dart.fnType(dart.void, [])), position: dart.legacy(ui.Offset), radius: dart.legacy(core.double), rectCallback: dart.legacy(dart.fnType(dart.legacy(ui.Rect), [])), referenceBox: dart.legacy(box.RenderBox), textDirection: dart.legacy(ui.TextDirection)}, {})
  }));
  dart.setLibraryUri(ink_splash._InkSplashFactory, L63);
  var _radius = dart.privateName(ink_splash, "_radius");
  var _radiusController = dart.privateName(ink_splash, "_radiusController");
  var _alpha = dart.privateName(ink_splash, "_alpha");
  var _alphaController = dart.privateName(ink_splash, "_alphaController");
  var _position = dart.privateName(ink_splash, "_position");
  var _borderRadius = dart.privateName(ink_splash, "_borderRadius");
  var _customBorder = dart.privateName(ink_splash, "_customBorder");
  var _targetRadius = dart.privateName(ink_splash, "_targetRadius");
  var _clipCallback = dart.privateName(ink_splash, "_clipCallback");
  var _repositionToReferenceBox = dart.privateName(ink_splash, "_repositionToReferenceBox");
  var _textDirection$0 = dart.privateName(ink_splash, "_textDirection");
  var _handleAlphaStatusChanged = dart.privateName(ink_splash, "_handleAlphaStatusChanged");
  var _color = dart.privateName(ink_well, "_color");
  var _debugDisposed = dart.privateName(material, "_debugDisposed");
  var _controller$3 = dart.privateName(material, "_controller");
  var _removeFeature = dart.privateName(material, "_removeFeature");
  var _paint = dart.privateName(material, "_paint");
  var referenceBox$ = dart.privateName(material, "InkFeature.referenceBox");
  var onRemoved$ = dart.privateName(material, "InkFeature.onRemoved");
  material.InkFeature = class InkFeature extends core.Object {
    get referenceBox() {
      return this[referenceBox$];
    }
    set referenceBox(value) {
      super.referenceBox = value;
    }
    get onRemoved() {
      return this[onRemoved$];
    }
    set onRemoved(value) {
      super.onRemoved = value;
    }
    get controller() {
      return this[_controller$3];
    }
    dispose() {
      if (!!dart.test(this[_debugDisposed])) dart.assertFailed(null, L66, 627, 12, "!_debugDisposed");
      if (!dart.test(dart.fn(() => {
        this[_debugDisposed] = true;
        return true;
      }, VoidToboolL())())) dart.assertFailed(null, L66, 628, 12, "() {\r\n      _debugDisposed = true;\r\n      return true;\r\n    }()");
      this[_controller$3][_removeFeature](this);
      if (this.onRemoved != null) this.onRemoved();
    }
    [_paint](canvas) {
      if (!dart.test(this.referenceBox.attached)) dart.assertFailed(null, L66, 638, 12, "referenceBox.attached");
      if (!!dart.test(this[_debugDisposed])) dart.assertFailed(null, L66, 639, 12, "!_debugDisposed");
      let descendants = JSArrayOfRenderObjectL().of([this.referenceBox]);
      let node = this.referenceBox;
      while (!dart.equals(node, this[_controller$3])) {
        node = RenderObjectL().as(node.parent);
        if (!(node != null)) dart.assertFailed(null, L66, 645, 14, "node != null");
        descendants[$add](node);
      }
      let transform = vector_math_64.Matrix4.identity();
      if (!(dart.notNull(descendants[$length]) >= 2)) dart.assertFailed(null, L66, 650, 12, "descendants.length >= 2");
      for (let index = dart.notNull(descendants[$length]) - 1; index > 0; index = index - 1)
        descendants[$_get](index).applyPaintTransform(descendants[$_get](index - 1), transform);
      this.paintFeature(canvas, transform);
    }
    toString() {
      return diagnostics.describeIdentity(this);
    }
  };
  (material.InkFeature.new = function(opts) {
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let referenceBox = opts && 'referenceBox' in opts ? opts.referenceBox : null;
    let onRemoved = opts && 'onRemoved' in opts ? opts.onRemoved : null;
    this[_debugDisposed] = false;
    this[referenceBox$] = referenceBox;
    this[onRemoved$] = onRemoved;
    if (!(controller != null)) dart.assertFailed(null, L66, 605, 15, "controller != null");
    if (!(referenceBox != null)) dart.assertFailed(null, L66, 606, 15, "referenceBox != null");
    this[_controller$3] = _RenderInkFeaturesL().as(controller);
    ;
  }).prototype = material.InkFeature.prototype;
  dart.addTypeTests(material.InkFeature);
  dart.addTypeCaches(material.InkFeature);
  dart.setMethodSignature(material.InkFeature, () => ({
    __proto__: dart.getMethods(material.InkFeature.__proto__),
    dispose: dart.fnType(dart.void, []),
    [_paint]: dart.fnType(dart.void, [dart.legacy(ui.Canvas)]),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setGetterSignature(material.InkFeature, () => ({
    __proto__: dart.getGetters(material.InkFeature.__proto__),
    controller: dart.legacy(material.MaterialInkController)
  }));
  dart.setLibraryUri(material.InkFeature, L67);
  dart.setFieldSignature(material.InkFeature, () => ({
    __proto__: dart.getFields(material.InkFeature.__proto__),
    [_controller$3]: dart.finalFieldType(dart.legacy(material._RenderInkFeatures)),
    referenceBox: dart.finalFieldType(dart.legacy(box.RenderBox)),
    onRemoved: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, []))),
    [_debugDisposed]: dart.fieldType(dart.legacy(core.bool))
  }));
  dart.defineExtensionMethods(material.InkFeature, ['toString']);
  ink_well.InteractiveInkFeature = class InteractiveInkFeature extends material.InkFeature {
    confirm() {
    }
    cancel() {
    }
    get color() {
      return this[_color];
    }
    set color(value) {
      if (dart.equals(value, this[_color])) return;
      this[_color] = value;
      this.controller.markNeedsPaint();
    }
    paintInkCircle(opts) {
      let canvas = opts && 'canvas' in opts ? opts.canvas : null;
      let transform = opts && 'transform' in opts ? opts.transform : null;
      let paint = opts && 'paint' in opts ? opts.paint : null;
      let center = opts && 'center' in opts ? opts.center : null;
      let radius = opts && 'radius' in opts ? opts.radius : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let customBorder = opts && 'customBorder' in opts ? opts.customBorder : null;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : C1003 || CT.C1003;
      let clipCallback = opts && 'clipCallback' in opts ? opts.clipCallback : null;
      if (!(canvas != null)) dart.assertFailed(null, L65, 113, 12, "canvas != null");
      if (!(transform != null)) dart.assertFailed(null, L65, 114, 12, "transform != null");
      if (!(paint != null)) dart.assertFailed(null, L65, 115, 12, "paint != null");
      if (!(center != null)) dart.assertFailed(null, L65, 116, 12, "center != null");
      if (!(radius != null)) dart.assertFailed(null, L65, 117, 12, "radius != null");
      if (!(borderRadius != null)) dart.assertFailed(null, L65, 118, 12, "borderRadius != null");
      let originOffset = matrix_utils.MatrixUtils.getAsTranslation(transform);
      canvas.save();
      if (originOffset == null) {
        canvas.transform(transform.storage);
      } else {
        canvas.translate(originOffset.dx, originOffset.dy);
      }
      if (clipCallback != null) {
        let rect = clipCallback();
        if (customBorder != null) {
          canvas.clipPath(customBorder.getOuterPath(rect, {textDirection: textDirection}));
        } else if (!dart.equals(borderRadius, border_radius.BorderRadius.zero)) {
          canvas.clipRRect(new ui.RRect.fromRectAndCorners(rect, {topLeft: borderRadius.topLeft, topRight: borderRadius.topRight, bottomLeft: borderRadius.bottomLeft, bottomRight: borderRadius.bottomRight}));
        } else {
          canvas.clipRect(rect);
        }
      }
      canvas.drawCircle(center, radius, paint);
      canvas.restore();
    }
  };
  (ink_well.InteractiveInkFeature.new = function(opts) {
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let referenceBox = opts && 'referenceBox' in opts ? opts.referenceBox : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let onRemoved = opts && 'onRemoved' in opts ? opts.onRemoved : null;
    if (!(controller != null)) dart.assertFailed(null, L65, 44, 15, "controller != null");
    if (!(referenceBox != null)) dart.assertFailed(null, L65, 45, 15, "referenceBox != null");
    this[_color] = color;
    ink_well.InteractiveInkFeature.__proto__.new.call(this, {controller: controller, referenceBox: referenceBox, onRemoved: onRemoved});
    ;
  }).prototype = ink_well.InteractiveInkFeature.prototype;
  dart.addTypeTests(ink_well.InteractiveInkFeature);
  dart.addTypeCaches(ink_well.InteractiveInkFeature);
  dart.setMethodSignature(ink_well.InteractiveInkFeature, () => ({
    __proto__: dart.getMethods(ink_well.InteractiveInkFeature.__proto__),
    confirm: dart.fnType(dart.void, []),
    cancel: dart.fnType(dart.void, []),
    paintInkCircle: dart.fnType(dart.void, [], {borderRadius: dart.legacy(border_radius.BorderRadius), canvas: dart.legacy(ui.Canvas), center: dart.legacy(ui.Offset), clipCallback: dart.legacy(dart.fnType(dart.legacy(ui.Rect), [])), customBorder: dart.legacy(borders.ShapeBorder), paint: dart.legacy(ui.Paint), radius: dart.legacy(core.double), textDirection: dart.legacy(ui.TextDirection), transform: dart.legacy(vector_math_64.Matrix4)}, {})
  }));
  dart.setGetterSignature(ink_well.InteractiveInkFeature, () => ({
    __proto__: dart.getGetters(ink_well.InteractiveInkFeature.__proto__),
    color: dart.legacy(ui.Color)
  }));
  dart.setSetterSignature(ink_well.InteractiveInkFeature, () => ({
    __proto__: dart.getSetters(ink_well.InteractiveInkFeature.__proto__),
    color: dart.legacy(ui.Color)
  }));
  dart.setLibraryUri(ink_well.InteractiveInkFeature, L62);
  dart.setFieldSignature(ink_well.InteractiveInkFeature, () => ({
    __proto__: dart.getFields(ink_well.InteractiveInkFeature.__proto__),
    [_color]: dart.fieldType(dart.legacy(ui.Color))
  }));
  var C1805;
  ink_splash.InkSplash = class InkSplash extends ink_well.InteractiveInkFeature {
    confirm() {
      let t10;
      let duration = (dart.notNull(this[_targetRadius]) / 1)[$floor]();
      t10 = this[_radiusController];
      (() => {
        t10.duration = new core.Duration.new({milliseconds: duration});
        t10.forward();
        return t10;
      })();
      this[_alphaController].forward();
    }
    cancel() {
      let t10;
      t10 = this[_alphaController];
      t10 == null ? null : t10.forward();
    }
    [_handleAlphaStatusChanged](status) {
      if (status == animation.AnimationStatus.completed) this.dispose();
    }
    dispose() {
      this[_radiusController].dispose();
      this[_alphaController].dispose();
      this[_alphaController] = null;
      super.dispose();
    }
    paintFeature(canvas, transform) {
      let t10;
      let paint = (t10 = ui.Paint.new(), (() => {
        t10.color = this.color.withAlpha(this[_alpha].value);
        return t10;
      })());
      let center = this[_position];
      if (dart.test(this[_repositionToReferenceBox])) center = ui.Offset.lerp(center, this.referenceBox.size.center(ui.Offset.zero), this[_radiusController].value);
      this.paintInkCircle({canvas: canvas, transform: transform, paint: paint, center: center, textDirection: this[_textDirection$0], radius: this[_radius].value, customBorder: this[_customBorder], borderRadius: this[_borderRadius], clipCallback: this[_clipCallback]});
    }
  };
  (ink_splash.InkSplash.new = function(opts) {
    let t10, t10$, t10$0, t10$1;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let referenceBox = opts && 'referenceBox' in opts ? opts.referenceBox : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let position = opts && 'position' in opts ? opts.position : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let containedInkWell = opts && 'containedInkWell' in opts ? opts.containedInkWell : false;
    let rectCallback = opts && 'rectCallback' in opts ? opts.rectCallback : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let customBorder = opts && 'customBorder' in opts ? opts.customBorder : null;
    let radius = opts && 'radius' in opts ? opts.radius : null;
    let onRemoved = opts && 'onRemoved' in opts ? opts.onRemoved : null;
    this[_radius] = null;
    this[_radiusController] = null;
    this[_alpha] = null;
    this[_alphaController] = null;
    if (!(textDirection != null)) dart.assertFailed(null, L64, 130, 15, "textDirection != null");
    this[_position] = position;
    this[_borderRadius] = (t10 = borderRadius, t10 == null ? border_radius.BorderRadius.zero : t10);
    this[_customBorder] = customBorder;
    this[_targetRadius] = (t10$ = radius, t10$ == null ? ink_splash._getTargetRadius(referenceBox, containedInkWell, rectCallback, position) : t10$);
    this[_clipCallback] = ink_splash._getClipCallback(referenceBox, containedInkWell, rectCallback);
    this[_repositionToReferenceBox] = !dart.test(containedInkWell);
    this[_textDirection$0] = textDirection;
    ink_splash.InkSplash.__proto__.new.call(this, {controller: controller, referenceBox: referenceBox, color: color, onRemoved: onRemoved});
    if (!(this[_borderRadius] != null)) dart.assertFailed(null, L64, 139, 12, "_borderRadius != null");
    this[_radiusController] = (t10$0 = new animation_controller.AnimationController.new({duration: ink_splash._kUnconfirmedSplashDuration, vsync: controller.vsync}), (() => {
      t10$0.addListener(dart.bind(controller, 'markNeedsPaint'));
      t10$0.forward();
      return t10$0;
    })());
    this[_radius] = this[_radiusController].drive(doubleL(), new (TweenOfdoubleL()).new({begin: 0, end: this[_targetRadius]}));
    this[_alphaController] = (t10$1 = new animation_controller.AnimationController.new({duration: ink_splash._kSplashFadeDuration, vsync: controller.vsync}), (() => {
      t10$1.addListener(dart.bind(controller, 'markNeedsPaint'));
      t10$1.addStatusListener(dart.bind(this, _handleAlphaStatusChanged));
      return t10$1;
    })());
    this[_alpha] = this[_alphaController].drive(intL(), new tween.IntTween.new({begin: color.alpha, end: 0}));
    controller.addInkFeature(this);
  }).prototype = ink_splash.InkSplash.prototype;
  dart.addTypeTests(ink_splash.InkSplash);
  dart.addTypeCaches(ink_splash.InkSplash);
  dart.setMethodSignature(ink_splash.InkSplash, () => ({
    __proto__: dart.getMethods(ink_splash.InkSplash.__proto__),
    [_handleAlphaStatusChanged]: dart.fnType(dart.void, [dart.legacy(animation.AnimationStatus)]),
    paintFeature: dart.fnType(dart.void, [dart.legacy(ui.Canvas), dart.legacy(vector_math_64.Matrix4)])
  }));
  dart.setLibraryUri(ink_splash.InkSplash, L63);
  dart.setFieldSignature(ink_splash.InkSplash, () => ({
    __proto__: dart.getFields(ink_splash.InkSplash.__proto__),
    [_position]: dart.finalFieldType(dart.legacy(ui.Offset)),
    [_borderRadius]: dart.finalFieldType(dart.legacy(border_radius.BorderRadius)),
    [_customBorder]: dart.finalFieldType(dart.legacy(borders.ShapeBorder)),
    [_targetRadius]: dart.finalFieldType(dart.legacy(core.double)),
    [_clipCallback]: dart.finalFieldType(dart.legacy(dart.fnType(dart.legacy(ui.Rect), []))),
    [_repositionToReferenceBox]: dart.finalFieldType(dart.legacy(core.bool)),
    [_textDirection$0]: dart.finalFieldType(dart.legacy(ui.TextDirection)),
    [_radius]: dart.fieldType(dart.legacy(animation.Animation$(dart.legacy(core.double)))),
    [_radiusController]: dart.fieldType(dart.legacy(animation_controller.AnimationController)),
    [_alpha]: dart.fieldType(dart.legacy(animation.Animation$(dart.legacy(core.int)))),
    [_alphaController]: dart.fieldType(dart.legacy(animation_controller.AnimationController))
  }));
  dart.defineLazy(ink_splash.InkSplash, {
    /*ink_splash.InkSplash.splashFactory*/get splashFactory() {
      return C1805 || CT.C1805;
    }
  }, true);
  ink_splash._getClipCallback = function _getClipCallback(referenceBox, containedInkWell, rectCallback) {
    if (rectCallback != null) {
      if (!dart.test(containedInkWell)) dart.assertFailed(null, L64, 23, 12, "containedInkWell");
      return rectCallback;
    }
    if (dart.test(containedInkWell)) return dart.fn(() => ui.Offset.zero['&'](referenceBox.size), VoidToRectL());
    return null;
  };
  ink_splash._getTargetRadius = function _getTargetRadius(referenceBox, containedInkWell, rectCallback, position) {
    if (dart.test(containedInkWell)) {
      let size = rectCallback != null ? rectCallback().size : referenceBox.size;
      return ink_splash._getSplashRadiusForPositionInSize(size, position);
    }
    return 35;
  };
  ink_splash._getSplashRadiusForPositionInSize = function _getSplashRadiusForPositionInSize(bounds, position) {
    let d1 = position['-'](bounds.topLeft(ui.Offset.zero)).distance;
    let d2 = position['-'](bounds.topRight(ui.Offset.zero)).distance;
    let d3 = position['-'](bounds.bottomLeft(ui.Offset.zero)).distance;
    let d4 = position['-'](bounds.bottomRight(ui.Offset.zero)).distance;
    return math.max(doubleL(), math.max(doubleL(), d1, d2), math.max(doubleL(), d3, d4))[$ceilToDouble]();
  };
  var C1806;
  dart.defineLazy(ink_splash, {
    /*ink_splash._kUnconfirmedSplashDuration*/get _kUnconfirmedSplashDuration() {
      return C1806 || CT.C1806;
    },
    /*ink_splash._kSplashFadeDuration*/get _kSplashFadeDuration() {
      return C243 || CT.C243;
    },
    /*ink_splash._kSplashInitialSize*/get _kSplashInitialSize() {
      return 0;
    },
    /*ink_splash._kSplashConfirmedVelocity*/get _kSplashConfirmedVelocity() {
      return 1;
    }
  }, true);
  var C1807;
  var C1808;
  var C1809;
  var C1810;
  var C1811;
  var textStyle$5 = dart.privateName(button_style, "ButtonStyle.textStyle");
  var backgroundColor$9 = dart.privateName(button_style, "ButtonStyle.backgroundColor");
  var foregroundColor$0 = dart.privateName(button_style, "ButtonStyle.foregroundColor");
  var overlayColor$0 = dart.privateName(button_style, "ButtonStyle.overlayColor");
  var shadowColor$ = dart.privateName(button_style, "ButtonStyle.shadowColor");
  var elevation$13 = dart.privateName(button_style, "ButtonStyle.elevation");
  var padding$8 = dart.privateName(button_style, "ButtonStyle.padding");
  var minimumSize$ = dart.privateName(button_style, "ButtonStyle.minimumSize");
  var side$0 = dart.privateName(button_style, "ButtonStyle.side");
  var shape$13 = dart.privateName(button_style, "ButtonStyle.shape");
  var mouseCursor$6 = dart.privateName(button_style, "ButtonStyle.mouseCursor");
  var visualDensity$6 = dart.privateName(button_style, "ButtonStyle.visualDensity");
  var tapTargetSize$ = dart.privateName(button_style, "ButtonStyle.tapTargetSize");
  var animationDuration$1 = dart.privateName(button_style, "ButtonStyle.animationDuration");
  var enableFeedback$2 = dart.privateName(button_style, "ButtonStyle.enableFeedback");
  const Object_Diagnosticable$36$10 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$10.new = function() {
  }).prototype = Object_Diagnosticable$36$10.prototype;
  dart.applyMixin(Object_Diagnosticable$36$10, diagnostics.Diagnosticable);
  button_style.ButtonStyle = class ButtonStyle extends Object_Diagnosticable$36$10 {
    get textStyle() {
      return this[textStyle$5];
    }
    set textStyle(value) {
      super.textStyle = value;
    }
    get backgroundColor() {
      return this[backgroundColor$9];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get foregroundColor() {
      return this[foregroundColor$0];
    }
    set foregroundColor(value) {
      super.foregroundColor = value;
    }
    get overlayColor() {
      return this[overlayColor$0];
    }
    set overlayColor(value) {
      super.overlayColor = value;
    }
    get shadowColor() {
      return this[shadowColor$];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    get elevation() {
      return this[elevation$13];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get padding() {
      return this[padding$8];
    }
    set padding(value) {
      super.padding = value;
    }
    get minimumSize() {
      return this[minimumSize$];
    }
    set minimumSize(value) {
      super.minimumSize = value;
    }
    get side() {
      return this[side$0];
    }
    set side(value) {
      super.side = value;
    }
    get shape() {
      return this[shape$13];
    }
    set shape(value) {
      super.shape = value;
    }
    get mouseCursor() {
      return this[mouseCursor$6];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get visualDensity() {
      return this[visualDensity$6];
    }
    set visualDensity(value) {
      super.visualDensity = value;
    }
    get tapTargetSize() {
      return this[tapTargetSize$];
    }
    set tapTargetSize(value) {
      super.tapTargetSize = value;
    }
    get animationDuration() {
      return this[animationDuration$1];
    }
    set animationDuration(value) {
      super.animationDuration = value;
    }
    get enableFeedback() {
      return this[enableFeedback$2];
    }
    set enableFeedback(value) {
      super.enableFeedback = value;
    }
    copyWith(opts) {
      let t10, t10$, t10$0, t10$1, t10$2, t10$3, t10$4, t10$5, t10$6, t10$7, t10$8, t10$9, t10$10, t10$11, t10$12;
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
      let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let minimumSize = opts && 'minimumSize' in opts ? opts.minimumSize : null;
      let side = opts && 'side' in opts ? opts.side : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
      let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
      let tapTargetSize = opts && 'tapTargetSize' in opts ? opts.tapTargetSize : null;
      let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : null;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
      return new button_style.ButtonStyle.new({textStyle: (t10 = textStyle, t10 == null ? this.textStyle : t10), backgroundColor: (t10$ = backgroundColor, t10$ == null ? this.backgroundColor : t10$), foregroundColor: (t10$0 = foregroundColor, t10$0 == null ? this.foregroundColor : t10$0), overlayColor: (t10$1 = overlayColor, t10$1 == null ? this.overlayColor : t10$1), shadowColor: (t10$2 = shadowColor, t10$2 == null ? this.shadowColor : t10$2), elevation: (t10$3 = elevation, t10$3 == null ? this.elevation : t10$3), padding: (t10$4 = padding, t10$4 == null ? this.padding : t10$4), minimumSize: (t10$5 = minimumSize, t10$5 == null ? this.minimumSize : t10$5), side: (t10$6 = side, t10$6 == null ? this.side : t10$6), shape: (t10$7 = shape, t10$7 == null ? this.shape : t10$7), mouseCursor: (t10$8 = mouseCursor, t10$8 == null ? this.mouseCursor : t10$8), visualDensity: (t10$9 = visualDensity, t10$9 == null ? this.visualDensity : t10$9), tapTargetSize: (t10$10 = tapTargetSize, t10$10 == null ? this.tapTargetSize : t10$10), animationDuration: (t10$11 = animationDuration, t10$11 == null ? this.animationDuration : t10$11), enableFeedback: (t10$12 = enableFeedback, t10$12 == null ? this.enableFeedback : t10$12)});
    }
    merge(style) {
      let t10, t10$, t10$0, t10$1, t10$2, t10$3, t10$4, t10$5, t10$6, t10$7, t10$8, t10$9, t10$10, t10$11, t10$12;
      if (style == null) return this;
      return this.copyWith({textStyle: (t10 = this.textStyle, t10 == null ? style.textStyle : t10), backgroundColor: (t10$ = this.backgroundColor, t10$ == null ? style.backgroundColor : t10$), foregroundColor: (t10$0 = this.foregroundColor, t10$0 == null ? style.foregroundColor : t10$0), overlayColor: (t10$1 = this.overlayColor, t10$1 == null ? style.overlayColor : t10$1), shadowColor: (t10$2 = this.shadowColor, t10$2 == null ? style.shadowColor : t10$2), elevation: (t10$3 = this.elevation, t10$3 == null ? style.elevation : t10$3), padding: (t10$4 = this.padding, t10$4 == null ? style.padding : t10$4), minimumSize: (t10$5 = this.minimumSize, t10$5 == null ? style.minimumSize : t10$5), side: (t10$6 = this.side, t10$6 == null ? style.side : t10$6), shape: (t10$7 = this.shape, t10$7 == null ? style.shape : t10$7), mouseCursor: (t10$8 = this.mouseCursor, t10$8 == null ? style.mouseCursor : t10$8), visualDensity: (t10$9 = this.visualDensity, t10$9 == null ? style.visualDensity : t10$9), tapTargetSize: (t10$10 = this.tapTargetSize, t10$10 == null ? style.tapTargetSize : t10$10), animationDuration: (t10$11 = this.animationDuration, t10$11 == null ? style.animationDuration : t10$11), enableFeedback: (t10$12 = this.enableFeedback, t10$12 == null ? style.enableFeedback : t10$12)});
    }
    get hashCode() {
      return ui.hashValues(this.textStyle, this.backgroundColor, this.foregroundColor, this.overlayColor, this.shadowColor, this.elevation, this.padding, this.minimumSize, this.side, this.shape, this.mouseCursor, this.visualDensity, this.tapTargetSize, this.animationDuration, this.enableFeedback);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this.runtimeType)) return false;
      return ButtonStyleL().is(other) && dart.equals(other.textStyle, this.textStyle) && dart.equals(other.backgroundColor, this.backgroundColor) && dart.equals(other.foregroundColor, this.foregroundColor) && dart.equals(other.overlayColor, this.overlayColor) && dart.equals(other.shadowColor, this.shadowColor) && dart.equals(other.elevation, this.elevation) && dart.equals(other.padding, this.padding) && dart.equals(other.minimumSize, this.minimumSize) && dart.equals(other.side, this.side) && dart.equals(other.shape, this.shape) && dart.equals(other.mouseCursor, this.mouseCursor) && dart.equals(other.visualDensity, this.visualDensity) && other.tapTargetSize == this.tapTargetSize && dart.equals(other.animationDuration, this.animationDuration) && dart.equals(other.enableFeedback, this.enableFeedback);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfMaterialStatePropertyLOfTextStyleL()).new("textStyle", this.textStyle, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfMaterialStatePropertyLOfColorL()).new("backgroundColor", this.backgroundColor, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfMaterialStatePropertyLOfColorL()).new("foregroundColor", this.foregroundColor, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfMaterialStatePropertyLOfColorL()).new("overlayColor", this.overlayColor, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfMaterialStatePropertyLOfColorL()).new("shadowColor", this.shadowColor, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfMaterialStatePropertyLOfdoubleL()).new("elevation", this.elevation, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfMaterialStatePropertyLOfEdgeInsetsGeometryL()).new("padding", this.padding, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfMaterialStatePropertyLOfSizeL()).new("minimumSize", this.minimumSize, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfMaterialStatePropertyLOfBorderSideL()).new("side", this.side, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfMaterialStatePropertyLOfOutlinedBorderL()).new("shape", this.shape, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfMaterialStatePropertyLOfMouseCursorL()).new("mouseCursor", this.mouseCursor, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfVisualDensityL()).new("visualDensity", this.visualDensity, {defaultValue: null}));
      properties.add(new (EnumPropertyOfMaterialTapTargetSizeL()).new("tapTargetSize", this.tapTargetSize, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfDurationL()).new("animationDuration", this.animationDuration, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfboolL()).new("enableFeedback", this.enableFeedback, {defaultValue: null}));
    }
    static lerp(a, b, t) {
      let t10, t10$, t10$0, t10$1, t10$2, t10$3, t10$4, t10$5, t10$6, t10$7, t10$8, t10$9, t10$10, t10$11, t10$12, t10$13, t10$14, t10$15, t10$16, t10$17;
      if (!(t != null)) dart.assertFailed(null, L68, 345, 13, "t != null");
      if (a == null && b == null) return null;
      return new button_style.ButtonStyle.new({textStyle: button_style.ButtonStyle._lerpProperties(TextStyleL(), (t10 = a, t10 == null ? null : t10.textStyle), (t10$ = b, t10$ == null ? null : t10$.textStyle), t, C1807 || CT.C1807), backgroundColor: button_style.ButtonStyle._lerpProperties(ColorL(), (t10$0 = a, t10$0 == null ? null : t10$0.backgroundColor), (t10$1 = b, t10$1 == null ? null : t10$1.backgroundColor), t, C1808 || CT.C1808), foregroundColor: button_style.ButtonStyle._lerpProperties(ColorL(), (t10$2 = a, t10$2 == null ? null : t10$2.foregroundColor), (t10$3 = b, t10$3 == null ? null : t10$3.foregroundColor), t, C1808 || CT.C1808), overlayColor: button_style.ButtonStyle._lerpProperties(ColorL(), (t10$4 = a, t10$4 == null ? null : t10$4.overlayColor), (t10$5 = b, t10$5 == null ? null : t10$5.overlayColor), t, C1808 || CT.C1808), shadowColor: button_style.ButtonStyle._lerpProperties(ColorL(), (t10$6 = a, t10$6 == null ? null : t10$6.shadowColor), (t10$7 = b, t10$7 == null ? null : t10$7.shadowColor), t, C1808 || CT.C1808), elevation: button_style.ButtonStyle._lerpProperties(doubleL(), (t10$8 = a, t10$8 == null ? null : t10$8.elevation), (t10$9 = b, t10$9 == null ? null : t10$9.elevation), t, C1809 || CT.C1809), padding: button_style.ButtonStyle._lerpProperties(EdgeInsetsGeometryL(), (t10$10 = a, t10$10 == null ? null : t10$10.padding), (t10$11 = b, t10$11 == null ? null : t10$11.padding), t, C1810 || CT.C1810), minimumSize: button_style.ButtonStyle._lerpProperties(SizeL(), (t10$12 = a, t10$12 == null ? null : t10$12.minimumSize), (t10$13 = b, t10$13 == null ? null : t10$13.minimumSize), t, C1811 || CT.C1811), side: button_style.ButtonStyle._lerpSides((t10$14 = a, t10$14 == null ? null : t10$14.side), (t10$15 = b, t10$15 == null ? null : t10$15.side), t), shape: button_style.ButtonStyle._lerpShapes((t10$16 = a, t10$16 == null ? null : t10$16.shape), (t10$17 = b, t10$17 == null ? null : t10$17.shape), t), mouseCursor: dart.notNull(t) < 0.5 ? a.mouseCursor : b.mouseCursor, visualDensity: dart.notNull(t) < 0.5 ? a.visualDensity : b.visualDensity, tapTargetSize: dart.notNull(t) < 0.5 ? a.tapTargetSize : b.tapTargetSize, animationDuration: dart.notNull(t) < 0.5 ? a.animationDuration : b.animationDuration, enableFeedback: dart.notNull(t) < 0.5 ? a.enableFeedback : b.enableFeedback});
    }
    static _lerpProperties(T, a, b, t, lerpFunction) {
      if (a == null && b == null) return null;
      return new (button_style._LerpProperties$(dart.legacy(T))).new(a, b, t, lerpFunction);
    }
    static _lerpSides(a, b, t) {
      if (a == null && b == null) return null;
      return new button_style._LerpSides.new(a, b, t);
    }
    static _lerpShapes(a, b, t) {
      if (a == null && b == null) return null;
      return new button_style._LerpShapes.new(a, b, t);
    }
  };
  (button_style.ButtonStyle.new = function(opts) {
    let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
    let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let minimumSize = opts && 'minimumSize' in opts ? opts.minimumSize : null;
    let side = opts && 'side' in opts ? opts.side : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    let tapTargetSize = opts && 'tapTargetSize' in opts ? opts.tapTargetSize : null;
    let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
    this[textStyle$5] = textStyle;
    this[backgroundColor$9] = backgroundColor;
    this[foregroundColor$0] = foregroundColor;
    this[overlayColor$0] = overlayColor;
    this[shadowColor$] = shadowColor;
    this[elevation$13] = elevation;
    this[padding$8] = padding;
    this[minimumSize$] = minimumSize;
    this[side$0] = side;
    this[shape$13] = shape;
    this[mouseCursor$6] = mouseCursor;
    this[visualDensity$6] = visualDensity;
    this[tapTargetSize$] = tapTargetSize;
    this[animationDuration$1] = animationDuration;
    this[enableFeedback$2] = enableFeedback;
    ;
  }).prototype = button_style.ButtonStyle.prototype;
  dart.addTypeTests(button_style.ButtonStyle);
  dart.addTypeCaches(button_style.ButtonStyle);
  dart.setMethodSignature(button_style.ButtonStyle, () => ({
    __proto__: dart.getMethods(button_style.ButtonStyle.__proto__),
    copyWith: dart.fnType(dart.legacy(button_style.ButtonStyle), [], {animationDuration: dart.legacy(core.Duration), backgroundColor: dart.legacy(material_state.MaterialStateProperty$(dart.legacy(ui.Color))), elevation: dart.legacy(material_state.MaterialStateProperty$(dart.legacy(core.double))), enableFeedback: dart.legacy(core.bool), foregroundColor: dart.legacy(material_state.MaterialStateProperty$(dart.legacy(ui.Color))), minimumSize: dart.legacy(material_state.MaterialStateProperty$(dart.legacy(ui.Size))), mouseCursor: dart.legacy(material_state.MaterialStateProperty$(dart.legacy(mouse_cursor.MouseCursor))), overlayColor: dart.legacy(material_state.MaterialStateProperty$(dart.legacy(ui.Color))), padding: dart.legacy(material_state.MaterialStateProperty$(dart.legacy(edge_insets.EdgeInsetsGeometry))), shadowColor: dart.legacy(material_state.MaterialStateProperty$(dart.legacy(ui.Color))), shape: dart.legacy(material_state.MaterialStateProperty$(dart.legacy(borders.OutlinedBorder))), side: dart.legacy(material_state.MaterialStateProperty$(dart.legacy(borders.BorderSide))), tapTargetSize: dart.legacy(theme_data.MaterialTapTargetSize), textStyle: dart.legacy(material_state.MaterialStateProperty$(dart.legacy(text_style.TextStyle))), visualDensity: dart.legacy(theme_data.VisualDensity)}, {}),
    merge: dart.fnType(dart.legacy(button_style.ButtonStyle), [dart.legacy(button_style.ButtonStyle)]),
    _equals: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    [$_equals]: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    debugFillProperties: dart.fnType(dart.void, [dart.legacy(diagnostics.DiagnosticPropertiesBuilder)])
  }));
  dart.setGetterSignature(button_style.ButtonStyle, () => ({
    __proto__: dart.getGetters(button_style.ButtonStyle.__proto__),
    hashCode: dart.legacy(core.int),
    [$hashCode]: dart.legacy(core.int)
  }));
  dart.setLibraryUri(button_style.ButtonStyle, L69);
  dart.setFieldSignature(button_style.ButtonStyle, () => ({
    __proto__: dart.getFields(button_style.ButtonStyle.__proto__),
    textStyle: dart.finalFieldType(dart.legacy(material_state.MaterialStateProperty$(dart.legacy(text_style.TextStyle)))),
    backgroundColor: dart.finalFieldType(dart.legacy(material_state.MaterialStateProperty$(dart.legacy(ui.Color)))),
    foregroundColor: dart.finalFieldType(dart.legacy(material_state.MaterialStateProperty$(dart.legacy(ui.Color)))),
    overlayColor: dart.finalFieldType(dart.legacy(material_state.MaterialStateProperty$(dart.legacy(ui.Color)))),
    shadowColor: dart.finalFieldType(dart.legacy(material_state.MaterialStateProperty$(dart.legacy(ui.Color)))),
    elevation: dart.finalFieldType(dart.legacy(material_state.MaterialStateProperty$(dart.legacy(core.double)))),
    padding: dart.finalFieldType(dart.legacy(material_state.MaterialStateProperty$(dart.legacy(edge_insets.EdgeInsetsGeometry)))),
    minimumSize: dart.finalFieldType(dart.legacy(material_state.MaterialStateProperty$(dart.legacy(ui.Size)))),
    side: dart.finalFieldType(dart.legacy(material_state.MaterialStateProperty$(dart.legacy(borders.BorderSide)))),
    shape: dart.finalFieldType(dart.legacy(material_state.MaterialStateProperty$(dart.legacy(borders.OutlinedBorder)))),
    mouseCursor: dart.finalFieldType(dart.legacy(material_state.MaterialStateProperty$(dart.legacy(mouse_cursor.MouseCursor)))),
    visualDensity: dart.finalFieldType(dart.legacy(theme_data.VisualDensity)),
    tapTargetSize: dart.finalFieldType(dart.legacy(theme_data.MaterialTapTargetSize)),
    animationDuration: dart.finalFieldType(dart.legacy(core.Duration)),
    enableFeedback: dart.finalFieldType(dart.legacy(core.bool))
  }));
  dart.defineExtensionMethods(button_style.ButtonStyle, ['_equals']);
  dart.defineExtensionAccessors(button_style.ButtonStyle, ['hashCode']);
  const _is__LerpProperties_default = Symbol('_is__LerpProperties_default');
  var a$ = dart.privateName(button_style, "_LerpProperties.a");
  var b$ = dart.privateName(button_style, "_LerpProperties.b");
  var t$ = dart.privateName(button_style, "_LerpProperties.t");
  var lerpFunction$ = dart.privateName(button_style, "_LerpProperties.lerpFunction");
  button_style._LerpProperties$ = dart.generic(T => {
    class _LerpProperties extends core.Object {
      get a() {
        return this[a$];
      }
      set a(value) {
        super.a = value;
      }
      get b() {
        return this[b$];
      }
      set b(value) {
        super.b = value;
      }
      get t() {
        return this[t$];
      }
      set t(value) {
        super.t = value;
      }
      get lerpFunction() {
        return this[lerpFunction$];
      }
      set lerpFunction(value) {
        super.lerpFunction = value;
      }
      resolve(states) {
        let t10, t10$, t12, t11, t10$0;
        let resolvedA = (t10 = this.a, t10 == null ? null : t10.resolve(states));
        let resolvedB = (t10$ = this.b, t10$ == null ? null : t10$.resolve(states));
        t10$0 = resolvedA;
        t11 = resolvedB;
        t12 = this.t;
        return this.lerpFunction(t10$0, t11, t12);
      }
    }
    (_LerpProperties.new = function(a, b, t, lerpFunction) {
      this[a$] = a;
      this[b$] = b;
      this[t$] = t;
      this[lerpFunction$] = lerpFunction;
      ;
    }).prototype = _LerpProperties.prototype;
    dart.addTypeTests(_LerpProperties);
    _LerpProperties.prototype[_is__LerpProperties_default] = true;
    dart.addTypeCaches(_LerpProperties);
    _LerpProperties[dart.implements] = () => [material_state.MaterialStateProperty$(dart.legacy(T))];
    dart.setMethodSignature(_LerpProperties, () => ({
      __proto__: dart.getMethods(_LerpProperties.__proto__),
      resolve: dart.fnType(dart.legacy(T), [dart.legacy(core.Set$(dart.legacy(material_state.MaterialState)))])
    }));
    dart.setLibraryUri(_LerpProperties, L69);
    dart.setFieldSignature(_LerpProperties, () => ({
      __proto__: dart.getFields(_LerpProperties.__proto__),
      a: dart.finalFieldType(dart.legacy(material_state.MaterialStateProperty$(dart.legacy(T)))),
      b: dart.finalFieldType(dart.legacy(material_state.MaterialStateProperty$(dart.legacy(T)))),
      t: dart.finalFieldType(dart.legacy(core.double)),
      lerpFunction: dart.finalFieldType(dart.legacy(dart.fnType(dart.legacy(T), [dart.legacy(T), dart.legacy(T), dart.legacy(core.double)])))
    }));
    return _LerpProperties;
  });
  button_style._LerpProperties = button_style._LerpProperties$();
  dart.addTypeTests(button_style._LerpProperties, _is__LerpProperties_default);
  var a$0 = dart.privateName(button_style, "_LerpSides.a");
  var b$0 = dart.privateName(button_style, "_LerpSides.b");
  var t$0 = dart.privateName(button_style, "_LerpSides.t");
  button_style._LerpSides = class _LerpSides extends core.Object {
    get a() {
      return this[a$0];
    }
    set a(value) {
      super.a = value;
    }
    get b() {
      return this[b$0];
    }
    set b(value) {
      super.b = value;
    }
    get t() {
      return this[t$0];
    }
    set t(value) {
      super.t = value;
    }
    resolve(states) {
      let t10, t10$;
      let resolvedA = (t10 = this.a, t10 == null ? null : t10.resolve(states));
      let resolvedB = (t10$ = this.b, t10$ == null ? null : t10$.resolve(states));
      if (resolvedA == null && resolvedB == null) return null;
      if (resolvedA == null) return borders.BorderSide.lerp(new borders.BorderSide.new({width: 0.0, color: resolvedB.color.withAlpha(0)}), resolvedB, this.t);
      if (resolvedB == null) return borders.BorderSide.lerp(new borders.BorderSide.new({width: 0.0, color: resolvedA.color.withAlpha(0)}), resolvedA, this.t);
      return borders.BorderSide.lerp(resolvedA, resolvedB, this.t);
    }
  };
  (button_style._LerpSides.new = function(a, b, t) {
    this[a$0] = a;
    this[b$0] = b;
    this[t$0] = t;
    ;
  }).prototype = button_style._LerpSides.prototype;
  dart.addTypeTests(button_style._LerpSides);
  dart.addTypeCaches(button_style._LerpSides);
  button_style._LerpSides[dart.implements] = () => [material_state.MaterialStateProperty$(dart.legacy(borders.BorderSide))];
  dart.setMethodSignature(button_style._LerpSides, () => ({
    __proto__: dart.getMethods(button_style._LerpSides.__proto__),
    resolve: dart.fnType(dart.legacy(borders.BorderSide), [dart.legacy(core.Set$(dart.legacy(material_state.MaterialState)))])
  }));
  dart.setLibraryUri(button_style._LerpSides, L69);
  dart.setFieldSignature(button_style._LerpSides, () => ({
    __proto__: dart.getFields(button_style._LerpSides.__proto__),
    a: dart.finalFieldType(dart.legacy(material_state.MaterialStateProperty$(dart.legacy(borders.BorderSide)))),
    b: dart.finalFieldType(dart.legacy(material_state.MaterialStateProperty$(dart.legacy(borders.BorderSide)))),
    t: dart.finalFieldType(dart.legacy(core.double))
  }));
  var a$1 = dart.privateName(button_style, "_LerpShapes.a");
  var b$1 = dart.privateName(button_style, "_LerpShapes.b");
  var t$1 = dart.privateName(button_style, "_LerpShapes.t");
  button_style._LerpShapes = class _LerpShapes extends core.Object {
    get a() {
      return this[a$1];
    }
    set a(value) {
      super.a = value;
    }
    get b() {
      return this[b$1];
    }
    set b(value) {
      super.b = value;
    }
    get t() {
      return this[t$1];
    }
    set t(value) {
      super.t = value;
    }
    resolve(states) {
      let t10, t10$;
      let resolvedA = (t10 = this.a, t10 == null ? null : t10.resolve(states));
      let resolvedB = (t10$ = this.b, t10$ == null ? null : t10$.resolve(states));
      return OutlinedBorderL().as(borders.ShapeBorder.lerp(resolvedA, resolvedB, this.t));
    }
  };
  (button_style._LerpShapes.new = function(a, b, t) {
    this[a$1] = a;
    this[b$1] = b;
    this[t$1] = t;
    ;
  }).prototype = button_style._LerpShapes.prototype;
  dart.addTypeTests(button_style._LerpShapes);
  dart.addTypeCaches(button_style._LerpShapes);
  button_style._LerpShapes[dart.implements] = () => [material_state.MaterialStateProperty$(dart.legacy(borders.OutlinedBorder))];
  dart.setMethodSignature(button_style._LerpShapes, () => ({
    __proto__: dart.getMethods(button_style._LerpShapes.__proto__),
    resolve: dart.fnType(dart.legacy(borders.OutlinedBorder), [dart.legacy(core.Set$(dart.legacy(material_state.MaterialState)))])
  }));
  dart.setLibraryUri(button_style._LerpShapes, L69);
  dart.setFieldSignature(button_style._LerpShapes, () => ({
    __proto__: dart.getFields(button_style._LerpShapes.__proto__),
    a: dart.finalFieldType(dart.legacy(material_state.MaterialStateProperty$(dart.legacy(borders.OutlinedBorder)))),
    b: dart.finalFieldType(dart.legacy(material_state.MaterialStateProperty$(dart.legacy(borders.OutlinedBorder)))),
    t: dart.finalFieldType(dart.legacy(core.double))
  }));
  var style$3 = dart.privateName(elevated_button_theme, "ElevatedButtonThemeData.style");
  const Object_Diagnosticable$36$11 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$11.new = function() {
  }).prototype = Object_Diagnosticable$36$11.prototype;
  dart.applyMixin(Object_Diagnosticable$36$11, diagnostics.Diagnosticable);
  elevated_button_theme.ElevatedButtonThemeData = class ElevatedButtonThemeData extends Object_Diagnosticable$36$11 {
    get style() {
      return this[style$3];
    }
    set style(value) {
      super.style = value;
    }
    static lerp(a, b, t) {
      let t10, t10$;
      if (!(t != null)) dart.assertFailed(null, L70, 51, 13, "t != null");
      if (a == null && b == null) return null;
      return new elevated_button_theme.ElevatedButtonThemeData.new({style: button_style.ButtonStyle.lerp((t10 = a, t10 == null ? null : t10.style), (t10$ = b, t10$ == null ? null : t10$.style), t)});
    }
    get hashCode() {
      return dart.hashCode(this.style);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this.runtimeType)) return false;
      return ElevatedButtonThemeDataL().is(other) && dart.equals(other.style, this.style);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfButtonStyleL()).new("style", this.style, {defaultValue: null}));
    }
  };
  (elevated_button_theme.ElevatedButtonThemeData.new = function(opts) {
    let style = opts && 'style' in opts ? opts.style : null;
    this[style$3] = style;
    ;
  }).prototype = elevated_button_theme.ElevatedButtonThemeData.prototype;
  dart.addTypeTests(elevated_button_theme.ElevatedButtonThemeData);
  dart.addTypeCaches(elevated_button_theme.ElevatedButtonThemeData);
  dart.setMethodSignature(elevated_button_theme.ElevatedButtonThemeData, () => ({
    __proto__: dart.getMethods(elevated_button_theme.ElevatedButtonThemeData.__proto__),
    _equals: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    [$_equals]: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    debugFillProperties: dart.fnType(dart.void, [dart.legacy(diagnostics.DiagnosticPropertiesBuilder)])
  }));
  dart.setGetterSignature(elevated_button_theme.ElevatedButtonThemeData, () => ({
    __proto__: dart.getGetters(elevated_button_theme.ElevatedButtonThemeData.__proto__),
    hashCode: dart.legacy(core.int),
    [$hashCode]: dart.legacy(core.int)
  }));
  dart.setLibraryUri(elevated_button_theme.ElevatedButtonThemeData, L71);
  dart.setFieldSignature(elevated_button_theme.ElevatedButtonThemeData, () => ({
    __proto__: dart.getFields(elevated_button_theme.ElevatedButtonThemeData.__proto__),
    style: dart.finalFieldType(dart.legacy(button_style.ButtonStyle))
  }));
  dart.defineExtensionMethods(elevated_button_theme.ElevatedButtonThemeData, ['_equals']);
  dart.defineExtensionAccessors(elevated_button_theme.ElevatedButtonThemeData, ['hashCode']);
  var C1812;
  var data$7 = dart.privateName(elevated_button_theme, "ElevatedButtonTheme.data");
  elevated_button_theme.ElevatedButtonTheme = class ElevatedButtonTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[data$7];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t10, t10$;
      let buttonTheme = context.dependOnInheritedWidgetOfExactType(ElevatedButtonThemeL());
      t10$ = (t10 = buttonTheme, t10 == null ? null : t10.data);
      return t10$ == null ? theme$.Theme.of(context).elevatedButtonTheme : t10$;
    }
    wrap(context, child) {
      let ancestorTheme = context.findAncestorWidgetOfExactType(ElevatedButtonThemeL());
      return this === ancestorTheme ? child : new elevated_button_theme.ElevatedButtonTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C1812 || CT.C1812});
    }
    updateShouldNotify(oldWidget) {
      ElevatedButtonThemeL().as(oldWidget);
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (elevated_button_theme.ElevatedButtonTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[data$7] = data;
    if (!(data != null)) dart.assertFailed(null, L70, 99, 15, "data != null");
    elevated_button_theme.ElevatedButtonTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = elevated_button_theme.ElevatedButtonTheme.prototype;
  dart.addTypeTests(elevated_button_theme.ElevatedButtonTheme);
  dart.addTypeCaches(elevated_button_theme.ElevatedButtonTheme);
  dart.setMethodSignature(elevated_button_theme.ElevatedButtonTheme, () => ({
    __proto__: dart.getMethods(elevated_button_theme.ElevatedButtonTheme.__proto__),
    wrap: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext), dart.legacy(framework.Widget)]),
    updateShouldNotify: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)])
  }));
  dart.setLibraryUri(elevated_button_theme.ElevatedButtonTheme, L71);
  dart.setFieldSignature(elevated_button_theme.ElevatedButtonTheme, () => ({
    __proto__: dart.getFields(elevated_button_theme.ElevatedButtonTheme.__proto__),
    data: dart.finalFieldType(dart.legacy(elevated_button_theme.ElevatedButtonThemeData))
  }));
  elevated_button_theme.ContainedButtonThemeData = class ContainedButtonThemeData extends elevated_button_theme.ElevatedButtonThemeData {
    static lerp(a, b, t) {
      return ContainedButtonThemeDataL().as(elevated_button_theme.ElevatedButtonThemeData.lerp(a, b, t));
    }
  };
  (elevated_button_theme.ContainedButtonThemeData.new = function(opts) {
    let style = opts && 'style' in opts ? opts.style : null;
    elevated_button_theme.ContainedButtonThemeData.__proto__.new.call(this, {style: style});
    ;
  }).prototype = elevated_button_theme.ContainedButtonThemeData.prototype;
  dart.addTypeTests(elevated_button_theme.ContainedButtonThemeData);
  dart.addTypeCaches(elevated_button_theme.ContainedButtonThemeData);
  dart.setLibraryUri(elevated_button_theme.ContainedButtonThemeData, L71);
  elevated_button_theme.ContainedButtonTheme = class ContainedButtonTheme extends elevated_button_theme.ElevatedButtonTheme {};
  (elevated_button_theme.ContainedButtonTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    if (!(data != null)) dart.assertFailed(null, L70, 159, 15, "data != null");
    elevated_button_theme.ContainedButtonTheme.__proto__.new.call(this, {key: key, data: data, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = elevated_button_theme.ContainedButtonTheme.prototype;
  dart.addTypeTests(elevated_button_theme.ContainedButtonTheme);
  dart.addTypeCaches(elevated_button_theme.ContainedButtonTheme);
  dart.setLibraryUri(elevated_button_theme.ContainedButtonTheme, L71);
  var color$9 = dart.privateName(divider_theme, "DividerThemeData.color");
  var space$ = dart.privateName(divider_theme, "DividerThemeData.space");
  var thickness$1 = dart.privateName(divider_theme, "DividerThemeData.thickness");
  var indent$1 = dart.privateName(divider_theme, "DividerThemeData.indent");
  var endIndent$1 = dart.privateName(divider_theme, "DividerThemeData.endIndent");
  const Object_Diagnosticable$36$12 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$12.new = function() {
  }).prototype = Object_Diagnosticable$36$12.prototype;
  dart.applyMixin(Object_Diagnosticable$36$12, diagnostics.Diagnosticable);
  divider_theme.DividerThemeData = class DividerThemeData extends Object_Diagnosticable$36$12 {
    get color() {
      return this[color$9];
    }
    set color(value) {
      super.color = value;
    }
    get space() {
      return this[space$];
    }
    set space(value) {
      super.space = value;
    }
    get thickness() {
      return this[thickness$1];
    }
    set thickness(value) {
      super.thickness = value;
    }
    get indent() {
      return this[indent$1];
    }
    set indent(value) {
      super.indent = value;
    }
    get endIndent() {
      return this[endIndent$1];
    }
    set endIndent(value) {
      super.endIndent = value;
    }
    copyWith(opts) {
      let t10, t10$, t10$0, t10$1, t10$2;
      let color = opts && 'color' in opts ? opts.color : null;
      let space = opts && 'space' in opts ? opts.space : null;
      let thickness = opts && 'thickness' in opts ? opts.thickness : null;
      let indent = opts && 'indent' in opts ? opts.indent : null;
      let endIndent = opts && 'endIndent' in opts ? opts.endIndent : null;
      return new divider_theme.DividerThemeData.new({color: (t10 = color, t10 == null ? this.color : t10), space: (t10$ = space, t10$ == null ? this.space : t10$), thickness: (t10$0 = thickness, t10$0 == null ? this.thickness : t10$0), indent: (t10$1 = indent, t10$1 == null ? this.indent : t10$1), endIndent: (t10$2 = endIndent, t10$2 == null ? this.endIndent : t10$2)});
    }
    static lerp(a, b, t) {
      let t10, t10$, t10$0, t10$1, t10$2, t10$3, t10$4, t10$5, t10$6, t10$7;
      if (!(t != null)) dart.assertFailed(null, L72, 89, 12, "t != null");
      return new divider_theme.DividerThemeData.new({color: ui.Color.lerp((t10 = a, t10 == null ? null : t10.color), (t10$ = b, t10$ == null ? null : t10$.color), t), space: ui.lerpDouble((t10$0 = a, t10$0 == null ? null : t10$0.space), (t10$1 = b, t10$1 == null ? null : t10$1.space), t), thickness: ui.lerpDouble((t10$2 = a, t10$2 == null ? null : t10$2.thickness), (t10$3 = b, t10$3 == null ? null : t10$3.thickness), t), indent: ui.lerpDouble((t10$4 = a, t10$4 == null ? null : t10$4.indent), (t10$5 = b, t10$5 == null ? null : t10$5.indent), t), endIndent: ui.lerpDouble((t10$6 = a, t10$6 == null ? null : t10$6.endIndent), (t10$7 = b, t10$7 == null ? null : t10$7.endIndent), t)});
    }
    get hashCode() {
      return ui.hashValues(this.color, this.space, this.thickness, this.indent, this.endIndent);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this.runtimeType)) return false;
      return DividerThemeDataL().is(other) && dart.equals(other.color, this.color) && other.space == this.space && other.thickness == this.thickness && other.indent == this.indent && other.endIndent == this.endIndent;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("space", this.space, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("thickness", this.thickness, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("indent", this.indent, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("endIndent", this.endIndent, {defaultValue: null}));
    }
  };
  (divider_theme.DividerThemeData.new = function(opts) {
    let color = opts && 'color' in opts ? opts.color : null;
    let space = opts && 'space' in opts ? opts.space : null;
    let thickness = opts && 'thickness' in opts ? opts.thickness : null;
    let indent = opts && 'indent' in opts ? opts.indent : null;
    let endIndent = opts && 'endIndent' in opts ? opts.endIndent : null;
    this[color$9] = color;
    this[space$] = space;
    this[thickness$1] = thickness;
    this[indent$1] = indent;
    this[endIndent$1] = endIndent;
    ;
  }).prototype = divider_theme.DividerThemeData.prototype;
  dart.addTypeTests(divider_theme.DividerThemeData);
  dart.addTypeCaches(divider_theme.DividerThemeData);
  dart.setMethodSignature(divider_theme.DividerThemeData, () => ({
    __proto__: dart.getMethods(divider_theme.DividerThemeData.__proto__),
    copyWith: dart.fnType(dart.legacy(divider_theme.DividerThemeData), [], {color: dart.legacy(ui.Color), endIndent: dart.legacy(core.double), indent: dart.legacy(core.double), space: dart.legacy(core.double), thickness: dart.legacy(core.double)}, {}),
    _equals: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    [$_equals]: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    debugFillProperties: dart.fnType(dart.void, [dart.legacy(diagnostics.DiagnosticPropertiesBuilder)])
  }));
  dart.setGetterSignature(divider_theme.DividerThemeData, () => ({
    __proto__: dart.getGetters(divider_theme.DividerThemeData.__proto__),
    hashCode: dart.legacy(core.int),
    [$hashCode]: dart.legacy(core.int)
  }));
  dart.setLibraryUri(divider_theme.DividerThemeData, L73);
  dart.setFieldSignature(divider_theme.DividerThemeData, () => ({
    __proto__: dart.getFields(divider_theme.DividerThemeData.__proto__),
    color: dart.finalFieldType(dart.legacy(ui.Color)),
    space: dart.finalFieldType(dart.legacy(core.double)),
    thickness: dart.finalFieldType(dart.legacy(core.double)),
    indent: dart.finalFieldType(dart.legacy(core.double)),
    endIndent: dart.finalFieldType(dart.legacy(core.double))
  }));
  dart.defineExtensionMethods(divider_theme.DividerThemeData, ['_equals']);
  dart.defineExtensionAccessors(divider_theme.DividerThemeData, ['hashCode']);
  var C1815;
  var C1816;
  var C1814;
  var C1813;
  var data$8 = dart.privateName(divider_theme, "DividerTheme.data");
  divider_theme.DividerTheme = class DividerTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[data$8];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t10, t10$;
      let dividerTheme = context.dependOnInheritedWidgetOfExactType(DividerThemeL());
      t10$ = (t10 = dividerTheme, t10 == null ? null : t10.data);
      return t10$ == null ? theme$.Theme.of(context).dividerTheme : t10$;
    }
    wrap(context, child) {
      let ancestorTheme = context.findAncestorWidgetOfExactType(DividerThemeL());
      return this === ancestorTheme ? child : new divider_theme.DividerTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C1813 || CT.C1813});
    }
    updateShouldNotify(oldWidget) {
      DividerThemeL().as(oldWidget);
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (divider_theme.DividerTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[data$8] = data;
    if (!(data != null)) dart.assertFailed(null, L72, 146, 15, "data != null");
    divider_theme.DividerTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = divider_theme.DividerTheme.prototype;
  dart.addTypeTests(divider_theme.DividerTheme);
  dart.addTypeCaches(divider_theme.DividerTheme);
  dart.setMethodSignature(divider_theme.DividerTheme, () => ({
    __proto__: dart.getMethods(divider_theme.DividerTheme.__proto__),
    wrap: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext), dart.legacy(framework.Widget)]),
    updateShouldNotify: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)])
  }));
  dart.setLibraryUri(divider_theme.DividerTheme, L73);
  dart.setFieldSignature(divider_theme.DividerTheme, () => ({
    __proto__: dart.getFields(divider_theme.DividerTheme.__proto__),
    data: dart.finalFieldType(dart.legacy(divider_theme.DividerThemeData))
  }));
  var backgroundColor$10 = dart.privateName(dialog_theme, "DialogTheme.backgroundColor");
  var elevation$14 = dart.privateName(dialog_theme, "DialogTheme.elevation");
  var shape$14 = dart.privateName(dialog_theme, "DialogTheme.shape");
  var titleTextStyle$1 = dart.privateName(dialog_theme, "DialogTheme.titleTextStyle");
  var contentTextStyle$1 = dart.privateName(dialog_theme, "DialogTheme.contentTextStyle");
  const Object_Diagnosticable$36$13 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$13.new = function() {
  }).prototype = Object_Diagnosticable$36$13.prototype;
  dart.applyMixin(Object_Diagnosticable$36$13, diagnostics.Diagnosticable);
  dialog_theme.DialogTheme = class DialogTheme extends Object_Diagnosticable$36$13 {
    get backgroundColor() {
      return this[backgroundColor$10];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get elevation() {
      return this[elevation$14];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get shape() {
      return this[shape$14];
    }
    set shape(value) {
      super.shape = value;
    }
    get titleTextStyle() {
      return this[titleTextStyle$1];
    }
    set titleTextStyle(value) {
      super.titleTextStyle = value;
    }
    get contentTextStyle() {
      return this[contentTextStyle$1];
    }
    set contentTextStyle(value) {
      super.contentTextStyle = value;
    }
    copyWith(opts) {
      let t10, t10$, t10$0, t10$1, t10$2;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let titleTextStyle = opts && 'titleTextStyle' in opts ? opts.titleTextStyle : null;
      let contentTextStyle = opts && 'contentTextStyle' in opts ? opts.contentTextStyle : null;
      return new dialog_theme.DialogTheme.new({backgroundColor: (t10 = backgroundColor, t10 == null ? this.backgroundColor : t10), elevation: (t10$ = elevation, t10$ == null ? this.elevation : t10$), shape: (t10$0 = shape, t10$0 == null ? this.shape : t10$0), titleTextStyle: (t10$1 = titleTextStyle, t10$1 == null ? this.titleTextStyle : t10$1), contentTextStyle: (t10$2 = contentTextStyle, t10$2 == null ? this.contentTextStyle : t10$2)});
    }
    static of(context) {
      return theme$.Theme.of(context).dialogTheme;
    }
    static lerp(a, b, t) {
      let t10, t10$, t10$0, t10$1, t10$2, t10$3, t10$4, t10$5, t10$6, t10$7;
      if (!(t != null)) dart.assertFailed(null, L74, 96, 12, "t != null");
      return new dialog_theme.DialogTheme.new({backgroundColor: ui.Color.lerp((t10 = a, t10 == null ? null : t10.backgroundColor), (t10$ = b, t10$ == null ? null : t10$.backgroundColor), t), elevation: ui.lerpDouble((t10$0 = a, t10$0 == null ? null : t10$0.elevation), (t10$1 = b, t10$1 == null ? null : t10$1.elevation), t), shape: borders.ShapeBorder.lerp((t10$2 = a, t10$2 == null ? null : t10$2.shape), (t10$3 = b, t10$3 == null ? null : t10$3.shape), t), titleTextStyle: text_style.TextStyle.lerp((t10$4 = a, t10$4 == null ? null : t10$4.titleTextStyle), (t10$5 = b, t10$5 == null ? null : t10$5.titleTextStyle), t), contentTextStyle: text_style.TextStyle.lerp((t10$6 = a, t10$6 == null ? null : t10$6.contentTextStyle), (t10$7 = b, t10$7 == null ? null : t10$7.contentTextStyle), t)});
    }
    get hashCode() {
      return dart.hashCode(this.shape);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this.runtimeType)) return false;
      return DialogThemeL().is(other) && dart.equals(other.backgroundColor, this.backgroundColor) && other.elevation == this.elevation && dart.equals(other.shape, this.shape) && dart.equals(other.titleTextStyle, this.titleTextStyle) && dart.equals(other.contentTextStyle, this.contentTextStyle);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new colors.ColorProperty.new("backgroundColor", this.backgroundColor));
      properties.add(new (DiagnosticsPropertyOfShapeBorderL()).new("shape", this.shape, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("elevation", this.elevation));
      properties.add(new (DiagnosticsPropertyOfTextStyleL()).new("titleTextStyle", this.titleTextStyle, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfTextStyleL()).new("contentTextStyle", this.contentTextStyle, {defaultValue: null}));
    }
  };
  (dialog_theme.DialogTheme.new = function(opts) {
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let titleTextStyle = opts && 'titleTextStyle' in opts ? opts.titleTextStyle : null;
    let contentTextStyle = opts && 'contentTextStyle' in opts ? opts.contentTextStyle : null;
    this[backgroundColor$10] = backgroundColor;
    this[elevation$14] = elevation;
    this[shape$14] = shape;
    this[titleTextStyle$1] = titleTextStyle;
    this[contentTextStyle$1] = contentTextStyle;
    ;
  }).prototype = dialog_theme.DialogTheme.prototype;
  dart.addTypeTests(dialog_theme.DialogTheme);
  dart.addTypeCaches(dialog_theme.DialogTheme);
  dart.setMethodSignature(dialog_theme.DialogTheme, () => ({
    __proto__: dart.getMethods(dialog_theme.DialogTheme.__proto__),
    copyWith: dart.fnType(dart.legacy(dialog_theme.DialogTheme), [], {backgroundColor: dart.legacy(ui.Color), contentTextStyle: dart.legacy(text_style.TextStyle), elevation: dart.legacy(core.double), shape: dart.legacy(borders.ShapeBorder), titleTextStyle: dart.legacy(text_style.TextStyle)}, {}),
    _equals: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    [$_equals]: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    debugFillProperties: dart.fnType(dart.void, [dart.legacy(diagnostics.DiagnosticPropertiesBuilder)])
  }));
  dart.setGetterSignature(dialog_theme.DialogTheme, () => ({
    __proto__: dart.getGetters(dialog_theme.DialogTheme.__proto__),
    hashCode: dart.legacy(core.int),
    [$hashCode]: dart.legacy(core.int)
  }));
  dart.setLibraryUri(dialog_theme.DialogTheme, L75);
  dart.setFieldSignature(dialog_theme.DialogTheme, () => ({
    __proto__: dart.getFields(dialog_theme.DialogTheme.__proto__),
    backgroundColor: dart.finalFieldType(dart.legacy(ui.Color)),
    elevation: dart.finalFieldType(dart.legacy(core.double)),
    shape: dart.finalFieldType(dart.legacy(borders.ShapeBorder)),
    titleTextStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    contentTextStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle))
  }));
  dart.defineExtensionMethods(dialog_theme.DialogTheme, ['_equals']);
  dart.defineExtensionAccessors(dialog_theme.DialogTheme, ['hashCode']);
  var C1819;
  var C1820;
  var C1818;
  var C1817;
  var data$9 = dart.privateName(chip_theme, "ChipTheme.data");
  chip_theme.ChipTheme = class ChipTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[data$9];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t10, t10$;
      let inheritedTheme = context.dependOnInheritedWidgetOfExactType(ChipThemeL());
      t10$ = (t10 = inheritedTheme, t10 == null ? null : t10.data);
      return t10$ == null ? theme$.Theme.of(context).chipTheme : t10$;
    }
    wrap(context, child) {
      let ancestorTheme = context.findAncestorWidgetOfExactType(ChipThemeL());
      return this === ancestorTheme ? child : new chip_theme.ChipTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C1817 || CT.C1817});
    }
    updateShouldNotify(oldWidget) {
      ChipThemeL().as(oldWidget);
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (chip_theme.ChipTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[data$9] = data;
    if (!(child != null)) dart.assertFailed(null, L76, 53, 15, "child != null");
    if (!(data != null)) dart.assertFailed(null, L76, 54, 15, "data != null");
    chip_theme.ChipTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = chip_theme.ChipTheme.prototype;
  dart.addTypeTests(chip_theme.ChipTheme);
  dart.addTypeCaches(chip_theme.ChipTheme);
  dart.setMethodSignature(chip_theme.ChipTheme, () => ({
    __proto__: dart.getMethods(chip_theme.ChipTheme.__proto__),
    wrap: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext), dart.legacy(framework.Widget)]),
    updateShouldNotify: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)])
  }));
  dart.setLibraryUri(chip_theme.ChipTheme, L77);
  dart.setFieldSignature(chip_theme.ChipTheme, () => ({
    __proto__: dart.getFields(chip_theme.ChipTheme.__proto__),
    data: dart.finalFieldType(dart.legacy(chip_theme.ChipThemeData))
  }));
  var backgroundColor$11 = dart.privateName(chip_theme, "ChipThemeData.backgroundColor");
  var deleteIconColor$ = dart.privateName(chip_theme, "ChipThemeData.deleteIconColor");
  var disabledColor$2 = dart.privateName(chip_theme, "ChipThemeData.disabledColor");
  var selectedColor$2 = dart.privateName(chip_theme, "ChipThemeData.selectedColor");
  var secondarySelectedColor$ = dart.privateName(chip_theme, "ChipThemeData.secondarySelectedColor");
  var shadowColor$0 = dart.privateName(chip_theme, "ChipThemeData.shadowColor");
  var selectedShadowColor$ = dart.privateName(chip_theme, "ChipThemeData.selectedShadowColor");
  var showCheckmark$ = dart.privateName(chip_theme, "ChipThemeData.showCheckmark");
  var checkmarkColor$ = dart.privateName(chip_theme, "ChipThemeData.checkmarkColor");
  var labelPadding$1 = dart.privateName(chip_theme, "ChipThemeData.labelPadding");
  var padding$9 = dart.privateName(chip_theme, "ChipThemeData.padding");
  var shape$15 = dart.privateName(chip_theme, "ChipThemeData.shape");
  var labelStyle$4 = dart.privateName(chip_theme, "ChipThemeData.labelStyle");
  var secondaryLabelStyle$ = dart.privateName(chip_theme, "ChipThemeData.secondaryLabelStyle");
  var brightness$0 = dart.privateName(chip_theme, "ChipThemeData.brightness");
  var elevation$15 = dart.privateName(chip_theme, "ChipThemeData.elevation");
  var pressElevation$ = dart.privateName(chip_theme, "ChipThemeData.pressElevation");
  const Object_Diagnosticable$36$14 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$14.new = function() {
  }).prototype = Object_Diagnosticable$36$14.prototype;
  dart.applyMixin(Object_Diagnosticable$36$14, diagnostics.Diagnosticable);
  chip_theme.ChipThemeData = class ChipThemeData extends Object_Diagnosticable$36$14 {
    get backgroundColor() {
      return this[backgroundColor$11];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get deleteIconColor() {
      return this[deleteIconColor$];
    }
    set deleteIconColor(value) {
      super.deleteIconColor = value;
    }
    get disabledColor() {
      return this[disabledColor$2];
    }
    set disabledColor(value) {
      super.disabledColor = value;
    }
    get selectedColor() {
      return this[selectedColor$2];
    }
    set selectedColor(value) {
      super.selectedColor = value;
    }
    get secondarySelectedColor() {
      return this[secondarySelectedColor$];
    }
    set secondarySelectedColor(value) {
      super.secondarySelectedColor = value;
    }
    get shadowColor() {
      return this[shadowColor$0];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    get selectedShadowColor() {
      return this[selectedShadowColor$];
    }
    set selectedShadowColor(value) {
      super.selectedShadowColor = value;
    }
    get showCheckmark() {
      return this[showCheckmark$];
    }
    set showCheckmark(value) {
      super.showCheckmark = value;
    }
    get checkmarkColor() {
      return this[checkmarkColor$];
    }
    set checkmarkColor(value) {
      super.checkmarkColor = value;
    }
    get labelPadding() {
      return this[labelPadding$1];
    }
    set labelPadding(value) {
      super.labelPadding = value;
    }
    get padding() {
      return this[padding$9];
    }
    set padding(value) {
      super.padding = value;
    }
    get shape() {
      return this[shape$15];
    }
    set shape(value) {
      super.shape = value;
    }
    get labelStyle() {
      return this[labelStyle$4];
    }
    set labelStyle(value) {
      super.labelStyle = value;
    }
    get secondaryLabelStyle() {
      return this[secondaryLabelStyle$];
    }
    set secondaryLabelStyle(value) {
      super.secondaryLabelStyle = value;
    }
    get brightness() {
      return this[brightness$0];
    }
    set brightness(value) {
      super.brightness = value;
    }
    get elevation() {
      return this[elevation$15];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get pressElevation() {
      return this[pressElevation$];
    }
    set pressElevation(value) {
      super.pressElevation = value;
    }
    static fromDefaults(opts) {
      let t10;
      let brightness = opts && 'brightness' in opts ? opts.brightness : null;
      let primaryColor = opts && 'primaryColor' in opts ? opts.primaryColor : null;
      let secondaryColor = opts && 'secondaryColor' in opts ? opts.secondaryColor : null;
      let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
      if (!(primaryColor != null || brightness != null)) dart.assertFailed("One of primaryColor or brightness must be specified", L76, 232, 12, "primaryColor != null || brightness != null");
      if (!(primaryColor == null || brightness == null)) dart.assertFailed("Only one of primaryColor or brightness may be specified", L76, 234, 12, "primaryColor == null || brightness == null");
      if (!(secondaryColor != null)) dart.assertFailed(null, L76, 236, 12, "secondaryColor != null");
      if (!(labelStyle != null)) dart.assertFailed(null, L76, 237, 12, "labelStyle != null");
      if (primaryColor != null) {
        brightness = theme_data.ThemeData.estimateBrightnessForColor(primaryColor);
      }
      let shape = C385 || CT.C385;
      let padding = C1218 || CT.C1218;
      primaryColor = (t10 = primaryColor, t10 == null ? dart.equals(brightness, ui.Brightness.light) ? colors$.Colors.black : colors$.Colors.white : t10);
      let backgroundColor = primaryColor.withAlpha(31);
      let deleteIconColor = primaryColor.withAlpha(222);
      let disabledColor = primaryColor.withAlpha(12);
      let selectedColor = primaryColor.withAlpha(61);
      let secondarySelectedColor = secondaryColor.withAlpha(61);
      let secondaryLabelStyle = labelStyle.copyWith({color: secondaryColor.withAlpha(222)});
      labelStyle = labelStyle.copyWith({color: primaryColor.withAlpha(222)});
      return new chip_theme.ChipThemeData.new({backgroundColor: backgroundColor, deleteIconColor: deleteIconColor, disabledColor: disabledColor, selectedColor: selectedColor, secondarySelectedColor: secondarySelectedColor, padding: padding, shape: shape, labelStyle: labelStyle, secondaryLabelStyle: secondaryLabelStyle, brightness: brightness});
    }
    copyWith(opts) {
      let t10, t10$, t10$0, t10$1, t10$2, t10$3, t10$4, t10$5, t10$6, t10$7, t10$8, t10$9, t10$10, t10$11, t10$12, t10$13;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let deleteIconColor = opts && 'deleteIconColor' in opts ? opts.deleteIconColor : null;
      let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
      let selectedColor = opts && 'selectedColor' in opts ? opts.selectedColor : null;
      let secondarySelectedColor = opts && 'secondarySelectedColor' in opts ? opts.secondarySelectedColor : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let selectedShadowColor = opts && 'selectedShadowColor' in opts ? opts.selectedShadowColor : null;
      let checkmarkColor = opts && 'checkmarkColor' in opts ? opts.checkmarkColor : null;
      let labelPadding = opts && 'labelPadding' in opts ? opts.labelPadding : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
      let secondaryLabelStyle = opts && 'secondaryLabelStyle' in opts ? opts.secondaryLabelStyle : null;
      let brightness = opts && 'brightness' in opts ? opts.brightness : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let pressElevation = opts && 'pressElevation' in opts ? opts.pressElevation : null;
      return new chip_theme.ChipThemeData.new({backgroundColor: (t10 = backgroundColor, t10 == null ? this.backgroundColor : t10), deleteIconColor: (t10$ = deleteIconColor, t10$ == null ? this.deleteIconColor : t10$), disabledColor: (t10$0 = disabledColor, t10$0 == null ? this.disabledColor : t10$0), selectedColor: (t10$1 = selectedColor, t10$1 == null ? this.selectedColor : t10$1), secondarySelectedColor: (t10$2 = secondarySelectedColor, t10$2 == null ? this.secondarySelectedColor : t10$2), shadowColor: (t10$3 = shadowColor, t10$3 == null ? this.shadowColor : t10$3), selectedShadowColor: (t10$4 = selectedShadowColor, t10$4 == null ? this.selectedShadowColor : t10$4), checkmarkColor: (t10$5 = checkmarkColor, t10$5 == null ? this.checkmarkColor : t10$5), labelPadding: (t10$6 = labelPadding, t10$6 == null ? this.labelPadding : t10$6), padding: (t10$7 = padding, t10$7 == null ? this.padding : t10$7), shape: (t10$8 = shape, t10$8 == null ? this.shape : t10$8), labelStyle: (t10$9 = labelStyle, t10$9 == null ? this.labelStyle : t10$9), secondaryLabelStyle: (t10$10 = secondaryLabelStyle, t10$10 == null ? this.secondaryLabelStyle : t10$10), brightness: (t10$11 = brightness, t10$11 == null ? this.brightness : t10$11), elevation: (t10$12 = elevation, t10$12 == null ? this.elevation : t10$12), pressElevation: (t10$13 = pressElevation, t10$13 == null ? this.pressElevation : t10$13)});
    }
    static lerp(a, b, t) {
      let t10, t10$, t10$0, t10$1, t10$2, t10$3, t10$4, t10$5, t10$6, t10$7, t10$8, t10$9, t10$10, t10$11, t10$12, t10$13, t10$14, t10$15, t10$16, t10$17, t10$18, t10$19, t10$20, t10$21, t10$22, t10$23, t10$24, t10$25, t10$26, t10$27, t10$28, t10$29, t10$30, t10$31;
      if (!(t != null)) dart.assertFailed(null, L76, 434, 12, "t != null");
      if (a == null && b == null) return null;
      return new chip_theme.ChipThemeData.new({backgroundColor: ui.Color.lerp((t10 = a, t10 == null ? null : t10.backgroundColor), (t10$ = b, t10$ == null ? null : t10$.backgroundColor), t), deleteIconColor: ui.Color.lerp((t10$0 = a, t10$0 == null ? null : t10$0.deleteIconColor), (t10$1 = b, t10$1 == null ? null : t10$1.deleteIconColor), t), disabledColor: ui.Color.lerp((t10$2 = a, t10$2 == null ? null : t10$2.disabledColor), (t10$3 = b, t10$3 == null ? null : t10$3.disabledColor), t), selectedColor: ui.Color.lerp((t10$4 = a, t10$4 == null ? null : t10$4.selectedColor), (t10$5 = b, t10$5 == null ? null : t10$5.selectedColor), t), secondarySelectedColor: ui.Color.lerp((t10$6 = a, t10$6 == null ? null : t10$6.secondarySelectedColor), (t10$7 = b, t10$7 == null ? null : t10$7.secondarySelectedColor), t), shadowColor: ui.Color.lerp((t10$8 = a, t10$8 == null ? null : t10$8.shadowColor), (t10$9 = b, t10$9 == null ? null : t10$9.shadowColor), t), selectedShadowColor: ui.Color.lerp((t10$10 = a, t10$10 == null ? null : t10$10.selectedShadowColor), (t10$11 = b, t10$11 == null ? null : t10$11.selectedShadowColor), t), checkmarkColor: ui.Color.lerp((t10$12 = a, t10$12 == null ? null : t10$12.checkmarkColor), (t10$13 = b, t10$13 == null ? null : t10$13.checkmarkColor), t), labelPadding: edge_insets.EdgeInsetsGeometry.lerp((t10$14 = a, t10$14 == null ? null : t10$14.labelPadding), (t10$15 = b, t10$15 == null ? null : t10$15.labelPadding), t), padding: edge_insets.EdgeInsetsGeometry.lerp((t10$16 = a, t10$16 == null ? null : t10$16.padding), (t10$17 = b, t10$17 == null ? null : t10$17.padding), t), shape: borders.ShapeBorder.lerp((t10$18 = a, t10$18 == null ? null : t10$18.shape), (t10$19 = b, t10$19 == null ? null : t10$19.shape), t), labelStyle: text_style.TextStyle.lerp((t10$20 = a, t10$20 == null ? null : t10$20.labelStyle), (t10$21 = b, t10$21 == null ? null : t10$21.labelStyle), t), secondaryLabelStyle: text_style.TextStyle.lerp((t10$22 = a, t10$22 == null ? null : t10$22.secondaryLabelStyle), (t10$23 = b, t10$23 == null ? null : t10$23.secondaryLabelStyle), t), brightness: dart.notNull(t) < 0.5 ? (t10$25 = (t10$24 = a, t10$24 == null ? null : t10$24.brightness), t10$25 == null ? ui.Brightness.light : t10$25) : (t10$27 = (t10$26 = b, t10$26 == null ? null : t10$26.brightness), t10$27 == null ? ui.Brightness.light : t10$27), elevation: ui.lerpDouble((t10$28 = a, t10$28 == null ? null : t10$28.elevation), (t10$29 = b, t10$29 == null ? null : t10$29.elevation), t), pressElevation: ui.lerpDouble((t10$30 = a, t10$30 == null ? null : t10$30.pressElevation), (t10$31 = b, t10$31 == null ? null : t10$31.pressElevation), t)});
    }
    get hashCode() {
      return ui.hashValues(this.backgroundColor, this.deleteIconColor, this.disabledColor, this.selectedColor, this.secondarySelectedColor, this.shadowColor, this.selectedShadowColor, this.checkmarkColor, this.labelPadding, this.padding, this.shape, this.labelStyle, this.secondaryLabelStyle, this.brightness, this.elevation, this.pressElevation);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!dart.equals(dart.runtimeType(other), this.runtimeType)) {
        return false;
      }
      return ChipThemeDataL().is(other) && dart.equals(other.backgroundColor, this.backgroundColor) && dart.equals(other.deleteIconColor, this.deleteIconColor) && dart.equals(other.disabledColor, this.disabledColor) && dart.equals(other.selectedColor, this.selectedColor) && dart.equals(other.secondarySelectedColor, this.secondarySelectedColor) && dart.equals(other.shadowColor, this.shadowColor) && dart.equals(other.selectedShadowColor, this.selectedShadowColor) && dart.equals(other.checkmarkColor, this.checkmarkColor) && dart.equals(other.labelPadding, this.labelPadding) && dart.equals(other.padding, this.padding) && dart.equals(other.shape, this.shape) && dart.equals(other.labelStyle, this.labelStyle) && dart.equals(other.secondaryLabelStyle, this.secondaryLabelStyle) && dart.equals(other.brightness, this.brightness) && other.elevation == this.elevation && other.pressElevation == this.pressElevation;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      let defaultTheme = theme_data.ThemeData.fallback();
      let defaultData = chip_theme.ChipThemeData.fromDefaults({secondaryColor: defaultTheme.primaryColor, brightness: defaultTheme.brightness, labelStyle: defaultTheme.textTheme.bodyText1});
      properties.add(new colors.ColorProperty.new("backgroundColor", this.backgroundColor, {defaultValue: defaultData.backgroundColor}));
      properties.add(new colors.ColorProperty.new("deleteIconColor", this.deleteIconColor, {defaultValue: defaultData.deleteIconColor}));
      properties.add(new colors.ColorProperty.new("disabledColor", this.disabledColor, {defaultValue: defaultData.disabledColor}));
      properties.add(new colors.ColorProperty.new("selectedColor", this.selectedColor, {defaultValue: defaultData.selectedColor}));
      properties.add(new colors.ColorProperty.new("secondarySelectedColor", this.secondarySelectedColor, {defaultValue: defaultData.secondarySelectedColor}));
      properties.add(new colors.ColorProperty.new("shadowColor", this.shadowColor, {defaultValue: defaultData.shadowColor}));
      properties.add(new colors.ColorProperty.new("selectedShadowColor", this.selectedShadowColor, {defaultValue: defaultData.selectedShadowColor}));
      properties.add(new colors.ColorProperty.new("checkMarkColor", this.checkmarkColor, {defaultValue: defaultData.checkmarkColor}));
      properties.add(new (DiagnosticsPropertyOfEdgeInsetsGeometryL()).new("labelPadding", this.labelPadding, {defaultValue: defaultData.labelPadding}));
      properties.add(new (DiagnosticsPropertyOfEdgeInsetsGeometryL()).new("padding", this.padding, {defaultValue: defaultData.padding}));
      properties.add(new (DiagnosticsPropertyOfShapeBorderL()).new("shape", this.shape, {defaultValue: defaultData.shape}));
      properties.add(new (DiagnosticsPropertyOfTextStyleL()).new("labelStyle", this.labelStyle, {defaultValue: defaultData.labelStyle}));
      properties.add(new (DiagnosticsPropertyOfTextStyleL()).new("secondaryLabelStyle", this.secondaryLabelStyle, {defaultValue: defaultData.secondaryLabelStyle}));
      properties.add(new (EnumPropertyOfBrightnessL()).new("brightness", this.brightness, {defaultValue: defaultData.brightness}));
      properties.add(new diagnostics.DoubleProperty.new("elevation", this.elevation, {defaultValue: defaultData.elevation}));
      properties.add(new diagnostics.DoubleProperty.new("pressElevation", this.pressElevation, {defaultValue: defaultData.pressElevation}));
    }
  };
  (chip_theme.ChipThemeData.new = function(opts) {
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let deleteIconColor = opts && 'deleteIconColor' in opts ? opts.deleteIconColor : null;
    let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
    let selectedColor = opts && 'selectedColor' in opts ? opts.selectedColor : null;
    let secondarySelectedColor = opts && 'secondarySelectedColor' in opts ? opts.secondarySelectedColor : null;
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
    let selectedShadowColor = opts && 'selectedShadowColor' in opts ? opts.selectedShadowColor : null;
    let showCheckmark = opts && 'showCheckmark' in opts ? opts.showCheckmark : null;
    let checkmarkColor = opts && 'checkmarkColor' in opts ? opts.checkmarkColor : null;
    let labelPadding = opts && 'labelPadding' in opts ? opts.labelPadding : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
    let secondaryLabelStyle = opts && 'secondaryLabelStyle' in opts ? opts.secondaryLabelStyle : null;
    let brightness = opts && 'brightness' in opts ? opts.brightness : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let pressElevation = opts && 'pressElevation' in opts ? opts.pressElevation : null;
    this[backgroundColor$11] = backgroundColor;
    this[deleteIconColor$] = deleteIconColor;
    this[disabledColor$2] = disabledColor;
    this[selectedColor$2] = selectedColor;
    this[secondarySelectedColor$] = secondarySelectedColor;
    this[shadowColor$0] = shadowColor;
    this[selectedShadowColor$] = selectedShadowColor;
    this[showCheckmark$] = showCheckmark;
    this[checkmarkColor$] = checkmarkColor;
    this[labelPadding$1] = labelPadding;
    this[padding$9] = padding;
    this[shape$15] = shape;
    this[labelStyle$4] = labelStyle;
    this[secondaryLabelStyle$] = secondaryLabelStyle;
    this[brightness$0] = brightness;
    this[elevation$15] = elevation;
    this[pressElevation$] = pressElevation;
    if (!(backgroundColor != null)) dart.assertFailed(null, L76, 199, 15, "backgroundColor != null");
    if (!(disabledColor != null)) dart.assertFailed(null, L76, 200, 15, "disabledColor != null");
    if (!(selectedColor != null)) dart.assertFailed(null, L76, 201, 15, "selectedColor != null");
    if (!(secondarySelectedColor != null)) dart.assertFailed(null, L76, 202, 15, "secondarySelectedColor != null");
    if (!(padding != null)) dart.assertFailed(null, L76, 203, 15, "padding != null");
    if (!(shape != null)) dart.assertFailed(null, L76, 204, 15, "shape != null");
    if (!(labelStyle != null)) dart.assertFailed(null, L76, 205, 15, "labelStyle != null");
    if (!(secondaryLabelStyle != null)) dart.assertFailed(null, L76, 206, 15, "secondaryLabelStyle != null");
    if (!(brightness != null)) dart.assertFailed(null, L76, 207, 15, "brightness != null");
    ;
  }).prototype = chip_theme.ChipThemeData.prototype;
  dart.addTypeTests(chip_theme.ChipThemeData);
  dart.addTypeCaches(chip_theme.ChipThemeData);
  dart.setMethodSignature(chip_theme.ChipThemeData, () => ({
    __proto__: dart.getMethods(chip_theme.ChipThemeData.__proto__),
    copyWith: dart.fnType(dart.legacy(chip_theme.ChipThemeData), [], {backgroundColor: dart.legacy(ui.Color), brightness: dart.legacy(ui.Brightness), checkmarkColor: dart.legacy(ui.Color), deleteIconColor: dart.legacy(ui.Color), disabledColor: dart.legacy(ui.Color), elevation: dart.legacy(core.double), labelPadding: dart.legacy(edge_insets.EdgeInsetsGeometry), labelStyle: dart.legacy(text_style.TextStyle), padding: dart.legacy(edge_insets.EdgeInsetsGeometry), pressElevation: dart.legacy(core.double), secondaryLabelStyle: dart.legacy(text_style.TextStyle), secondarySelectedColor: dart.legacy(ui.Color), selectedColor: dart.legacy(ui.Color), selectedShadowColor: dart.legacy(ui.Color), shadowColor: dart.legacy(ui.Color), shape: dart.legacy(borders.ShapeBorder)}, {}),
    _equals: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    [$_equals]: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    debugFillProperties: dart.fnType(dart.void, [dart.legacy(diagnostics.DiagnosticPropertiesBuilder)])
  }));
  dart.setGetterSignature(chip_theme.ChipThemeData, () => ({
    __proto__: dart.getGetters(chip_theme.ChipThemeData.__proto__),
    hashCode: dart.legacy(core.int),
    [$hashCode]: dart.legacy(core.int)
  }));
  dart.setLibraryUri(chip_theme.ChipThemeData, L77);
  dart.setFieldSignature(chip_theme.ChipThemeData, () => ({
    __proto__: dart.getFields(chip_theme.ChipThemeData.__proto__),
    backgroundColor: dart.finalFieldType(dart.legacy(ui.Color)),
    deleteIconColor: dart.finalFieldType(dart.legacy(ui.Color)),
    disabledColor: dart.finalFieldType(dart.legacy(ui.Color)),
    selectedColor: dart.finalFieldType(dart.legacy(ui.Color)),
    secondarySelectedColor: dart.finalFieldType(dart.legacy(ui.Color)),
    shadowColor: dart.finalFieldType(dart.legacy(ui.Color)),
    selectedShadowColor: dart.finalFieldType(dart.legacy(ui.Color)),
    showCheckmark: dart.finalFieldType(dart.legacy(core.bool)),
    checkmarkColor: dart.finalFieldType(dart.legacy(ui.Color)),
    labelPadding: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsetsGeometry)),
    padding: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsetsGeometry)),
    shape: dart.finalFieldType(dart.legacy(borders.ShapeBorder)),
    labelStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    secondaryLabelStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    brightness: dart.finalFieldType(dart.legacy(ui.Brightness)),
    elevation: dart.finalFieldType(dart.legacy(core.double)),
    pressElevation: dart.finalFieldType(dart.legacy(core.double))
  }));
  dart.defineExtensionMethods(chip_theme.ChipThemeData, ['_equals']);
  dart.defineExtensionAccessors(chip_theme.ChipThemeData, ['hashCode']);
  var clipBehavior$5 = dart.privateName(card_theme, "CardTheme.clipBehavior");
  var color$10 = dart.privateName(card_theme, "CardTheme.color");
  var shadowColor$1 = dart.privateName(card_theme, "CardTheme.shadowColor");
  var elevation$16 = dart.privateName(card_theme, "CardTheme.elevation");
  var margin$3 = dart.privateName(card_theme, "CardTheme.margin");
  var shape$16 = dart.privateName(card_theme, "CardTheme.shape");
  const Object_Diagnosticable$36$15 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$15.new = function() {
  }).prototype = Object_Diagnosticable$36$15.prototype;
  dart.applyMixin(Object_Diagnosticable$36$15, diagnostics.Diagnosticable);
  card_theme.CardTheme = class CardTheme extends Object_Diagnosticable$36$15 {
    get clipBehavior() {
      return this[clipBehavior$5];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get color() {
      return this[color$10];
    }
    set color(value) {
      super.color = value;
    }
    get shadowColor() {
      return this[shadowColor$1];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    get elevation() {
      return this[elevation$16];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get margin() {
      return this[margin$3];
    }
    set margin(value) {
      super.margin = value;
    }
    get shape() {
      return this[shape$16];
    }
    set shape(value) {
      super.shape = value;
    }
    copyWith(opts) {
      let t10, t10$, t10$0, t10$1, t10$2, t10$3;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let margin = opts && 'margin' in opts ? opts.margin : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      return new card_theme.CardTheme.new({clipBehavior: (t10 = clipBehavior, t10 == null ? this.clipBehavior : t10), color: (t10$ = color, t10$ == null ? this.color : t10$), shadowColor: (t10$0 = shadowColor, t10$0 == null ? this.shadowColor : t10$0), elevation: (t10$1 = elevation, t10$1 == null ? this.elevation : t10$1), margin: (t10$2 = margin, t10$2 == null ? this.margin : t10$2), shape: (t10$3 = shape, t10$3 == null ? this.shape : t10$3)});
    }
    static of(context) {
      return theme$.Theme.of(context).cardTheme;
    }
    static lerp(a, b, t) {
      let t10, t10$, t10$0, t10$1, t10$2, t10$3, t10$4, t10$5, t10$6, t10$7, t10$8, t10$9;
      if (!(t != null)) dart.assertFailed(null, L78, 109, 12, "t != null");
      return new card_theme.CardTheme.new({clipBehavior: dart.notNull(t) < 0.5 ? (t10 = a, t10 == null ? null : t10.clipBehavior) : (t10$ = b, t10$ == null ? null : t10$.clipBehavior), color: ui.Color.lerp((t10$0 = a, t10$0 == null ? null : t10$0.color), (t10$1 = b, t10$1 == null ? null : t10$1.color), t), shadowColor: ui.Color.lerp((t10$2 = a, t10$2 == null ? null : t10$2.shadowColor), (t10$3 = b, t10$3 == null ? null : t10$3.shadowColor), t), elevation: ui.lerpDouble((t10$4 = a, t10$4 == null ? null : t10$4.elevation), (t10$5 = b, t10$5 == null ? null : t10$5.elevation), t), margin: edge_insets.EdgeInsetsGeometry.lerp((t10$6 = a, t10$6 == null ? null : t10$6.margin), (t10$7 = b, t10$7 == null ? null : t10$7.margin), t), shape: borders.ShapeBorder.lerp((t10$8 = a, t10$8 == null ? null : t10$8.shape), (t10$9 = b, t10$9 == null ? null : t10$9.shape), t)});
    }
    get hashCode() {
      return ui.hashValues(this.clipBehavior, this.color, this.shadowColor, this.elevation, this.margin, this.shape);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this.runtimeType)) return false;
      return CardThemeL().is(other) && dart.equals(other.clipBehavior, this.clipBehavior) && dart.equals(other.color, this.color) && dart.equals(other.shadowColor, this.shadowColor) && other.elevation == this.elevation && dart.equals(other.margin, this.margin) && dart.equals(other.shape, this.shape);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfClipL()).new("clipBehavior", this.clipBehavior, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("shadowColor", this.shadowColor, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfdoubleL()).new("elevation", this.elevation, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfEdgeInsetsGeometryL()).new("margin", this.margin, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfShapeBorderL()).new("shape", this.shape, {defaultValue: null}));
    }
  };
  (card_theme.CardTheme.new = function(opts) {
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let margin = opts && 'margin' in opts ? opts.margin : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    this[clipBehavior$5] = clipBehavior;
    this[color$10] = color;
    this[shadowColor$1] = shadowColor;
    this[elevation$16] = elevation;
    this[margin$3] = margin;
    this[shape$16] = shape;
    if (!(elevation == null || dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, L78, 44, 15, "elevation == null || elevation >= 0.0");
    ;
  }).prototype = card_theme.CardTheme.prototype;
  dart.addTypeTests(card_theme.CardTheme);
  dart.addTypeCaches(card_theme.CardTheme);
  dart.setMethodSignature(card_theme.CardTheme, () => ({
    __proto__: dart.getMethods(card_theme.CardTheme.__proto__),
    copyWith: dart.fnType(dart.legacy(card_theme.CardTheme), [], {clipBehavior: dart.legacy(ui.Clip), color: dart.legacy(ui.Color), elevation: dart.legacy(core.double), margin: dart.legacy(edge_insets.EdgeInsetsGeometry), shadowColor: dart.legacy(ui.Color), shape: dart.legacy(borders.ShapeBorder)}, {}),
    _equals: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    [$_equals]: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    debugFillProperties: dart.fnType(dart.void, [dart.legacy(diagnostics.DiagnosticPropertiesBuilder)])
  }));
  dart.setGetterSignature(card_theme.CardTheme, () => ({
    __proto__: dart.getGetters(card_theme.CardTheme.__proto__),
    hashCode: dart.legacy(core.int),
    [$hashCode]: dart.legacy(core.int)
  }));
  dart.setLibraryUri(card_theme.CardTheme, L79);
  dart.setFieldSignature(card_theme.CardTheme, () => ({
    __proto__: dart.getFields(card_theme.CardTheme.__proto__),
    clipBehavior: dart.finalFieldType(dart.legacy(ui.Clip)),
    color: dart.finalFieldType(dart.legacy(ui.Color)),
    shadowColor: dart.finalFieldType(dart.legacy(ui.Color)),
    elevation: dart.finalFieldType(dart.legacy(core.double)),
    margin: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsetsGeometry)),
    shape: dart.finalFieldType(dart.legacy(borders.ShapeBorder))
  }));
  dart.defineExtensionMethods(card_theme.CardTheme, ['_equals']);
  dart.defineExtensionAccessors(card_theme.CardTheme, ['hashCode']);
  var _name$14 = dart.privateName(box_border, "_name");
  var C1821;
  var _alpha$ = dart.privateName(ink_highlight, "_alpha");
  var _alphaController$ = dart.privateName(ink_highlight, "_alphaController");
  var _active = dart.privateName(ink_highlight, "_active");
  var _shape = dart.privateName(ink_highlight, "_shape");
  var _radius$ = dart.privateName(ink_highlight, "_radius");
  var _borderRadius$ = dart.privateName(ink_highlight, "_borderRadius");
  var _customBorder$ = dart.privateName(ink_highlight, "_customBorder");
  var _textDirection$1 = dart.privateName(ink_highlight, "_textDirection");
  var _rectCallback = dart.privateName(ink_highlight, "_rectCallback");
  var _handleAlphaStatusChanged$ = dart.privateName(ink_highlight, "_handleAlphaStatusChanged");
  var C1822;
  var _paintHighlight = dart.privateName(ink_highlight, "_paintHighlight");
  ink_highlight.InkHighlight = class InkHighlight extends ink_well.InteractiveInkFeature {
    get active() {
      return this[_active];
    }
    activate() {
      this[_active] = true;
      this[_alphaController$].forward();
    }
    deactivate() {
      this[_active] = false;
      this[_alphaController$].reverse();
    }
    [_handleAlphaStatusChanged$](status) {
      if (status == animation.AnimationStatus.dismissed && !dart.test(this[_active])) this.dispose();
    }
    dispose() {
      this[_alphaController$].dispose();
      super.dispose();
    }
    [_paintHighlight](canvas, rect, paint) {
      let t10;
      if (!(this[_shape] != null)) dart.assertFailed(null, L80, 115, 12, "_shape != null");
      canvas.save();
      if (this[_customBorder$] != null) {
        canvas.clipPath(this[_customBorder$].getOuterPath(rect, {textDirection: this[_textDirection$1]}));
      }
      switch (this[_shape]) {
        case C1822 || CT.C1822:
        {
          canvas.drawCircle(rect.center, (t10 = this[_radius$], t10 == null ? 35 : t10), paint);
          break;
        }
        case C1821 || CT.C1821:
        {
          if (!dart.equals(this[_borderRadius$], border_radius.BorderRadius.zero)) {
            let clipRRect = new ui.RRect.fromRectAndCorners(rect, {topLeft: this[_borderRadius$].topLeft, topRight: this[_borderRadius$].topRight, bottomLeft: this[_borderRadius$].bottomLeft, bottomRight: this[_borderRadius$].bottomRight});
            canvas.drawRRect(clipRRect, paint);
          } else {
            canvas.drawRect(rect, paint);
          }
          break;
        }
      }
      canvas.restore();
    }
    paintFeature(canvas, transform) {
      let t10;
      let paint = (t10 = ui.Paint.new(), (() => {
        t10.color = this.color.withAlpha(this[_alpha$].value);
        return t10;
      })());
      let originOffset = matrix_utils.MatrixUtils.getAsTranslation(transform);
      let rect = this[_rectCallback] != null ? this[_rectCallback]() : ui.Offset.zero['&'](this.referenceBox.size);
      if (originOffset == null) {
        canvas.save();
        canvas.transform(transform.storage);
        this[_paintHighlight](canvas, rect, paint);
        canvas.restore();
      } else {
        this[_paintHighlight](canvas, rect.shift(originOffset), paint);
      }
    }
  };
  (ink_highlight.InkHighlight.new = function(opts) {
    let t10, t10$;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let referenceBox = opts && 'referenceBox' in opts ? opts.referenceBox : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let shape = opts && 'shape' in opts ? opts.shape : C1821 || CT.C1821;
    let radius = opts && 'radius' in opts ? opts.radius : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let customBorder = opts && 'customBorder' in opts ? opts.customBorder : null;
    let rectCallback = opts && 'rectCallback' in opts ? opts.rectCallback : null;
    let onRemoved = opts && 'onRemoved' in opts ? opts.onRemoved : null;
    let fadeDuration = opts && 'fadeDuration' in opts ? opts.fadeDuration : C243 || CT.C243;
    this[_alpha$] = null;
    this[_alphaController$] = null;
    this[_active] = true;
    if (!(color != null)) dart.assertFailed(null, L80, 54, 15, "color != null");
    if (!(shape != null)) dart.assertFailed(null, L80, 55, 15, "shape != null");
    if (!(textDirection != null)) dart.assertFailed(null, L80, 56, 15, "textDirection != null");
    if (!(fadeDuration != null)) dart.assertFailed(null, L80, 57, 15, "fadeDuration != null");
    this[_shape] = shape;
    this[_radius$] = radius;
    this[_borderRadius$] = (t10 = borderRadius, t10 == null ? border_radius.BorderRadius.zero : t10);
    this[_customBorder$] = customBorder;
    this[_textDirection$1] = textDirection;
    this[_rectCallback] = rectCallback;
    ink_highlight.InkHighlight.__proto__.new.call(this, {controller: controller, referenceBox: referenceBox, color: color, onRemoved: onRemoved});
    this[_alphaController$] = (t10$ = new animation_controller.AnimationController.new({duration: fadeDuration, vsync: controller.vsync}), (() => {
      t10$.addListener(dart.bind(controller, 'markNeedsPaint'));
      t10$.addStatusListener(dart.bind(this, _handleAlphaStatusChanged$));
      t10$.forward();
      return t10$;
    })());
    this[_alpha$] = this[_alphaController$].drive(intL(), new tween.IntTween.new({begin: 0, end: color.alpha}));
    controller.addInkFeature(this);
  }).prototype = ink_highlight.InkHighlight.prototype;
  dart.addTypeTests(ink_highlight.InkHighlight);
  dart.addTypeCaches(ink_highlight.InkHighlight);
  dart.setMethodSignature(ink_highlight.InkHighlight, () => ({
    __proto__: dart.getMethods(ink_highlight.InkHighlight.__proto__),
    activate: dart.fnType(dart.void, []),
    deactivate: dart.fnType(dart.void, []),
    [_handleAlphaStatusChanged$]: dart.fnType(dart.void, [dart.legacy(animation.AnimationStatus)]),
    [_paintHighlight]: dart.fnType(dart.void, [dart.legacy(ui.Canvas), dart.legacy(ui.Rect), dart.legacy(ui.Paint)]),
    paintFeature: dart.fnType(dart.void, [dart.legacy(ui.Canvas), dart.legacy(vector_math_64.Matrix4)])
  }));
  dart.setGetterSignature(ink_highlight.InkHighlight, () => ({
    __proto__: dart.getGetters(ink_highlight.InkHighlight.__proto__),
    active: dart.legacy(core.bool)
  }));
  dart.setLibraryUri(ink_highlight.InkHighlight, L81);
  dart.setFieldSignature(ink_highlight.InkHighlight, () => ({
    __proto__: dart.getFields(ink_highlight.InkHighlight.__proto__),
    [_shape]: dart.finalFieldType(dart.legacy(box_border.BoxShape)),
    [_radius$]: dart.finalFieldType(dart.legacy(core.double)),
    [_borderRadius$]: dart.finalFieldType(dart.legacy(border_radius.BorderRadius)),
    [_customBorder$]: dart.finalFieldType(dart.legacy(borders.ShapeBorder)),
    [_rectCallback]: dart.finalFieldType(dart.legacy(dart.fnType(dart.legacy(ui.Rect), []))),
    [_textDirection$1]: dart.finalFieldType(dart.legacy(ui.TextDirection)),
    [_alpha$]: dart.fieldType(dart.legacy(animation.Animation$(dart.legacy(core.int)))),
    [_alphaController$]: dart.fieldType(dart.legacy(animation_controller.AnimationController)),
    [_active]: dart.fieldType(dart.legacy(core.bool))
  }));
  dart.defineLazy(ink_highlight, {
    /*ink_highlight._kDefaultHighlightFadeDuration*/get _kDefaultHighlightFadeDuration() {
      return C243 || CT.C243;
    }
  }, true);
  var SemanticsEvent_type = dart.privateName(semantics_event, "SemanticsEvent.type");
  var C1823;
  var C1824;
  feedback.Feedback = class Feedback extends core.Object {
    static forTap(context) {
      return async.async(dart.void, function* forTap() {
        context.findRenderObject().sendSemanticsEvent(C1823 || CT.C1823);
        switch (feedback.Feedback._platform(context)) {
          case C44 || CT.C44:
          case C45 || CT.C45:
          {
            return system_sound.SystemSound.play(system_sound.SystemSoundType.click);
          }
          case C48 || CT.C48:
          case C46 || CT.C46:
          case C49 || CT.C49:
          case C47 || CT.C47:
          {
            return FutureOfvoid().value();
            break;
          }
        }
        if (!false) dart.assertFailed("Unhandled TargetPlatform " + dart.str(feedback.Feedback._platform(context)), L82, 111, 12, "false");
        return FutureOfvoid().value();
      });
    }
    static wrapForTap(callback, context) {
      if (callback == null) return null;
      return dart.fn(() => {
        feedback.Feedback.forTap(context);
        callback();
      }, VoidToNullN());
    }
    static forLongPress(context) {
      context.findRenderObject().sendSemanticsEvent(C1824 || CT.C1824);
      switch (feedback.Feedback._platform(context)) {
        case C44 || CT.C44:
        case C45 || CT.C45:
        {
          return haptic_feedback.HapticFeedback.vibrate();
        }
        case C48 || CT.C48:
        case C46 || CT.C46:
        case C49 || CT.C49:
        case C47 || CT.C47:
        {
          return FutureOfvoid().value();
          break;
        }
      }
      if (!false) dart.assertFailed("Unhandled TargetPlatform " + dart.str(feedback.Feedback._platform(context)), L82, 156, 12, "false");
      return FutureOfvoid().value();
    }
    static wrapForLongPress(callback, context) {
      if (callback == null) return null;
      return dart.fn(() => {
        feedback.Feedback.forLongPress(context);
        callback();
      }, VoidToNullN());
    }
    static _platform(context) {
      return theme$.Theme.of(context).platform;
    }
  };
  (feedback.Feedback.__ = function() {
    ;
  }).prototype = feedback.Feedback.prototype;
  dart.addTypeTests(feedback.Feedback);
  dart.addTypeCaches(feedback.Feedback);
  dart.setLibraryUri(feedback.Feedback, L83);
  ink_well._ParentInkResponseState = class _ParentInkResponseState extends core.Object {};
  (ink_well._ParentInkResponseState.new = function() {
    ;
  }).prototype = ink_well._ParentInkResponseState.prototype;
  dart.addTypeTests(ink_well._ParentInkResponseState);
  dart.addTypeCaches(ink_well._ParentInkResponseState);
  dart.setLibraryUri(ink_well._ParentInkResponseState, L62);
  var state$ = dart.privateName(ink_well, "_ParentInkResponseProvider.state");
  ink_well._ParentInkResponseProvider = class _ParentInkResponseProvider extends framework.InheritedWidget {
    get state() {
      return this[state$];
    }
    set state(value) {
      super.state = value;
    }
    updateShouldNotify(oldWidget) {
      _ParentInkResponseProviderL().as(oldWidget);
      return !dart.equals(this.state, oldWidget.state);
    }
    static of(context) {
      let t10;
      t10 = context.dependOnInheritedWidgetOfExactType(_ParentInkResponseProviderL());
      return t10 == null ? null : t10.state;
    }
  };
  (ink_well._ParentInkResponseProvider.new = function(opts) {
    let state = opts && 'state' in opts ? opts.state : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[state$] = state;
    ink_well._ParentInkResponseProvider.__proto__.new.call(this, {child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = ink_well._ParentInkResponseProvider.prototype;
  dart.addTypeTests(ink_well._ParentInkResponseProvider);
  dart.addTypeCaches(ink_well._ParentInkResponseProvider);
  dart.setMethodSignature(ink_well._ParentInkResponseProvider, () => ({
    __proto__: dart.getMethods(ink_well._ParentInkResponseProvider.__proto__),
    updateShouldNotify: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)])
  }));
  dart.setLibraryUri(ink_well._ParentInkResponseProvider, L62);
  dart.setFieldSignature(ink_well._ParentInkResponseProvider, () => ({
    __proto__: dart.getFields(ink_well._ParentInkResponseProvider.__proto__),
    state: dart.finalFieldType(dart.legacy(ink_well._ParentInkResponseState))
  }));
  var C1827;
  var C1828;
  var C1829;
  var C1830;
  var C1831;
  var C1832;
  var C1833;
  var C1834;
  var C1835;
  var C1836;
  var C1837;
  var C1838;
  var C1839;
  var C1840;
  var C1841;
  var C1842;
  var C1843;
  var C1844;
  var C1845;
  var C1846;
  var C1847;
  var C1848;
  var C1849;
  var C1850;
  var C1851;
  var C1852;
  var C1853;
  var C1854;
  var C1855;
  var C1826;
  var C1825;
  var child$18 = dart.privateName(ink_well, "InkResponse.child");
  var onTap$1 = dart.privateName(ink_well, "InkResponse.onTap");
  var onTapDown$ = dart.privateName(ink_well, "InkResponse.onTapDown");
  var onTapCancel$ = dart.privateName(ink_well, "InkResponse.onTapCancel");
  var onDoubleTap$ = dart.privateName(ink_well, "InkResponse.onDoubleTap");
  var onLongPress$3 = dart.privateName(ink_well, "InkResponse.onLongPress");
  var onHighlightChanged$1 = dart.privateName(ink_well, "InkResponse.onHighlightChanged");
  var onHover$ = dart.privateName(ink_well, "InkResponse.onHover");
  var mouseCursor$7 = dart.privateName(ink_well, "InkResponse.mouseCursor");
  var containedInkWell$ = dart.privateName(ink_well, "InkResponse.containedInkWell");
  var highlightShape$ = dart.privateName(ink_well, "InkResponse.highlightShape");
  var radius$ = dart.privateName(ink_well, "InkResponse.radius");
  var borderRadius$0 = dart.privateName(ink_well, "InkResponse.borderRadius");
  var customBorder$ = dart.privateName(ink_well, "InkResponse.customBorder");
  var focusColor$8 = dart.privateName(ink_well, "InkResponse.focusColor");
  var hoverColor$9 = dart.privateName(ink_well, "InkResponse.hoverColor");
  var highlightColor$4 = dart.privateName(ink_well, "InkResponse.highlightColor");
  var overlayColor$1 = dart.privateName(ink_well, "InkResponse.overlayColor");
  var splashColor$5 = dart.privateName(ink_well, "InkResponse.splashColor");
  var splashFactory$ = dart.privateName(ink_well, "InkResponse.splashFactory");
  var enableFeedback$3 = dart.privateName(ink_well, "InkResponse.enableFeedback");
  var excludeFromSemantics$1 = dart.privateName(ink_well, "InkResponse.excludeFromSemantics");
  var onFocusChange$ = dart.privateName(ink_well, "InkResponse.onFocusChange");
  var autofocus$5 = dart.privateName(ink_well, "InkResponse.autofocus");
  var focusNode$5 = dart.privateName(ink_well, "InkResponse.focusNode");
  var canRequestFocus$ = dart.privateName(ink_well, "InkResponse.canRequestFocus");
  ink_well.InkResponse = class InkResponse extends framework.StatelessWidget {
    get child() {
      return this[child$18];
    }
    set child(value) {
      super.child = value;
    }
    get onTap() {
      return this[onTap$1];
    }
    set onTap(value) {
      super.onTap = value;
    }
    get onTapDown() {
      return this[onTapDown$];
    }
    set onTapDown(value) {
      super.onTapDown = value;
    }
    get onTapCancel() {
      return this[onTapCancel$];
    }
    set onTapCancel(value) {
      super.onTapCancel = value;
    }
    get onDoubleTap() {
      return this[onDoubleTap$];
    }
    set onDoubleTap(value) {
      super.onDoubleTap = value;
    }
    get onLongPress() {
      return this[onLongPress$3];
    }
    set onLongPress(value) {
      super.onLongPress = value;
    }
    get onHighlightChanged() {
      return this[onHighlightChanged$1];
    }
    set onHighlightChanged(value) {
      super.onHighlightChanged = value;
    }
    get onHover() {
      return this[onHover$];
    }
    set onHover(value) {
      super.onHover = value;
    }
    get mouseCursor() {
      return this[mouseCursor$7];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get containedInkWell() {
      return this[containedInkWell$];
    }
    set containedInkWell(value) {
      super.containedInkWell = value;
    }
    get highlightShape() {
      return this[highlightShape$];
    }
    set highlightShape(value) {
      super.highlightShape = value;
    }
    get radius() {
      return this[radius$];
    }
    set radius(value) {
      super.radius = value;
    }
    get borderRadius() {
      return this[borderRadius$0];
    }
    set borderRadius(value) {
      super.borderRadius = value;
    }
    get customBorder() {
      return this[customBorder$];
    }
    set customBorder(value) {
      super.customBorder = value;
    }
    get focusColor() {
      return this[focusColor$8];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get hoverColor() {
      return this[hoverColor$9];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get highlightColor() {
      return this[highlightColor$4];
    }
    set highlightColor(value) {
      super.highlightColor = value;
    }
    get overlayColor() {
      return this[overlayColor$1];
    }
    set overlayColor(value) {
      super.overlayColor = value;
    }
    get splashColor() {
      return this[splashColor$5];
    }
    set splashColor(value) {
      super.splashColor = value;
    }
    get splashFactory() {
      return this[splashFactory$];
    }
    set splashFactory(value) {
      super.splashFactory = value;
    }
    get enableFeedback() {
      return this[enableFeedback$3];
    }
    set enableFeedback(value) {
      super.enableFeedback = value;
    }
    get excludeFromSemantics() {
      return this[excludeFromSemantics$1];
    }
    set excludeFromSemantics(value) {
      super.excludeFromSemantics = value;
    }
    get onFocusChange() {
      return this[onFocusChange$];
    }
    set onFocusChange(value) {
      super.onFocusChange = value;
    }
    get autofocus() {
      return this[autofocus$5];
    }
    set autofocus(value) {
      super.autofocus = value;
    }
    get focusNode() {
      return this[focusNode$5];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    get canRequestFocus() {
      return this[canRequestFocus$];
    }
    set canRequestFocus(value) {
      super.canRequestFocus = value;
    }
    getRectCallback(referenceBox) {
      return null;
    }
    build(context) {
      let parentState = ink_well._ParentInkResponseProvider.of(context);
      return new ink_well._InkResponseStateWidget.new({child: this.child, onTap: this.onTap, onTapDown: this.onTapDown, onTapCancel: this.onTapCancel, onDoubleTap: this.onDoubleTap, onLongPress: this.onLongPress, onHighlightChanged: this.onHighlightChanged, onHover: this.onHover, mouseCursor: this.mouseCursor, containedInkWell: this.containedInkWell, highlightShape: this.highlightShape, radius: this.radius, borderRadius: this.borderRadius, customBorder: this.customBorder, focusColor: this.focusColor, hoverColor: this.hoverColor, highlightColor: this.highlightColor, overlayColor: this.overlayColor, splashColor: this.splashColor, splashFactory: this.splashFactory, enableFeedback: this.enableFeedback, excludeFromSemantics: this.excludeFromSemantics, focusNode: this.focusNode, canRequestFocus: this.canRequestFocus, onFocusChange: this.onFocusChange, autofocus: this.autofocus, parentState: parentState, getRectCallback: dart.bind(this, 'getRectCallback'), debugCheckContext: dart.bind(this, 'debugCheckContext'), $creationLocationd_0dea112b090073317d4: C1825 || CT.C1825});
    }
    debugCheckContext(context) {
      if (!dart.test(debug$0.debugCheckHasMaterial(context))) dart.assertFailed(null, L65, 626, 12, "debugCheckHasMaterial(context)");
      if (!dart.test(debug.debugCheckHasDirectionality(context))) dart.assertFailed(null, L65, 627, 12, "debugCheckHasDirectionality(context)");
      return true;
    }
  };
  (ink_well.InkResponse.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    let onTapDown = opts && 'onTapDown' in opts ? opts.onTapDown : null;
    let onTapCancel = opts && 'onTapCancel' in opts ? opts.onTapCancel : null;
    let onDoubleTap = opts && 'onDoubleTap' in opts ? opts.onDoubleTap : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let onHighlightChanged = opts && 'onHighlightChanged' in opts ? opts.onHighlightChanged : null;
    let onHover = opts && 'onHover' in opts ? opts.onHover : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let containedInkWell = opts && 'containedInkWell' in opts ? opts.containedInkWell : false;
    let highlightShape = opts && 'highlightShape' in opts ? opts.highlightShape : C1822 || CT.C1822;
    let radius = opts && 'radius' in opts ? opts.radius : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let customBorder = opts && 'customBorder' in opts ? opts.customBorder : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let splashFactory = opts && 'splashFactory' in opts ? opts.splashFactory : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : true;
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : false;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let canRequestFocus = opts && 'canRequestFocus' in opts ? opts.canRequestFocus : true;
    let onFocusChange = opts && 'onFocusChange' in opts ? opts.onFocusChange : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$18] = child;
    this[onTap$1] = onTap;
    this[onTapDown$] = onTapDown;
    this[onTapCancel$] = onTapCancel;
    this[onDoubleTap$] = onDoubleTap;
    this[onLongPress$3] = onLongPress;
    this[onHighlightChanged$1] = onHighlightChanged;
    this[onHover$] = onHover;
    this[mouseCursor$7] = mouseCursor;
    this[containedInkWell$] = containedInkWell;
    this[highlightShape$] = highlightShape;
    this[radius$] = radius;
    this[borderRadius$0] = borderRadius;
    this[customBorder$] = customBorder;
    this[focusColor$8] = focusColor;
    this[hoverColor$9] = hoverColor;
    this[highlightColor$4] = highlightColor;
    this[overlayColor$1] = overlayColor;
    this[splashColor$5] = splashColor;
    this[splashFactory$] = splashFactory;
    this[enableFeedback$3] = enableFeedback;
    this[excludeFromSemantics$1] = excludeFromSemantics;
    this[focusNode$5] = focusNode;
    this[canRequestFocus$] = canRequestFocus;
    this[onFocusChange$] = onFocusChange;
    this[autofocus$5] = autofocus;
    if (!(containedInkWell != null)) dart.assertFailed(null, L65, 320, 15, "containedInkWell != null");
    if (!(highlightShape != null)) dart.assertFailed(null, L65, 321, 15, "highlightShape != null");
    if (!(enableFeedback != null)) dart.assertFailed(null, L65, 322, 15, "enableFeedback != null");
    if (!(excludeFromSemantics != null)) dart.assertFailed(null, L65, 323, 15, "excludeFromSemantics != null");
    if (!(autofocus != null)) dart.assertFailed(null, L65, 324, 15, "autofocus != null");
    if (!(canRequestFocus != null)) dart.assertFailed(null, L65, 325, 15, "canRequestFocus != null");
    ink_well.InkResponse.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = ink_well.InkResponse.prototype;
  dart.addTypeTests(ink_well.InkResponse);
  dart.addTypeCaches(ink_well.InkResponse);
  dart.setMethodSignature(ink_well.InkResponse, () => ({
    __proto__: dart.getMethods(ink_well.InkResponse.__proto__),
    getRectCallback: dart.fnType(dart.legacy(dart.fnType(dart.legacy(ui.Rect), [])), [dart.legacy(box.RenderBox)]),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)]),
    debugCheckContext: dart.fnType(dart.legacy(core.bool), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(ink_well.InkResponse, L62);
  dart.setFieldSignature(ink_well.InkResponse, () => ({
    __proto__: dart.getFields(ink_well.InkResponse.__proto__),
    child: dart.finalFieldType(dart.legacy(framework.Widget)),
    onTap: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, []))),
    onTapDown: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, [dart.legacy(tap.TapDownDetails)]))),
    onTapCancel: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, []))),
    onDoubleTap: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, []))),
    onLongPress: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, []))),
    onHighlightChanged: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, [dart.legacy(core.bool)]))),
    onHover: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, [dart.legacy(core.bool)]))),
    mouseCursor: dart.finalFieldType(dart.legacy(mouse_cursor.MouseCursor)),
    containedInkWell: dart.finalFieldType(dart.legacy(core.bool)),
    highlightShape: dart.finalFieldType(dart.legacy(box_border.BoxShape)),
    radius: dart.finalFieldType(dart.legacy(core.double)),
    borderRadius: dart.finalFieldType(dart.legacy(border_radius.BorderRadius)),
    customBorder: dart.finalFieldType(dart.legacy(borders.ShapeBorder)),
    focusColor: dart.finalFieldType(dart.legacy(ui.Color)),
    hoverColor: dart.finalFieldType(dart.legacy(ui.Color)),
    highlightColor: dart.finalFieldType(dart.legacy(ui.Color)),
    overlayColor: dart.finalFieldType(dart.legacy(material_state.MaterialStateProperty$(dart.legacy(ui.Color)))),
    splashColor: dart.finalFieldType(dart.legacy(ui.Color)),
    splashFactory: dart.finalFieldType(dart.legacy(ink_well.InteractiveInkFeatureFactory)),
    enableFeedback: dart.finalFieldType(dart.legacy(core.bool)),
    excludeFromSemantics: dart.finalFieldType(dart.legacy(core.bool)),
    onFocusChange: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, [dart.legacy(core.bool)]))),
    autofocus: dart.finalFieldType(dart.legacy(core.bool)),
    focusNode: dart.finalFieldType(dart.legacy(focus_manager.FocusNode)),
    canRequestFocus: dart.finalFieldType(dart.legacy(core.bool))
  }));
  var child$19 = dart.privateName(ink_well, "_InkResponseStateWidget.child");
  var onTap$2 = dart.privateName(ink_well, "_InkResponseStateWidget.onTap");
  var onTapDown$0 = dart.privateName(ink_well, "_InkResponseStateWidget.onTapDown");
  var onTapCancel$0 = dart.privateName(ink_well, "_InkResponseStateWidget.onTapCancel");
  var onDoubleTap$0 = dart.privateName(ink_well, "_InkResponseStateWidget.onDoubleTap");
  var onLongPress$4 = dart.privateName(ink_well, "_InkResponseStateWidget.onLongPress");
  var onHighlightChanged$2 = dart.privateName(ink_well, "_InkResponseStateWidget.onHighlightChanged");
  var onHover$0 = dart.privateName(ink_well, "_InkResponseStateWidget.onHover");
  var mouseCursor$8 = dart.privateName(ink_well, "_InkResponseStateWidget.mouseCursor");
  var containedInkWell$0 = dart.privateName(ink_well, "_InkResponseStateWidget.containedInkWell");
  var highlightShape$0 = dart.privateName(ink_well, "_InkResponseStateWidget.highlightShape");
  var radius$0 = dart.privateName(ink_well, "_InkResponseStateWidget.radius");
  var borderRadius$1 = dart.privateName(ink_well, "_InkResponseStateWidget.borderRadius");
  var customBorder$0 = dart.privateName(ink_well, "_InkResponseStateWidget.customBorder");
  var focusColor$9 = dart.privateName(ink_well, "_InkResponseStateWidget.focusColor");
  var hoverColor$10 = dart.privateName(ink_well, "_InkResponseStateWidget.hoverColor");
  var highlightColor$5 = dart.privateName(ink_well, "_InkResponseStateWidget.highlightColor");
  var overlayColor$2 = dart.privateName(ink_well, "_InkResponseStateWidget.overlayColor");
  var splashColor$6 = dart.privateName(ink_well, "_InkResponseStateWidget.splashColor");
  var splashFactory$0 = dart.privateName(ink_well, "_InkResponseStateWidget.splashFactory");
  var enableFeedback$4 = dart.privateName(ink_well, "_InkResponseStateWidget.enableFeedback");
  var excludeFromSemantics$2 = dart.privateName(ink_well, "_InkResponseStateWidget.excludeFromSemantics");
  var onFocusChange$0 = dart.privateName(ink_well, "_InkResponseStateWidget.onFocusChange");
  var autofocus$6 = dart.privateName(ink_well, "_InkResponseStateWidget.autofocus");
  var focusNode$6 = dart.privateName(ink_well, "_InkResponseStateWidget.focusNode");
  var canRequestFocus$0 = dart.privateName(ink_well, "_InkResponseStateWidget.canRequestFocus");
  var parentState$ = dart.privateName(ink_well, "_InkResponseStateWidget.parentState");
  var getRectCallback$ = dart.privateName(ink_well, "_InkResponseStateWidget.getRectCallback");
  var debugCheckContext$ = dart.privateName(ink_well, "_InkResponseStateWidget.debugCheckContext");
  ink_well._InkResponseStateWidget = class _InkResponseStateWidget extends framework.StatefulWidget {
    get child() {
      return this[child$19];
    }
    set child(value) {
      super.child = value;
    }
    get onTap() {
      return this[onTap$2];
    }
    set onTap(value) {
      super.onTap = value;
    }
    get onTapDown() {
      return this[onTapDown$0];
    }
    set onTapDown(value) {
      super.onTapDown = value;
    }
    get onTapCancel() {
      return this[onTapCancel$0];
    }
    set onTapCancel(value) {
      super.onTapCancel = value;
    }
    get onDoubleTap() {
      return this[onDoubleTap$0];
    }
    set onDoubleTap(value) {
      super.onDoubleTap = value;
    }
    get onLongPress() {
      return this[onLongPress$4];
    }
    set onLongPress(value) {
      super.onLongPress = value;
    }
    get onHighlightChanged() {
      return this[onHighlightChanged$2];
    }
    set onHighlightChanged(value) {
      super.onHighlightChanged = value;
    }
    get onHover() {
      return this[onHover$0];
    }
    set onHover(value) {
      super.onHover = value;
    }
    get mouseCursor() {
      return this[mouseCursor$8];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get containedInkWell() {
      return this[containedInkWell$0];
    }
    set containedInkWell(value) {
      super.containedInkWell = value;
    }
    get highlightShape() {
      return this[highlightShape$0];
    }
    set highlightShape(value) {
      super.highlightShape = value;
    }
    get radius() {
      return this[radius$0];
    }
    set radius(value) {
      super.radius = value;
    }
    get borderRadius() {
      return this[borderRadius$1];
    }
    set borderRadius(value) {
      super.borderRadius = value;
    }
    get customBorder() {
      return this[customBorder$0];
    }
    set customBorder(value) {
      super.customBorder = value;
    }
    get focusColor() {
      return this[focusColor$9];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get hoverColor() {
      return this[hoverColor$10];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get highlightColor() {
      return this[highlightColor$5];
    }
    set highlightColor(value) {
      super.highlightColor = value;
    }
    get overlayColor() {
      return this[overlayColor$2];
    }
    set overlayColor(value) {
      super.overlayColor = value;
    }
    get splashColor() {
      return this[splashColor$6];
    }
    set splashColor(value) {
      super.splashColor = value;
    }
    get splashFactory() {
      return this[splashFactory$0];
    }
    set splashFactory(value) {
      super.splashFactory = value;
    }
    get enableFeedback() {
      return this[enableFeedback$4];
    }
    set enableFeedback(value) {
      super.enableFeedback = value;
    }
    get excludeFromSemantics() {
      return this[excludeFromSemantics$2];
    }
    set excludeFromSemantics(value) {
      super.excludeFromSemantics = value;
    }
    get onFocusChange() {
      return this[onFocusChange$0];
    }
    set onFocusChange(value) {
      super.onFocusChange = value;
    }
    get autofocus() {
      return this[autofocus$6];
    }
    set autofocus(value) {
      super.autofocus = value;
    }
    get focusNode() {
      return this[focusNode$6];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    get canRequestFocus() {
      return this[canRequestFocus$0];
    }
    set canRequestFocus(value) {
      super.canRequestFocus = value;
    }
    get parentState() {
      return this[parentState$];
    }
    set parentState(value) {
      super.parentState = value;
    }
    get getRectCallback() {
      return this[getRectCallback$];
    }
    set getRectCallback(value) {
      super.getRectCallback = value;
    }
    get debugCheckContext() {
      return this[debugCheckContext$];
    }
    set debugCheckContext(value) {
      super.debugCheckContext = value;
    }
    createState() {
      return new ink_well._InkResponseState.new();
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      let gestures = (() => {
        let t10 = JSArrayOfStringL().of([]);
        if (this.onTap != null) t10[$add]("tap");
        if (this.onDoubleTap != null) t10[$add]("double tap");
        if (this.onLongPress != null) t10[$add]("long press");
        if (this.onTapDown != null) t10[$add]("tap down");
        if (this.onTapCancel != null) t10[$add]("tap cancel");
        return t10;
      })();
      properties.add(new (IterablePropertyOfStringL()).new("gestures", gestures, {ifEmpty: "<none>"}));
      properties.add(new (DiagnosticsPropertyOfMouseCursorL()).new("mouseCursor", this.mouseCursor));
      properties.add(new (DiagnosticsPropertyOfboolL()).new("containedInkWell", this.containedInkWell, {level: diagnostics.DiagnosticLevel.fine}));
      properties.add(new (DiagnosticsPropertyOfBoxShapeL()).new("highlightShape", this.highlightShape, {description: (dart.test(this.containedInkWell) ? "clipped to " : "") + dart.str(this.highlightShape), showName: false}));
    }
  };
  (ink_well._InkResponseStateWidget.new = function(opts) {
    let child = opts && 'child' in opts ? opts.child : null;
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    let onTapDown = opts && 'onTapDown' in opts ? opts.onTapDown : null;
    let onTapCancel = opts && 'onTapCancel' in opts ? opts.onTapCancel : null;
    let onDoubleTap = opts && 'onDoubleTap' in opts ? opts.onDoubleTap : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let onHighlightChanged = opts && 'onHighlightChanged' in opts ? opts.onHighlightChanged : null;
    let onHover = opts && 'onHover' in opts ? opts.onHover : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let containedInkWell = opts && 'containedInkWell' in opts ? opts.containedInkWell : false;
    let highlightShape = opts && 'highlightShape' in opts ? opts.highlightShape : C1822 || CT.C1822;
    let radius = opts && 'radius' in opts ? opts.radius : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let customBorder = opts && 'customBorder' in opts ? opts.customBorder : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let splashFactory = opts && 'splashFactory' in opts ? opts.splashFactory : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : true;
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : false;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let canRequestFocus = opts && 'canRequestFocus' in opts ? opts.canRequestFocus : true;
    let onFocusChange = opts && 'onFocusChange' in opts ? opts.onFocusChange : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    let parentState = opts && 'parentState' in opts ? opts.parentState : null;
    let getRectCallback = opts && 'getRectCallback' in opts ? opts.getRectCallback : null;
    let debugCheckContext = opts && 'debugCheckContext' in opts ? opts.debugCheckContext : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$19] = child;
    this[onTap$2] = onTap;
    this[onTapDown$0] = onTapDown;
    this[onTapCancel$0] = onTapCancel;
    this[onDoubleTap$0] = onDoubleTap;
    this[onLongPress$4] = onLongPress;
    this[onHighlightChanged$2] = onHighlightChanged;
    this[onHover$0] = onHover;
    this[mouseCursor$8] = mouseCursor;
    this[containedInkWell$0] = containedInkWell;
    this[highlightShape$0] = highlightShape;
    this[radius$0] = radius;
    this[borderRadius$1] = borderRadius;
    this[customBorder$0] = customBorder;
    this[focusColor$9] = focusColor;
    this[hoverColor$10] = hoverColor;
    this[highlightColor$5] = highlightColor;
    this[overlayColor$2] = overlayColor;
    this[splashColor$6] = splashColor;
    this[splashFactory$0] = splashFactory;
    this[enableFeedback$4] = enableFeedback;
    this[excludeFromSemantics$2] = excludeFromSemantics;
    this[focusNode$6] = focusNode;
    this[canRequestFocus$0] = canRequestFocus;
    this[onFocusChange$0] = onFocusChange;
    this[autofocus$6] = autofocus;
    this[parentState$] = parentState;
    this[getRectCallback$] = getRectCallback;
    this[debugCheckContext$] = debugCheckContext;
    if (!(containedInkWell != null)) dart.assertFailed(null, L65, 663, 15, "containedInkWell != null");
    if (!(highlightShape != null)) dart.assertFailed(null, L65, 664, 15, "highlightShape != null");
    if (!(enableFeedback != null)) dart.assertFailed(null, L65, 665, 15, "enableFeedback != null");
    if (!(excludeFromSemantics != null)) dart.assertFailed(null, L65, 666, 15, "excludeFromSemantics != null");
    if (!(autofocus != null)) dart.assertFailed(null, L65, 667, 15, "autofocus != null");
    if (!(canRequestFocus != null)) dart.assertFailed(null, L65, 668, 15, "canRequestFocus != null");
    ink_well._InkResponseStateWidget.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = ink_well._InkResponseStateWidget.prototype;
  dart.addTypeTests(ink_well._InkResponseStateWidget);
  dart.addTypeCaches(ink_well._InkResponseStateWidget);
  dart.setMethodSignature(ink_well._InkResponseStateWidget, () => ({
    __proto__: dart.getMethods(ink_well._InkResponseStateWidget.__proto__),
    createState: dart.fnType(dart.legacy(ink_well._InkResponseState), [])
  }));
  dart.setLibraryUri(ink_well._InkResponseStateWidget, L62);
  dart.setFieldSignature(ink_well._InkResponseStateWidget, () => ({
    __proto__: dart.getFields(ink_well._InkResponseStateWidget.__proto__),
    child: dart.finalFieldType(dart.legacy(framework.Widget)),
    onTap: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, []))),
    onTapDown: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, [dart.legacy(tap.TapDownDetails)]))),
    onTapCancel: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, []))),
    onDoubleTap: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, []))),
    onLongPress: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, []))),
    onHighlightChanged: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, [dart.legacy(core.bool)]))),
    onHover: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, [dart.legacy(core.bool)]))),
    mouseCursor: dart.finalFieldType(dart.legacy(mouse_cursor.MouseCursor)),
    containedInkWell: dart.finalFieldType(dart.legacy(core.bool)),
    highlightShape: dart.finalFieldType(dart.legacy(box_border.BoxShape)),
    radius: dart.finalFieldType(dart.legacy(core.double)),
    borderRadius: dart.finalFieldType(dart.legacy(border_radius.BorderRadius)),
    customBorder: dart.finalFieldType(dart.legacy(borders.ShapeBorder)),
    focusColor: dart.finalFieldType(dart.legacy(ui.Color)),
    hoverColor: dart.finalFieldType(dart.legacy(ui.Color)),
    highlightColor: dart.finalFieldType(dart.legacy(ui.Color)),
    overlayColor: dart.finalFieldType(dart.legacy(material_state.MaterialStateProperty$(dart.legacy(ui.Color)))),
    splashColor: dart.finalFieldType(dart.legacy(ui.Color)),
    splashFactory: dart.finalFieldType(dart.legacy(ink_well.InteractiveInkFeatureFactory)),
    enableFeedback: dart.finalFieldType(dart.legacy(core.bool)),
    excludeFromSemantics: dart.finalFieldType(dart.legacy(core.bool)),
    onFocusChange: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, [dart.legacy(core.bool)]))),
    autofocus: dart.finalFieldType(dart.legacy(core.bool)),
    focusNode: dart.finalFieldType(dart.legacy(focus_manager.FocusNode)),
    canRequestFocus: dart.finalFieldType(dart.legacy(core.bool)),
    parentState: dart.finalFieldType(dart.legacy(ink_well._ParentInkResponseState)),
    getRectCallback: dart.finalFieldType(dart.legacy(dart.fnType(dart.legacy(dart.fnType(dart.legacy(ui.Rect), [])), [dart.legacy(box.RenderBox)]))),
    debugCheckContext: dart.finalFieldType(dart.legacy(dart.fnType(dart.legacy(core.bool), [dart.legacy(framework.BuildContext)])))
  }));
  var _name$15 = dart.privateName(ink_well, "_name");
  var C1856;
  var C1857;
  var C1858;
  var C1859;
  ink_well._HighlightType = class _HighlightType extends core.Object {
    toString() {
      return this[_name$15];
    }
  };
  (ink_well._HighlightType.new = function(index, _name) {
    this.index = index;
    this[_name$15] = _name;
    ;
  }).prototype = ink_well._HighlightType.prototype;
  dart.addTypeTests(ink_well._HighlightType);
  dart.addTypeCaches(ink_well._HighlightType);
  dart.setMethodSignature(ink_well._HighlightType, () => ({
    __proto__: dart.getMethods(ink_well._HighlightType.__proto__),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setLibraryUri(ink_well._HighlightType, L62);
  dart.setFieldSignature(ink_well._HighlightType, () => ({
    __proto__: dart.getFields(ink_well._HighlightType.__proto__),
    index: dart.finalFieldType(dart.legacy(core.int)),
    [_name$15]: dart.finalFieldType(dart.legacy(core.String))
  }));
  dart.defineExtensionMethods(ink_well._HighlightType, ['toString']);
  ink_well._HighlightType.pressed = C1856 || CT.C1856;
  ink_well._HighlightType.hover = C1857 || CT.C1857;
  ink_well._HighlightType.focus = C1858 || CT.C1858;
  ink_well._HighlightType.values = C1859 || CT.C1859;
  var _splashes = dart.privateName(ink_well, "_splashes");
  var _currentSplash = dart.privateName(ink_well, "_currentSplash");
  var _hovering = dart.privateName(ink_well, "_hovering");
  var _highlights = dart.privateName(ink_well, "_highlights");
  var _actionMap = dart.privateName(ink_well, "_actionMap");
  var _activeChildren = dart.privateName(ink_well, "_activeChildren");
  var _hasFocus = dart.privateName(ink_well, "_hasFocus");
  var _anyChildInkResponsePressed = dart.privateName(ink_well, "_anyChildInkResponsePressed");
  var _startSplash = dart.privateName(ink_well, "_startSplash");
  var _handleTap$ = dart.privateName(ink_well, "_handleTap");
  var _handleAction = dart.privateName(ink_well, "_handleAction");
  var _handleFocusHighlightModeChange = dart.privateName(ink_well, "_handleFocusHighlightModeChange");
  var _isWidgetEnabled = dart.privateName(ink_well, "_isWidgetEnabled");
  var _handleHoverChange = dart.privateName(ink_well, "_handleHoverChange");
  var _updateFocusHighlights = dart.privateName(ink_well, "_updateFocusHighlights");
  var _name$16 = dart.privateName(material_state, "_name");
  var C1861;
  var C1860;
  var C1863;
  var C1862;
  var C1864;
  var C1866;
  var C1865;
  var _createInkFeature = dart.privateName(ink_well, "_createInkFeature");
  var _name$17 = dart.privateName(media_query, "_name");
  var C1867;
  var C1868;
  var _shouldShowFocus = dart.privateName(ink_well, "_shouldShowFocus");
  var _name$18 = dart.privateName(focus_manager, "_name");
  var C1869;
  var C1870;
  var _handleFocusUpdate = dart.privateName(ink_well, "_handleFocusUpdate");
  var _handleTapDown = dart.privateName(ink_well, "_handleTapDown");
  var _handleTapCancel = dart.privateName(ink_well, "_handleTapCancel");
  var _handleDoubleTap = dart.privateName(ink_well, "_handleDoubleTap");
  var _handleLongPress$ = dart.privateName(ink_well, "_handleLongPress");
  var _handleMouseEnter = dart.privateName(ink_well, "_handleMouseEnter");
  var _handleMouseExit = dart.privateName(ink_well, "_handleMouseExit");
  var _canRequestFocus = dart.privateName(ink_well, "_canRequestFocus");
  var C1873;
  var C1874;
  var C1875;
  var C1876;
  var C1877;
  var C1878;
  var C1879;
  var C1880;
  var C1872;
  var C1871;
  var C1883;
  var C1884;
  var C1885;
  var C1886;
  var C1882;
  var C1881;
  var C1889;
  var C1890;
  var C1891;
  var C1892;
  var C1893;
  var C1888;
  var C1887;
  var C1896;
  var C1897;
  var C1895;
  var C1894;
  var C1900;
  var C1901;
  var C1899;
  var C1898;
  const State_AutomaticKeepAliveClientMixin$36 = class State_AutomaticKeepAliveClientMixin extends framework.State$(dart.legacy(ink_well._InkResponseStateWidget)) {};
  (State_AutomaticKeepAliveClientMixin$36.new = function() {
    automatic_keep_alive.AutomaticKeepAliveClientMixin$(dart.legacy(ink_well._InkResponseStateWidget))[dart.mixinNew].call(this);
    State_AutomaticKeepAliveClientMixin$36.__proto__.new.call(this);
  }).prototype = State_AutomaticKeepAliveClientMixin$36.prototype;
  dart.applyMixin(State_AutomaticKeepAliveClientMixin$36, automatic_keep_alive.AutomaticKeepAliveClientMixin$(dart.legacy(ink_well._InkResponseStateWidget)));
  ink_well._InkResponseState = class _InkResponseState extends State_AutomaticKeepAliveClientMixin$36 {
    get highlightsExist() {
      return this[_highlights][$values][$where](dart.fn(highlight => highlight != null, InkHighlightLToboolL()))[$isNotEmpty];
    }
    markChildInkResponsePressed(childState, value) {
      let t11;
      if (!(childState != null)) dart.assertFailed(null, L65, 747, 12, "childState != null");
      let lastAnyPressed = this[_anyChildInkResponsePressed];
      if (dart.test(value)) {
        this[_activeChildren].add(childState);
      } else {
        this[_activeChildren].remove(childState);
      }
      let nowAnyPressed = this[_anyChildInkResponsePressed];
      if (!dart.equals(nowAnyPressed, lastAnyPressed)) {
        t11 = this.widget.parentState;
        t11 == null ? null : t11.markChildInkResponsePressed(this, nowAnyPressed);
      }
    }
    get [_anyChildInkResponsePressed]() {
      return this[_activeChildren].isNotEmpty;
    }
    [_handleAction](intent) {
      this[_startSplash]({context: this.context});
      this[_handleTap$](this.context);
    }
    initState() {
      super.initState();
      this[_actionMap] = new (LinkedMapOfTypeL$ActionLOfIntentL()).from([dart.wrapType(ActivateIntentL()), new (CallbackActionOfActivateIntentL()).new({onInvoke: dart.bind(this, _handleAction)})]);
      focus_manager.FocusManager.instance.addHighlightModeListener(dart.bind(this, _handleFocusHighlightModeChange));
    }
    didUpdateWidget(oldWidget) {
      _InkResponseStateWidgetL().as(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this[_isWidgetEnabled](this.widget), this[_isWidgetEnabled](oldWidget))) {
        this[_handleHoverChange](this[_hovering]);
        this[_updateFocusHighlights]();
      }
    }
    dispose() {
      focus_manager.FocusManager.instance.removeHighlightModeListener(dart.bind(this, _handleFocusHighlightModeChange));
      super.dispose();
    }
    get wantKeepAlive() {
      return dart.test(this.highlightsExist) || this[_splashes] != null && dart.test(this[_splashes][$isNotEmpty]);
    }
    getHighlightColorForType(type) {
      let t11, t11$, t11$0, t11$1, t11$2, t11$3, t11$4;
      let focused = C1860 || CT.C1860;
      let hovered = C1862 || CT.C1862;
      switch (type) {
        case C1856 || CT.C1856:
        {
          t11 = this.widget.highlightColor;
          return t11 == null ? theme$.Theme.of(this.context).highlightColor : t11;
        }
        case C1858 || CT.C1858:
        {
          t11$1 = (t11$0 = (t11$ = this.widget.overlayColor, t11$ == null ? null : t11$.resolve(focused)), t11$0 == null ? this.widget.focusColor : t11$0);
          return t11$1 == null ? theme$.Theme.of(this.context).focusColor : t11$1;
        }
        case C1857 || CT.C1857:
        {
          t11$4 = (t11$3 = (t11$2 = this.widget.overlayColor, t11$2 == null ? null : t11$2.resolve(hovered)), t11$3 == null ? this.widget.hoverColor : t11$3);
          return t11$4 == null ? theme$.Theme.of(this.context).hoverColor : t11$4;
        }
      }
      if (!false) dart.assertFailed("Unhandled " + dart.str(dart.wrapType(_HighlightTypeL())) + " " + dart.str(type), L65, 808, 12, "false");
      return null;
    }
    getFadeDurationForType(type) {
      switch (type) {
        case C1856 || CT.C1856:
        {
          return C243 || CT.C243;
        }
        case C1857 || CT.C1857:
        case C1858 || CT.C1858:
        {
          return C1864 || CT.C1864;
        }
      }
      if (!false) dart.assertFailed("Unhandled " + dart.str(dart.wrapType(_HighlightTypeL())) + " " + dart.str(type), L65, 820, 12, "false");
      return null;
    }
    updateHighlight(type, opts) {
      let t11, t12, t11$, t12$, t11$0, t12$0, t11$1;
      let value = opts && 'value' in opts ? opts.value : null;
      let highlight = this[_highlights][$_get](type);
      const handleInkRemoval = () => {
        if (!(this[_highlights][$_get](type) != null)) dart.assertFailed(null, L65, 827, 14, "_highlights[type] != null");
        this[_highlights][$_set](type, null);
        this.updateKeepAlive();
      };
      dart.fn(handleInkRemoval, VoidTovoid());
      if (type == ink_well._HighlightType.pressed) {
        t11 = this.widget.parentState;
        t11 == null ? null : t11.markChildInkResponsePressed(this, value);
      }
      if (dart.equals(value, highlight != null && dart.test(highlight.active))) return;
      if (dart.test(value)) {
        if (highlight == null) {
          let referenceBox = RenderBoxL().as(this.context.findRenderObject());
          this[_highlights][$_set](type, new ink_highlight.InkHighlight.new({controller: material.Material.of(this.context), referenceBox: referenceBox, color: this.getHighlightColorForType(type), shape: this.widget.highlightShape, radius: this.widget.radius, borderRadius: this.widget.borderRadius, customBorder: this.widget.customBorder, rectCallback: (t11$ = this.widget, t12 = referenceBox, t11$.getRectCallback(t12)), onRemoved: handleInkRemoval, textDirection: basic.Directionality.of(this.context), fadeDuration: this.getFadeDurationForType(type)}));
          this.updateKeepAlive();
        } else {
          highlight.activate();
        }
      } else {
        highlight.deactivate();
      }
      if (!dart.equals(value, this[_highlights][$_get](type) != null && dart.test(this[_highlights][$_get](type).active))) dart.assertFailed(null, L65, 860, 12, "value == (_highlights[type] != null && _highlights[type].active)");
      switch (type) {
        case C1856 || CT.C1856:
        {
          if (this.widget.onHighlightChanged != null) {
            t11$0 = this.widget;
            t12$ = value;
            t11$0.onHighlightChanged(t12$);
          }
          break;
        }
        case C1857 || CT.C1857:
        {
          if (this.widget.onHover != null) {
            t11$1 = this.widget;
            t12$0 = value;
            t11$1.onHover(t12$0);
          }
          break;
        }
        case C1858 || CT.C1858:
        {
          break;
        }
      }
    }
    [_createInkFeature](globalPosition) {
      let t11, t11$, t11$0, t12, t11$1, t11$2;
      let inkController = material.Material.of(this.context);
      let referenceBox = RenderBoxL().as(this.context.findRenderObject());
      let position = referenceBox.globalToLocal(globalPosition);
      let pressed = C1865 || CT.C1865;
      let color = (t11$0 = (t11$ = (t11 = this.widget.overlayColor, t11 == null ? null : t11.resolve(pressed)), t11$ == null ? this.widget.splashColor : t11$), t11$0 == null ? theme$.Theme.of(this.context).splashColor : t11$0);
      let rectCallback = dart.test(this.widget.containedInkWell) ? (t11$1 = this.widget, t12 = referenceBox, t11$1.getRectCallback(t12)) : null;
      let borderRadius = this.widget.borderRadius;
      let customBorder = this.widget.customBorder;
      let splash = null;
      const onRemoved = () => {
        if (this[_splashes] != null) {
          if (!dart.test(this[_splashes].contains(splash))) dart.assertFailed(null, L65, 889, 16, "_splashes.contains(splash)");
          this[_splashes].remove(splash);
          if (dart.equals(this[_currentSplash], splash)) this[_currentSplash] = null;
          this.updateKeepAlive();
        }
      };
      dart.fn(onRemoved, VoidTovoid());
      splash = (t11$2 = this.widget.splashFactory, t11$2 == null ? theme$.Theme.of(this.context).splashFactory : t11$2).create({controller: inkController, referenceBox: referenceBox, position: position, color: color, containedInkWell: this.widget.containedInkWell, rectCallback: rectCallback, radius: this.widget.radius, borderRadius: borderRadius, customBorder: customBorder, onRemoved: onRemoved, textDirection: basic.Directionality.of(this.context)});
      return splash;
    }
    [_handleFocusHighlightModeChange](mode) {
      if (!dart.test(this.mounted)) {
        return;
      }
      this.setState(dart.fn(() => {
        this[_updateFocusHighlights]();
      }, VoidToNullN()));
    }
    get [_shouldShowFocus]() {
      let t11, t11$;
      let mode = (t11$ = (t11 = media_query.MediaQuery.of(this.context, {nullOk: true}), t11 == null ? null : t11.navigationMode), t11$ == null ? media_query.NavigationMode.traditional : t11$);
      switch (mode) {
        case C1867 || CT.C1867:
        {
          return dart.test(this.enabled) && dart.test(this[_hasFocus]);
        }
        case C1868 || CT.C1868:
        {
          return this[_hasFocus];
        }
      }
      if (!false) dart.assertFailed("Navigation mode " + dart.str(mode) + " not handled", L65, 931, 12, "false");
      return null;
    }
    [_updateFocusHighlights]() {
      let showFocus = null;
      switch (focus_manager.FocusManager.instance.highlightMode) {
        case C1869 || CT.C1869:
        {
          showFocus = false;
          break;
        }
        case C1870 || CT.C1870:
        {
          showFocus = this[_shouldShowFocus];
          break;
        }
      }
      this.updateHighlight(ink_well._HighlightType.focus, {value: showFocus});
    }
    [_handleFocusUpdate](hasFocus) {
      let t12, t11;
      this[_hasFocus] = hasFocus;
      this[_updateFocusHighlights]();
      if (this.widget.onFocusChange != null) {
        t11 = this.widget;
        t12 = hasFocus;
        t11.onFocusChange(t12);
      }
    }
    [_handleTapDown](details) {
      let t12, t11;
      if (dart.test(this[_anyChildInkResponsePressed])) return;
      this[_startSplash]({details: details});
      if (this.widget.onTapDown != null) {
        t11 = this.widget;
        t12 = details;
        t11.onTapDown(t12);
      }
    }
    [_startSplash](opts) {
      let details = opts && 'details' in opts ? opts.details : null;
      let context = opts && 'context' in opts ? opts.context : null;
      if (!(details != null || context != null)) dart.assertFailed(null, L65, 967, 12, "details != null || context != null");
      let globalPosition = null;
      if (context != null) {
        let referenceBox = RenderBoxL().as(context.findRenderObject());
        if (!dart.test(referenceBox.hasSize)) dart.assertFailed("InkResponse must be done with layout before starting a splash.", L65, 972, 14, "referenceBox.hasSize");
        globalPosition = referenceBox.localToGlobal(referenceBox.paintBounds.center);
      } else {
        globalPosition = details.globalPosition;
      }
      let splash = this[_createInkFeature](globalPosition);
      this[_splashes] == null ? this[_splashes] = new (_HashSetOfInteractiveInkFeatureL()).new() : null;
      this[_splashes].add(splash);
      this[_currentSplash] = splash;
      this.updateKeepAlive();
      this.updateHighlight(ink_well._HighlightType.pressed, {value: true});
    }
    [_handleTap$](context) {
      let t11;
      t11 = this[_currentSplash];
      t11 == null ? null : t11.confirm();
      this[_currentSplash] = null;
      this.updateHighlight(ink_well._HighlightType.pressed, {value: false});
      if (this.widget.onTap != null) {
        if (dart.test(this.widget.enableFeedback)) feedback.Feedback.forTap(context);
        this.widget.onTap();
      }
    }
    [_handleTapCancel]() {
      let t11;
      t11 = this[_currentSplash];
      t11 == null ? null : t11.cancel();
      this[_currentSplash] = null;
      if (this.widget.onTapCancel != null) {
        this.widget.onTapCancel();
      }
      this.updateHighlight(ink_well._HighlightType.pressed, {value: false});
    }
    [_handleDoubleTap]() {
      let t11;
      t11 = this[_currentSplash];
      t11 == null ? null : t11.confirm();
      this[_currentSplash] = null;
      if (this.widget.onDoubleTap != null) this.widget.onDoubleTap();
    }
    [_handleLongPress$](context) {
      let t11;
      t11 = this[_currentSplash];
      t11 == null ? null : t11.confirm();
      this[_currentSplash] = null;
      if (this.widget.onLongPress != null) {
        if (dart.test(this.widget.enableFeedback)) feedback.Feedback.forLongPress(context);
        this.widget.onLongPress();
      }
    }
    deactivate() {
      let t11, t11$;
      if (this[_splashes] != null) {
        let splashes = this[_splashes];
        this[_splashes] = null;
        for (let splash of splashes)
          splash.dispose();
        this[_currentSplash] = null;
      }
      if (!(this[_currentSplash] == null)) dart.assertFailed(null, L65, 1031, 12, "_currentSplash == null");
      for (let highlight of this[_highlights][$keys]) {
        t11 = this[_highlights][$_get](highlight);
        t11 == null ? null : t11.dispose();
        this[_highlights][$_set](highlight, null);
      }
      t11$ = this.widget.parentState;
      t11$ == null ? null : t11$.markChildInkResponsePressed(this, false);
      super.deactivate();
    }
    [_isWidgetEnabled](widget) {
      return widget.onTap != null || widget.onDoubleTap != null || widget.onLongPress != null;
    }
    get enabled() {
      return this[_isWidgetEnabled](this.widget);
    }
    [_handleMouseEnter](event) {
      return this[_handleHoverChange](true);
    }
    [_handleMouseExit](event) {
      return this[_handleHoverChange](false);
    }
    [_handleHoverChange](hovering) {
      if (!dart.equals(this[_hovering], hovering)) {
        this[_hovering] = hovering;
        this.updateHighlight(ink_well._HighlightType.hover, {value: dart.test(this.enabled) && dart.test(this[_hovering])});
      }
    }
    get [_canRequestFocus]() {
      let t11, t11$;
      let mode = (t11$ = (t11 = media_query.MediaQuery.of(this.context, {nullOk: true}), t11 == null ? null : t11.navigationMode), t11$ == null ? media_query.NavigationMode.traditional : t11$);
      switch (mode) {
        case C1867 || CT.C1867:
        {
          return dart.test(this.enabled) && dart.test(this.widget.canRequestFocus);
        }
        case C1868 || CT.C1868:
        {
          return true;
        }
      }
      if (!false) dart.assertFailed("NavigationMode " + dart.str(mode) + " not handled.", L65, 1063, 12, "false");
      return null;
    }
    build(context) {
      let t12, t11, t11$, t12$, t12$0, t12$1, t11$0, t11$1;
      if (!dart.test((t11 = this.widget, t12 = context, t11.debugCheckContext(t12)))) dart.assertFailed(null, L65, 1069, 12, "widget.debugCheckContext(context)");
      super.build(context);
      for (let type of this[_highlights][$keys]) {
        t11$ = this[_highlights][$_get](type);
        t11$ == null ? null : t11$.color = this.getHighlightColorForType(type);
      }
      let pressed = C1865 || CT.C1865;
      t11$0 = this[_currentSplash];
      t11$0 == null ? null : t11$0.color = (t12$1 = (t12$0 = (t12$ = this.widget.overlayColor, t12$ == null ? null : t12$.resolve(pressed)), t12$0 == null ? this.widget.splashColor : t12$0), t12$1 == null ? theme$.Theme.of(context).splashColor : t12$1);
      let effectiveMouseCursor = material_state.MaterialStateProperty.resolveAs(MouseCursorL(), (t11$1 = this.widget.mouseCursor, t11$1 == null ? material_state.MaterialStateMouseCursor.clickable : t11$1), (() => {
        let t11 = new (_HashSetOfMaterialStateL()).new();
        if (!dart.test(this.enabled)) t11.add(material_state.MaterialState.disabled);
        if (dart.test(this[_hovering])) t11.add(material_state.MaterialState.hovered);
        if (dart.test(this[_hasFocus])) t11.add(material_state.MaterialState.focused);
        return t11;
      })());
      return new ink_well._ParentInkResponseProvider.new({state: this, child: new actions.Actions.new({actions: this[_actionMap], child: new focus_scope.Focus.new({focusNode: this.widget.focusNode, canRequestFocus: this[_canRequestFocus], onFocusChange: dart.bind(this, _handleFocusUpdate), autofocus: this.widget.autofocus, child: new basic.MouseRegion.new({cursor: effectiveMouseCursor, onEnter: dart.test(this.enabled) ? dart.bind(this, _handleMouseEnter) : null, onExit: dart.test(this.enabled) ? dart.bind(this, _handleMouseExit) : null, child: new gesture_detector.GestureDetector.new({onTapDown: dart.test(this.enabled) ? dart.bind(this, _handleTapDown) : null, onTap: dart.test(this.enabled) ? dart.fn(() => this[_handleTap$](context), VoidTovoid()) : null, onTapCancel: dart.test(this.enabled) ? dart.bind(this, _handleTapCancel) : null, onDoubleTap: this.widget.onDoubleTap != null ? dart.bind(this, _handleDoubleTap) : null, onLongPress: this.widget.onLongPress != null ? dart.fn(() => this[_handleLongPress$](context), VoidTovoid()) : null, behavior: proxy_box.HitTestBehavior.opaque, excludeFromSemantics: this.widget.excludeFromSemantics, child: this.widget.child, $creationLocationd_0dea112b090073317d4: C1871 || CT.C1871}), $creationLocationd_0dea112b090073317d4: C1881 || CT.C1881}), $creationLocationd_0dea112b090073317d4: C1887 || CT.C1887}), $creationLocationd_0dea112b090073317d4: C1894 || CT.C1894}), $creationLocationd_0dea112b090073317d4: C1898 || CT.C1898});
    }
  };
  (ink_well._InkResponseState.new = function() {
    this[_splashes] = null;
    this[_currentSplash] = null;
    this[_hovering] = false;
    this[_highlights] = new (LinkedMapOf_HighlightTypeL$InkHighlightL()).new();
    this[_actionMap] = null;
    this[_activeChildren] = new (ObserverListOf_ParentInkResponseStateL()).new();
    this[_hasFocus] = false;
    ink_well._InkResponseState.__proto__.new.call(this);
    ;
  }).prototype = ink_well._InkResponseState.prototype;
  dart.addTypeTests(ink_well._InkResponseState);
  dart.addTypeCaches(ink_well._InkResponseState);
  ink_well._InkResponseState[dart.implements] = () => [ink_well._ParentInkResponseState];
  dart.setMethodSignature(ink_well._InkResponseState, () => ({
    __proto__: dart.getMethods(ink_well._InkResponseState.__proto__),
    markChildInkResponsePressed: dart.fnType(dart.void, [dart.legacy(ink_well._ParentInkResponseState), dart.legacy(core.bool)]),
    [_handleAction]: dart.fnType(dart.void, [dart.legacy(actions.ActivateIntent)]),
    getHighlightColorForType: dart.fnType(dart.legacy(ui.Color), [dart.legacy(ink_well._HighlightType)]),
    getFadeDurationForType: dart.fnType(dart.legacy(core.Duration), [dart.legacy(ink_well._HighlightType)]),
    updateHighlight: dart.fnType(dart.void, [dart.legacy(ink_well._HighlightType)], {value: dart.legacy(core.bool)}, {}),
    [_createInkFeature]: dart.fnType(dart.legacy(ink_well.InteractiveInkFeature), [dart.legacy(ui.Offset)]),
    [_handleFocusHighlightModeChange]: dart.fnType(dart.void, [dart.legacy(focus_manager.FocusHighlightMode)]),
    [_updateFocusHighlights]: dart.fnType(dart.void, []),
    [_handleFocusUpdate]: dart.fnType(dart.void, [dart.legacy(core.bool)]),
    [_handleTapDown]: dart.fnType(dart.void, [dart.legacy(tap.TapDownDetails)]),
    [_startSplash]: dart.fnType(dart.void, [], {context: dart.legacy(framework.BuildContext), details: dart.legacy(tap.TapDownDetails)}, {}),
    [_handleTap$]: dart.fnType(dart.void, [dart.legacy(framework.BuildContext)]),
    [_handleTapCancel]: dart.fnType(dart.void, []),
    [_handleDoubleTap]: dart.fnType(dart.void, []),
    [_handleLongPress$]: dart.fnType(dart.void, [dart.legacy(framework.BuildContext)]),
    [_isWidgetEnabled]: dart.fnType(dart.legacy(core.bool), [dart.legacy(ink_well._InkResponseStateWidget)]),
    [_handleMouseEnter]: dart.fnType(dart.void, [dart.legacy(events.PointerEnterEvent)]),
    [_handleMouseExit]: dart.fnType(dart.void, [dart.legacy(events.PointerExitEvent)]),
    [_handleHoverChange]: dart.fnType(dart.void, [dart.legacy(core.bool)])
  }));
  dart.setGetterSignature(ink_well._InkResponseState, () => ({
    __proto__: dart.getGetters(ink_well._InkResponseState.__proto__),
    highlightsExist: dart.legacy(core.bool),
    [_anyChildInkResponsePressed]: dart.legacy(core.bool),
    wantKeepAlive: dart.legacy(core.bool),
    [_shouldShowFocus]: dart.legacy(core.bool),
    enabled: dart.legacy(core.bool),
    [_canRequestFocus]: dart.legacy(core.bool)
  }));
  dart.setLibraryUri(ink_well._InkResponseState, L62);
  dart.setFieldSignature(ink_well._InkResponseState, () => ({
    __proto__: dart.getFields(ink_well._InkResponseState.__proto__),
    [_splashes]: dart.fieldType(dart.legacy(core.Set$(dart.legacy(ink_well.InteractiveInkFeature)))),
    [_currentSplash]: dart.fieldType(dart.legacy(ink_well.InteractiveInkFeature)),
    [_hovering]: dart.fieldType(dart.legacy(core.bool)),
    [_highlights]: dart.finalFieldType(dart.legacy(core.Map$(dart.legacy(ink_well._HighlightType), dart.legacy(ink_highlight.InkHighlight)))),
    [_actionMap]: dart.fieldType(dart.legacy(core.Map$(dart.legacy(core.Type), dart.legacy(actions.Action$(dart.legacy(actions.Intent)))))),
    [_activeChildren]: dart.finalFieldType(dart.legacy(observer_list.ObserverList$(dart.legacy(ink_well._ParentInkResponseState)))),
    [_hasFocus]: dart.fieldType(dart.legacy(core.bool))
  }));
  ink_well.InkWell = class InkWell extends ink_well.InkResponse {};
  (ink_well.InkWell.new = function(opts) {
    let t12, t12$, t12$0, t12$1;
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    let onDoubleTap = opts && 'onDoubleTap' in opts ? opts.onDoubleTap : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let onTapDown = opts && 'onTapDown' in opts ? opts.onTapDown : null;
    let onTapCancel = opts && 'onTapCancel' in opts ? opts.onTapCancel : null;
    let onHighlightChanged = opts && 'onHighlightChanged' in opts ? opts.onHighlightChanged : null;
    let onHover = opts && 'onHover' in opts ? opts.onHover : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let splashFactory = opts && 'splashFactory' in opts ? opts.splashFactory : null;
    let radius = opts && 'radius' in opts ? opts.radius : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let customBorder = opts && 'customBorder' in opts ? opts.customBorder : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : true;
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : false;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let canRequestFocus = opts && 'canRequestFocus' in opts ? opts.canRequestFocus : true;
    let onFocusChange = opts && 'onFocusChange' in opts ? opts.onFocusChange : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    ink_well.InkWell.__proto__.new.call(this, {key: key, child: child, onTap: onTap, onDoubleTap: onDoubleTap, onLongPress: onLongPress, onTapDown: onTapDown, onTapCancel: onTapCancel, onHighlightChanged: onHighlightChanged, onHover: onHover, mouseCursor: mouseCursor, containedInkWell: true, highlightShape: box_border.BoxShape.rectangle, focusColor: focusColor, hoverColor: hoverColor, highlightColor: highlightColor, overlayColor: overlayColor, splashColor: splashColor, splashFactory: splashFactory, radius: radius, borderRadius: borderRadius, customBorder: customBorder, enableFeedback: (t12 = enableFeedback, t12 == null ? true : t12), excludeFromSemantics: (t12$ = excludeFromSemantics, t12$ == null ? false : t12$), focusNode: focusNode, canRequestFocus: (t12$0 = canRequestFocus, t12$0 == null ? true : t12$0), onFocusChange: onFocusChange, autofocus: (t12$1 = autofocus, t12$1 == null ? false : t12$1), $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = ink_well.InkWell.prototype;
  dart.addTypeTests(ink_well.InkWell);
  dart.addTypeCaches(ink_well.InkWell);
  dart.setLibraryUri(ink_well.InkWell, L62);
  var _name$19 = dart.privateName(bottom_navigation_bar, "_name");
  var C1902;
  var C1903;
  var C1904;
  bottom_navigation_bar.BottomNavigationBarType = class BottomNavigationBarType extends core.Object {
    toString() {
      return this[_name$19];
    }
  };
  (bottom_navigation_bar.BottomNavigationBarType.new = function(index, _name) {
    this.index = index;
    this[_name$19] = _name;
    ;
  }).prototype = bottom_navigation_bar.BottomNavigationBarType.prototype;
  dart.addTypeTests(bottom_navigation_bar.BottomNavigationBarType);
  dart.addTypeCaches(bottom_navigation_bar.BottomNavigationBarType);
  dart.setMethodSignature(bottom_navigation_bar.BottomNavigationBarType, () => ({
    __proto__: dart.getMethods(bottom_navigation_bar.BottomNavigationBarType.__proto__),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setLibraryUri(bottom_navigation_bar.BottomNavigationBarType, L84);
  dart.setFieldSignature(bottom_navigation_bar.BottomNavigationBarType, () => ({
    __proto__: dart.getFields(bottom_navigation_bar.BottomNavigationBarType.__proto__),
    index: dart.finalFieldType(dart.legacy(core.int)),
    [_name$19]: dart.finalFieldType(dart.legacy(core.String))
  }));
  dart.defineExtensionMethods(bottom_navigation_bar.BottomNavigationBarType, ['toString']);
  bottom_navigation_bar.BottomNavigationBarType.fixed = C1902 || CT.C1902;
  bottom_navigation_bar.BottomNavigationBarType.shifting = C1903 || CT.C1903;
  bottom_navigation_bar.BottomNavigationBarType.values = C1904 || CT.C1904;
  var items$ = dart.privateName(bottom_navigation_bar, "BottomNavigationBar.items");
  var onTap$3 = dart.privateName(bottom_navigation_bar, "BottomNavigationBar.onTap");
  var currentIndex$ = dart.privateName(bottom_navigation_bar, "BottomNavigationBar.currentIndex");
  var elevation$17 = dart.privateName(bottom_navigation_bar, "BottomNavigationBar.elevation");
  var type$ = dart.privateName(bottom_navigation_bar, "BottomNavigationBar.type");
  var backgroundColor$12 = dart.privateName(bottom_navigation_bar, "BottomNavigationBar.backgroundColor");
  var iconSize$0 = dart.privateName(bottom_navigation_bar, "BottomNavigationBar.iconSize");
  var selectedItemColor$ = dart.privateName(bottom_navigation_bar, "BottomNavigationBar.selectedItemColor");
  var unselectedItemColor$ = dart.privateName(bottom_navigation_bar, "BottomNavigationBar.unselectedItemColor");
  var selectedIconTheme$1 = dart.privateName(bottom_navigation_bar, "BottomNavigationBar.selectedIconTheme");
  var unselectedIconTheme$1 = dart.privateName(bottom_navigation_bar, "BottomNavigationBar.unselectedIconTheme");
  var selectedLabelStyle$ = dart.privateName(bottom_navigation_bar, "BottomNavigationBar.selectedLabelStyle");
  var unselectedLabelStyle$2 = dart.privateName(bottom_navigation_bar, "BottomNavigationBar.unselectedLabelStyle");
  var selectedFontSize$ = dart.privateName(bottom_navigation_bar, "BottomNavigationBar.selectedFontSize");
  var unselectedFontSize$ = dart.privateName(bottom_navigation_bar, "BottomNavigationBar.unselectedFontSize");
  var showUnselectedLabels$ = dart.privateName(bottom_navigation_bar, "BottomNavigationBar.showUnselectedLabels");
  var showSelectedLabels$ = dart.privateName(bottom_navigation_bar, "BottomNavigationBar.showSelectedLabels");
  var mouseCursor$9 = dart.privateName(bottom_navigation_bar, "BottomNavigationBar.mouseCursor");
  bottom_navigation_bar.BottomNavigationBar = class BottomNavigationBar extends framework.StatefulWidget {
    get items() {
      return this[items$];
    }
    set items(value) {
      super.items = value;
    }
    get onTap() {
      return this[onTap$3];
    }
    set onTap(value) {
      super.onTap = value;
    }
    get currentIndex() {
      return this[currentIndex$];
    }
    set currentIndex(value) {
      super.currentIndex = value;
    }
    get elevation() {
      return this[elevation$17];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get type() {
      return this[type$];
    }
    set type(value) {
      super.type = value;
    }
    get backgroundColor() {
      return this[backgroundColor$12];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get iconSize() {
      return this[iconSize$0];
    }
    set iconSize(value) {
      super.iconSize = value;
    }
    get selectedItemColor() {
      return this[selectedItemColor$];
    }
    set selectedItemColor(value) {
      super.selectedItemColor = value;
    }
    get unselectedItemColor() {
      return this[unselectedItemColor$];
    }
    set unselectedItemColor(value) {
      super.unselectedItemColor = value;
    }
    get selectedIconTheme() {
      return this[selectedIconTheme$1];
    }
    set selectedIconTheme(value) {
      super.selectedIconTheme = value;
    }
    get unselectedIconTheme() {
      return this[unselectedIconTheme$1];
    }
    set unselectedIconTheme(value) {
      super.unselectedIconTheme = value;
    }
    get selectedLabelStyle() {
      return this[selectedLabelStyle$];
    }
    set selectedLabelStyle(value) {
      super.selectedLabelStyle = value;
    }
    get unselectedLabelStyle() {
      return this[unselectedLabelStyle$2];
    }
    set unselectedLabelStyle(value) {
      super.unselectedLabelStyle = value;
    }
    get selectedFontSize() {
      return this[selectedFontSize$];
    }
    set selectedFontSize(value) {
      super.selectedFontSize = value;
    }
    get unselectedFontSize() {
      return this[unselectedFontSize$];
    }
    set unselectedFontSize(value) {
      super.unselectedFontSize = value;
    }
    get showUnselectedLabels() {
      return this[showUnselectedLabels$];
    }
    set showUnselectedLabels(value) {
      super.showUnselectedLabels = value;
    }
    get showSelectedLabels() {
      return this[showSelectedLabels$];
    }
    set showSelectedLabels(value) {
      super.showSelectedLabels = value;
    }
    get mouseCursor() {
      return this[mouseCursor$9];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get fixedColor() {
      return this.selectedItemColor;
    }
    createState() {
      return new bottom_navigation_bar._BottomNavigationBarState.new();
    }
  };
  (bottom_navigation_bar.BottomNavigationBar.new = function(opts) {
    let t12;
    let key = opts && 'key' in opts ? opts.key : null;
    let items = opts && 'items' in opts ? opts.items : null;
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    let currentIndex = opts && 'currentIndex' in opts ? opts.currentIndex : 0;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let type = opts && 'type' in opts ? opts.type : null;
    let fixedColor = opts && 'fixedColor' in opts ? opts.fixedColor : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let iconSize = opts && 'iconSize' in opts ? opts.iconSize : 24;
    let selectedItemColor = opts && 'selectedItemColor' in opts ? opts.selectedItemColor : null;
    let unselectedItemColor = opts && 'unselectedItemColor' in opts ? opts.unselectedItemColor : null;
    let selectedIconTheme = opts && 'selectedIconTheme' in opts ? opts.selectedIconTheme : null;
    let unselectedIconTheme = opts && 'unselectedIconTheme' in opts ? opts.unselectedIconTheme : null;
    let selectedFontSize = opts && 'selectedFontSize' in opts ? opts.selectedFontSize : 14;
    let unselectedFontSize = opts && 'unselectedFontSize' in opts ? opts.unselectedFontSize : 12;
    let selectedLabelStyle = opts && 'selectedLabelStyle' in opts ? opts.selectedLabelStyle : null;
    let unselectedLabelStyle = opts && 'unselectedLabelStyle' in opts ? opts.unselectedLabelStyle : null;
    let showSelectedLabels = opts && 'showSelectedLabels' in opts ? opts.showSelectedLabels : true;
    let showUnselectedLabels = opts && 'showUnselectedLabels' in opts ? opts.showUnselectedLabels : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[items$] = items;
    this[onTap$3] = onTap;
    this[currentIndex$] = currentIndex;
    this[elevation$17] = elevation;
    this[type$] = type;
    this[backgroundColor$12] = backgroundColor;
    this[iconSize$0] = iconSize;
    this[unselectedItemColor$] = unselectedItemColor;
    this[selectedIconTheme$1] = selectedIconTheme;
    this[unselectedIconTheme$1] = unselectedIconTheme;
    this[selectedFontSize$] = selectedFontSize;
    this[unselectedFontSize$] = unselectedFontSize;
    this[selectedLabelStyle$] = selectedLabelStyle;
    this[unselectedLabelStyle$2] = unselectedLabelStyle;
    this[showSelectedLabels$] = showSelectedLabels;
    this[showUnselectedLabels$] = showUnselectedLabels;
    this[mouseCursor$9] = mouseCursor;
    if (!(items != null)) dart.assertFailed(null, L85, 194, 15, "items != null");
    if (!(dart.notNull(items[$length]) >= 2)) dart.assertFailed(null, L85, 195, 15, "items.length >= 2");
    if (!dart.equals(items[$every](dart.fn(item => item.title != null, BottomNavigationBarItemLToboolL())), true)) dart.assertFailed("Every item must have a non-null title", L85, 197, 9, "items.every((BottomNavigationBarItem item) => item.title != null) == true");
    if (!(0 <= dart.notNull(currentIndex) && dart.notNull(currentIndex) < dart.notNull(items[$length]))) dart.assertFailed(null, L85, 200, 15, "0 <= currentIndex && currentIndex < items.length");
    if (!(elevation == null || dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, L85, 201, 15, "elevation == null || elevation >= 0.0");
    if (!(iconSize != null && dart.notNull(iconSize) >= 0.0)) dart.assertFailed(null, L85, 202, 15, "iconSize != null && iconSize >= 0.0");
    if (!(selectedItemColor == null || fixedColor == null)) dart.assertFailed("Either selectedItemColor or fixedColor can be specified, but not both", L85, 204, 10, "selectedItemColor == null || fixedColor == null");
    if (!(selectedFontSize != null && dart.notNull(selectedFontSize) >= 0.0)) dart.assertFailed(null, L85, 207, 15, "selectedFontSize != null && selectedFontSize >= 0.0");
    if (!(unselectedFontSize != null && dart.notNull(unselectedFontSize) >= 0.0)) dart.assertFailed(null, L85, 208, 15, "unselectedFontSize != null && unselectedFontSize >= 0.0");
    if (!(showSelectedLabels != null)) dart.assertFailed(null, L85, 209, 15, "showSelectedLabels != null");
    this[selectedItemColor$] = (t12 = selectedItemColor, t12 == null ? fixedColor : t12);
    bottom_navigation_bar.BottomNavigationBar.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = bottom_navigation_bar.BottomNavigationBar.prototype;
  dart.addTypeTests(bottom_navigation_bar.BottomNavigationBar);
  dart.addTypeCaches(bottom_navigation_bar.BottomNavigationBar);
  dart.setMethodSignature(bottom_navigation_bar.BottomNavigationBar, () => ({
    __proto__: dart.getMethods(bottom_navigation_bar.BottomNavigationBar.__proto__),
    createState: dart.fnType(dart.legacy(bottom_navigation_bar._BottomNavigationBarState), [])
  }));
  dart.setGetterSignature(bottom_navigation_bar.BottomNavigationBar, () => ({
    __proto__: dart.getGetters(bottom_navigation_bar.BottomNavigationBar.__proto__),
    fixedColor: dart.legacy(ui.Color)
  }));
  dart.setLibraryUri(bottom_navigation_bar.BottomNavigationBar, L84);
  dart.setFieldSignature(bottom_navigation_bar.BottomNavigationBar, () => ({
    __proto__: dart.getFields(bottom_navigation_bar.BottomNavigationBar.__proto__),
    items: dart.finalFieldType(dart.legacy(core.List$(dart.legacy(bottom_navigation_bar_item.BottomNavigationBarItem)))),
    onTap: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, [dart.legacy(core.int)]))),
    currentIndex: dart.finalFieldType(dart.legacy(core.int)),
    elevation: dart.finalFieldType(dart.legacy(core.double)),
    type: dart.finalFieldType(dart.legacy(bottom_navigation_bar.BottomNavigationBarType)),
    backgroundColor: dart.finalFieldType(dart.legacy(ui.Color)),
    iconSize: dart.finalFieldType(dart.legacy(core.double)),
    selectedItemColor: dart.finalFieldType(dart.legacy(ui.Color)),
    unselectedItemColor: dart.finalFieldType(dart.legacy(ui.Color)),
    selectedIconTheme: dart.finalFieldType(dart.legacy(icon_theme_data.IconThemeData)),
    unselectedIconTheme: dart.finalFieldType(dart.legacy(icon_theme_data.IconThemeData)),
    selectedLabelStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    unselectedLabelStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    selectedFontSize: dart.finalFieldType(dart.legacy(core.double)),
    unselectedFontSize: dart.finalFieldType(dart.legacy(core.double)),
    showUnselectedLabels: dart.finalFieldType(dart.legacy(core.bool)),
    showSelectedLabels: dart.finalFieldType(dart.legacy(core.bool)),
    mouseCursor: dart.finalFieldType(dart.legacy(mouse_cursor.MouseCursor))
  }));
  var C1907;
  var C1908;
  var C1909;
  var C1910;
  var C1911;
  var C1912;
  var C1913;
  var C1906;
  var C1905;
  var C1916;
  var C1917;
  var C1918;
  var C1919;
  var C1920;
  var C1921;
  var C1922;
  var C1915;
  var C1914;
  var C1925;
  var C1926;
  var C1927;
  var C1928;
  var C1924;
  var C1923;
  var C1931;
  var C1932;
  var C1930;
  var C1929;
  var C1935;
  var C1936;
  var C1937;
  var C1934;
  var C1933;
  var C1940;
  var C1939;
  var C1938;
  var C1943;
  var C1942;
  var C1941;
  var C1946;
  var C1947;
  var C1948;
  var C1945;
  var C1944;
  var C1951;
  var C1952;
  var C1950;
  var C1949;
  var type$0 = dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.type");
  var item$ = dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.item");
  var animation$6 = dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.animation");
  var iconSize$1 = dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.iconSize");
  var onTap$4 = dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.onTap");
  var colorTween$ = dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.colorTween");
  var flex$ = dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.flex");
  var selected$1 = dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.selected");
  var selectedIconTheme$2 = dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.selectedIconTheme");
  var unselectedIconTheme$2 = dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.unselectedIconTheme");
  var selectedLabelStyle$0 = dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.selectedLabelStyle");
  var unselectedLabelStyle$3 = dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.unselectedLabelStyle");
  var indexLabel$ = dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.indexLabel");
  var showSelectedLabels$0 = dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.showSelectedLabels");
  var showUnselectedLabels$0 = dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.showUnselectedLabels");
  var mouseCursor$10 = dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.mouseCursor");
  bottom_navigation_bar._BottomNavigationTile = class _BottomNavigationTile extends framework.StatelessWidget {
    get type() {
      return this[type$0];
    }
    set type(value) {
      super.type = value;
    }
    get item() {
      return this[item$];
    }
    set item(value) {
      super.item = value;
    }
    get animation() {
      return this[animation$6];
    }
    set animation(value) {
      super.animation = value;
    }
    get iconSize() {
      return this[iconSize$1];
    }
    set iconSize(value) {
      super.iconSize = value;
    }
    get onTap() {
      return this[onTap$4];
    }
    set onTap(value) {
      super.onTap = value;
    }
    get colorTween() {
      return this[colorTween$];
    }
    set colorTween(value) {
      super.colorTween = value;
    }
    get flex() {
      return this[flex$];
    }
    set flex(value) {
      super.flex = value;
    }
    get selected() {
      return this[selected$1];
    }
    set selected(value) {
      super.selected = value;
    }
    get selectedIconTheme() {
      return this[selectedIconTheme$2];
    }
    set selectedIconTheme(value) {
      super.selectedIconTheme = value;
    }
    get unselectedIconTheme() {
      return this[unselectedIconTheme$2];
    }
    set unselectedIconTheme(value) {
      super.unselectedIconTheme = value;
    }
    get selectedLabelStyle() {
      return this[selectedLabelStyle$0];
    }
    set selectedLabelStyle(value) {
      super.selectedLabelStyle = value;
    }
    get unselectedLabelStyle() {
      return this[unselectedLabelStyle$3];
    }
    set unselectedLabelStyle(value) {
      super.unselectedLabelStyle = value;
    }
    get indexLabel() {
      return this[indexLabel$];
    }
    set indexLabel(value) {
      super.indexLabel = value;
    }
    get showSelectedLabels() {
      return this[showSelectedLabels$0];
    }
    set showSelectedLabels(value) {
      super.showSelectedLabels = value;
    }
    get showUnselectedLabels() {
      return this[showUnselectedLabels$0];
    }
    set showUnselectedLabels(value) {
      super.showUnselectedLabels = value;
    }
    get mouseCursor() {
      return this[mouseCursor$10];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    build(context) {
      let t12, t13, t13$, t12$, t12$0, t12$1, t13$0, t13$1, t12$2, t12$3, t12$4, t12$5, t12$6, t12$7, t12$8, t12$9;
      let size = null;
      let bottomTheme = bottom_navigation_bar_theme.BottomNavigationBarTheme.of(context);
      let selectedFontSize = this.selectedLabelStyle.fontSize;
      let selectedIconSize = (t12$0 = (t12$ = (t12 = this.selectedIconTheme, t12 == null ? null : t12.size), t12$ == null ? (t13$ = (t13 = bottomTheme, t13 == null ? null : t13.selectedIconTheme), t13$ == null ? null : t13$.size) : t12$), t12$0 == null ? this.iconSize : t12$0);
      let unselectedIconSize = (t12$3 = (t12$2 = (t12$1 = this.unselectedIconTheme, t12$1 == null ? null : t12$1.size), t12$2 == null ? (t13$1 = (t13$0 = bottomTheme, t13$0 == null ? null : t13$0.unselectedIconTheme), t13$1 == null ? null : t13$1.size) : t12$2), t12$3 == null ? this.iconSize : t12$3);
      let selectedIconDiff = math.max(doubleL(), dart.notNull(selectedIconSize) - dart.notNull(unselectedIconSize), 0.0);
      let unselectedIconDiff = math.max(doubleL(), dart.notNull(unselectedIconSize) - dart.notNull(selectedIconSize), 0.0);
      let bottomPadding = null;
      let topPadding = null;
      if (dart.test(this.showSelectedLabels) && !dart.test(this.showUnselectedLabels)) {
        bottomPadding = new (TweenOfdoubleL()).new({begin: selectedIconDiff / 2.0, end: dart.notNull(selectedFontSize) / 2.0 - unselectedIconDiff / 2.0}).evaluate(this.animation);
        topPadding = new (TweenOfdoubleL()).new({begin: dart.notNull(selectedFontSize) + selectedIconDiff / 2.0, end: dart.notNull(selectedFontSize) / 2.0 - unselectedIconDiff / 2.0}).evaluate(this.animation);
      } else if (!dart.test(this.showSelectedLabels) && !dart.test(this.showUnselectedLabels)) {
        bottomPadding = new (TweenOfdoubleL()).new({begin: selectedIconDiff / 2.0, end: unselectedIconDiff / 2.0}).evaluate(this.animation);
        topPadding = new (TweenOfdoubleL()).new({begin: dart.notNull(selectedFontSize) + selectedIconDiff / 2.0, end: dart.notNull(selectedFontSize) + unselectedIconDiff / 2.0}).evaluate(this.animation);
      } else {
        bottomPadding = new (TweenOfdoubleL()).new({begin: dart.notNull(selectedFontSize) / 2.0 + selectedIconDiff / 2.0, end: dart.notNull(selectedFontSize) / 2.0 + unselectedIconDiff / 2.0}).evaluate(this.animation);
        topPadding = new (TweenOfdoubleL()).new({begin: dart.notNull(selectedFontSize) / 2.0 + selectedIconDiff / 2.0, end: dart.notNull(selectedFontSize) / 2.0 + unselectedIconDiff / 2.0}).evaluate(this.animation);
      }
      switch (this.type) {
        case C1902 || CT.C1902:
        {
          size = 1;
          break;
        }
        case C1903 || CT.C1903:
        {
          size = (dart.notNull(this.flex) * 1000.0)[$round]();
          break;
        }
      }
      return new basic.Expanded.new({flex: size, child: new basic.Semantics.new({container: true, selected: this.selected, child: new basic.Stack.new({children: JSArrayOfWidgetL().of([new ink_well.InkResponse.new({onTap: this.onTap, mouseCursor: this.mouseCursor, child: new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({top: topPadding, bottom: bottomPadding}), child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.center, mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, mainAxisSize: flex.MainAxisSize.min, children: JSArrayOfWidgetL().of([new bottom_navigation_bar._TileIcon.new({colorTween: this.colorTween, animation: this.animation, iconSize: this.iconSize, selected: this.selected, item: this.item, selectedIconTheme: (t12$4 = this.selectedIconTheme, t12$4 == null ? bottomTheme.selectedIconTheme : t12$4), unselectedIconTheme: (t12$5 = this.unselectedIconTheme, t12$5 == null ? bottomTheme.unselectedIconTheme : t12$5), $creationLocationd_0dea112b090073317d4: C1905 || CT.C1905}), new bottom_navigation_bar._Label.new({colorTween: this.colorTween, animation: this.animation, item: this.item, selectedLabelStyle: (t12$6 = this.selectedLabelStyle, t12$6 == null ? bottomTheme.selectedLabelStyle : t12$6), unselectedLabelStyle: (t12$7 = this.unselectedLabelStyle, t12$7 == null ? bottomTheme.unselectedLabelStyle : t12$7), showSelectedLabels: (t12$8 = this.showSelectedLabels, t12$8 == null ? bottomTheme.showUnselectedLabels : t12$8), showUnselectedLabels: (t12$9 = this.showUnselectedLabels, t12$9 == null ? bottomTheme.showUnselectedLabels : t12$9), $creationLocationd_0dea112b090073317d4: C1914 || CT.C1914})]), $creationLocationd_0dea112b090073317d4: C1923 || CT.C1923}), $creationLocationd_0dea112b090073317d4: C1929 || CT.C1929}), $creationLocationd_0dea112b090073317d4: C1933 || CT.C1933}), new basic.Semantics.new({label: this.indexLabel, $creationLocationd_0dea112b090073317d4: C1938 || CT.C1938})]), $creationLocationd_0dea112b090073317d4: C1941 || CT.C1941}), $creationLocationd_0dea112b090073317d4: C1944 || CT.C1944}), $creationLocationd_0dea112b090073317d4: C1949 || CT.C1949});
    }
  };
  (bottom_navigation_bar._BottomNavigationTile.new = function(type, item, animation, iconSize, opts) {
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    let colorTween = opts && 'colorTween' in opts ? opts.colorTween : null;
    let flex = opts && 'flex' in opts ? opts.flex : null;
    let selected = opts && 'selected' in opts ? opts.selected : false;
    let selectedLabelStyle = opts && 'selectedLabelStyle' in opts ? opts.selectedLabelStyle : null;
    let unselectedLabelStyle = opts && 'unselectedLabelStyle' in opts ? opts.unselectedLabelStyle : null;
    let selectedIconTheme = opts && 'selectedIconTheme' in opts ? opts.selectedIconTheme : null;
    let unselectedIconTheme = opts && 'unselectedIconTheme' in opts ? opts.unselectedIconTheme : null;
    let showSelectedLabels = opts && 'showSelectedLabels' in opts ? opts.showSelectedLabels : null;
    let showUnselectedLabels = opts && 'showUnselectedLabels' in opts ? opts.showUnselectedLabels : null;
    let indexLabel = opts && 'indexLabel' in opts ? opts.indexLabel : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[type$0] = type;
    this[item$] = item;
    this[animation$6] = animation;
    this[iconSize$1] = iconSize;
    this[onTap$4] = onTap;
    this[colorTween$] = colorTween;
    this[flex$] = flex;
    this[selected$1] = selected;
    this[selectedLabelStyle$0] = selectedLabelStyle;
    this[unselectedLabelStyle$3] = unselectedLabelStyle;
    this[selectedIconTheme$2] = selectedIconTheme;
    this[unselectedIconTheme$2] = unselectedIconTheme;
    this[showSelectedLabels$0] = showSelectedLabels;
    this[showUnselectedLabels$0] = showUnselectedLabels;
    this[indexLabel$] = indexLabel;
    this[mouseCursor$10] = mouseCursor;
    if (!(type != null)) dart.assertFailed(null, L85, 351, 17, "type != null");
    if (!(item != null)) dart.assertFailed(null, L85, 352, 17, "item != null");
    if (!(animation != null)) dart.assertFailed(null, L85, 353, 17, "animation != null");
    if (!(selected != null)) dart.assertFailed(null, L85, 354, 17, "selected != null");
    if (!(selectedLabelStyle != null)) dart.assertFailed(null, L85, 355, 17, "selectedLabelStyle != null");
    if (!(unselectedLabelStyle != null)) dart.assertFailed(null, L85, 356, 17, "unselectedLabelStyle != null");
    if (!(mouseCursor != null)) dart.assertFailed(null, L85, 357, 17, "mouseCursor != null");
    bottom_navigation_bar._BottomNavigationTile.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = bottom_navigation_bar._BottomNavigationTile.prototype;
  dart.addTypeTests(bottom_navigation_bar._BottomNavigationTile);
  dart.addTypeCaches(bottom_navigation_bar._BottomNavigationTile);
  dart.setMethodSignature(bottom_navigation_bar._BottomNavigationTile, () => ({
    __proto__: dart.getMethods(bottom_navigation_bar._BottomNavigationTile.__proto__),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(bottom_navigation_bar._BottomNavigationTile, L84);
  dart.setFieldSignature(bottom_navigation_bar._BottomNavigationTile, () => ({
    __proto__: dart.getFields(bottom_navigation_bar._BottomNavigationTile.__proto__),
    type: dart.finalFieldType(dart.legacy(bottom_navigation_bar.BottomNavigationBarType)),
    item: dart.finalFieldType(dart.legacy(bottom_navigation_bar_item.BottomNavigationBarItem)),
    animation: dart.finalFieldType(dart.legacy(animation.Animation$(dart.legacy(core.double)))),
    iconSize: dart.finalFieldType(dart.legacy(core.double)),
    onTap: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, []))),
    colorTween: dart.finalFieldType(dart.legacy(tween.ColorTween)),
    flex: dart.finalFieldType(dart.legacy(core.double)),
    selected: dart.finalFieldType(dart.legacy(core.bool)),
    selectedIconTheme: dart.finalFieldType(dart.legacy(icon_theme_data.IconThemeData)),
    unselectedIconTheme: dart.finalFieldType(dart.legacy(icon_theme_data.IconThemeData)),
    selectedLabelStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    unselectedLabelStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    indexLabel: dart.finalFieldType(dart.legacy(core.String)),
    showSelectedLabels: dart.finalFieldType(dart.legacy(core.bool)),
    showUnselectedLabels: dart.finalFieldType(dart.legacy(core.bool)),
    mouseCursor: dart.finalFieldType(dart.legacy(mouse_cursor.MouseCursor))
  }));
  var C1955;
  var C1956;
  var C1954;
  var C1953;
  var C1959;
  var C1958;
  var C1957;
  var C1962;
  var C1963;
  var C1964;
  var C1961;
  var C1960;
  var colorTween$0 = dart.privateName(bottom_navigation_bar, "_TileIcon.colorTween");
  var animation$7 = dart.privateName(bottom_navigation_bar, "_TileIcon.animation");
  var iconSize$2 = dart.privateName(bottom_navigation_bar, "_TileIcon.iconSize");
  var selected$2 = dart.privateName(bottom_navigation_bar, "_TileIcon.selected");
  var item$0 = dart.privateName(bottom_navigation_bar, "_TileIcon.item");
  var selectedIconTheme$3 = dart.privateName(bottom_navigation_bar, "_TileIcon.selectedIconTheme");
  var unselectedIconTheme$3 = dart.privateName(bottom_navigation_bar, "_TileIcon.unselectedIconTheme");
  bottom_navigation_bar._TileIcon = class _TileIcon extends framework.StatelessWidget {
    get colorTween() {
      return this[colorTween$0];
    }
    set colorTween(value) {
      super.colorTween = value;
    }
    get animation() {
      return this[animation$7];
    }
    set animation(value) {
      super.animation = value;
    }
    get iconSize() {
      return this[iconSize$2];
    }
    set iconSize(value) {
      super.iconSize = value;
    }
    get selected() {
      return this[selected$2];
    }
    set selected(value) {
      super.selected = value;
    }
    get item() {
      return this[item$0];
    }
    set item(value) {
      super.item = value;
    }
    get selectedIconTheme() {
      return this[selectedIconTheme$3];
    }
    set selectedIconTheme(value) {
      super.selectedIconTheme = value;
    }
    get unselectedIconTheme() {
      return this[unselectedIconTheme$3];
    }
    set unselectedIconTheme(value) {
      super.unselectedIconTheme = value;
    }
    build(context) {
      let iconColor = this.colorTween.evaluate(this.animation);
      let defaultIconTheme = new icon_theme_data.IconThemeData.new({color: iconColor, size: this.iconSize});
      let iconThemeData = icon_theme_data.IconThemeData.lerp(defaultIconTheme.merge(this.unselectedIconTheme), defaultIconTheme.merge(this.selectedIconTheme), this.animation.value);
      return new basic.Align.new({alignment: alignment.Alignment.topCenter, heightFactor: 1.0, child: new container.Container.new({child: new icon_theme.IconTheme.new({data: iconThemeData, child: dart.test(this.selected) ? this.item.activeIcon : this.item.icon, $creationLocationd_0dea112b090073317d4: C1953 || CT.C1953}), $creationLocationd_0dea112b090073317d4: C1957 || CT.C1957}), $creationLocationd_0dea112b090073317d4: C1960 || CT.C1960});
    }
  };
  (bottom_navigation_bar._TileIcon.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let colorTween = opts && 'colorTween' in opts ? opts.colorTween : null;
    let animation = opts && 'animation' in opts ? opts.animation : null;
    let iconSize = opts && 'iconSize' in opts ? opts.iconSize : null;
    let selected = opts && 'selected' in opts ? opts.selected : null;
    let item = opts && 'item' in opts ? opts.item : null;
    let selectedIconTheme = opts && 'selectedIconTheme' in opts ? opts.selectedIconTheme : null;
    let unselectedIconTheme = opts && 'unselectedIconTheme' in opts ? opts.unselectedIconTheme : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[colorTween$0] = colorTween;
    this[animation$7] = animation;
    this[iconSize$2] = iconSize;
    this[selected$2] = selected;
    this[item$0] = item;
    this[selectedIconTheme$3] = selectedIconTheme;
    this[unselectedIconTheme$3] = unselectedIconTheme;
    if (!(selected != null)) dart.assertFailed(null, L85, 519, 15, "selected != null");
    if (!(item != null)) dart.assertFailed(null, L85, 520, 15, "item != null");
    bottom_navigation_bar._TileIcon.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = bottom_navigation_bar._TileIcon.prototype;
  dart.addTypeTests(bottom_navigation_bar._TileIcon);
  dart.addTypeCaches(bottom_navigation_bar._TileIcon);
  dart.setMethodSignature(bottom_navigation_bar._TileIcon, () => ({
    __proto__: dart.getMethods(bottom_navigation_bar._TileIcon.__proto__),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(bottom_navigation_bar._TileIcon, L84);
  dart.setFieldSignature(bottom_navigation_bar._TileIcon, () => ({
    __proto__: dart.getFields(bottom_navigation_bar._TileIcon.__proto__),
    colorTween: dart.finalFieldType(dart.legacy(tween.ColorTween)),
    animation: dart.finalFieldType(dart.legacy(animation.Animation$(dart.legacy(core.double)))),
    iconSize: dart.finalFieldType(dart.legacy(core.double)),
    selected: dart.finalFieldType(dart.legacy(core.bool)),
    item: dart.finalFieldType(dart.legacy(bottom_navigation_bar_item.BottomNavigationBarItem)),
    selectedIconTheme: dart.finalFieldType(dart.legacy(icon_theme_data.IconThemeData)),
    unselectedIconTheme: dart.finalFieldType(dart.legacy(icon_theme_data.IconThemeData))
  }));
  var C1967;
  var C1968;
  var C1969;
  var C1966;
  var C1965;
  var C1972;
  var C1973;
  var C1974;
  var C1971;
  var C1970;
  var C1977;
  var C1978;
  var C1979;
  var C1976;
  var C1975;
  var C1982;
  var C1983;
  var C1984;
  var C1981;
  var C1980;
  var C1987;
  var C1986;
  var C1985;
  var C1990;
  var C1991;
  var C1992;
  var C1989;
  var C1988;
  var colorTween$1 = dart.privateName(bottom_navigation_bar, "_Label.colorTween");
  var animation$8 = dart.privateName(bottom_navigation_bar, "_Label.animation");
  var item$1 = dart.privateName(bottom_navigation_bar, "_Label.item");
  var selectedLabelStyle$1 = dart.privateName(bottom_navigation_bar, "_Label.selectedLabelStyle");
  var unselectedLabelStyle$4 = dart.privateName(bottom_navigation_bar, "_Label.unselectedLabelStyle");
  var showSelectedLabels$1 = dart.privateName(bottom_navigation_bar, "_Label.showSelectedLabels");
  var showUnselectedLabels$1 = dart.privateName(bottom_navigation_bar, "_Label.showUnselectedLabels");
  bottom_navigation_bar._Label = class _Label extends framework.StatelessWidget {
    get colorTween() {
      return this[colorTween$1];
    }
    set colorTween(value) {
      super.colorTween = value;
    }
    get animation() {
      return this[animation$8];
    }
    set animation(value) {
      super.animation = value;
    }
    get item() {
      return this[item$1];
    }
    set item(value) {
      super.item = value;
    }
    get selectedLabelStyle() {
      return this[selectedLabelStyle$1];
    }
    set selectedLabelStyle(value) {
      super.selectedLabelStyle = value;
    }
    get unselectedLabelStyle() {
      return this[unselectedLabelStyle$4];
    }
    set unselectedLabelStyle(value) {
      super.unselectedLabelStyle = value;
    }
    get showSelectedLabels() {
      return this[showSelectedLabels$1];
    }
    set showSelectedLabels(value) {
      super.showSelectedLabels = value;
    }
    get showUnselectedLabels() {
      return this[showUnselectedLabels$1];
    }
    set showUnselectedLabels(value) {
      super.showUnselectedLabels = value;
    }
    build(context) {
      let selectedFontSize = this.selectedLabelStyle.fontSize;
      let unselectedFontSize = this.unselectedLabelStyle.fontSize;
      let customStyle = text_style.TextStyle.lerp(this.unselectedLabelStyle, this.selectedLabelStyle, this.animation.value);
      let text = text$.DefaultTextStyle.merge({style: customStyle.copyWith({fontSize: selectedFontSize, color: this.colorTween.evaluate(this.animation)}), child: new basic.Transform.new({transform: vector_math_64.Matrix4.diagonal3(vector_math_64.Vector3.all(new (TweenOfdoubleL()).new({begin: dart.notNull(unselectedFontSize) / dart.notNull(selectedFontSize), end: 1.0}).evaluate(this.animation))), alignment: alignment.Alignment.bottomCenter, child: this.item.title, $creationLocationd_0dea112b090073317d4: C1965 || CT.C1965})});
      if (!dart.test(this.showUnselectedLabels) && !dart.test(this.showSelectedLabels)) {
        text = new basic.Opacity.new({alwaysIncludeSemantics: true, opacity: 0.0, child: text, $creationLocationd_0dea112b090073317d4: C1970 || CT.C1970});
      } else if (!dart.test(this.showUnselectedLabels)) {
        text = new transitions.FadeTransition.new({alwaysIncludeSemantics: true, opacity: this.animation, child: text, $creationLocationd_0dea112b090073317d4: C1975 || CT.C1975});
      } else if (!dart.test(this.showSelectedLabels)) {
        text = new transitions.FadeTransition.new({alwaysIncludeSemantics: true, opacity: new (TweenOfdoubleL()).new({begin: 1.0, end: 0.0}).animate(this.animation), child: text, $creationLocationd_0dea112b090073317d4: C1980 || CT.C1980});
      }
      return new basic.Align.new({alignment: alignment.Alignment.bottomCenter, heightFactor: 1.0, child: new container.Container.new({child: text, $creationLocationd_0dea112b090073317d4: C1985 || CT.C1985}), $creationLocationd_0dea112b090073317d4: C1988 || CT.C1988});
    }
  };
  (bottom_navigation_bar._Label.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let colorTween = opts && 'colorTween' in opts ? opts.colorTween : null;
    let animation = opts && 'animation' in opts ? opts.animation : null;
    let item = opts && 'item' in opts ? opts.item : null;
    let selectedLabelStyle = opts && 'selectedLabelStyle' in opts ? opts.selectedLabelStyle : null;
    let unselectedLabelStyle = opts && 'unselectedLabelStyle' in opts ? opts.unselectedLabelStyle : null;
    let showSelectedLabels = opts && 'showSelectedLabels' in opts ? opts.showSelectedLabels : null;
    let showUnselectedLabels = opts && 'showUnselectedLabels' in opts ? opts.showUnselectedLabels : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[colorTween$1] = colorTween;
    this[animation$8] = animation;
    this[item$1] = item;
    this[selectedLabelStyle$1] = selectedLabelStyle;
    this[unselectedLabelStyle$4] = unselectedLabelStyle;
    this[showSelectedLabels$1] = showSelectedLabels;
    this[showUnselectedLabels$1] = showUnselectedLabels;
    if (!(colorTween != null)) dart.assertFailed(null, L85, 567, 15, "colorTween != null");
    if (!(animation != null)) dart.assertFailed(null, L85, 568, 15, "animation != null");
    if (!(item != null)) dart.assertFailed(null, L85, 569, 15, "item != null");
    if (!(selectedLabelStyle != null)) dart.assertFailed(null, L85, 570, 15, "selectedLabelStyle != null");
    if (!(unselectedLabelStyle != null)) dart.assertFailed(null, L85, 571, 15, "unselectedLabelStyle != null");
    if (!(showSelectedLabels != null)) dart.assertFailed(null, L85, 572, 15, "showSelectedLabels != null");
    if (!(showUnselectedLabels != null)) dart.assertFailed(null, L85, 573, 15, "showUnselectedLabels != null");
    bottom_navigation_bar._Label.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = bottom_navigation_bar._Label.prototype;
  dart.addTypeTests(bottom_navigation_bar._Label);
  dart.addTypeCaches(bottom_navigation_bar._Label);
  dart.setMethodSignature(bottom_navigation_bar._Label, () => ({
    __proto__: dart.getMethods(bottom_navigation_bar._Label.__proto__),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(bottom_navigation_bar._Label, L84);
  dart.setFieldSignature(bottom_navigation_bar._Label, () => ({
    __proto__: dart.getFields(bottom_navigation_bar._Label.__proto__),
    colorTween: dart.finalFieldType(dart.legacy(tween.ColorTween)),
    animation: dart.finalFieldType(dart.legacy(animation.Animation$(dart.legacy(core.double)))),
    item: dart.finalFieldType(dart.legacy(bottom_navigation_bar_item.BottomNavigationBarItem)),
    selectedLabelStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    unselectedLabelStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    showSelectedLabels: dart.finalFieldType(dart.legacy(core.bool)),
    showUnselectedLabels: dart.finalFieldType(dart.legacy(core.bool))
  }));
  var _controllers = dart.privateName(bottom_navigation_bar, "_controllers");
  var _animations = dart.privateName(bottom_navigation_bar, "_animations");
  var _circles = dart.privateName(bottom_navigation_bar, "_circles");
  var _backgroundColor = dart.privateName(bottom_navigation_bar, "_backgroundColor");
  var _rebuild$ = dart.privateName(bottom_navigation_bar, "_rebuild");
  var _resetState$ = dart.privateName(bottom_navigation_bar, "_resetState");
  var _effectiveType = dart.privateName(bottom_navigation_bar, "_effectiveType");
  var _defaultShowUnselected = dart.privateName(bottom_navigation_bar, "_defaultShowUnselected");
  var _evaluateFlex = dart.privateName(bottom_navigation_bar, "_evaluateFlex");
  var _pushCircle = dart.privateName(bottom_navigation_bar, "_pushCircle");
  var TextStyle_fontFeatures = dart.privateName(text_style, "TextStyle.fontFeatures");
  var TextStyle_shadows = dart.privateName(text_style, "TextStyle.shadows");
  var TextStyle_debugLabel = dart.privateName(text_style, "TextStyle.debugLabel");
  var TextStyle_decorationThickness = dart.privateName(text_style, "TextStyle.decorationThickness");
  var TextStyle_decorationStyle = dart.privateName(text_style, "TextStyle.decorationStyle");
  var TextStyle_decorationColor = dart.privateName(text_style, "TextStyle.decorationColor");
  var TextStyle_decoration = dart.privateName(text_style, "TextStyle.decoration");
  var TextStyle_background = dart.privateName(text_style, "TextStyle.background");
  var TextStyle_foreground = dart.privateName(text_style, "TextStyle.foreground");
  var TextStyle_locale = dart.privateName(text_style, "TextStyle.locale");
  var TextStyle_height = dart.privateName(text_style, "TextStyle.height");
  var TextStyle_textBaseline = dart.privateName(text_style, "TextStyle.textBaseline");
  var TextStyle_wordSpacing = dart.privateName(text_style, "TextStyle.wordSpacing");
  var TextStyle_letterSpacing = dart.privateName(text_style, "TextStyle.letterSpacing");
  var TextStyle_fontStyle = dart.privateName(text_style, "TextStyle.fontStyle");
  var TextStyle_fontWeight = dart.privateName(text_style, "TextStyle.fontWeight");
  var TextStyle_fontSize = dart.privateName(text_style, "TextStyle.fontSize");
  var TextStyle__package = dart.privateName(text_style, "TextStyle._package");
  var TextStyle__fontFamilyFallback = dart.privateName(text_style, "TextStyle._fontFamilyFallback");
  var TextStyle_fontFamily = dart.privateName(text_style, "TextStyle.fontFamily");
  var TextStyle_backgroundColor = dart.privateName(text_style, "TextStyle.backgroundColor");
  var TextStyle_color = dart.privateName(text_style, "TextStyle.color");
  var TextStyle_inherit = dart.privateName(text_style, "TextStyle.inherit");
  var C1993;
  var C1996;
  var C1997;
  var C1998;
  var C1999;
  var C2000;
  var C2001;
  var C2002;
  var C2003;
  var C2004;
  var C2005;
  var C2006;
  var C2007;
  var C2008;
  var C2009;
  var C2010;
  var C2011;
  var C1995;
  var C1994;
  var _createTiles = dart.privateName(bottom_navigation_bar, "_createTiles");
  var C2014;
  var C2015;
  var C2013;
  var C2012;
  var _createContainer = dart.privateName(bottom_navigation_bar, "_createContainer");
  var C2018;
  var C2019;
  var C2020;
  var C2017;
  var C2016;
  var C2023;
  var C2024;
  var C2022;
  var C2021;
  var C2027;
  var C2028;
  var C2026;
  var C2025;
  var C2031;
  var C2032;
  var C2030;
  var C2029;
  var C2035;
  var C2036;
  var C2034;
  var C2033;
  var C2039;
  var C2040;
  var C2041;
  var C2038;
  var C2037;
  var C2044;
  var C2045;
  var C2043;
  var C2042;
  const State_TickerProviderStateMixin$36$1 = class State_TickerProviderStateMixin extends framework.State$(dart.legacy(bottom_navigation_bar.BottomNavigationBar)) {};
  (State_TickerProviderStateMixin$36$1.new = function() {
    ticker_provider.TickerProviderStateMixin$(dart.legacy(bottom_navigation_bar.BottomNavigationBar))[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$1.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$1.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$1, ticker_provider.TickerProviderStateMixin$(dart.legacy(bottom_navigation_bar.BottomNavigationBar)));
  bottom_navigation_bar._BottomNavigationBarState = class _BottomNavigationBarState extends State_TickerProviderStateMixin$36$1 {
    [_resetState$]() {
      for (let controller of this[_controllers])
        controller.dispose();
      for (let circle of this[_circles])
        circle.dispose();
      this[_circles].clear();
      this[_controllers] = ListOfAnimationControllerL().generate(this.widget.items[$length], dart.fn(index => {
        let t12;
        t12 = new animation_controller.AnimationController.new({duration: theme$.kThemeAnimationDuration, vsync: this});
        return (() => {
          t12.addListener(dart.bind(this, _rebuild$));
          return t12;
        })();
      }, intLToAnimationControllerL()));
      this[_animations] = ListOfCurvedAnimationL().generate(this.widget.items[$length], dart.fn(index => new animations.CurvedAnimation.new({parent: this[_controllers][$_get](index), curve: curves.Curves.fastOutSlowIn, reverseCurve: curves.Curves.fastOutSlowIn.flipped}), intLToCurvedAnimationL()));
      this[_controllers][$_get](this.widget.currentIndex).value = 1.0;
      this[_backgroundColor] = this.widget.items[$_get](this.widget.currentIndex).backgroundColor;
    }
    get [_effectiveType]() {
      let t12, t12$;
      t12$ = (t12 = this.widget.type, t12 == null ? bottom_navigation_bar_theme.BottomNavigationBarTheme.of(this.context).type : t12);
      return t12$ == null ? dart.notNull(this.widget.items[$length]) <= 3 ? bottom_navigation_bar.BottomNavigationBarType.fixed : bottom_navigation_bar.BottomNavigationBarType.shifting : t12$;
    }
    get [_defaultShowUnselected]() {
      switch (this[_effectiveType]) {
        case C1903 || CT.C1903:
        {
          return false;
        }
        case C1902 || CT.C1902:
        {
          return true;
        }
      }
      if (!false) dart.assertFailed(null, L85, 707, 12, "false");
      return false;
    }
    initState() {
      super.initState();
      this[_resetState$]();
    }
    [_rebuild$]() {
      this.setState(dart.fn(() => {
      }, VoidToNullN()));
    }
    dispose() {
      for (let controller of this[_controllers])
        controller.dispose();
      for (let circle of this[_circles])
        circle.dispose();
      super.dispose();
    }
    [_evaluateFlex](animation) {
      return bottom_navigation_bar._BottomNavigationBarState._flexTween.evaluate(animation);
    }
    [_pushCircle](index) {
      let t12;
      if (this.widget.items[$_get](index).backgroundColor != null) {
        this[_circles].add((t12 = new bottom_navigation_bar._Circle.new({state: this, index: index, color: this.widget.items[$_get](index).backgroundColor, vsync: this}), (() => {
          t12.controller.addStatusListener(dart.fn(status => {
            switch (status) {
              case C122 || CT.C122:
              {
                this.setState(dart.fn(() => {
                  let circle = this[_circles].removeFirst();
                  this[_backgroundColor] = circle.color;
                  circle.dispose();
                }, VoidToNullN()));
                break;
              }
              case C119 || CT.C119:
              case C120 || CT.C120:
              case C121 || CT.C121:
              {
                break;
              }
            }
          }, AnimationStatusLToNullN()));
          return t12;
        })()));
      }
    }
    didUpdateWidget(oldWidget) {
      BottomNavigationBarL().as(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (this.widget.items[$length] != oldWidget.items[$length]) {
        this[_resetState$]();
        return;
      }
      if (this.widget.currentIndex != oldWidget.currentIndex) {
        switch (this[_effectiveType]) {
          case C1902 || CT.C1902:
          {
            break;
          }
          case C1903 || CT.C1903:
          {
            this[_pushCircle](this.widget.currentIndex);
            break;
          }
        }
        this[_controllers][$_get](oldWidget.currentIndex).reverse();
        this[_controllers][$_get](this.widget.currentIndex).forward();
      } else {
        if (!dart.equals(this[_backgroundColor], this.widget.items[$_get](this.widget.currentIndex).backgroundColor)) this[_backgroundColor] = this.widget.items[$_get](this.widget.currentIndex).backgroundColor;
      }
    }
    static _effectiveTextStyle(textStyle, fontSize) {
      textStyle == null ? textStyle = C1993 || CT.C1993 : null;
      return textStyle.fontSize == null ? textStyle.copyWith({fontSize: fontSize}) : textStyle;
    }
    [_createTiles]() {
      let t12, t12$, t12$0, t12$1, t12$2, t12$3, t12$4, t12$5, t12$6, t12$7, t12$8, t12$9, t12$10, t12$11, t12$12, t12$13, t12$14;
      let localizations = material_localizations.MaterialLocalizations.of(this.context);
      if (!(localizations != null)) dart.assertFailed(null, L85, 800, 12, "localizations != null");
      let themeData = theme$.Theme.of(this.context);
      let bottomTheme = bottom_navigation_bar_theme.BottomNavigationBarTheme.of(this.context);
      let effectiveSelectedLabelStyle = bottom_navigation_bar._BottomNavigationBarState._effectiveTextStyle((t12 = this.widget.selectedLabelStyle, t12 == null ? bottomTheme.selectedLabelStyle : t12), this.widget.selectedFontSize);
      let effectiveUnselectedLabelStyle = bottom_navigation_bar._BottomNavigationBarState._effectiveTextStyle((t12$ = this.widget.unselectedLabelStyle, t12$ == null ? bottomTheme.unselectedLabelStyle : t12$), this.widget.unselectedFontSize);
      let themeColor = null;
      switch (themeData.brightness) {
        case C511 || CT.C511:
        {
          themeColor = themeData.primaryColor;
          break;
        }
        case C512 || CT.C512:
        {
          themeColor = themeData.accentColor;
          break;
        }
      }
      let colorTween = null;
      switch (this[_effectiveType]) {
        case C1902 || CT.C1902:
        {
          colorTween = new tween.ColorTween.new({begin: (t12$1 = (t12$0 = this.widget.unselectedItemColor, t12$0 == null ? bottomTheme.unselectedItemColor : t12$0), t12$1 == null ? themeData.textTheme.caption.color : t12$1), end: (t12$4 = (t12$3 = (t12$2 = this.widget.selectedItemColor, t12$2 == null ? bottomTheme.selectedItemColor : t12$2), t12$3 == null ? this.widget.fixedColor : t12$3), t12$4 == null ? themeColor : t12$4)});
          break;
        }
        case C1903 || CT.C1903:
        {
          colorTween = new tween.ColorTween.new({begin: (t12$6 = (t12$5 = this.widget.unselectedItemColor, t12$5 == null ? bottomTheme.unselectedItemColor : t12$5), t12$6 == null ? themeData.colorScheme.surface : t12$6), end: (t12$8 = (t12$7 = this.widget.selectedItemColor, t12$7 == null ? bottomTheme.selectedItemColor : t12$7), t12$8 == null ? themeData.colorScheme.surface : t12$8)});
          break;
        }
      }
      let effectiveMouseCursor = (t12$9 = this.widget.mouseCursor, t12$9 == null ? mouse_cursor.SystemMouseCursors.click : t12$9);
      let tiles = JSArrayOfWidgetL().of([]);
      for (let i = 0; i < dart.notNull(this.widget.items[$length]); i = i + 1) {
        tiles[$add](new bottom_navigation_bar._BottomNavigationTile.new(this[_effectiveType], this.widget.items[$_get](i), this[_animations][$_get](i), this.widget.iconSize, {selectedIconTheme: (t12$10 = this.widget.selectedIconTheme, t12$10 == null ? bottomTheme.selectedIconTheme : t12$10), unselectedIconTheme: (t12$11 = this.widget.unselectedIconTheme, t12$11 == null ? bottomTheme.unselectedIconTheme : t12$11), selectedLabelStyle: effectiveSelectedLabelStyle, unselectedLabelStyle: effectiveUnselectedLabelStyle, onTap: dart.fn(() => {
            let t13, t12;
            if (this.widget.onTap != null) {
              t12 = this.widget;
              t13 = i;
              t12.onTap(t13);
            }
          }, VoidToNullN()), colorTween: colorTween, flex: this[_evaluateFlex](this[_animations][$_get](i)), selected: i === this.widget.currentIndex, showSelectedLabels: (t12$12 = this.widget.showSelectedLabels, t12$12 == null ? bottomTheme.showSelectedLabels : t12$12), showUnselectedLabels: (t12$14 = (t12$13 = this.widget.showUnselectedLabels, t12$13 == null ? bottomTheme.showUnselectedLabels : t12$13), t12$14 == null ? this[_defaultShowUnselected] : t12$14), indexLabel: localizations.tabLabel({tabIndex: i + 1, tabCount: this.widget.items[$length]}), mouseCursor: effectiveMouseCursor, $creationLocationd_0dea112b090073317d4: C1994 || CT.C1994}));
      }
      return tiles;
    }
    [_createContainer](tiles) {
      return text$.DefaultTextStyle.merge({overflow: paragraph.TextOverflow.ellipsis, child: new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, children: tiles, $creationLocationd_0dea112b090073317d4: C2012 || CT.C2012})});
    }
    build(context) {
      let t12, t12$, t12$0;
      if (!dart.test(debug.debugCheckHasDirectionality(context))) dart.assertFailed(null, L85, 891, 12, "debugCheckHasDirectionality(context)");
      if (!dart.test(debug$0.debugCheckHasMaterialLocalizations(context))) dart.assertFailed(null, L85, 892, 12, "debugCheckHasMaterialLocalizations(context)");
      if (!dart.test(debug.debugCheckHasMediaQuery(context))) dart.assertFailed(null, L85, 893, 12, "debugCheckHasMediaQuery(context)");
      let bottomTheme = bottom_navigation_bar_theme.BottomNavigationBarTheme.of(context);
      let additionalBottomPadding = math.max(doubleL(), dart.notNull(media_query.MediaQuery.of(context).padding.bottom) - dart.notNull(this.widget.selectedFontSize) / 2.0, 0.0);
      let backgroundColor = null;
      switch (this[_effectiveType]) {
        case C1902 || CT.C1902:
        {
          backgroundColor = (t12 = this.widget.backgroundColor, t12 == null ? bottomTheme.backgroundColor : t12);
          break;
        }
        case C1903 || CT.C1903:
        {
          backgroundColor = this[_backgroundColor];
          break;
        }
      }
      return new basic.Semantics.new({explicitChildNodes: true, child: new material.Material.new({elevation: (t12$0 = (t12$ = this.widget.elevation, t12$ == null ? bottomTheme.elevation : t12$), t12$0 == null ? 8.0 : t12$0), color: backgroundColor, child: new basic.ConstrainedBox.new({constraints: new box.BoxConstraints.new({minHeight: 56 + additionalBottomPadding}), child: new basic.CustomPaint.new({painter: new bottom_navigation_bar._RadialPainter.new({circles: this[_circles][$toList](), textDirection: basic.Directionality.of(context)}), child: new material.Material.new({type: material.MaterialType.transparency, child: new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({bottom: additionalBottomPadding}), child: media_query.MediaQuery.removePadding({context: context, removeBottom: true, child: this[_createContainer](this[_createTiles]()), $creationLocationd_0dea112b090073317d4: C2016 || CT.C2016}), $creationLocationd_0dea112b090073317d4: C2021 || CT.C2021}), $creationLocationd_0dea112b090073317d4: C2025 || CT.C2025}), $creationLocationd_0dea112b090073317d4: C2029 || CT.C2029}), $creationLocationd_0dea112b090073317d4: C2033 || CT.C2033}), $creationLocationd_0dea112b090073317d4: C2037 || CT.C2037}), $creationLocationd_0dea112b090073317d4: C2042 || CT.C2042});
    }
  };
  (bottom_navigation_bar._BottomNavigationBarState.new = function() {
    this[_controllers] = JSArrayOfAnimationControllerL().of([]);
    this[_animations] = null;
    this[_circles] = new (ListQueueOf_CircleL()).new();
    this[_backgroundColor] = null;
    bottom_navigation_bar._BottomNavigationBarState.__proto__.new.call(this);
    ;
  }).prototype = bottom_navigation_bar._BottomNavigationBarState.prototype;
  dart.addTypeTests(bottom_navigation_bar._BottomNavigationBarState);
  dart.addTypeCaches(bottom_navigation_bar._BottomNavigationBarState);
  dart.setMethodSignature(bottom_navigation_bar._BottomNavigationBarState, () => ({
    __proto__: dart.getMethods(bottom_navigation_bar._BottomNavigationBarState.__proto__),
    [_resetState$]: dart.fnType(dart.void, []),
    [_rebuild$]: dart.fnType(dart.void, []),
    [_evaluateFlex]: dart.fnType(dart.legacy(core.double), [dart.legacy(animation.Animation$(dart.legacy(core.double)))]),
    [_pushCircle]: dart.fnType(dart.void, [dart.legacy(core.int)]),
    [_createTiles]: dart.fnType(dart.legacy(core.List$(dart.legacy(framework.Widget))), []),
    [_createContainer]: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(core.List$(dart.legacy(framework.Widget)))]),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setGetterSignature(bottom_navigation_bar._BottomNavigationBarState, () => ({
    __proto__: dart.getGetters(bottom_navigation_bar._BottomNavigationBarState.__proto__),
    [_effectiveType]: dart.legacy(bottom_navigation_bar.BottomNavigationBarType),
    [_defaultShowUnselected]: dart.legacy(core.bool)
  }));
  dart.setLibraryUri(bottom_navigation_bar._BottomNavigationBarState, L84);
  dart.setFieldSignature(bottom_navigation_bar._BottomNavigationBarState, () => ({
    __proto__: dart.getFields(bottom_navigation_bar._BottomNavigationBarState.__proto__),
    [_controllers]: dart.fieldType(dart.legacy(core.List$(dart.legacy(animation_controller.AnimationController)))),
    [_animations]: dart.fieldType(dart.legacy(core.List$(dart.legacy(animations.CurvedAnimation)))),
    [_circles]: dart.finalFieldType(dart.legacy(collection.Queue$(dart.legacy(bottom_navigation_bar._Circle)))),
    [_backgroundColor]: dart.fieldType(dart.legacy(ui.Color))
  }));
  dart.defineLazy(bottom_navigation_bar._BottomNavigationBarState, {
    /*bottom_navigation_bar._BottomNavigationBarState._flexTween*/get _flexTween() {
      return new (TweenOfdoubleL()).new({begin: 1.0, end: 1.5});
    }
  }, true);
  bottom_navigation_bar._Circle = class _Circle extends core.Object {
    get horizontalLeadingOffset() {
      const weightSum = animations => {
        return animations[$map](doubleL(), dart.bind(this.state, _evaluateFlex))[$fold](doubleL(), 0.0, dart.fn((sum, value) => dart.notNull(sum) + dart.notNull(value), doubleLAnddoubleLTodoubleL()));
      };
      dart.fn(weightSum, IterableLOfAnimationLOfdoubleLTodoubleL());
      let allWeights = weightSum(this.state[_animations]);
      let leadingWeights = weightSum(this.state[_animations][$sublist](0, this.index));
      return (dart.notNull(leadingWeights) + dart.notNull(this.state[_evaluateFlex](this.state[_animations][$_get](this.index))) / 2.0) / dart.notNull(allWeights);
    }
    dispose() {
      this.controller.dispose();
    }
  };
  (bottom_navigation_bar._Circle.new = function(opts) {
    let state = opts && 'state' in opts ? opts.state : null;
    let index = opts && 'index' in opts ? opts.index : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let vsync = opts && 'vsync' in opts ? opts.vsync : null;
    this.controller = null;
    this.animation = null;
    this.state = state;
    this.index = index;
    this.color = color;
    if (!(state != null)) dart.assertFailed(null, L85, 945, 15, "state != null");
    if (!(index != null)) dart.assertFailed(null, L85, 946, 15, "index != null");
    if (!(color != null)) dart.assertFailed(null, L85, 947, 15, "color != null");
    this.controller = new animation_controller.AnimationController.new({duration: theme$.kThemeAnimationDuration, vsync: vsync});
    this.animation = new animations.CurvedAnimation.new({parent: this.controller, curve: curves.Curves.fastOutSlowIn});
    this.controller.forward();
  }).prototype = bottom_navigation_bar._Circle.prototype;
  dart.addTypeTests(bottom_navigation_bar._Circle);
  dart.addTypeCaches(bottom_navigation_bar._Circle);
  dart.setMethodSignature(bottom_navigation_bar._Circle, () => ({
    __proto__: dart.getMethods(bottom_navigation_bar._Circle.__proto__),
    dispose: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(bottom_navigation_bar._Circle, () => ({
    __proto__: dart.getGetters(bottom_navigation_bar._Circle.__proto__),
    horizontalLeadingOffset: dart.legacy(core.double)
  }));
  dart.setLibraryUri(bottom_navigation_bar._Circle, L84);
  dart.setFieldSignature(bottom_navigation_bar._Circle, () => ({
    __proto__: dart.getFields(bottom_navigation_bar._Circle.__proto__),
    state: dart.finalFieldType(dart.legacy(bottom_navigation_bar._BottomNavigationBarState)),
    index: dart.finalFieldType(dart.legacy(core.int)),
    color: dart.finalFieldType(dart.legacy(ui.Color)),
    controller: dart.fieldType(dart.legacy(animation_controller.AnimationController)),
    animation: dart.fieldType(dart.legacy(animations.CurvedAnimation))
  }));
  bottom_navigation_bar._RadialPainter = class _RadialPainter extends custom_paint.CustomPainter {
    static _maxRadius(center, size) {
      let maxX = math.max(doubleL(), center.dx, dart.notNull(size.width) - dart.notNull(center.dx));
      let maxY = math.max(doubleL(), center.dy, dart.notNull(size.height) - dart.notNull(center.dy));
      return math.sqrt(maxX * maxX + maxY * maxY);
    }
    shouldRepaint(oldPainter) {
      _RadialPainterL().as(oldPainter);
      if (!dart.equals(this.textDirection, oldPainter.textDirection)) return true;
      if (dart.equals(this.circles, oldPainter.circles)) return false;
      if (this.circles[$length] != oldPainter.circles[$length]) return true;
      for (let i = 0; i < dart.notNull(this.circles[$length]); i = i + 1)
        if (!dart.equals(this.circles[$_get](i), oldPainter.circles[$_get](i))) return true;
      return false;
    }
    paint(canvas, size) {
      let t12;
      for (let circle of this.circles) {
        let paint = (t12 = ui.Paint.new(), (() => {
          t12.color = circle.color;
          return t12;
        })());
        let rect = new ui.Rect.fromLTWH(0.0, 0.0, size.width, size.height);
        canvas.clipRect(rect);
        let leftFraction = null;
        switch (this.textDirection) {
          case C237 || CT.C237:
          {
            leftFraction = 1.0 - dart.notNull(circle.horizontalLeadingOffset);
            break;
          }
          case C238 || CT.C238:
          {
            leftFraction = circle.horizontalLeadingOffset;
            break;
          }
        }
        let center = new ui.Offset.new(dart.notNull(leftFraction) * dart.notNull(size.width), dart.notNull(size.height) / 2.0);
        let radiusTween = new (TweenOfdoubleL()).new({begin: 0.0, end: bottom_navigation_bar._RadialPainter._maxRadius(center, size)});
        canvas.drawCircle(center, radiusTween.transform(circle.animation.value), paint);
      }
    }
  };
  (bottom_navigation_bar._RadialPainter.new = function(opts) {
    let circles = opts && 'circles' in opts ? opts.circles : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    this.circles = circles;
    this.textDirection = textDirection;
    if (!(circles != null)) dart.assertFailed(null, L85, 990, 15, "circles != null");
    if (!(textDirection != null)) dart.assertFailed(null, L85, 991, 15, "textDirection != null");
    bottom_navigation_bar._RadialPainter.__proto__.new.call(this);
    ;
  }).prototype = bottom_navigation_bar._RadialPainter.prototype;
  dart.addTypeTests(bottom_navigation_bar._RadialPainter);
  dart.addTypeCaches(bottom_navigation_bar._RadialPainter);
  dart.setMethodSignature(bottom_navigation_bar._RadialPainter, () => ({
    __proto__: dart.getMethods(bottom_navigation_bar._RadialPainter.__proto__),
    shouldRepaint: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    paint: dart.fnType(dart.void, [dart.legacy(ui.Canvas), dart.legacy(ui.Size)])
  }));
  dart.setLibraryUri(bottom_navigation_bar._RadialPainter, L84);
  dart.setFieldSignature(bottom_navigation_bar._RadialPainter, () => ({
    __proto__: dart.getFields(bottom_navigation_bar._RadialPainter.__proto__),
    circles: dart.finalFieldType(dart.legacy(core.List$(dart.legacy(bottom_navigation_bar._Circle)))),
    textDirection: dart.finalFieldType(dart.legacy(ui.TextDirection))
  }));
  var backgroundColor$13 = dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.backgroundColor");
  var elevation$18 = dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.elevation");
  var selectedIconTheme$4 = dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.selectedIconTheme");
  var unselectedIconTheme$4 = dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.unselectedIconTheme");
  var selectedItemColor$0 = dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.selectedItemColor");
  var unselectedItemColor$0 = dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.unselectedItemColor");
  var selectedLabelStyle$2 = dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.selectedLabelStyle");
  var unselectedLabelStyle$5 = dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.unselectedLabelStyle");
  var showSelectedLabels$2 = dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.showSelectedLabels");
  var showUnselectedLabels$2 = dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.showUnselectedLabels");
  var type$1 = dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.type");
  const Object_Diagnosticable$36$16 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$16.new = function() {
  }).prototype = Object_Diagnosticable$36$16.prototype;
  dart.applyMixin(Object_Diagnosticable$36$16, diagnostics.Diagnosticable);
  bottom_navigation_bar_theme.BottomNavigationBarThemeData = class BottomNavigationBarThemeData extends Object_Diagnosticable$36$16 {
    get backgroundColor() {
      return this[backgroundColor$13];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get elevation() {
      return this[elevation$18];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get selectedIconTheme() {
      return this[selectedIconTheme$4];
    }
    set selectedIconTheme(value) {
      super.selectedIconTheme = value;
    }
    get unselectedIconTheme() {
      return this[unselectedIconTheme$4];
    }
    set unselectedIconTheme(value) {
      super.unselectedIconTheme = value;
    }
    get selectedItemColor() {
      return this[selectedItemColor$0];
    }
    set selectedItemColor(value) {
      super.selectedItemColor = value;
    }
    get unselectedItemColor() {
      return this[unselectedItemColor$0];
    }
    set unselectedItemColor(value) {
      super.unselectedItemColor = value;
    }
    get selectedLabelStyle() {
      return this[selectedLabelStyle$2];
    }
    set selectedLabelStyle(value) {
      super.selectedLabelStyle = value;
    }
    get unselectedLabelStyle() {
      return this[unselectedLabelStyle$5];
    }
    set unselectedLabelStyle(value) {
      super.unselectedLabelStyle = value;
    }
    get showSelectedLabels() {
      return this[showSelectedLabels$2];
    }
    set showSelectedLabels(value) {
      super.showSelectedLabels = value;
    }
    get showUnselectedLabels() {
      return this[showUnselectedLabels$2];
    }
    set showUnselectedLabels(value) {
      super.showUnselectedLabels = value;
    }
    get type() {
      return this[type$1];
    }
    set type(value) {
      super.type = value;
    }
    copyWith(opts) {
      let t12, t12$, t12$0, t12$1, t12$2, t12$3, t12$4, t12$5, t12$6, t12$7, t12$8;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let selectedIconTheme = opts && 'selectedIconTheme' in opts ? opts.selectedIconTheme : null;
      let unselectedIconTheme = opts && 'unselectedIconTheme' in opts ? opts.unselectedIconTheme : null;
      let selectedItemColor = opts && 'selectedItemColor' in opts ? opts.selectedItemColor : null;
      let unselectedItemColor = opts && 'unselectedItemColor' in opts ? opts.unselectedItemColor : null;
      let selectedLabelStyle = opts && 'selectedLabelStyle' in opts ? opts.selectedLabelStyle : null;
      let unselectedLabelStyle = opts && 'unselectedLabelStyle' in opts ? opts.unselectedLabelStyle : null;
      let showSelectedLabels = opts && 'showSelectedLabels' in opts ? opts.showSelectedLabels : null;
      let showUnselectedLabels = opts && 'showUnselectedLabels' in opts ? opts.showUnselectedLabels : null;
      let type = opts && 'type' in opts ? opts.type : null;
      return new bottom_navigation_bar_theme.BottomNavigationBarThemeData.new({backgroundColor: (t12 = backgroundColor, t12 == null ? this.backgroundColor : t12), elevation: (t12$ = elevation, t12$ == null ? this.elevation : t12$), selectedIconTheme: (t12$0 = selectedIconTheme, t12$0 == null ? this.selectedIconTheme : t12$0), unselectedIconTheme: (t12$1 = unselectedIconTheme, t12$1 == null ? this.unselectedIconTheme : t12$1), selectedItemColor: (t12$2 = selectedItemColor, t12$2 == null ? this.selectedItemColor : t12$2), unselectedItemColor: (t12$3 = unselectedItemColor, t12$3 == null ? this.unselectedItemColor : t12$3), selectedLabelStyle: (t12$4 = selectedLabelStyle, t12$4 == null ? this.selectedLabelStyle : t12$4), unselectedLabelStyle: (t12$5 = unselectedLabelStyle, t12$5 == null ? this.unselectedLabelStyle : t12$5), showSelectedLabels: (t12$6 = showSelectedLabels, t12$6 == null ? this.showSelectedLabels : t12$6), showUnselectedLabels: (t12$7 = showUnselectedLabels, t12$7 == null ? this.showUnselectedLabels : t12$7), type: (t12$8 = type, t12$8 == null ? this.type : t12$8)});
    }
    static lerp(a, b, t) {
      let t12, t12$, t12$0, t12$1, t12$2, t12$3, t12$4, t12$5, t12$6, t12$7, t12$8, t12$9, t12$10, t12$11, t12$12, t12$13, t12$14, t12$15, t12$16, t12$17, t12$18, t12$19;
      if (!(t != null)) dart.assertFailed(null, L86, 147, 12, "t != null");
      return new bottom_navigation_bar_theme.BottomNavigationBarThemeData.new({backgroundColor: ui.Color.lerp((t12 = a, t12 == null ? null : t12.backgroundColor), (t12$ = b, t12$ == null ? null : t12$.backgroundColor), t), elevation: ui.lerpDouble((t12$0 = a, t12$0 == null ? null : t12$0.elevation), (t12$1 = b, t12$1 == null ? null : t12$1.elevation), t), selectedIconTheme: icon_theme_data.IconThemeData.lerp((t12$2 = a, t12$2 == null ? null : t12$2.selectedIconTheme), (t12$3 = b, t12$3 == null ? null : t12$3.selectedIconTheme), t), unselectedIconTheme: icon_theme_data.IconThemeData.lerp((t12$4 = a, t12$4 == null ? null : t12$4.unselectedIconTheme), (t12$5 = b, t12$5 == null ? null : t12$5.unselectedIconTheme), t), selectedItemColor: ui.Color.lerp((t12$6 = a, t12$6 == null ? null : t12$6.selectedItemColor), (t12$7 = b, t12$7 == null ? null : t12$7.selectedItemColor), t), unselectedItemColor: ui.Color.lerp((t12$8 = a, t12$8 == null ? null : t12$8.unselectedItemColor), (t12$9 = b, t12$9 == null ? null : t12$9.unselectedItemColor), t), selectedLabelStyle: text_style.TextStyle.lerp((t12$10 = a, t12$10 == null ? null : t12$10.selectedLabelStyle), (t12$11 = b, t12$11 == null ? null : t12$11.selectedLabelStyle), t), unselectedLabelStyle: text_style.TextStyle.lerp((t12$12 = a, t12$12 == null ? null : t12$12.unselectedLabelStyle), (t12$13 = b, t12$13 == null ? null : t12$13.unselectedLabelStyle), t), showSelectedLabels: dart.notNull(t) < 0.5 ? (t12$14 = a, t12$14 == null ? null : t12$14.showSelectedLabels) : (t12$15 = b, t12$15 == null ? null : t12$15.showSelectedLabels), showUnselectedLabels: dart.notNull(t) < 0.5 ? (t12$16 = a, t12$16 == null ? null : t12$16.showUnselectedLabels) : (t12$17 = b, t12$17 == null ? null : t12$17.showUnselectedLabels), type: dart.notNull(t) < 0.5 ? (t12$18 = a, t12$18 == null ? null : t12$18.type) : (t12$19 = b, t12$19 == null ? null : t12$19.type)});
    }
    get hashCode() {
      return ui.hashValues(this.backgroundColor, this.elevation, this.selectedIconTheme, this.unselectedIconTheme, this.selectedItemColor, this.unselectedItemColor, this.selectedLabelStyle, this.unselectedLabelStyle, this.showSelectedLabels, this.showUnselectedLabels, this.type);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this.runtimeType)) return false;
      return BottomNavigationBarThemeDataL().is(other) && dart.equals(other.backgroundColor, this.backgroundColor) && other.elevation == this.elevation && dart.equals(other.selectedIconTheme, this.selectedIconTheme) && dart.equals(other.unselectedIconTheme, this.unselectedIconTheme) && dart.equals(other.selectedItemColor, this.selectedItemColor) && dart.equals(other.unselectedItemColor, this.unselectedItemColor) && dart.equals(other.selectedLabelStyle, this.selectedLabelStyle) && dart.equals(other.unselectedLabelStyle, this.unselectedLabelStyle) && dart.equals(other.showSelectedLabels, this.showSelectedLabels) && dart.equals(other.showUnselectedLabels, this.showUnselectedLabels) && other.type == this.type;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new colors.ColorProperty.new("backgroundColor", this.backgroundColor, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("elevation", this.elevation, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfIconThemeDataL()).new("selectedIconTheme", this.selectedIconTheme, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfIconThemeDataL()).new("unselectedIconTheme", this.unselectedIconTheme, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("selectedItemColor", this.selectedItemColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("unselectedItemColor", this.unselectedItemColor, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfTextStyleL()).new("selectedLabelStyle", this.selectedLabelStyle, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfTextStyleL()).new("unselectedLabelStyle", this.unselectedLabelStyle, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfboolL()).new("showSelectedLabels", this.showSelectedLabels, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfboolL()).new("showUnselectedLabels", this.showUnselectedLabels, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfBottomNavigationBarTypeL()).new("type", this.type, {defaultValue: null}));
    }
  };
  (bottom_navigation_bar_theme.BottomNavigationBarThemeData.new = function(opts) {
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let selectedIconTheme = opts && 'selectedIconTheme' in opts ? opts.selectedIconTheme : null;
    let unselectedIconTheme = opts && 'unselectedIconTheme' in opts ? opts.unselectedIconTheme : null;
    let selectedItemColor = opts && 'selectedItemColor' in opts ? opts.selectedItemColor : null;
    let unselectedItemColor = opts && 'unselectedItemColor' in opts ? opts.unselectedItemColor : null;
    let selectedLabelStyle = opts && 'selectedLabelStyle' in opts ? opts.selectedLabelStyle : null;
    let unselectedLabelStyle = opts && 'unselectedLabelStyle' in opts ? opts.unselectedLabelStyle : null;
    let showSelectedLabels = opts && 'showSelectedLabels' in opts ? opts.showSelectedLabels : null;
    let showUnselectedLabels = opts && 'showUnselectedLabels' in opts ? opts.showUnselectedLabels : null;
    let type = opts && 'type' in opts ? opts.type : null;
    this[backgroundColor$13] = backgroundColor;
    this[elevation$18] = elevation;
    this[selectedIconTheme$4] = selectedIconTheme;
    this[unselectedIconTheme$4] = unselectedIconTheme;
    this[selectedItemColor$0] = selectedItemColor;
    this[unselectedItemColor$0] = unselectedItemColor;
    this[selectedLabelStyle$2] = selectedLabelStyle;
    this[unselectedLabelStyle$5] = unselectedLabelStyle;
    this[showSelectedLabels$2] = showSelectedLabels;
    this[showUnselectedLabels$2] = showUnselectedLabels;
    this[type$1] = type;
    ;
  }).prototype = bottom_navigation_bar_theme.BottomNavigationBarThemeData.prototype;
  dart.addTypeTests(bottom_navigation_bar_theme.BottomNavigationBarThemeData);
  dart.addTypeCaches(bottom_navigation_bar_theme.BottomNavigationBarThemeData);
  dart.setMethodSignature(bottom_navigation_bar_theme.BottomNavigationBarThemeData, () => ({
    __proto__: dart.getMethods(bottom_navigation_bar_theme.BottomNavigationBarThemeData.__proto__),
    copyWith: dart.fnType(dart.legacy(bottom_navigation_bar_theme.BottomNavigationBarThemeData), [], {backgroundColor: dart.legacy(ui.Color), elevation: dart.legacy(core.double), selectedIconTheme: dart.legacy(icon_theme_data.IconThemeData), selectedItemColor: dart.legacy(ui.Color), selectedLabelStyle: dart.legacy(text_style.TextStyle), showSelectedLabels: dart.legacy(core.bool), showUnselectedLabels: dart.legacy(core.bool), type: dart.legacy(bottom_navigation_bar.BottomNavigationBarType), unselectedIconTheme: dart.legacy(icon_theme_data.IconThemeData), unselectedItemColor: dart.legacy(ui.Color), unselectedLabelStyle: dart.legacy(text_style.TextStyle)}, {}),
    _equals: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    [$_equals]: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    debugFillProperties: dart.fnType(dart.void, [dart.legacy(diagnostics.DiagnosticPropertiesBuilder)])
  }));
  dart.setGetterSignature(bottom_navigation_bar_theme.BottomNavigationBarThemeData, () => ({
    __proto__: dart.getGetters(bottom_navigation_bar_theme.BottomNavigationBarThemeData.__proto__),
    hashCode: dart.legacy(core.int),
    [$hashCode]: dart.legacy(core.int)
  }));
  dart.setLibraryUri(bottom_navigation_bar_theme.BottomNavigationBarThemeData, L87);
  dart.setFieldSignature(bottom_navigation_bar_theme.BottomNavigationBarThemeData, () => ({
    __proto__: dart.getFields(bottom_navigation_bar_theme.BottomNavigationBarThemeData.__proto__),
    backgroundColor: dart.finalFieldType(dart.legacy(ui.Color)),
    elevation: dart.finalFieldType(dart.legacy(core.double)),
    selectedIconTheme: dart.finalFieldType(dart.legacy(icon_theme_data.IconThemeData)),
    unselectedIconTheme: dart.finalFieldType(dart.legacy(icon_theme_data.IconThemeData)),
    selectedItemColor: dart.finalFieldType(dart.legacy(ui.Color)),
    unselectedItemColor: dart.finalFieldType(dart.legacy(ui.Color)),
    selectedLabelStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    unselectedLabelStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    showSelectedLabels: dart.finalFieldType(dart.legacy(core.bool)),
    showUnselectedLabels: dart.finalFieldType(dart.legacy(core.bool)),
    type: dart.finalFieldType(dart.legacy(bottom_navigation_bar.BottomNavigationBarType))
  }));
  dart.defineExtensionMethods(bottom_navigation_bar_theme.BottomNavigationBarThemeData, ['_equals']);
  dart.defineExtensionAccessors(bottom_navigation_bar_theme.BottomNavigationBarThemeData, ['hashCode']);
  var data$10 = dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarTheme.data");
  bottom_navigation_bar_theme.BottomNavigationBarTheme = class BottomNavigationBarTheme extends framework.InheritedWidget {
    get data() {
      return this[data$10];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t12, t12$;
      let bottomNavTheme = context.dependOnInheritedWidgetOfExactType(BottomNavigationBarThemeL());
      t12$ = (t12 = bottomNavTheme, t12 == null ? null : t12.data);
      return t12$ == null ? theme$.Theme.of(context).bottomNavigationBarTheme : t12$;
    }
    updateShouldNotify(oldWidget) {
      BottomNavigationBarThemeL().as(oldWidget);
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (bottom_navigation_bar_theme.BottomNavigationBarTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[data$10] = data;
    if (!(data != null)) dart.assertFailed(null, L86, 241, 15, "data != null");
    bottom_navigation_bar_theme.BottomNavigationBarTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = bottom_navigation_bar_theme.BottomNavigationBarTheme.prototype;
  dart.addTypeTests(bottom_navigation_bar_theme.BottomNavigationBarTheme);
  dart.addTypeCaches(bottom_navigation_bar_theme.BottomNavigationBarTheme);
  dart.setMethodSignature(bottom_navigation_bar_theme.BottomNavigationBarTheme, () => ({
    __proto__: dart.getMethods(bottom_navigation_bar_theme.BottomNavigationBarTheme.__proto__),
    updateShouldNotify: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)])
  }));
  dart.setLibraryUri(bottom_navigation_bar_theme.BottomNavigationBarTheme, L87);
  dart.setFieldSignature(bottom_navigation_bar_theme.BottomNavigationBarTheme, () => ({
    __proto__: dart.getFields(bottom_navigation_bar_theme.BottomNavigationBarTheme.__proto__),
    data: dart.finalFieldType(dart.legacy(bottom_navigation_bar_theme.BottomNavigationBarThemeData))
  }));
  var color$11 = dart.privateName(bottom_app_bar_theme, "BottomAppBarTheme.color");
  var elevation$19 = dart.privateName(bottom_app_bar_theme, "BottomAppBarTheme.elevation");
  var shape$17 = dart.privateName(bottom_app_bar_theme, "BottomAppBarTheme.shape");
  const Object_Diagnosticable$36$17 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$17.new = function() {
  }).prototype = Object_Diagnosticable$36$17.prototype;
  dart.applyMixin(Object_Diagnosticable$36$17, diagnostics.Diagnosticable);
  bottom_app_bar_theme.BottomAppBarTheme = class BottomAppBarTheme extends Object_Diagnosticable$36$17 {
    get color() {
      return this[color$11];
    }
    set color(value) {
      super.color = value;
    }
    get elevation() {
      return this[elevation$19];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get shape() {
      return this[shape$17];
    }
    set shape(value) {
      super.shape = value;
    }
    copyWith(opts) {
      let t12, t12$, t12$0;
      let color = opts && 'color' in opts ? opts.color : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      return new bottom_app_bar_theme.BottomAppBarTheme.new({color: (t12 = color, t12 == null ? this.color : t12), elevation: (t12$ = elevation, t12$ == null ? this.elevation : t12$), shape: (t12$0 = shape, t12$0 == null ? this.shape : t12$0)});
    }
    static of(context) {
      return theme$.Theme.of(context).bottomAppBarTheme;
    }
    static lerp(a, b, t) {
      let t12, t12$, t12$0, t12$1, t12$2, t12$3;
      if (!(t != null)) dart.assertFailed(null, L88, 75, 12, "t != null");
      return new bottom_app_bar_theme.BottomAppBarTheme.new({color: ui.Color.lerp((t12 = a, t12 == null ? null : t12.color), (t12$ = b, t12$ == null ? null : t12$.color), t), elevation: ui.lerpDouble((t12$0 = a, t12$0 == null ? null : t12$0.elevation), (t12$1 = b, t12$1 == null ? null : t12$1.elevation), t), shape: dart.notNull(t) < 0.5 ? (t12$2 = a, t12$2 == null ? null : t12$2.shape) : (t12$3 = b, t12$3 == null ? null : t12$3.shape)});
    }
    get hashCode() {
      return ui.hashValues(this.color, this.elevation, this.shape);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this.runtimeType)) return false;
      return BottomAppBarThemeL().is(other) && dart.equals(other.color, this.color) && other.elevation == this.elevation && dart.equals(other.shape, this.shape);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfdoubleL()).new("elevation", this.elevation, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfNotchedShapeL()).new("shape", this.shape, {defaultValue: null}));
    }
  };
  (bottom_app_bar_theme.BottomAppBarTheme.new = function(opts) {
    let color = opts && 'color' in opts ? opts.color : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    this[color$11] = color;
    this[elevation$19] = elevation;
    this[shape$17] = shape;
    ;
  }).prototype = bottom_app_bar_theme.BottomAppBarTheme.prototype;
  dart.addTypeTests(bottom_app_bar_theme.BottomAppBarTheme);
  dart.addTypeCaches(bottom_app_bar_theme.BottomAppBarTheme);
  dart.setMethodSignature(bottom_app_bar_theme.BottomAppBarTheme, () => ({
    __proto__: dart.getMethods(bottom_app_bar_theme.BottomAppBarTheme.__proto__),
    copyWith: dart.fnType(dart.legacy(bottom_app_bar_theme.BottomAppBarTheme), [], {color: dart.legacy(ui.Color), elevation: dart.legacy(core.double), shape: dart.legacy(notched_shapes.NotchedShape)}, {}),
    _equals: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    [$_equals]: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    debugFillProperties: dart.fnType(dart.void, [dart.legacy(diagnostics.DiagnosticPropertiesBuilder)])
  }));
  dart.setGetterSignature(bottom_app_bar_theme.BottomAppBarTheme, () => ({
    __proto__: dart.getGetters(bottom_app_bar_theme.BottomAppBarTheme.__proto__),
    hashCode: dart.legacy(core.int),
    [$hashCode]: dart.legacy(core.int)
  }));
  dart.setLibraryUri(bottom_app_bar_theme.BottomAppBarTheme, L89);
  dart.setFieldSignature(bottom_app_bar_theme.BottomAppBarTheme, () => ({
    __proto__: dart.getFields(bottom_app_bar_theme.BottomAppBarTheme.__proto__),
    color: dart.finalFieldType(dart.legacy(ui.Color)),
    elevation: dart.finalFieldType(dart.legacy(core.double)),
    shape: dart.finalFieldType(dart.legacy(notched_shapes.NotchedShape))
  }));
  dart.defineExtensionMethods(bottom_app_bar_theme.BottomAppBarTheme, ['_equals']);
  dart.defineExtensionAccessors(bottom_app_bar_theme.BottomAppBarTheme, ['hashCode']);
  var backgroundColor$14 = dart.privateName(banner_theme, "MaterialBannerThemeData.backgroundColor");
  var contentTextStyle$2 = dart.privateName(banner_theme, "MaterialBannerThemeData.contentTextStyle");
  var padding$10 = dart.privateName(banner_theme, "MaterialBannerThemeData.padding");
  var leadingPadding$ = dart.privateName(banner_theme, "MaterialBannerThemeData.leadingPadding");
  const Object_Diagnosticable$36$18 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$18.new = function() {
  }).prototype = Object_Diagnosticable$36$18.prototype;
  dart.applyMixin(Object_Diagnosticable$36$18, diagnostics.Diagnosticable);
  banner_theme.MaterialBannerThemeData = class MaterialBannerThemeData extends Object_Diagnosticable$36$18 {
    get backgroundColor() {
      return this[backgroundColor$14];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get contentTextStyle() {
      return this[contentTextStyle$2];
    }
    set contentTextStyle(value) {
      super.contentTextStyle = value;
    }
    get padding() {
      return this[padding$10];
    }
    set padding(value) {
      super.padding = value;
    }
    get leadingPadding() {
      return this[leadingPadding$];
    }
    set leadingPadding(value) {
      super.leadingPadding = value;
    }
    copyWith(opts) {
      let t12, t12$, t12$0, t12$1;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let contentTextStyle = opts && 'contentTextStyle' in opts ? opts.contentTextStyle : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let leadingPadding = opts && 'leadingPadding' in opts ? opts.leadingPadding : null;
      return new banner_theme.MaterialBannerThemeData.new({backgroundColor: (t12 = backgroundColor, t12 == null ? this.backgroundColor : t12), contentTextStyle: (t12$ = contentTextStyle, t12$ == null ? this.contentTextStyle : t12$), padding: (t12$0 = padding, t12$0 == null ? this.padding : t12$0), leadingPadding: (t12$1 = leadingPadding, t12$1 == null ? this.leadingPadding : t12$1)});
    }
    static lerp(a, b, t) {
      let t12, t12$, t12$0, t12$1, t12$2, t12$3, t12$4, t12$5;
      if (!(t != null)) dart.assertFailed(null, L90, 75, 12, "t != null");
      return new banner_theme.MaterialBannerThemeData.new({backgroundColor: ui.Color.lerp((t12 = a, t12 == null ? null : t12.backgroundColor), (t12$ = b, t12$ == null ? null : t12$.backgroundColor), t), contentTextStyle: text_style.TextStyle.lerp((t12$0 = a, t12$0 == null ? null : t12$0.contentTextStyle), (t12$1 = b, t12$1 == null ? null : t12$1.contentTextStyle), t), padding: edge_insets.EdgeInsetsGeometry.lerp((t12$2 = a, t12$2 == null ? null : t12$2.padding), (t12$3 = b, t12$3 == null ? null : t12$3.padding), t), leadingPadding: edge_insets.EdgeInsetsGeometry.lerp((t12$4 = a, t12$4 == null ? null : t12$4.leadingPadding), (t12$5 = b, t12$5 == null ? null : t12$5.leadingPadding), t)});
    }
    get hashCode() {
      return ui.hashValues(this.backgroundColor, this.contentTextStyle, this.padding, this.leadingPadding);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this.runtimeType)) return false;
      return MaterialBannerThemeDataL().is(other) && dart.equals(other.backgroundColor, this.backgroundColor) && dart.equals(other.contentTextStyle, this.contentTextStyle) && dart.equals(other.padding, this.padding) && dart.equals(other.leadingPadding, this.leadingPadding);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new colors.ColorProperty.new("backgroundColor", this.backgroundColor, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfTextStyleL()).new("contentTextStyle", this.contentTextStyle, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfEdgeInsetsGeometryL()).new("padding", this.padding, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfEdgeInsetsGeometryL()).new("leadingPadding", this.leadingPadding, {defaultValue: null}));
    }
  };
  (banner_theme.MaterialBannerThemeData.new = function(opts) {
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let contentTextStyle = opts && 'contentTextStyle' in opts ? opts.contentTextStyle : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let leadingPadding = opts && 'leadingPadding' in opts ? opts.leadingPadding : null;
    this[backgroundColor$14] = backgroundColor;
    this[contentTextStyle$2] = contentTextStyle;
    this[padding$10] = padding;
    this[leadingPadding$] = leadingPadding;
    ;
  }).prototype = banner_theme.MaterialBannerThemeData.prototype;
  dart.addTypeTests(banner_theme.MaterialBannerThemeData);
  dart.addTypeCaches(banner_theme.MaterialBannerThemeData);
  dart.setMethodSignature(banner_theme.MaterialBannerThemeData, () => ({
    __proto__: dart.getMethods(banner_theme.MaterialBannerThemeData.__proto__),
    copyWith: dart.fnType(dart.legacy(banner_theme.MaterialBannerThemeData), [], {backgroundColor: dart.legacy(ui.Color), contentTextStyle: dart.legacy(text_style.TextStyle), leadingPadding: dart.legacy(edge_insets.EdgeInsetsGeometry), padding: dart.legacy(edge_insets.EdgeInsetsGeometry)}, {}),
    _equals: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    [$_equals]: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    debugFillProperties: dart.fnType(dart.void, [dart.legacy(diagnostics.DiagnosticPropertiesBuilder)])
  }));
  dart.setGetterSignature(banner_theme.MaterialBannerThemeData, () => ({
    __proto__: dart.getGetters(banner_theme.MaterialBannerThemeData.__proto__),
    hashCode: dart.legacy(core.int),
    [$hashCode]: dart.legacy(core.int)
  }));
  dart.setLibraryUri(banner_theme.MaterialBannerThemeData, L91);
  dart.setFieldSignature(banner_theme.MaterialBannerThemeData, () => ({
    __proto__: dart.getFields(banner_theme.MaterialBannerThemeData.__proto__),
    backgroundColor: dart.finalFieldType(dart.legacy(ui.Color)),
    contentTextStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    padding: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsetsGeometry)),
    leadingPadding: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsetsGeometry))
  }));
  dart.defineExtensionMethods(banner_theme.MaterialBannerThemeData, ['_equals']);
  dart.defineExtensionAccessors(banner_theme.MaterialBannerThemeData, ['hashCode']);
  var C2048;
  var C2049;
  var C2047;
  var C2046;
  var data$11 = dart.privateName(banner_theme, "MaterialBannerTheme.data");
  banner_theme.MaterialBannerTheme = class MaterialBannerTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[data$11];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t12, t12$;
      let bannerTheme = context.dependOnInheritedWidgetOfExactType(MaterialBannerThemeL());
      t12$ = (t12 = bannerTheme, t12 == null ? null : t12.data);
      return t12$ == null ? theme$.Theme.of(context).bannerTheme : t12$;
    }
    wrap(context, child) {
      let ancestorTheme = context.findAncestorWidgetOfExactType(MaterialBannerThemeL());
      return this === ancestorTheme ? child : new banner_theme.MaterialBannerTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C2046 || CT.C2046});
    }
    updateShouldNotify(oldWidget) {
      MaterialBannerThemeL().as(oldWidget);
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (banner_theme.MaterialBannerTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[data$11] = data;
    banner_theme.MaterialBannerTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = banner_theme.MaterialBannerTheme.prototype;
  dart.addTypeTests(banner_theme.MaterialBannerTheme);
  dart.addTypeCaches(banner_theme.MaterialBannerTheme);
  dart.setMethodSignature(banner_theme.MaterialBannerTheme, () => ({
    __proto__: dart.getMethods(banner_theme.MaterialBannerTheme.__proto__),
    wrap: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext), dart.legacy(framework.Widget)]),
    updateShouldNotify: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)])
  }));
  dart.setLibraryUri(banner_theme.MaterialBannerTheme, L91);
  dart.setFieldSignature(banner_theme.MaterialBannerTheme, () => ({
    __proto__: dart.getFields(banner_theme.MaterialBannerTheme.__proto__),
    data: dart.finalFieldType(dart.legacy(banner_theme.MaterialBannerThemeData))
  }));
  var C2050;
  theme_data.MaterialTapTargetSize = class MaterialTapTargetSize extends core.Object {
    toString() {
      return this[_name$8];
    }
  };
  (theme_data.MaterialTapTargetSize.new = function(index, _name) {
    this.index = index;
    this[_name$8] = _name;
    ;
  }).prototype = theme_data.MaterialTapTargetSize.prototype;
  dart.addTypeTests(theme_data.MaterialTapTargetSize);
  dart.addTypeCaches(theme_data.MaterialTapTargetSize);
  dart.setMethodSignature(theme_data.MaterialTapTargetSize, () => ({
    __proto__: dart.getMethods(theme_data.MaterialTapTargetSize.__proto__),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setLibraryUri(theme_data.MaterialTapTargetSize, L92);
  dart.setFieldSignature(theme_data.MaterialTapTargetSize, () => ({
    __proto__: dart.getFields(theme_data.MaterialTapTargetSize.__proto__),
    index: dart.finalFieldType(dart.legacy(core.int)),
    [_name$8]: dart.finalFieldType(dart.legacy(core.String))
  }));
  dart.defineExtensionMethods(theme_data.MaterialTapTargetSize, ['toString']);
  theme_data.MaterialTapTargetSize.padded = C1046 || CT.C1046;
  theme_data.MaterialTapTargetSize.shrinkWrap = C1047 || CT.C1047;
  theme_data.MaterialTapTargetSize.values = C2050 || CT.C2050;
  var C2051;
  var C2052;
  var C2053;
  var C2054;
  var C2055;
  var C2056;
  var IconThemeData_size = dart.privateName(icon_theme_data, "IconThemeData.size");
  var IconThemeData__opacity = dart.privateName(icon_theme_data, "IconThemeData._opacity");
  var C2058;
  var IconThemeData_color = dart.privateName(icon_theme_data, "IconThemeData.color");
  var C2057;
  var C2059;
  var C2061;
  var C2060;
  var C2062;
  var C2063;
  var C2064;
  var AppBarTheme_centerTitle = dart.privateName(app_bar_theme, "AppBarTheme.centerTitle");
  var AppBarTheme_textTheme = dart.privateName(app_bar_theme, "AppBarTheme.textTheme");
  var AppBarTheme_actionsIconTheme = dart.privateName(app_bar_theme, "AppBarTheme.actionsIconTheme");
  var AppBarTheme_iconTheme = dart.privateName(app_bar_theme, "AppBarTheme.iconTheme");
  var AppBarTheme_shadowColor = dart.privateName(app_bar_theme, "AppBarTheme.shadowColor");
  var AppBarTheme_elevation = dart.privateName(app_bar_theme, "AppBarTheme.elevation");
  var AppBarTheme_color = dart.privateName(app_bar_theme, "AppBarTheme.color");
  var AppBarTheme_brightness = dart.privateName(app_bar_theme, "AppBarTheme.brightness");
  var C2065;
  var C2066;
  var C2067;
  var C2068;
  var FloatingActionButtonThemeData_shape = dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.shape");
  var FloatingActionButtonThemeData_highlightElevation = dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.highlightElevation");
  var FloatingActionButtonThemeData_disabledElevation = dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.disabledElevation");
  var FloatingActionButtonThemeData_hoverElevation = dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.hoverElevation");
  var FloatingActionButtonThemeData_focusElevation = dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.focusElevation");
  var FloatingActionButtonThemeData_elevation = dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.elevation");
  var FloatingActionButtonThemeData_splashColor = dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.splashColor");
  var FloatingActionButtonThemeData_hoverColor = dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.hoverColor");
  var FloatingActionButtonThemeData_focusColor = dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.focusColor");
  var FloatingActionButtonThemeData_backgroundColor = dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.backgroundColor");
  var FloatingActionButtonThemeData_foregroundColor = dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.foregroundColor");
  var C2069;
  var C2070;
  var BottomSheetThemeData_clipBehavior = dart.privateName(bottom_sheet_theme, "BottomSheetThemeData.clipBehavior");
  var BottomSheetThemeData_shape = dart.privateName(bottom_sheet_theme, "BottomSheetThemeData.shape");
  var BottomSheetThemeData_modalElevation = dart.privateName(bottom_sheet_theme, "BottomSheetThemeData.modalElevation");
  var BottomSheetThemeData_modalBackgroundColor = dart.privateName(bottom_sheet_theme, "BottomSheetThemeData.modalBackgroundColor");
  var BottomSheetThemeData_elevation = dart.privateName(bottom_sheet_theme, "BottomSheetThemeData.elevation");
  var BottomSheetThemeData_backgroundColor = dart.privateName(bottom_sheet_theme, "BottomSheetThemeData.backgroundColor");
  var C2071;
  var C2072;
  var C2073;
  var C2074;
  var ButtonBarThemeData_overflowDirection = dart.privateName(button_bar_theme, "ButtonBarThemeData.overflowDirection");
  var ButtonBarThemeData_layoutBehavior = dart.privateName(button_bar_theme, "ButtonBarThemeData.layoutBehavior");
  var ButtonBarThemeData_buttonAlignedDropdown = dart.privateName(button_bar_theme, "ButtonBarThemeData.buttonAlignedDropdown");
  var ButtonBarThemeData_buttonPadding = dart.privateName(button_bar_theme, "ButtonBarThemeData.buttonPadding");
  var ButtonBarThemeData_buttonHeight = dart.privateName(button_bar_theme, "ButtonBarThemeData.buttonHeight");
  var ButtonBarThemeData_buttonMinWidth = dart.privateName(button_bar_theme, "ButtonBarThemeData.buttonMinWidth");
  var ButtonBarThemeData_buttonTextTheme = dart.privateName(button_bar_theme, "ButtonBarThemeData.buttonTextTheme");
  var ButtonBarThemeData_mainAxisSize = dart.privateName(button_bar_theme, "ButtonBarThemeData.mainAxisSize");
  var ButtonBarThemeData_alignment = dart.privateName(button_bar_theme, "ButtonBarThemeData.alignment");
  var C2075;
  var C2076;
  var C2077;
  var C2078;
  var C2079;
  var C2080;
  var visualDensity$7 = dart.privateName(theme_data, "ThemeData.visualDensity");
  var primaryColor$ = dart.privateName(theme_data, "ThemeData.primaryColor");
  var primaryColorBrightness$ = dart.privateName(theme_data, "ThemeData.primaryColorBrightness");
  var primaryColorLight$ = dart.privateName(theme_data, "ThemeData.primaryColorLight");
  var primaryColorDark$ = dart.privateName(theme_data, "ThemeData.primaryColorDark");
  var canvasColor$ = dart.privateName(theme_data, "ThemeData.canvasColor");
  var shadowColor$2 = dart.privateName(theme_data, "ThemeData.shadowColor");
  var accentColor$ = dart.privateName(theme_data, "ThemeData.accentColor");
  var accentColorBrightness$ = dart.privateName(theme_data, "ThemeData.accentColorBrightness");
  var scaffoldBackgroundColor$ = dart.privateName(theme_data, "ThemeData.scaffoldBackgroundColor");
  var bottomAppBarColor$ = dart.privateName(theme_data, "ThemeData.bottomAppBarColor");
  var cardColor$ = dart.privateName(theme_data, "ThemeData.cardColor");
  var dividerColor$ = dart.privateName(theme_data, "ThemeData.dividerColor");
  var focusColor$10 = dart.privateName(theme_data, "ThemeData.focusColor");
  var hoverColor$11 = dart.privateName(theme_data, "ThemeData.hoverColor");
  var highlightColor$6 = dart.privateName(theme_data, "ThemeData.highlightColor");
  var splashColor$7 = dart.privateName(theme_data, "ThemeData.splashColor");
  var splashFactory$1 = dart.privateName(theme_data, "ThemeData.splashFactory");
  var selectedRowColor$ = dart.privateName(theme_data, "ThemeData.selectedRowColor");
  var unselectedWidgetColor$ = dart.privateName(theme_data, "ThemeData.unselectedWidgetColor");
  var disabledColor$3 = dart.privateName(theme_data, "ThemeData.disabledColor");
  var buttonTheme$ = dart.privateName(theme_data, "ThemeData.buttonTheme");
  var toggleButtonsTheme$ = dart.privateName(theme_data, "ThemeData.toggleButtonsTheme");
  var buttonColor$ = dart.privateName(theme_data, "ThemeData.buttonColor");
  var secondaryHeaderColor$ = dart.privateName(theme_data, "ThemeData.secondaryHeaderColor");
  var textSelectionColor$ = dart.privateName(theme_data, "ThemeData.textSelectionColor");
  var cursorColor$ = dart.privateName(theme_data, "ThemeData.cursorColor");
  var textSelectionHandleColor$ = dart.privateName(theme_data, "ThemeData.textSelectionHandleColor");
  var backgroundColor$15 = dart.privateName(theme_data, "ThemeData.backgroundColor");
  var dialogBackgroundColor$ = dart.privateName(theme_data, "ThemeData.dialogBackgroundColor");
  var indicatorColor$0 = dart.privateName(theme_data, "ThemeData.indicatorColor");
  var hintColor$ = dart.privateName(theme_data, "ThemeData.hintColor");
  var errorColor$ = dart.privateName(theme_data, "ThemeData.errorColor");
  var toggleableActiveColor$ = dart.privateName(theme_data, "ThemeData.toggleableActiveColor");
  var textTheme$1 = dart.privateName(theme_data, "ThemeData.textTheme");
  var primaryTextTheme$ = dart.privateName(theme_data, "ThemeData.primaryTextTheme");
  var accentTextTheme$ = dart.privateName(theme_data, "ThemeData.accentTextTheme");
  var inputDecorationTheme$0 = dart.privateName(theme_data, "ThemeData.inputDecorationTheme");
  var iconTheme$ = dart.privateName(theme_data, "ThemeData.iconTheme");
  var primaryIconTheme$ = dart.privateName(theme_data, "ThemeData.primaryIconTheme");
  var accentIconTheme$ = dart.privateName(theme_data, "ThemeData.accentIconTheme");
  var sliderTheme$ = dart.privateName(theme_data, "ThemeData.sliderTheme");
  var tabBarTheme$ = dart.privateName(theme_data, "ThemeData.tabBarTheme");
  var tooltipTheme$ = dart.privateName(theme_data, "ThemeData.tooltipTheme");
  var cardTheme$ = dart.privateName(theme_data, "ThemeData.cardTheme");
  var chipTheme$ = dart.privateName(theme_data, "ThemeData.chipTheme");
  var platform$0 = dart.privateName(theme_data, "ThemeData.platform");
  var materialTapTargetSize$3 = dart.privateName(theme_data, "ThemeData.materialTapTargetSize");
  var applyElevationOverlayColor$ = dart.privateName(theme_data, "ThemeData.applyElevationOverlayColor");
  var pageTransitionsTheme$ = dart.privateName(theme_data, "ThemeData.pageTransitionsTheme");
  var appBarTheme$ = dart.privateName(theme_data, "ThemeData.appBarTheme");
  var bottomAppBarTheme$ = dart.privateName(theme_data, "ThemeData.bottomAppBarTheme");
  var colorScheme$ = dart.privateName(theme_data, "ThemeData.colorScheme");
  var snackBarTheme$ = dart.privateName(theme_data, "ThemeData.snackBarTheme");
  var dialogTheme$ = dart.privateName(theme_data, "ThemeData.dialogTheme");
  var floatingActionButtonTheme$ = dart.privateName(theme_data, "ThemeData.floatingActionButtonTheme");
  var navigationRailTheme$ = dart.privateName(theme_data, "ThemeData.navigationRailTheme");
  var typography$0 = dart.privateName(theme_data, "ThemeData.typography");
  var cupertinoOverrideTheme$ = dart.privateName(theme_data, "ThemeData.cupertinoOverrideTheme");
  var bottomSheetTheme$ = dart.privateName(theme_data, "ThemeData.bottomSheetTheme");
  var popupMenuTheme$ = dart.privateName(theme_data, "ThemeData.popupMenuTheme");
  var bannerTheme$ = dart.privateName(theme_data, "ThemeData.bannerTheme");
  var dividerTheme$ = dart.privateName(theme_data, "ThemeData.dividerTheme");
  var buttonBarTheme$ = dart.privateName(theme_data, "ThemeData.buttonBarTheme");
  var bottomNavigationBarTheme$ = dart.privateName(theme_data, "ThemeData.bottomNavigationBarTheme");
  var timePickerTheme$ = dart.privateName(theme_data, "ThemeData.timePickerTheme");
  var textButtonTheme$ = dart.privateName(theme_data, "ThemeData.textButtonTheme");
  var elevatedButtonTheme$ = dart.privateName(theme_data, "ThemeData.elevatedButtonTheme");
  var outlinedButtonTheme$ = dart.privateName(theme_data, "ThemeData.outlinedButtonTheme");
  var fixTextFieldOutlineLabel$0 = dart.privateName(theme_data, "ThemeData.fixTextFieldOutlineLabel");
  const Object_Diagnosticable$36$19 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$19.new = function() {
  }).prototype = Object_Diagnosticable$36$19.prototype;
  dart.applyMixin(Object_Diagnosticable$36$19, diagnostics.Diagnosticable);
  theme_data.ThemeData = class ThemeData extends Object_Diagnosticable$36$19 {
    get visualDensity() {
      return this[visualDensity$7];
    }
    set visualDensity(value) {
      super.visualDensity = value;
    }
    get primaryColor() {
      return this[primaryColor$];
    }
    set primaryColor(value) {
      super.primaryColor = value;
    }
    get primaryColorBrightness() {
      return this[primaryColorBrightness$];
    }
    set primaryColorBrightness(value) {
      super.primaryColorBrightness = value;
    }
    get primaryColorLight() {
      return this[primaryColorLight$];
    }
    set primaryColorLight(value) {
      super.primaryColorLight = value;
    }
    get primaryColorDark() {
      return this[primaryColorDark$];
    }
    set primaryColorDark(value) {
      super.primaryColorDark = value;
    }
    get canvasColor() {
      return this[canvasColor$];
    }
    set canvasColor(value) {
      super.canvasColor = value;
    }
    get shadowColor() {
      return this[shadowColor$2];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    get accentColor() {
      return this[accentColor$];
    }
    set accentColor(value) {
      super.accentColor = value;
    }
    get accentColorBrightness() {
      return this[accentColorBrightness$];
    }
    set accentColorBrightness(value) {
      super.accentColorBrightness = value;
    }
    get scaffoldBackgroundColor() {
      return this[scaffoldBackgroundColor$];
    }
    set scaffoldBackgroundColor(value) {
      super.scaffoldBackgroundColor = value;
    }
    get bottomAppBarColor() {
      return this[bottomAppBarColor$];
    }
    set bottomAppBarColor(value) {
      super.bottomAppBarColor = value;
    }
    get cardColor() {
      return this[cardColor$];
    }
    set cardColor(value) {
      super.cardColor = value;
    }
    get dividerColor() {
      return this[dividerColor$];
    }
    set dividerColor(value) {
      super.dividerColor = value;
    }
    get focusColor() {
      return this[focusColor$10];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get hoverColor() {
      return this[hoverColor$11];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get highlightColor() {
      return this[highlightColor$6];
    }
    set highlightColor(value) {
      super.highlightColor = value;
    }
    get splashColor() {
      return this[splashColor$7];
    }
    set splashColor(value) {
      super.splashColor = value;
    }
    get splashFactory() {
      return this[splashFactory$1];
    }
    set splashFactory(value) {
      super.splashFactory = value;
    }
    get selectedRowColor() {
      return this[selectedRowColor$];
    }
    set selectedRowColor(value) {
      super.selectedRowColor = value;
    }
    get unselectedWidgetColor() {
      return this[unselectedWidgetColor$];
    }
    set unselectedWidgetColor(value) {
      super.unselectedWidgetColor = value;
    }
    get disabledColor() {
      return this[disabledColor$3];
    }
    set disabledColor(value) {
      super.disabledColor = value;
    }
    get buttonTheme() {
      return this[buttonTheme$];
    }
    set buttonTheme(value) {
      super.buttonTheme = value;
    }
    get toggleButtonsTheme() {
      return this[toggleButtonsTheme$];
    }
    set toggleButtonsTheme(value) {
      super.toggleButtonsTheme = value;
    }
    get buttonColor() {
      return this[buttonColor$];
    }
    set buttonColor(value) {
      super.buttonColor = value;
    }
    get secondaryHeaderColor() {
      return this[secondaryHeaderColor$];
    }
    set secondaryHeaderColor(value) {
      super.secondaryHeaderColor = value;
    }
    get textSelectionColor() {
      return this[textSelectionColor$];
    }
    set textSelectionColor(value) {
      super.textSelectionColor = value;
    }
    get cursorColor() {
      return this[cursorColor$];
    }
    set cursorColor(value) {
      super.cursorColor = value;
    }
    get textSelectionHandleColor() {
      return this[textSelectionHandleColor$];
    }
    set textSelectionHandleColor(value) {
      super.textSelectionHandleColor = value;
    }
    get backgroundColor() {
      return this[backgroundColor$15];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get dialogBackgroundColor() {
      return this[dialogBackgroundColor$];
    }
    set dialogBackgroundColor(value) {
      super.dialogBackgroundColor = value;
    }
    get indicatorColor() {
      return this[indicatorColor$0];
    }
    set indicatorColor(value) {
      super.indicatorColor = value;
    }
    get hintColor() {
      return this[hintColor$];
    }
    set hintColor(value) {
      super.hintColor = value;
    }
    get errorColor() {
      return this[errorColor$];
    }
    set errorColor(value) {
      super.errorColor = value;
    }
    get toggleableActiveColor() {
      return this[toggleableActiveColor$];
    }
    set toggleableActiveColor(value) {
      super.toggleableActiveColor = value;
    }
    get textTheme() {
      return this[textTheme$1];
    }
    set textTheme(value) {
      super.textTheme = value;
    }
    get primaryTextTheme() {
      return this[primaryTextTheme$];
    }
    set primaryTextTheme(value) {
      super.primaryTextTheme = value;
    }
    get accentTextTheme() {
      return this[accentTextTheme$];
    }
    set accentTextTheme(value) {
      super.accentTextTheme = value;
    }
    get inputDecorationTheme() {
      return this[inputDecorationTheme$0];
    }
    set inputDecorationTheme(value) {
      super.inputDecorationTheme = value;
    }
    get iconTheme() {
      return this[iconTheme$];
    }
    set iconTheme(value) {
      super.iconTheme = value;
    }
    get primaryIconTheme() {
      return this[primaryIconTheme$];
    }
    set primaryIconTheme(value) {
      super.primaryIconTheme = value;
    }
    get accentIconTheme() {
      return this[accentIconTheme$];
    }
    set accentIconTheme(value) {
      super.accentIconTheme = value;
    }
    get sliderTheme() {
      return this[sliderTheme$];
    }
    set sliderTheme(value) {
      super.sliderTheme = value;
    }
    get tabBarTheme() {
      return this[tabBarTheme$];
    }
    set tabBarTheme(value) {
      super.tabBarTheme = value;
    }
    get tooltipTheme() {
      return this[tooltipTheme$];
    }
    set tooltipTheme(value) {
      super.tooltipTheme = value;
    }
    get cardTheme() {
      return this[cardTheme$];
    }
    set cardTheme(value) {
      super.cardTheme = value;
    }
    get chipTheme() {
      return this[chipTheme$];
    }
    set chipTheme(value) {
      super.chipTheme = value;
    }
    get platform() {
      return this[platform$0];
    }
    set platform(value) {
      super.platform = value;
    }
    get materialTapTargetSize() {
      return this[materialTapTargetSize$3];
    }
    set materialTapTargetSize(value) {
      super.materialTapTargetSize = value;
    }
    get applyElevationOverlayColor() {
      return this[applyElevationOverlayColor$];
    }
    set applyElevationOverlayColor(value) {
      super.applyElevationOverlayColor = value;
    }
    get pageTransitionsTheme() {
      return this[pageTransitionsTheme$];
    }
    set pageTransitionsTheme(value) {
      super.pageTransitionsTheme = value;
    }
    get appBarTheme() {
      return this[appBarTheme$];
    }
    set appBarTheme(value) {
      super.appBarTheme = value;
    }
    get bottomAppBarTheme() {
      return this[bottomAppBarTheme$];
    }
    set bottomAppBarTheme(value) {
      super.bottomAppBarTheme = value;
    }
    get colorScheme() {
      return this[colorScheme$];
    }
    set colorScheme(value) {
      super.colorScheme = value;
    }
    get snackBarTheme() {
      return this[snackBarTheme$];
    }
    set snackBarTheme(value) {
      super.snackBarTheme = value;
    }
    get dialogTheme() {
      return this[dialogTheme$];
    }
    set dialogTheme(value) {
      super.dialogTheme = value;
    }
    get floatingActionButtonTheme() {
      return this[floatingActionButtonTheme$];
    }
    set floatingActionButtonTheme(value) {
      super.floatingActionButtonTheme = value;
    }
    get navigationRailTheme() {
      return this[navigationRailTheme$];
    }
    set navigationRailTheme(value) {
      super.navigationRailTheme = value;
    }
    get typography() {
      return this[typography$0];
    }
    set typography(value) {
      super.typography = value;
    }
    get cupertinoOverrideTheme() {
      return this[cupertinoOverrideTheme$];
    }
    set cupertinoOverrideTheme(value) {
      super.cupertinoOverrideTheme = value;
    }
    get bottomSheetTheme() {
      return this[bottomSheetTheme$];
    }
    set bottomSheetTheme(value) {
      super.bottomSheetTheme = value;
    }
    get popupMenuTheme() {
      return this[popupMenuTheme$];
    }
    set popupMenuTheme(value) {
      super.popupMenuTheme = value;
    }
    get bannerTheme() {
      return this[bannerTheme$];
    }
    set bannerTheme(value) {
      super.bannerTheme = value;
    }
    get dividerTheme() {
      return this[dividerTheme$];
    }
    set dividerTheme(value) {
      super.dividerTheme = value;
    }
    get buttonBarTheme() {
      return this[buttonBarTheme$];
    }
    set buttonBarTheme(value) {
      super.buttonBarTheme = value;
    }
    get bottomNavigationBarTheme() {
      return this[bottomNavigationBarTheme$];
    }
    set bottomNavigationBarTheme(value) {
      super.bottomNavigationBarTheme = value;
    }
    get timePickerTheme() {
      return this[timePickerTheme$];
    }
    set timePickerTheme(value) {
      super.timePickerTheme = value;
    }
    get textButtonTheme() {
      return this[textButtonTheme$];
    }
    set textButtonTheme(value) {
      super.textButtonTheme = value;
    }
    get elevatedButtonTheme() {
      return this[elevatedButtonTheme$];
    }
    set elevatedButtonTheme(value) {
      super.elevatedButtonTheme = value;
    }
    get outlinedButtonTheme() {
      return this[outlinedButtonTheme$];
    }
    set outlinedButtonTheme(value) {
      super.outlinedButtonTheme = value;
    }
    get fixTextFieldOutlineLabel() {
      return this[fixTextFieldOutlineLabel$0];
    }
    set fixTextFieldOutlineLabel(value) {
      super.fixTextFieldOutlineLabel = value;
    }
    static new(opts) {
      let t12, t13, t12$, t12$0, t12$1, t12$2, t12$3;
      let brightness = opts && 'brightness' in opts ? opts.brightness : null;
      let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
      let primarySwatch = opts && 'primarySwatch' in opts ? opts.primarySwatch : null;
      let primaryColor = opts && 'primaryColor' in opts ? opts.primaryColor : null;
      let primaryColorBrightness = opts && 'primaryColorBrightness' in opts ? opts.primaryColorBrightness : null;
      let primaryColorLight = opts && 'primaryColorLight' in opts ? opts.primaryColorLight : null;
      let primaryColorDark = opts && 'primaryColorDark' in opts ? opts.primaryColorDark : null;
      let accentColor = opts && 'accentColor' in opts ? opts.accentColor : null;
      let accentColorBrightness = opts && 'accentColorBrightness' in opts ? opts.accentColorBrightness : null;
      let canvasColor = opts && 'canvasColor' in opts ? opts.canvasColor : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let scaffoldBackgroundColor = opts && 'scaffoldBackgroundColor' in opts ? opts.scaffoldBackgroundColor : null;
      let bottomAppBarColor = opts && 'bottomAppBarColor' in opts ? opts.bottomAppBarColor : null;
      let cardColor = opts && 'cardColor' in opts ? opts.cardColor : null;
      let dividerColor = opts && 'dividerColor' in opts ? opts.dividerColor : null;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
      let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
      let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
      let splashFactory = opts && 'splashFactory' in opts ? opts.splashFactory : null;
      let selectedRowColor = opts && 'selectedRowColor' in opts ? opts.selectedRowColor : null;
      let unselectedWidgetColor = opts && 'unselectedWidgetColor' in opts ? opts.unselectedWidgetColor : null;
      let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
      let buttonColor = opts && 'buttonColor' in opts ? opts.buttonColor : null;
      let buttonTheme = opts && 'buttonTheme' in opts ? opts.buttonTheme : null;
      let toggleButtonsTheme = opts && 'toggleButtonsTheme' in opts ? opts.toggleButtonsTheme : null;
      let secondaryHeaderColor = opts && 'secondaryHeaderColor' in opts ? opts.secondaryHeaderColor : null;
      let textSelectionColor = opts && 'textSelectionColor' in opts ? opts.textSelectionColor : null;
      let cursorColor = opts && 'cursorColor' in opts ? opts.cursorColor : null;
      let textSelectionHandleColor = opts && 'textSelectionHandleColor' in opts ? opts.textSelectionHandleColor : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let dialogBackgroundColor = opts && 'dialogBackgroundColor' in opts ? opts.dialogBackgroundColor : null;
      let indicatorColor = opts && 'indicatorColor' in opts ? opts.indicatorColor : null;
      let hintColor = opts && 'hintColor' in opts ? opts.hintColor : null;
      let errorColor = opts && 'errorColor' in opts ? opts.errorColor : null;
      let toggleableActiveColor = opts && 'toggleableActiveColor' in opts ? opts.toggleableActiveColor : null;
      let fontFamily = opts && 'fontFamily' in opts ? opts.fontFamily : null;
      let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
      let primaryTextTheme = opts && 'primaryTextTheme' in opts ? opts.primaryTextTheme : null;
      let accentTextTheme = opts && 'accentTextTheme' in opts ? opts.accentTextTheme : null;
      let inputDecorationTheme = opts && 'inputDecorationTheme' in opts ? opts.inputDecorationTheme : null;
      let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
      let primaryIconTheme = opts && 'primaryIconTheme' in opts ? opts.primaryIconTheme : null;
      let accentIconTheme = opts && 'accentIconTheme' in opts ? opts.accentIconTheme : null;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let tabBarTheme = opts && 'tabBarTheme' in opts ? opts.tabBarTheme : null;
      let tooltipTheme = opts && 'tooltipTheme' in opts ? opts.tooltipTheme : null;
      let cardTheme = opts && 'cardTheme' in opts ? opts.cardTheme : null;
      let chipTheme = opts && 'chipTheme' in opts ? opts.chipTheme : null;
      let platform = opts && 'platform' in opts ? opts.platform : null;
      let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
      let applyElevationOverlayColor = opts && 'applyElevationOverlayColor' in opts ? opts.applyElevationOverlayColor : null;
      let pageTransitionsTheme = opts && 'pageTransitionsTheme' in opts ? opts.pageTransitionsTheme : null;
      let appBarTheme = opts && 'appBarTheme' in opts ? opts.appBarTheme : null;
      let bottomAppBarTheme = opts && 'bottomAppBarTheme' in opts ? opts.bottomAppBarTheme : null;
      let colorScheme = opts && 'colorScheme' in opts ? opts.colorScheme : null;
      let dialogTheme = opts && 'dialogTheme' in opts ? opts.dialogTheme : null;
      let floatingActionButtonTheme = opts && 'floatingActionButtonTheme' in opts ? opts.floatingActionButtonTheme : null;
      let navigationRailTheme = opts && 'navigationRailTheme' in opts ? opts.navigationRailTheme : null;
      let typography = opts && 'typography' in opts ? opts.typography : null;
      let cupertinoOverrideTheme = opts && 'cupertinoOverrideTheme' in opts ? opts.cupertinoOverrideTheme : null;
      let snackBarTheme = opts && 'snackBarTheme' in opts ? opts.snackBarTheme : null;
      let bottomSheetTheme = opts && 'bottomSheetTheme' in opts ? opts.bottomSheetTheme : null;
      let popupMenuTheme = opts && 'popupMenuTheme' in opts ? opts.popupMenuTheme : null;
      let bannerTheme = opts && 'bannerTheme' in opts ? opts.bannerTheme : null;
      let dividerTheme = opts && 'dividerTheme' in opts ? opts.dividerTheme : null;
      let buttonBarTheme = opts && 'buttonBarTheme' in opts ? opts.buttonBarTheme : null;
      let bottomNavigationBarTheme = opts && 'bottomNavigationBarTheme' in opts ? opts.bottomNavigationBarTheme : null;
      let timePickerTheme = opts && 'timePickerTheme' in opts ? opts.timePickerTheme : null;
      let textButtonTheme = opts && 'textButtonTheme' in opts ? opts.textButtonTheme : null;
      let elevatedButtonTheme = opts && 'elevatedButtonTheme' in opts ? opts.elevatedButtonTheme : null;
      let outlinedButtonTheme = opts && 'outlinedButtonTheme' in opts ? opts.outlinedButtonTheme : null;
      let fixTextFieldOutlineLabel = opts && 'fixTextFieldOutlineLabel' in opts ? opts.fixTextFieldOutlineLabel : null;
      if (!((t12 = colorScheme, t12 == null ? null : t12.brightness) == null || brightness == null || dart.equals(colorScheme.brightness, brightness))) dart.assertFailed(null, L93, 283, 12, "colorScheme?.brightness == null || brightness == null || colorScheme.brightness == brightness");
      let _brightness = (t12$0 = (t12$ = brightness, t12$ == null ? (t13 = colorScheme, t13 == null ? null : t13.brightness) : t12$), t12$0 == null ? ui.Brightness.light : t12$0);
      let isDark = dart.equals(_brightness, ui.Brightness.dark);
      visualDensity == null ? visualDensity = C1000 || CT.C1000 : null;
      primarySwatch == null ? primarySwatch = colors$.Colors.blue : null;
      primaryColor == null ? primaryColor = isDark ? colors$.Colors.grey._get(900) : primarySwatch : null;
      primaryColorBrightness == null ? primaryColorBrightness = theme_data.ThemeData.estimateBrightnessForColor(primaryColor) : null;
      primaryColorLight == null ? primaryColorLight = isDark ? colors$.Colors.grey._get(500) : primarySwatch._get(100) : null;
      primaryColorDark == null ? primaryColorDark = isDark ? colors$.Colors.black : primarySwatch._get(700) : null;
      let primaryIsDark = dart.equals(primaryColorBrightness, ui.Brightness.dark);
      toggleableActiveColor == null ? toggleableActiveColor = isDark ? colors$.Colors.tealAccent._get(200) : (t12$1 = accentColor, t12$1 == null ? primarySwatch._get(600) : t12$1) : null;
      accentColor == null ? accentColor = isDark ? colors$.Colors.tealAccent._get(200) : primarySwatch._get(500) : null;
      accentColorBrightness == null ? accentColorBrightness = theme_data.ThemeData.estimateBrightnessForColor(accentColor) : null;
      let accentIsDark = dart.equals(accentColorBrightness, ui.Brightness.dark);
      canvasColor == null ? canvasColor = isDark ? colors$.Colors.grey._get(850) : colors$.Colors.grey._get(50) : null;
      shadowColor == null ? shadowColor = colors$.Colors.black : null;
      scaffoldBackgroundColor == null ? scaffoldBackgroundColor = canvasColor : null;
      bottomAppBarColor == null ? bottomAppBarColor = isDark ? colors$.Colors.grey._get(800) : colors$.Colors.white : null;
      cardColor == null ? cardColor = isDark ? colors$.Colors.grey._get(800) : colors$.Colors.white : null;
      dividerColor == null ? dividerColor = isDark ? C2051 || CT.C2051 : C2052 || CT.C2052 : null;
      colorScheme == null ? colorScheme = color_scheme.ColorScheme.fromSwatch({primarySwatch: primarySwatch, primaryColorDark: primaryColorDark, accentColor: accentColor, cardColor: cardColor, backgroundColor: backgroundColor, errorColor: errorColor, brightness: _brightness}) : null;
      splashFactory == null ? splashFactory = ink_splash.InkSplash.splashFactory : null;
      selectedRowColor == null ? selectedRowColor = colors$.Colors.grey._get(100) : null;
      unselectedWidgetColor == null ? unselectedWidgetColor = isDark ? colors$.Colors.white70 : colors$.Colors.black54 : null;
      secondaryHeaderColor == null ? secondaryHeaderColor = isDark ? colors$.Colors.grey._get(700) : primarySwatch._get(50) : null;
      textSelectionColor == null ? textSelectionColor = isDark ? accentColor : primarySwatch._get(200) : null;
      cursorColor = (t12$2 = cursorColor, t12$2 == null ? C2053 || CT.C2053 : t12$2);
      textSelectionHandleColor == null ? textSelectionHandleColor = isDark ? colors$.Colors.tealAccent._get(400) : primarySwatch._get(300) : null;
      backgroundColor == null ? backgroundColor = isDark ? colors$.Colors.grey._get(700) : primarySwatch._get(200) : null;
      dialogBackgroundColor == null ? dialogBackgroundColor = isDark ? colors$.Colors.grey._get(800) : colors$.Colors.white : null;
      indicatorColor == null ? indicatorColor = dart.equals(accentColor, primaryColor) ? colors$.Colors.white : accentColor : null;
      hintColor == null ? hintColor = isDark ? C2054 || CT.C2054 : C2055 || CT.C2055 : null;
      errorColor == null ? errorColor = colors$.Colors.red._get(700) : null;
      inputDecorationTheme == null ? inputDecorationTheme = C1804 || CT.C1804 : null;
      pageTransitionsTheme == null ? pageTransitionsTheme = C2056 || CT.C2056 : null;
      primaryIconTheme == null ? primaryIconTheme = primaryIsDark ? C2057 || CT.C2057 : C2059 || CT.C2059 : null;
      accentIconTheme == null ? accentIconTheme = accentIsDark ? C2057 || CT.C2057 : C2059 || CT.C2059 : null;
      iconTheme == null ? iconTheme = isDark ? C2057 || CT.C2057 : C2060 || CT.C2060 : null;
      platform == null ? platform = platform$.defaultTargetPlatform : null;
      typography == null ? typography = typography$.Typography.material2014({platform: platform}) : null;
      let defaultTextTheme = isDark ? typography.white : typography.black;
      let defaultPrimaryTextTheme = primaryIsDark ? typography.white : typography.black;
      let defaultAccentTextTheme = accentIsDark ? typography.white : typography.black;
      if (fontFamily != null) {
        defaultTextTheme = defaultTextTheme.apply({fontFamily: fontFamily});
        defaultPrimaryTextTheme = defaultPrimaryTextTheme.apply({fontFamily: fontFamily});
        defaultAccentTextTheme = defaultAccentTextTheme.apply({fontFamily: fontFamily});
      }
      textTheme = defaultTextTheme.merge(textTheme);
      primaryTextTheme = defaultPrimaryTextTheme.merge(primaryTextTheme);
      accentTextTheme = defaultAccentTextTheme.merge(accentTextTheme);
      materialTapTargetSize == null ? materialTapTargetSize = theme_data.MaterialTapTargetSize.padded : null;
      applyElevationOverlayColor == null ? applyElevationOverlayColor = false : null;
      buttonColor == null ? buttonColor = isDark ? primarySwatch._get(600) : colors$.Colors.grey._get(300) : null;
      focusColor == null ? focusColor = isDark ? colors$.Colors.white.withOpacity(0.12) : colors$.Colors.black.withOpacity(0.12) : null;
      hoverColor == null ? hoverColor = isDark ? colors$.Colors.white.withOpacity(0.04) : colors$.Colors.black.withOpacity(0.04) : null;
      buttonTheme == null ? buttonTheme = new button_theme.ButtonThemeData.new({colorScheme: colorScheme, buttonColor: buttonColor, disabledColor: disabledColor, focusColor: focusColor, hoverColor: hoverColor, highlightColor: highlightColor, splashColor: splashColor, materialTapTargetSize: materialTapTargetSize}) : null;
      toggleButtonsTheme == null ? toggleButtonsTheme = C2062 || CT.C2062 : null;
      disabledColor == null ? disabledColor = isDark ? colors$.Colors.white38 : colors$.Colors.black38 : null;
      highlightColor == null ? highlightColor = isDark ? theme_data._kDarkThemeHighlightColor : theme_data._kLightThemeHighlightColor : null;
      splashColor == null ? splashColor = isDark ? theme_data._kDarkThemeSplashColor : theme_data._kLightThemeSplashColor : null;
      sliderTheme == null ? sliderTheme = C1267 || CT.C1267 : null;
      tabBarTheme == null ? tabBarTheme = C2063 || CT.C2063 : null;
      tooltipTheme == null ? tooltipTheme = C2064 || CT.C2064 : null;
      appBarTheme == null ? appBarTheme = C2065 || CT.C2065 : null;
      bottomAppBarTheme == null ? bottomAppBarTheme = C2066 || CT.C2066 : null;
      cardTheme == null ? cardTheme = C2067 || CT.C2067 : null;
      chipTheme == null ? chipTheme = chip_theme.ChipThemeData.fromDefaults({secondaryColor: primaryColor, brightness: colorScheme.brightness, labelStyle: textTheme.bodyText1}) : null;
      dialogTheme == null ? dialogTheme = C2068 || CT.C2068 : null;
      floatingActionButtonTheme == null ? floatingActionButtonTheme = C2069 || CT.C2069 : null;
      navigationRailTheme == null ? navigationRailTheme = C1593 || CT.C1593 : null;
      cupertinoOverrideTheme = (t12$3 = cupertinoOverrideTheme, t12$3 == null ? null : t12$3.noDefault());
      snackBarTheme == null ? snackBarTheme = C2070 || CT.C2070 : null;
      bottomSheetTheme == null ? bottomSheetTheme = C2071 || CT.C2071 : null;
      popupMenuTheme == null ? popupMenuTheme = C2072 || CT.C2072 : null;
      bannerTheme == null ? bannerTheme = C2073 || CT.C2073 : null;
      dividerTheme == null ? dividerTheme = C2074 || CT.C2074 : null;
      buttonBarTheme == null ? buttonBarTheme = C2075 || CT.C2075 : null;
      bottomNavigationBarTheme == null ? bottomNavigationBarTheme = C2076 || CT.C2076 : null;
      timePickerTheme == null ? timePickerTheme = C2077 || CT.C2077 : null;
      textButtonTheme == null ? textButtonTheme = C2078 || CT.C2078 : null;
      elevatedButtonTheme == null ? elevatedButtonTheme = C2079 || CT.C2079 : null;
      outlinedButtonTheme == null ? outlinedButtonTheme = C2080 || CT.C2080 : null;
      fixTextFieldOutlineLabel == null ? fixTextFieldOutlineLabel = false : null;
      return new theme_data.ThemeData.raw({visualDensity: visualDensity, primaryColor: primaryColor, primaryColorBrightness: primaryColorBrightness, primaryColorLight: primaryColorLight, primaryColorDark: primaryColorDark, accentColor: accentColor, accentColorBrightness: accentColorBrightness, canvasColor: canvasColor, shadowColor: shadowColor, scaffoldBackgroundColor: scaffoldBackgroundColor, bottomAppBarColor: bottomAppBarColor, cardColor: cardColor, dividerColor: dividerColor, focusColor: focusColor, hoverColor: hoverColor, highlightColor: highlightColor, splashColor: splashColor, splashFactory: splashFactory, selectedRowColor: selectedRowColor, unselectedWidgetColor: unselectedWidgetColor, disabledColor: disabledColor, buttonTheme: buttonTheme, buttonColor: buttonColor, toggleButtonsTheme: toggleButtonsTheme, toggleableActiveColor: toggleableActiveColor, secondaryHeaderColor: secondaryHeaderColor, textSelectionColor: textSelectionColor, cursorColor: cursorColor, textSelectionHandleColor: textSelectionHandleColor, backgroundColor: backgroundColor, dialogBackgroundColor: dialogBackgroundColor, indicatorColor: indicatorColor, hintColor: hintColor, errorColor: errorColor, textTheme: textTheme, primaryTextTheme: primaryTextTheme, accentTextTheme: accentTextTheme, inputDecorationTheme: inputDecorationTheme, iconTheme: iconTheme, primaryIconTheme: primaryIconTheme, accentIconTheme: accentIconTheme, sliderTheme: sliderTheme, tabBarTheme: tabBarTheme, tooltipTheme: tooltipTheme, cardTheme: cardTheme, chipTheme: chipTheme, platform: platform, materialTapTargetSize: materialTapTargetSize, applyElevationOverlayColor: applyElevationOverlayColor, pageTransitionsTheme: pageTransitionsTheme, appBarTheme: appBarTheme, bottomAppBarTheme: bottomAppBarTheme, colorScheme: colorScheme, dialogTheme: dialogTheme, floatingActionButtonTheme: floatingActionButtonTheme, navigationRailTheme: navigationRailTheme, typography: typography, cupertinoOverrideTheme: cupertinoOverrideTheme, snackBarTheme: snackBarTheme, bottomSheetTheme: bottomSheetTheme, popupMenuTheme: popupMenuTheme, bannerTheme: bannerTheme, dividerTheme: dividerTheme, buttonBarTheme: buttonBarTheme, bottomNavigationBarTheme: bottomNavigationBarTheme, timePickerTheme: timePickerTheme, textButtonTheme: textButtonTheme, elevatedButtonTheme: elevatedButtonTheme, outlinedButtonTheme: outlinedButtonTheme, fixTextFieldOutlineLabel: fixTextFieldOutlineLabel});
    }
    static from(opts) {
      let colorScheme = opts && 'colorScheme' in opts ? opts.colorScheme : null;
      let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
      if (!(colorScheme != null)) dart.assertFailed(null, L93, 654, 12, "colorScheme != null");
      let isDark = dart.equals(colorScheme.brightness, ui.Brightness.dark);
      let primarySurfaceColor = isDark ? colorScheme.surface : colorScheme.primary;
      let onPrimarySurfaceColor = isDark ? colorScheme.onSurface : colorScheme.onPrimary;
      return theme_data.ThemeData.new({brightness: colorScheme.brightness, primaryColor: primarySurfaceColor, primaryColorBrightness: theme_data.ThemeData.estimateBrightnessForColor(primarySurfaceColor), canvasColor: colorScheme.background, accentColor: colorScheme.secondary, accentColorBrightness: theme_data.ThemeData.estimateBrightnessForColor(colorScheme.secondary), scaffoldBackgroundColor: colorScheme.background, bottomAppBarColor: colorScheme.surface, cardColor: colorScheme.surface, dividerColor: colorScheme.onSurface.withOpacity(0.12), backgroundColor: colorScheme.background, dialogBackgroundColor: colorScheme.background, errorColor: colorScheme.error, textTheme: textTheme, indicatorColor: onPrimarySurfaceColor, applyElevationOverlayColor: isDark, colorScheme: colorScheme});
    }
    static light() {
      return theme_data.ThemeData.new({brightness: ui.Brightness.light});
    }
    static dark() {
      return theme_data.ThemeData.new({brightness: ui.Brightness.dark});
    }
    static fallback() {
      return theme_data.ThemeData.light();
    }
    get brightness() {
      return this.colorScheme.brightness;
    }
    copyWith(opts) {
      let t12, t12$, t12$0, t12$1, t12$2, t12$3, t12$4, t12$5, t12$6, t12$7, t12$8, t12$9, t12$10, t12$11, t12$12, t12$13, t12$14, t12$15, t12$16, t12$17, t12$18, t12$19, t12$20, t12$21, t12$22, t12$23, t12$24, t12$25, t12$26, t12$27, t12$28, t12$29, t12$30, t12$31, t12$32, t12$33, t12$34, t12$35, t12$36, t12$37, t12$38, t12$39, t12$40, t12$41, t12$42, t12$43, t12$44, t12$45, t12$46, t12$47, t12$48, t12$49, t12$50, t12$51, t12$52, t12$53, t12$54, t12$55, t12$56, t12$57, t12$58, t12$59, t12$60, t12$61, t12$62, t12$63, t12$64, t12$65, t12$66, t12$67, t12$68;
      let brightness = opts && 'brightness' in opts ? opts.brightness : null;
      let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
      let primaryColor = opts && 'primaryColor' in opts ? opts.primaryColor : null;
      let primaryColorBrightness = opts && 'primaryColorBrightness' in opts ? opts.primaryColorBrightness : null;
      let primaryColorLight = opts && 'primaryColorLight' in opts ? opts.primaryColorLight : null;
      let primaryColorDark = opts && 'primaryColorDark' in opts ? opts.primaryColorDark : null;
      let accentColor = opts && 'accentColor' in opts ? opts.accentColor : null;
      let accentColorBrightness = opts && 'accentColorBrightness' in opts ? opts.accentColorBrightness : null;
      let canvasColor = opts && 'canvasColor' in opts ? opts.canvasColor : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let scaffoldBackgroundColor = opts && 'scaffoldBackgroundColor' in opts ? opts.scaffoldBackgroundColor : null;
      let bottomAppBarColor = opts && 'bottomAppBarColor' in opts ? opts.bottomAppBarColor : null;
      let cardColor = opts && 'cardColor' in opts ? opts.cardColor : null;
      let dividerColor = opts && 'dividerColor' in opts ? opts.dividerColor : null;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
      let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
      let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
      let splashFactory = opts && 'splashFactory' in opts ? opts.splashFactory : null;
      let selectedRowColor = opts && 'selectedRowColor' in opts ? opts.selectedRowColor : null;
      let unselectedWidgetColor = opts && 'unselectedWidgetColor' in opts ? opts.unselectedWidgetColor : null;
      let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
      let buttonTheme = opts && 'buttonTheme' in opts ? opts.buttonTheme : null;
      let toggleButtonsTheme = opts && 'toggleButtonsTheme' in opts ? opts.toggleButtonsTheme : null;
      let buttonColor = opts && 'buttonColor' in opts ? opts.buttonColor : null;
      let secondaryHeaderColor = opts && 'secondaryHeaderColor' in opts ? opts.secondaryHeaderColor : null;
      let textSelectionColor = opts && 'textSelectionColor' in opts ? opts.textSelectionColor : null;
      let cursorColor = opts && 'cursorColor' in opts ? opts.cursorColor : null;
      let textSelectionHandleColor = opts && 'textSelectionHandleColor' in opts ? opts.textSelectionHandleColor : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let dialogBackgroundColor = opts && 'dialogBackgroundColor' in opts ? opts.dialogBackgroundColor : null;
      let indicatorColor = opts && 'indicatorColor' in opts ? opts.indicatorColor : null;
      let hintColor = opts && 'hintColor' in opts ? opts.hintColor : null;
      let errorColor = opts && 'errorColor' in opts ? opts.errorColor : null;
      let toggleableActiveColor = opts && 'toggleableActiveColor' in opts ? opts.toggleableActiveColor : null;
      let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
      let primaryTextTheme = opts && 'primaryTextTheme' in opts ? opts.primaryTextTheme : null;
      let accentTextTheme = opts && 'accentTextTheme' in opts ? opts.accentTextTheme : null;
      let inputDecorationTheme = opts && 'inputDecorationTheme' in opts ? opts.inputDecorationTheme : null;
      let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
      let primaryIconTheme = opts && 'primaryIconTheme' in opts ? opts.primaryIconTheme : null;
      let accentIconTheme = opts && 'accentIconTheme' in opts ? opts.accentIconTheme : null;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let tabBarTheme = opts && 'tabBarTheme' in opts ? opts.tabBarTheme : null;
      let tooltipTheme = opts && 'tooltipTheme' in opts ? opts.tooltipTheme : null;
      let cardTheme = opts && 'cardTheme' in opts ? opts.cardTheme : null;
      let chipTheme = opts && 'chipTheme' in opts ? opts.chipTheme : null;
      let platform = opts && 'platform' in opts ? opts.platform : null;
      let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
      let applyElevationOverlayColor = opts && 'applyElevationOverlayColor' in opts ? opts.applyElevationOverlayColor : null;
      let pageTransitionsTheme = opts && 'pageTransitionsTheme' in opts ? opts.pageTransitionsTheme : null;
      let appBarTheme = opts && 'appBarTheme' in opts ? opts.appBarTheme : null;
      let bottomAppBarTheme = opts && 'bottomAppBarTheme' in opts ? opts.bottomAppBarTheme : null;
      let colorScheme = opts && 'colorScheme' in opts ? opts.colorScheme : null;
      let dialogTheme = opts && 'dialogTheme' in opts ? opts.dialogTheme : null;
      let floatingActionButtonTheme = opts && 'floatingActionButtonTheme' in opts ? opts.floatingActionButtonTheme : null;
      let navigationRailTheme = opts && 'navigationRailTheme' in opts ? opts.navigationRailTheme : null;
      let typography = opts && 'typography' in opts ? opts.typography : null;
      let cupertinoOverrideTheme = opts && 'cupertinoOverrideTheme' in opts ? opts.cupertinoOverrideTheme : null;
      let snackBarTheme = opts && 'snackBarTheme' in opts ? opts.snackBarTheme : null;
      let bottomSheetTheme = opts && 'bottomSheetTheme' in opts ? opts.bottomSheetTheme : null;
      let popupMenuTheme = opts && 'popupMenuTheme' in opts ? opts.popupMenuTheme : null;
      let bannerTheme = opts && 'bannerTheme' in opts ? opts.bannerTheme : null;
      let dividerTheme = opts && 'dividerTheme' in opts ? opts.dividerTheme : null;
      let buttonBarTheme = opts && 'buttonBarTheme' in opts ? opts.buttonBarTheme : null;
      let bottomNavigationBarTheme = opts && 'bottomNavigationBarTheme' in opts ? opts.bottomNavigationBarTheme : null;
      let timePickerTheme = opts && 'timePickerTheme' in opts ? opts.timePickerTheme : null;
      let textButtonTheme = opts && 'textButtonTheme' in opts ? opts.textButtonTheme : null;
      let elevatedButtonTheme = opts && 'elevatedButtonTheme' in opts ? opts.elevatedButtonTheme : null;
      let outlinedButtonTheme = opts && 'outlinedButtonTheme' in opts ? opts.outlinedButtonTheme : null;
      let fixTextFieldOutlineLabel = opts && 'fixTextFieldOutlineLabel' in opts ? opts.fixTextFieldOutlineLabel : null;
      cupertinoOverrideTheme = (t12 = cupertinoOverrideTheme, t12 == null ? null : t12.noDefault());
      return new theme_data.ThemeData.raw({visualDensity: (t12$ = visualDensity, t12$ == null ? this.visualDensity : t12$), primaryColor: (t12$0 = primaryColor, t12$0 == null ? this.primaryColor : t12$0), primaryColorBrightness: (t12$1 = primaryColorBrightness, t12$1 == null ? this.primaryColorBrightness : t12$1), primaryColorLight: (t12$2 = primaryColorLight, t12$2 == null ? this.primaryColorLight : t12$2), primaryColorDark: (t12$3 = primaryColorDark, t12$3 == null ? this.primaryColorDark : t12$3), accentColor: (t12$4 = accentColor, t12$4 == null ? this.accentColor : t12$4), accentColorBrightness: (t12$5 = accentColorBrightness, t12$5 == null ? this.accentColorBrightness : t12$5), canvasColor: (t12$6 = canvasColor, t12$6 == null ? this.canvasColor : t12$6), shadowColor: (t12$7 = shadowColor, t12$7 == null ? this.shadowColor : t12$7), scaffoldBackgroundColor: (t12$8 = scaffoldBackgroundColor, t12$8 == null ? this.scaffoldBackgroundColor : t12$8), bottomAppBarColor: (t12$9 = bottomAppBarColor, t12$9 == null ? this.bottomAppBarColor : t12$9), cardColor: (t12$10 = cardColor, t12$10 == null ? this.cardColor : t12$10), dividerColor: (t12$11 = dividerColor, t12$11 == null ? this.dividerColor : t12$11), focusColor: (t12$12 = focusColor, t12$12 == null ? this.focusColor : t12$12), hoverColor: (t12$13 = hoverColor, t12$13 == null ? this.hoverColor : t12$13), highlightColor: (t12$14 = highlightColor, t12$14 == null ? this.highlightColor : t12$14), splashColor: (t12$15 = splashColor, t12$15 == null ? this.splashColor : t12$15), splashFactory: (t12$16 = splashFactory, t12$16 == null ? this.splashFactory : t12$16), selectedRowColor: (t12$17 = selectedRowColor, t12$17 == null ? this.selectedRowColor : t12$17), unselectedWidgetColor: (t12$18 = unselectedWidgetColor, t12$18 == null ? this.unselectedWidgetColor : t12$18), disabledColor: (t12$19 = disabledColor, t12$19 == null ? this.disabledColor : t12$19), buttonColor: (t12$20 = buttonColor, t12$20 == null ? this.buttonColor : t12$20), buttonTheme: (t12$21 = buttonTheme, t12$21 == null ? this.buttonTheme : t12$21), toggleButtonsTheme: (t12$22 = toggleButtonsTheme, t12$22 == null ? this.toggleButtonsTheme : t12$22), secondaryHeaderColor: (t12$23 = secondaryHeaderColor, t12$23 == null ? this.secondaryHeaderColor : t12$23), textSelectionColor: (t12$24 = textSelectionColor, t12$24 == null ? this.textSelectionColor : t12$24), cursorColor: (t12$25 = cursorColor, t12$25 == null ? this.cursorColor : t12$25), textSelectionHandleColor: (t12$26 = textSelectionHandleColor, t12$26 == null ? this.textSelectionHandleColor : t12$26), backgroundColor: (t12$27 = backgroundColor, t12$27 == null ? this.backgroundColor : t12$27), dialogBackgroundColor: (t12$28 = dialogBackgroundColor, t12$28 == null ? this.dialogBackgroundColor : t12$28), indicatorColor: (t12$29 = indicatorColor, t12$29 == null ? this.indicatorColor : t12$29), hintColor: (t12$30 = hintColor, t12$30 == null ? this.hintColor : t12$30), errorColor: (t12$31 = errorColor, t12$31 == null ? this.errorColor : t12$31), toggleableActiveColor: (t12$32 = toggleableActiveColor, t12$32 == null ? this.toggleableActiveColor : t12$32), textTheme: (t12$33 = textTheme, t12$33 == null ? this.textTheme : t12$33), primaryTextTheme: (t12$34 = primaryTextTheme, t12$34 == null ? this.primaryTextTheme : t12$34), accentTextTheme: (t12$35 = accentTextTheme, t12$35 == null ? this.accentTextTheme : t12$35), inputDecorationTheme: (t12$36 = inputDecorationTheme, t12$36 == null ? this.inputDecorationTheme : t12$36), iconTheme: (t12$37 = iconTheme, t12$37 == null ? this.iconTheme : t12$37), primaryIconTheme: (t12$38 = primaryIconTheme, t12$38 == null ? this.primaryIconTheme : t12$38), accentIconTheme: (t12$39 = accentIconTheme, t12$39 == null ? this.accentIconTheme : t12$39), sliderTheme: (t12$40 = sliderTheme, t12$40 == null ? this.sliderTheme : t12$40), tabBarTheme: (t12$41 = tabBarTheme, t12$41 == null ? this.tabBarTheme : t12$41), tooltipTheme: (t12$42 = tooltipTheme, t12$42 == null ? this.tooltipTheme : t12$42), cardTheme: (t12$43 = cardTheme, t12$43 == null ? this.cardTheme : t12$43), chipTheme: (t12$44 = chipTheme, t12$44 == null ? this.chipTheme : t12$44), platform: (t12$45 = platform, t12$45 == null ? this.platform : t12$45), materialTapTargetSize: (t12$46 = materialTapTargetSize, t12$46 == null ? this.materialTapTargetSize : t12$46), applyElevationOverlayColor: (t12$47 = applyElevationOverlayColor, t12$47 == null ? this.applyElevationOverlayColor : t12$47), pageTransitionsTheme: (t12$48 = pageTransitionsTheme, t12$48 == null ? this.pageTransitionsTheme : t12$48), appBarTheme: (t12$49 = appBarTheme, t12$49 == null ? this.appBarTheme : t12$49), bottomAppBarTheme: (t12$50 = bottomAppBarTheme, t12$50 == null ? this.bottomAppBarTheme : t12$50), colorScheme: (t12$51 = colorScheme, t12$51 == null ? this.colorScheme : t12$51).copyWith({brightness: brightness}), dialogTheme: (t12$52 = dialogTheme, t12$52 == null ? this.dialogTheme : t12$52), floatingActionButtonTheme: (t12$53 = floatingActionButtonTheme, t12$53 == null ? this.floatingActionButtonTheme : t12$53), navigationRailTheme: (t12$54 = navigationRailTheme, t12$54 == null ? this.navigationRailTheme : t12$54), typography: (t12$55 = typography, t12$55 == null ? this.typography : t12$55), cupertinoOverrideTheme: (t12$56 = cupertinoOverrideTheme, t12$56 == null ? this.cupertinoOverrideTheme : t12$56), snackBarTheme: (t12$57 = snackBarTheme, t12$57 == null ? this.snackBarTheme : t12$57), bottomSheetTheme: (t12$58 = bottomSheetTheme, t12$58 == null ? this.bottomSheetTheme : t12$58), popupMenuTheme: (t12$59 = popupMenuTheme, t12$59 == null ? this.popupMenuTheme : t12$59), bannerTheme: (t12$60 = bannerTheme, t12$60 == null ? this.bannerTheme : t12$60), dividerTheme: (t12$61 = dividerTheme, t12$61 == null ? this.dividerTheme : t12$61), buttonBarTheme: (t12$62 = buttonBarTheme, t12$62 == null ? this.buttonBarTheme : t12$62), bottomNavigationBarTheme: (t12$63 = bottomNavigationBarTheme, t12$63 == null ? this.bottomNavigationBarTheme : t12$63), timePickerTheme: (t12$64 = timePickerTheme, t12$64 == null ? this.timePickerTheme : t12$64), textButtonTheme: (t12$65 = textButtonTheme, t12$65 == null ? this.textButtonTheme : t12$65), elevatedButtonTheme: (t12$66 = elevatedButtonTheme, t12$66 == null ? this.elevatedButtonTheme : t12$66), outlinedButtonTheme: (t12$67 = outlinedButtonTheme, t12$67 == null ? this.outlinedButtonTheme : t12$67), fixTextFieldOutlineLabel: (t12$68 = fixTextFieldOutlineLabel, t12$68 == null ? this.fixTextFieldOutlineLabel : t12$68)});
    }
    static localize(baseTheme, localTextGeometry) {
      if (!(baseTheme != null)) dart.assertFailed(null, L93, 1285, 12, "baseTheme != null");
      if (!(localTextGeometry != null)) dart.assertFailed(null, L93, 1286, 12, "localTextGeometry != null");
      return theme_data.ThemeData._localizedThemeDataCache.putIfAbsent(new theme_data._IdentityThemeDataCacheKey.new(baseTheme, localTextGeometry), dart.fn(() => baseTheme.copyWith({primaryTextTheme: localTextGeometry.merge(baseTheme.primaryTextTheme), accentTextTheme: localTextGeometry.merge(baseTheme.accentTextTheme), textTheme: localTextGeometry.merge(baseTheme.textTheme)}), VoidToThemeDataL()));
    }
    static estimateBrightnessForColor(color) {
      let relativeLuminance = color.computeLuminance();
      if ((dart.notNull(relativeLuminance) + 0.05) * (dart.notNull(relativeLuminance) + 0.05) > 0.15) return ui.Brightness.light;
      return ui.Brightness.dark;
    }
    static lerp(a, b, t) {
      if (!(a != null)) dart.assertFailed(null, L93, 1326, 12, "a != null");
      if (!(b != null)) dart.assertFailed(null, L93, 1327, 12, "b != null");
      if (!(t != null)) dart.assertFailed(null, L93, 1328, 12, "t != null");
      return new theme_data.ThemeData.raw({visualDensity: theme_data.VisualDensity.lerp(a.visualDensity, b.visualDensity, t), primaryColor: ui.Color.lerp(a.primaryColor, b.primaryColor, t), primaryColorBrightness: dart.notNull(t) < 0.5 ? a.primaryColorBrightness : b.primaryColorBrightness, primaryColorLight: ui.Color.lerp(a.primaryColorLight, b.primaryColorLight, t), primaryColorDark: ui.Color.lerp(a.primaryColorDark, b.primaryColorDark, t), canvasColor: ui.Color.lerp(a.canvasColor, b.canvasColor, t), shadowColor: ui.Color.lerp(a.shadowColor, b.shadowColor, t), accentColor: ui.Color.lerp(a.accentColor, b.accentColor, t), accentColorBrightness: dart.notNull(t) < 0.5 ? a.accentColorBrightness : b.accentColorBrightness, scaffoldBackgroundColor: ui.Color.lerp(a.scaffoldBackgroundColor, b.scaffoldBackgroundColor, t), bottomAppBarColor: ui.Color.lerp(a.bottomAppBarColor, b.bottomAppBarColor, t), cardColor: ui.Color.lerp(a.cardColor, b.cardColor, t), dividerColor: ui.Color.lerp(a.dividerColor, b.dividerColor, t), focusColor: ui.Color.lerp(a.focusColor, b.focusColor, t), hoverColor: ui.Color.lerp(a.hoverColor, b.hoverColor, t), highlightColor: ui.Color.lerp(a.highlightColor, b.highlightColor, t), splashColor: ui.Color.lerp(a.splashColor, b.splashColor, t), splashFactory: dart.notNull(t) < 0.5 ? a.splashFactory : b.splashFactory, selectedRowColor: ui.Color.lerp(a.selectedRowColor, b.selectedRowColor, t), unselectedWidgetColor: ui.Color.lerp(a.unselectedWidgetColor, b.unselectedWidgetColor, t), disabledColor: ui.Color.lerp(a.disabledColor, b.disabledColor, t), buttonTheme: dart.notNull(t) < 0.5 ? a.buttonTheme : b.buttonTheme, toggleButtonsTheme: toggle_buttons_theme.ToggleButtonsThemeData.lerp(a.toggleButtonsTheme, b.toggleButtonsTheme, t), buttonColor: ui.Color.lerp(a.buttonColor, b.buttonColor, t), secondaryHeaderColor: ui.Color.lerp(a.secondaryHeaderColor, b.secondaryHeaderColor, t), textSelectionColor: ui.Color.lerp(a.textSelectionColor, b.textSelectionColor, t), cursorColor: ui.Color.lerp(a.cursorColor, b.cursorColor, t), textSelectionHandleColor: ui.Color.lerp(a.textSelectionHandleColor, b.textSelectionHandleColor, t), backgroundColor: ui.Color.lerp(a.backgroundColor, b.backgroundColor, t), dialogBackgroundColor: ui.Color.lerp(a.dialogBackgroundColor, b.dialogBackgroundColor, t), indicatorColor: ui.Color.lerp(a.indicatorColor, b.indicatorColor, t), hintColor: ui.Color.lerp(a.hintColor, b.hintColor, t), errorColor: ui.Color.lerp(a.errorColor, b.errorColor, t), toggleableActiveColor: ui.Color.lerp(a.toggleableActiveColor, b.toggleableActiveColor, t), textTheme: text_theme.TextTheme.lerp(a.textTheme, b.textTheme, t), primaryTextTheme: text_theme.TextTheme.lerp(a.primaryTextTheme, b.primaryTextTheme, t), accentTextTheme: text_theme.TextTheme.lerp(a.accentTextTheme, b.accentTextTheme, t), inputDecorationTheme: dart.notNull(t) < 0.5 ? a.inputDecorationTheme : b.inputDecorationTheme, iconTheme: icon_theme_data.IconThemeData.lerp(a.iconTheme, b.iconTheme, t), primaryIconTheme: icon_theme_data.IconThemeData.lerp(a.primaryIconTheme, b.primaryIconTheme, t), accentIconTheme: icon_theme_data.IconThemeData.lerp(a.accentIconTheme, b.accentIconTheme, t), sliderTheme: slider_theme.SliderThemeData.lerp(a.sliderTheme, b.sliderTheme, t), tabBarTheme: tab_bar_theme.TabBarTheme.lerp(a.tabBarTheme, b.tabBarTheme, t), tooltipTheme: tooltip_theme.TooltipThemeData.lerp(a.tooltipTheme, b.tooltipTheme, t), cardTheme: card_theme.CardTheme.lerp(a.cardTheme, b.cardTheme, t), chipTheme: chip_theme.ChipThemeData.lerp(a.chipTheme, b.chipTheme, t), platform: dart.notNull(t) < 0.5 ? a.platform : b.platform, materialTapTargetSize: dart.notNull(t) < 0.5 ? a.materialTapTargetSize : b.materialTapTargetSize, applyElevationOverlayColor: dart.notNull(t) < 0.5 ? a.applyElevationOverlayColor : b.applyElevationOverlayColor, pageTransitionsTheme: dart.notNull(t) < 0.5 ? a.pageTransitionsTheme : b.pageTransitionsTheme, appBarTheme: app_bar_theme.AppBarTheme.lerp(a.appBarTheme, b.appBarTheme, t), bottomAppBarTheme: bottom_app_bar_theme.BottomAppBarTheme.lerp(a.bottomAppBarTheme, b.bottomAppBarTheme, t), colorScheme: color_scheme.ColorScheme.lerp(a.colorScheme, b.colorScheme, t), dialogTheme: dialog_theme.DialogTheme.lerp(a.dialogTheme, b.dialogTheme, t), floatingActionButtonTheme: floating_action_button_theme.FloatingActionButtonThemeData.lerp(a.floatingActionButtonTheme, b.floatingActionButtonTheme, t), navigationRailTheme: navigation_rail_theme.NavigationRailThemeData.lerp(a.navigationRailTheme, b.navigationRailTheme, t), typography: typography$.Typography.lerp(a.typography, b.typography, t), cupertinoOverrideTheme: dart.notNull(t) < 0.5 ? a.cupertinoOverrideTheme : b.cupertinoOverrideTheme, snackBarTheme: snack_bar_theme.SnackBarThemeData.lerp(a.snackBarTheme, b.snackBarTheme, t), bottomSheetTheme: bottom_sheet_theme.BottomSheetThemeData.lerp(a.bottomSheetTheme, b.bottomSheetTheme, t), popupMenuTheme: popup_menu_theme.PopupMenuThemeData.lerp(a.popupMenuTheme, b.popupMenuTheme, t), bannerTheme: banner_theme.MaterialBannerThemeData.lerp(a.bannerTheme, b.bannerTheme, t), dividerTheme: divider_theme.DividerThemeData.lerp(a.dividerTheme, b.dividerTheme, t), buttonBarTheme: button_bar_theme.ButtonBarThemeData.lerp(a.buttonBarTheme, b.buttonBarTheme, t), bottomNavigationBarTheme: bottom_navigation_bar_theme.BottomNavigationBarThemeData.lerp(a.bottomNavigationBarTheme, b.bottomNavigationBarTheme, t), timePickerTheme: time_picker_theme.TimePickerThemeData.lerp(a.timePickerTheme, b.timePickerTheme, t), textButtonTheme: text_button_theme.TextButtonThemeData.lerp(a.textButtonTheme, b.textButtonTheme, t), elevatedButtonTheme: elevated_button_theme.ElevatedButtonThemeData.lerp(a.elevatedButtonTheme, b.elevatedButtonTheme, t), outlinedButtonTheme: outlined_button_theme.OutlinedButtonThemeData.lerp(a.outlinedButtonTheme, b.outlinedButtonTheme, t), fixTextFieldOutlineLabel: dart.notNull(t) < 0.5 ? a.fixTextFieldOutlineLabel : b.fixTextFieldOutlineLabel});
    }
    _equals(other) {
      if (other == null) return false;
      if (!dart.equals(dart.runtimeType(other), this.runtimeType)) return false;
      return ThemeDataL().is(other) && dart.equals(other.visualDensity, this.visualDensity) && dart.equals(other.primaryColor, this.primaryColor) && dart.equals(other.primaryColorBrightness, this.primaryColorBrightness) && dart.equals(other.primaryColorLight, this.primaryColorLight) && dart.equals(other.primaryColorDark, this.primaryColorDark) && dart.equals(other.accentColor, this.accentColor) && dart.equals(other.accentColorBrightness, this.accentColorBrightness) && dart.equals(other.canvasColor, this.canvasColor) && dart.equals(other.scaffoldBackgroundColor, this.scaffoldBackgroundColor) && dart.equals(other.bottomAppBarColor, this.bottomAppBarColor) && dart.equals(other.cardColor, this.cardColor) && dart.equals(other.shadowColor, this.shadowColor) && dart.equals(other.dividerColor, this.dividerColor) && dart.equals(other.highlightColor, this.highlightColor) && dart.equals(other.splashColor, this.splashColor) && dart.equals(other.splashFactory, this.splashFactory) && dart.equals(other.selectedRowColor, this.selectedRowColor) && dart.equals(other.unselectedWidgetColor, this.unselectedWidgetColor) && dart.equals(other.disabledColor, this.disabledColor) && dart.equals(other.buttonTheme, this.buttonTheme) && dart.equals(other.buttonColor, this.buttonColor) && dart.equals(other.toggleButtonsTheme, this.toggleButtonsTheme) && dart.equals(other.secondaryHeaderColor, this.secondaryHeaderColor) && dart.equals(other.textSelectionColor, this.textSelectionColor) && dart.equals(other.cursorColor, this.cursorColor) && dart.equals(other.textSelectionHandleColor, this.textSelectionHandleColor) && dart.equals(other.backgroundColor, this.backgroundColor) && dart.equals(other.dialogBackgroundColor, this.dialogBackgroundColor) && dart.equals(other.indicatorColor, this.indicatorColor) && dart.equals(other.hintColor, this.hintColor) && dart.equals(other.errorColor, this.errorColor) && dart.equals(other.toggleableActiveColor, this.toggleableActiveColor) && dart.equals(other.textTheme, this.textTheme) && dart.equals(other.primaryTextTheme, this.primaryTextTheme) && dart.equals(other.accentTextTheme, this.accentTextTheme) && dart.equals(other.inputDecorationTheme, this.inputDecorationTheme) && dart.equals(other.iconTheme, this.iconTheme) && dart.equals(other.primaryIconTheme, this.primaryIconTheme) && dart.equals(other.accentIconTheme, this.accentIconTheme) && dart.equals(other.sliderTheme, this.sliderTheme) && dart.equals(other.tabBarTheme, this.tabBarTheme) && dart.equals(other.tooltipTheme, this.tooltipTheme) && dart.equals(other.cardTheme, this.cardTheme) && dart.equals(other.chipTheme, this.chipTheme) && dart.equals(other.platform, this.platform) && other.materialTapTargetSize == this.materialTapTargetSize && dart.equals(other.applyElevationOverlayColor, this.applyElevationOverlayColor) && dart.equals(other.pageTransitionsTheme, this.pageTransitionsTheme) && dart.equals(other.appBarTheme, this.appBarTheme) && dart.equals(other.bottomAppBarTheme, this.bottomAppBarTheme) && dart.equals(other.colorScheme, this.colorScheme) && dart.equals(other.dialogTheme, this.dialogTheme) && dart.equals(other.floatingActionButtonTheme, this.floatingActionButtonTheme) && dart.equals(other.navigationRailTheme, this.navigationRailTheme) && dart.equals(other.typography, this.typography) && dart.equals(other.cupertinoOverrideTheme, this.cupertinoOverrideTheme) && dart.equals(other.snackBarTheme, this.snackBarTheme) && dart.equals(other.bottomSheetTheme, this.bottomSheetTheme) && dart.equals(other.popupMenuTheme, this.popupMenuTheme) && dart.equals(other.bannerTheme, this.bannerTheme) && dart.equals(other.dividerTheme, this.dividerTheme) && dart.equals(other.buttonBarTheme, this.buttonBarTheme) && dart.equals(other.bottomNavigationBarTheme, this.bottomNavigationBarTheme) && dart.equals(other.timePickerTheme, this.timePickerTheme) && dart.equals(other.textButtonTheme, this.textButtonTheme) && dart.equals(other.elevatedButtonTheme, this.elevatedButtonTheme) && dart.equals(other.outlinedButtonTheme, this.outlinedButtonTheme) && dart.equals(other.fixTextFieldOutlineLabel, this.fixTextFieldOutlineLabel);
    }
    get hashCode() {
      let values = JSArrayOfObjectL().of([this.visualDensity, this.primaryColor, this.primaryColorBrightness, this.primaryColorLight, this.primaryColorDark, this.accentColor, this.accentColorBrightness, this.canvasColor, this.shadowColor, this.scaffoldBackgroundColor, this.bottomAppBarColor, this.cardColor, this.dividerColor, this.focusColor, this.hoverColor, this.highlightColor, this.splashColor, this.splashFactory, this.selectedRowColor, this.unselectedWidgetColor, this.disabledColor, this.buttonTheme, this.buttonColor, this.toggleButtonsTheme, this.toggleableActiveColor, this.secondaryHeaderColor, this.textSelectionColor, this.cursorColor, this.textSelectionHandleColor, this.backgroundColor, this.dialogBackgroundColor, this.indicatorColor, this.hintColor, this.errorColor, this.textTheme, this.primaryTextTheme, this.accentTextTheme, this.inputDecorationTheme, this.iconTheme, this.primaryIconTheme, this.accentIconTheme, this.sliderTheme, this.tabBarTheme, this.tooltipTheme, this.cardTheme, this.chipTheme, this.platform, this.materialTapTargetSize, this.applyElevationOverlayColor, this.pageTransitionsTheme, this.appBarTheme, this.bottomAppBarTheme, this.colorScheme, this.dialogTheme, this.floatingActionButtonTheme, this.navigationRailTheme, this.typography, this.cupertinoOverrideTheme, this.snackBarTheme, this.bottomSheetTheme, this.popupMenuTheme, this.bannerTheme, this.dividerTheme, this.buttonBarTheme, this.bottomNavigationBarTheme, this.timePickerTheme, this.textButtonTheme, this.elevatedButtonTheme, this.outlinedButtonTheme, this.fixTextFieldOutlineLabel]);
      return ui.hashList(values);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      let defaultData = theme_data.ThemeData.fallback();
      properties.add(new (EnumPropertyOfTargetPlatformL()).new("platform", this.platform, {defaultValue: platform$.defaultTargetPlatform, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (EnumPropertyOfBrightnessL()).new("brightness", this.brightness, {defaultValue: defaultData.brightness, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("primaryColor", this.primaryColor, {defaultValue: defaultData.primaryColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (EnumPropertyOfBrightnessL()).new("primaryColorBrightness", this.primaryColorBrightness, {defaultValue: defaultData.primaryColorBrightness, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("accentColor", this.accentColor, {defaultValue: defaultData.accentColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (EnumPropertyOfBrightnessL()).new("accentColorBrightness", this.accentColorBrightness, {defaultValue: defaultData.accentColorBrightness, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("canvasColor", this.canvasColor, {defaultValue: defaultData.canvasColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("shadowColor", this.shadowColor, {defaultValue: defaultData.shadowColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("scaffoldBackgroundColor", this.scaffoldBackgroundColor, {defaultValue: defaultData.scaffoldBackgroundColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("bottomAppBarColor", this.bottomAppBarColor, {defaultValue: defaultData.bottomAppBarColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("cardColor", this.cardColor, {defaultValue: defaultData.cardColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("dividerColor", this.dividerColor, {defaultValue: defaultData.dividerColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("focusColor", this.focusColor, {defaultValue: defaultData.focusColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("hoverColor", this.hoverColor, {defaultValue: defaultData.hoverColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("highlightColor", this.highlightColor, {defaultValue: defaultData.highlightColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("splashColor", this.splashColor, {defaultValue: defaultData.splashColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("selectedRowColor", this.selectedRowColor, {defaultValue: defaultData.selectedRowColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("unselectedWidgetColor", this.unselectedWidgetColor, {defaultValue: defaultData.unselectedWidgetColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("disabledColor", this.disabledColor, {defaultValue: defaultData.disabledColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("buttonColor", this.buttonColor, {defaultValue: defaultData.buttonColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("secondaryHeaderColor", this.secondaryHeaderColor, {defaultValue: defaultData.secondaryHeaderColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("textSelectionColor", this.textSelectionColor, {defaultValue: defaultData.textSelectionColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("cursorColor", this.cursorColor, {defaultValue: defaultData.cursorColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("textSelectionHandleColor", this.textSelectionHandleColor, {defaultValue: defaultData.textSelectionHandleColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("backgroundColor", this.backgroundColor, {defaultValue: defaultData.backgroundColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("dialogBackgroundColor", this.dialogBackgroundColor, {defaultValue: defaultData.dialogBackgroundColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("indicatorColor", this.indicatorColor, {defaultValue: defaultData.indicatorColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("hintColor", this.hintColor, {defaultValue: defaultData.hintColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("errorColor", this.errorColor, {defaultValue: defaultData.errorColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("toggleableActiveColor", this.toggleableActiveColor, {defaultValue: defaultData.toggleableActiveColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (DiagnosticsPropertyOfButtonThemeDataL()).new("buttonTheme", this.buttonTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (DiagnosticsPropertyOfToggleButtonsThemeDataL()).new("toggleButtonsTheme", this.toggleButtonsTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (DiagnosticsPropertyOfTextThemeL()).new("textTheme", this.textTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (DiagnosticsPropertyOfTextThemeL()).new("primaryTextTheme", this.primaryTextTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (DiagnosticsPropertyOfTextThemeL()).new("accentTextTheme", this.accentTextTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (DiagnosticsPropertyOfInputDecorationThemeL()).new("inputDecorationTheme", this.inputDecorationTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (DiagnosticsPropertyOfIconThemeDataL()).new("iconTheme", this.iconTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (DiagnosticsPropertyOfIconThemeDataL()).new("primaryIconTheme", this.primaryIconTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (DiagnosticsPropertyOfIconThemeDataL()).new("accentIconTheme", this.accentIconTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (DiagnosticsPropertyOfSliderThemeDataL()).new("sliderTheme", this.sliderTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (DiagnosticsPropertyOfTabBarThemeL()).new("tabBarTheme", this.tabBarTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (DiagnosticsPropertyOfTooltipThemeDataL()).new("tooltipTheme", this.tooltipTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (DiagnosticsPropertyOfCardThemeL()).new("cardTheme", this.cardTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (DiagnosticsPropertyOfChipThemeDataL()).new("chipTheme", this.chipTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (DiagnosticsPropertyOfMaterialTapTargetSizeL()).new("materialTapTargetSize", this.materialTapTargetSize, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (DiagnosticsPropertyOfboolL()).new("applyElevationOverlayColor", this.applyElevationOverlayColor, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (DiagnosticsPropertyOfPageTransitionsThemeL()).new("pageTransitionsTheme", this.pageTransitionsTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (DiagnosticsPropertyOfAppBarThemeL()).new("appBarTheme", this.appBarTheme, {defaultValue: defaultData.appBarTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (DiagnosticsPropertyOfBottomAppBarThemeL()).new("bottomAppBarTheme", this.bottomAppBarTheme, {defaultValue: defaultData.bottomAppBarTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (DiagnosticsPropertyOfColorSchemeL()).new("colorScheme", this.colorScheme, {defaultValue: defaultData.colorScheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (DiagnosticsPropertyOfDialogThemeL()).new("dialogTheme", this.dialogTheme, {defaultValue: defaultData.dialogTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (DiagnosticsPropertyOfFloatingActionButtonThemeDataL()).new("floatingActionButtonThemeData", this.floatingActionButtonTheme, {defaultValue: defaultData.floatingActionButtonTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (DiagnosticsPropertyOfNavigationRailThemeDataL()).new("navigationRailThemeData", this.navigationRailTheme, {defaultValue: defaultData.navigationRailTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (DiagnosticsPropertyOfTypographyL()).new("typography", this.typography, {defaultValue: defaultData.typography, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (DiagnosticsPropertyOfCupertinoThemeDataL()).new("cupertinoOverrideTheme", this.cupertinoOverrideTheme, {defaultValue: defaultData.cupertinoOverrideTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (DiagnosticsPropertyOfSnackBarThemeDataL()).new("snackBarTheme", this.snackBarTheme, {defaultValue: defaultData.snackBarTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (DiagnosticsPropertyOfBottomSheetThemeDataL()).new("bottomSheetTheme", this.bottomSheetTheme, {defaultValue: defaultData.bottomSheetTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (DiagnosticsPropertyOfPopupMenuThemeDataL()).new("popupMenuTheme", this.popupMenuTheme, {defaultValue: defaultData.popupMenuTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (DiagnosticsPropertyOfMaterialBannerThemeDataL()).new("bannerTheme", this.bannerTheme, {defaultValue: defaultData.bannerTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (DiagnosticsPropertyOfDividerThemeDataL()).new("dividerTheme", this.dividerTheme, {defaultValue: defaultData.dividerTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (DiagnosticsPropertyOfButtonBarThemeDataL()).new("buttonBarTheme", this.buttonBarTheme, {defaultValue: defaultData.buttonBarTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (DiagnosticsPropertyOfTimePickerThemeDataL()).new("timePickerTheme", this.timePickerTheme, {defaultValue: defaultData.timePickerTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (DiagnosticsPropertyOfBottomNavigationBarThemeDataL()).new("bottomNavigationBarTheme", this.bottomNavigationBarTheme, {defaultValue: defaultData.bottomNavigationBarTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (DiagnosticsPropertyOfTextButtonThemeDataL()).new("textButtonTheme", this.textButtonTheme, {defaultValue: defaultData.textButtonTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (DiagnosticsPropertyOfElevatedButtonThemeDataL()).new("elevatedButtonTheme", this.elevatedButtonTheme, {defaultValue: defaultData.elevatedButtonTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (DiagnosticsPropertyOfOutlinedButtonThemeDataL()).new("outlinedButtonTheme", this.outlinedButtonTheme, {defaultValue: defaultData.outlinedButtonTheme, level: diagnostics.DiagnosticLevel.debug}));
    }
  };
  (theme_data.ThemeData.raw = function(opts) {
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    let primaryColor = opts && 'primaryColor' in opts ? opts.primaryColor : null;
    let primaryColorBrightness = opts && 'primaryColorBrightness' in opts ? opts.primaryColorBrightness : null;
    let primaryColorLight = opts && 'primaryColorLight' in opts ? opts.primaryColorLight : null;
    let primaryColorDark = opts && 'primaryColorDark' in opts ? opts.primaryColorDark : null;
    let canvasColor = opts && 'canvasColor' in opts ? opts.canvasColor : null;
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
    let accentColor = opts && 'accentColor' in opts ? opts.accentColor : null;
    let accentColorBrightness = opts && 'accentColorBrightness' in opts ? opts.accentColorBrightness : null;
    let scaffoldBackgroundColor = opts && 'scaffoldBackgroundColor' in opts ? opts.scaffoldBackgroundColor : null;
    let bottomAppBarColor = opts && 'bottomAppBarColor' in opts ? opts.bottomAppBarColor : null;
    let cardColor = opts && 'cardColor' in opts ? opts.cardColor : null;
    let dividerColor = opts && 'dividerColor' in opts ? opts.dividerColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let splashFactory = opts && 'splashFactory' in opts ? opts.splashFactory : null;
    let selectedRowColor = opts && 'selectedRowColor' in opts ? opts.selectedRowColor : null;
    let unselectedWidgetColor = opts && 'unselectedWidgetColor' in opts ? opts.unselectedWidgetColor : null;
    let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
    let buttonTheme = opts && 'buttonTheme' in opts ? opts.buttonTheme : null;
    let buttonColor = opts && 'buttonColor' in opts ? opts.buttonColor : null;
    let toggleButtonsTheme = opts && 'toggleButtonsTheme' in opts ? opts.toggleButtonsTheme : null;
    let secondaryHeaderColor = opts && 'secondaryHeaderColor' in opts ? opts.secondaryHeaderColor : null;
    let textSelectionColor = opts && 'textSelectionColor' in opts ? opts.textSelectionColor : null;
    let cursorColor = opts && 'cursorColor' in opts ? opts.cursorColor : null;
    let textSelectionHandleColor = opts && 'textSelectionHandleColor' in opts ? opts.textSelectionHandleColor : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let dialogBackgroundColor = opts && 'dialogBackgroundColor' in opts ? opts.dialogBackgroundColor : null;
    let indicatorColor = opts && 'indicatorColor' in opts ? opts.indicatorColor : null;
    let hintColor = opts && 'hintColor' in opts ? opts.hintColor : null;
    let errorColor = opts && 'errorColor' in opts ? opts.errorColor : null;
    let toggleableActiveColor = opts && 'toggleableActiveColor' in opts ? opts.toggleableActiveColor : null;
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
    let primaryTextTheme = opts && 'primaryTextTheme' in opts ? opts.primaryTextTheme : null;
    let accentTextTheme = opts && 'accentTextTheme' in opts ? opts.accentTextTheme : null;
    let inputDecorationTheme = opts && 'inputDecorationTheme' in opts ? opts.inputDecorationTheme : null;
    let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
    let primaryIconTheme = opts && 'primaryIconTheme' in opts ? opts.primaryIconTheme : null;
    let accentIconTheme = opts && 'accentIconTheme' in opts ? opts.accentIconTheme : null;
    let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
    let tabBarTheme = opts && 'tabBarTheme' in opts ? opts.tabBarTheme : null;
    let tooltipTheme = opts && 'tooltipTheme' in opts ? opts.tooltipTheme : null;
    let cardTheme = opts && 'cardTheme' in opts ? opts.cardTheme : null;
    let chipTheme = opts && 'chipTheme' in opts ? opts.chipTheme : null;
    let platform = opts && 'platform' in opts ? opts.platform : null;
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let applyElevationOverlayColor = opts && 'applyElevationOverlayColor' in opts ? opts.applyElevationOverlayColor : null;
    let pageTransitionsTheme = opts && 'pageTransitionsTheme' in opts ? opts.pageTransitionsTheme : null;
    let appBarTheme = opts && 'appBarTheme' in opts ? opts.appBarTheme : null;
    let bottomAppBarTheme = opts && 'bottomAppBarTheme' in opts ? opts.bottomAppBarTheme : null;
    let colorScheme = opts && 'colorScheme' in opts ? opts.colorScheme : null;
    let dialogTheme = opts && 'dialogTheme' in opts ? opts.dialogTheme : null;
    let floatingActionButtonTheme = opts && 'floatingActionButtonTheme' in opts ? opts.floatingActionButtonTheme : null;
    let navigationRailTheme = opts && 'navigationRailTheme' in opts ? opts.navigationRailTheme : null;
    let typography = opts && 'typography' in opts ? opts.typography : null;
    let cupertinoOverrideTheme = opts && 'cupertinoOverrideTheme' in opts ? opts.cupertinoOverrideTheme : null;
    let snackBarTheme = opts && 'snackBarTheme' in opts ? opts.snackBarTheme : null;
    let bottomSheetTheme = opts && 'bottomSheetTheme' in opts ? opts.bottomSheetTheme : null;
    let popupMenuTheme = opts && 'popupMenuTheme' in opts ? opts.popupMenuTheme : null;
    let bannerTheme = opts && 'bannerTheme' in opts ? opts.bannerTheme : null;
    let dividerTheme = opts && 'dividerTheme' in opts ? opts.dividerTheme : null;
    let buttonBarTheme = opts && 'buttonBarTheme' in opts ? opts.buttonBarTheme : null;
    let bottomNavigationBarTheme = opts && 'bottomNavigationBarTheme' in opts ? opts.bottomNavigationBarTheme : null;
    let timePickerTheme = opts && 'timePickerTheme' in opts ? opts.timePickerTheme : null;
    let textButtonTheme = opts && 'textButtonTheme' in opts ? opts.textButtonTheme : null;
    let elevatedButtonTheme = opts && 'elevatedButtonTheme' in opts ? opts.elevatedButtonTheme : null;
    let outlinedButtonTheme = opts && 'outlinedButtonTheme' in opts ? opts.outlinedButtonTheme : null;
    let fixTextFieldOutlineLabel = opts && 'fixTextFieldOutlineLabel' in opts ? opts.fixTextFieldOutlineLabel : null;
    this[visualDensity$7] = visualDensity;
    this[primaryColor$] = primaryColor;
    this[primaryColorBrightness$] = primaryColorBrightness;
    this[primaryColorLight$] = primaryColorLight;
    this[primaryColorDark$] = primaryColorDark;
    this[canvasColor$] = canvasColor;
    this[shadowColor$2] = shadowColor;
    this[accentColor$] = accentColor;
    this[accentColorBrightness$] = accentColorBrightness;
    this[scaffoldBackgroundColor$] = scaffoldBackgroundColor;
    this[bottomAppBarColor$] = bottomAppBarColor;
    this[cardColor$] = cardColor;
    this[dividerColor$] = dividerColor;
    this[focusColor$10] = focusColor;
    this[hoverColor$11] = hoverColor;
    this[highlightColor$6] = highlightColor;
    this[splashColor$7] = splashColor;
    this[splashFactory$1] = splashFactory;
    this[selectedRowColor$] = selectedRowColor;
    this[unselectedWidgetColor$] = unselectedWidgetColor;
    this[disabledColor$3] = disabledColor;
    this[buttonTheme$] = buttonTheme;
    this[buttonColor$] = buttonColor;
    this[toggleButtonsTheme$] = toggleButtonsTheme;
    this[secondaryHeaderColor$] = secondaryHeaderColor;
    this[textSelectionColor$] = textSelectionColor;
    this[cursorColor$] = cursorColor;
    this[textSelectionHandleColor$] = textSelectionHandleColor;
    this[backgroundColor$15] = backgroundColor;
    this[dialogBackgroundColor$] = dialogBackgroundColor;
    this[indicatorColor$0] = indicatorColor;
    this[hintColor$] = hintColor;
    this[errorColor$] = errorColor;
    this[toggleableActiveColor$] = toggleableActiveColor;
    this[textTheme$1] = textTheme;
    this[primaryTextTheme$] = primaryTextTheme;
    this[accentTextTheme$] = accentTextTheme;
    this[inputDecorationTheme$0] = inputDecorationTheme;
    this[iconTheme$] = iconTheme;
    this[primaryIconTheme$] = primaryIconTheme;
    this[accentIconTheme$] = accentIconTheme;
    this[sliderTheme$] = sliderTheme;
    this[tabBarTheme$] = tabBarTheme;
    this[tooltipTheme$] = tooltipTheme;
    this[cardTheme$] = cardTheme;
    this[chipTheme$] = chipTheme;
    this[platform$0] = platform;
    this[materialTapTargetSize$3] = materialTapTargetSize;
    this[applyElevationOverlayColor$] = applyElevationOverlayColor;
    this[pageTransitionsTheme$] = pageTransitionsTheme;
    this[appBarTheme$] = appBarTheme;
    this[bottomAppBarTheme$] = bottomAppBarTheme;
    this[colorScheme$] = colorScheme;
    this[dialogTheme$] = dialogTheme;
    this[floatingActionButtonTheme$] = floatingActionButtonTheme;
    this[navigationRailTheme$] = navigationRailTheme;
    this[typography$0] = typography;
    this[cupertinoOverrideTheme$] = cupertinoOverrideTheme;
    this[snackBarTheme$] = snackBarTheme;
    this[bottomSheetTheme$] = bottomSheetTheme;
    this[popupMenuTheme$] = popupMenuTheme;
    this[bannerTheme$] = bannerTheme;
    this[dividerTheme$] = dividerTheme;
    this[buttonBarTheme$] = buttonBarTheme;
    this[bottomNavigationBarTheme$] = bottomNavigationBarTheme;
    this[timePickerTheme$] = timePickerTheme;
    this[textButtonTheme$] = textButtonTheme;
    this[elevatedButtonTheme$] = elevatedButtonTheme;
    this[outlinedButtonTheme$] = outlinedButtonTheme;
    this[fixTextFieldOutlineLabel$0] = fixTextFieldOutlineLabel;
    if (!(visualDensity != null)) dart.assertFailed(null, L93, 554, 15, "visualDensity != null");
    if (!(primaryColor != null)) dart.assertFailed(null, L93, 555, 15, "primaryColor != null");
    if (!(primaryColorBrightness != null)) dart.assertFailed(null, L93, 556, 15, "primaryColorBrightness != null");
    if (!(primaryColorLight != null)) dart.assertFailed(null, L93, 557, 15, "primaryColorLight != null");
    if (!(primaryColorDark != null)) dart.assertFailed(null, L93, 558, 15, "primaryColorDark != null");
    if (!(accentColor != null)) dart.assertFailed(null, L93, 559, 15, "accentColor != null");
    if (!(accentColorBrightness != null)) dart.assertFailed(null, L93, 560, 15, "accentColorBrightness != null");
    if (!(canvasColor != null)) dart.assertFailed(null, L93, 561, 15, "canvasColor != null");
    if (!(shadowColor != null)) dart.assertFailed(null, L93, 562, 15, "shadowColor != null");
    if (!(scaffoldBackgroundColor != null)) dart.assertFailed(null, L93, 563, 15, "scaffoldBackgroundColor != null");
    if (!(bottomAppBarColor != null)) dart.assertFailed(null, L93, 564, 15, "bottomAppBarColor != null");
    if (!(cardColor != null)) dart.assertFailed(null, L93, 565, 15, "cardColor != null");
    if (!(dividerColor != null)) dart.assertFailed(null, L93, 566, 15, "dividerColor != null");
    if (!(focusColor != null)) dart.assertFailed(null, L93, 567, 15, "focusColor != null");
    if (!(hoverColor != null)) dart.assertFailed(null, L93, 568, 15, "hoverColor != null");
    if (!(highlightColor != null)) dart.assertFailed(null, L93, 569, 15, "highlightColor != null");
    if (!(splashColor != null)) dart.assertFailed(null, L93, 570, 15, "splashColor != null");
    if (!(splashFactory != null)) dart.assertFailed(null, L93, 571, 15, "splashFactory != null");
    if (!(selectedRowColor != null)) dart.assertFailed(null, L93, 572, 15, "selectedRowColor != null");
    if (!(unselectedWidgetColor != null)) dart.assertFailed(null, L93, 573, 15, "unselectedWidgetColor != null");
    if (!(disabledColor != null)) dart.assertFailed(null, L93, 574, 15, "disabledColor != null");
    if (!(toggleableActiveColor != null)) dart.assertFailed(null, L93, 575, 15, "toggleableActiveColor != null");
    if (!(buttonTheme != null)) dart.assertFailed(null, L93, 576, 15, "buttonTheme != null");
    if (!(toggleButtonsTheme != null)) dart.assertFailed(null, L93, 577, 15, "toggleButtonsTheme != null");
    if (!(secondaryHeaderColor != null)) dart.assertFailed(null, L93, 578, 15, "secondaryHeaderColor != null");
    if (!(textSelectionColor != null)) dart.assertFailed(null, L93, 579, 15, "textSelectionColor != null");
    if (!(cursorColor != null)) dart.assertFailed(null, L93, 580, 15, "cursorColor != null");
    if (!(textSelectionHandleColor != null)) dart.assertFailed(null, L93, 581, 15, "textSelectionHandleColor != null");
    if (!(backgroundColor != null)) dart.assertFailed(null, L93, 582, 15, "backgroundColor != null");
    if (!(dialogBackgroundColor != null)) dart.assertFailed(null, L93, 583, 15, "dialogBackgroundColor != null");
    if (!(indicatorColor != null)) dart.assertFailed(null, L93, 584, 15, "indicatorColor != null");
    if (!(hintColor != null)) dart.assertFailed(null, L93, 585, 15, "hintColor != null");
    if (!(errorColor != null)) dart.assertFailed(null, L93, 586, 15, "errorColor != null");
    if (!(textTheme != null)) dart.assertFailed(null, L93, 587, 15, "textTheme != null");
    if (!(primaryTextTheme != null)) dart.assertFailed(null, L93, 588, 15, "primaryTextTheme != null");
    if (!(accentTextTheme != null)) dart.assertFailed(null, L93, 589, 15, "accentTextTheme != null");
    if (!(inputDecorationTheme != null)) dart.assertFailed(null, L93, 590, 15, "inputDecorationTheme != null");
    if (!(iconTheme != null)) dart.assertFailed(null, L93, 591, 15, "iconTheme != null");
    if (!(primaryIconTheme != null)) dart.assertFailed(null, L93, 592, 15, "primaryIconTheme != null");
    if (!(accentIconTheme != null)) dart.assertFailed(null, L93, 593, 15, "accentIconTheme != null");
    if (!(sliderTheme != null)) dart.assertFailed(null, L93, 594, 15, "sliderTheme != null");
    if (!(tabBarTheme != null)) dart.assertFailed(null, L93, 595, 15, "tabBarTheme != null");
    if (!(tooltipTheme != null)) dart.assertFailed(null, L93, 596, 15, "tooltipTheme != null");
    if (!(cardTheme != null)) dart.assertFailed(null, L93, 597, 15, "cardTheme != null");
    if (!(chipTheme != null)) dart.assertFailed(null, L93, 598, 15, "chipTheme != null");
    if (!(platform != null)) dart.assertFailed(null, L93, 599, 15, "platform != null");
    if (!(materialTapTargetSize != null)) dart.assertFailed(null, L93, 600, 15, "materialTapTargetSize != null");
    if (!(pageTransitionsTheme != null)) dart.assertFailed(null, L93, 601, 15, "pageTransitionsTheme != null");
    if (!(appBarTheme != null)) dart.assertFailed(null, L93, 602, 15, "appBarTheme != null");
    if (!(bottomAppBarTheme != null)) dart.assertFailed(null, L93, 603, 15, "bottomAppBarTheme != null");
    if (!(colorScheme != null)) dart.assertFailed(null, L93, 604, 15, "colorScheme != null");
    if (!(dialogTheme != null)) dart.assertFailed(null, L93, 605, 15, "dialogTheme != null");
    if (!(floatingActionButtonTheme != null)) dart.assertFailed(null, L93, 606, 15, "floatingActionButtonTheme != null");
    if (!(navigationRailTheme != null)) dart.assertFailed(null, L93, 607, 15, "navigationRailTheme != null");
    if (!(typography != null)) dart.assertFailed(null, L93, 608, 15, "typography != null");
    if (!(snackBarTheme != null)) dart.assertFailed(null, L93, 609, 15, "snackBarTheme != null");
    if (!(bottomSheetTheme != null)) dart.assertFailed(null, L93, 610, 15, "bottomSheetTheme != null");
    if (!(popupMenuTheme != null)) dart.assertFailed(null, L93, 611, 15, "popupMenuTheme != null");
    if (!(bannerTheme != null)) dart.assertFailed(null, L93, 612, 15, "bannerTheme != null");
    if (!(dividerTheme != null)) dart.assertFailed(null, L93, 613, 15, "dividerTheme != null");
    if (!(buttonBarTheme != null)) dart.assertFailed(null, L93, 614, 15, "buttonBarTheme != null");
    if (!(bottomNavigationBarTheme != null)) dart.assertFailed(null, L93, 615, 15, "bottomNavigationBarTheme != null");
    if (!(timePickerTheme != null)) dart.assertFailed(null, L93, 616, 15, "timePickerTheme != null");
    if (!(textButtonTheme != null)) dart.assertFailed(null, L93, 617, 15, "textButtonTheme != null");
    if (!(elevatedButtonTheme != null)) dart.assertFailed(null, L93, 618, 15, "elevatedButtonTheme != null");
    if (!(outlinedButtonTheme != null)) dart.assertFailed(null, L93, 619, 15, "outlinedButtonTheme != null");
    if (!(fixTextFieldOutlineLabel != null)) dart.assertFailed(null, L93, 620, 15, "fixTextFieldOutlineLabel != null");
    ;
  }).prototype = theme_data.ThemeData.prototype;
  dart.addTypeTests(theme_data.ThemeData);
  dart.addTypeCaches(theme_data.ThemeData);
  dart.setMethodSignature(theme_data.ThemeData, () => ({
    __proto__: dart.getMethods(theme_data.ThemeData.__proto__),
    copyWith: dart.fnType(dart.legacy(theme_data.ThemeData), [], {accentColor: dart.legacy(ui.Color), accentColorBrightness: dart.legacy(ui.Brightness), accentIconTheme: dart.legacy(icon_theme_data.IconThemeData), accentTextTheme: dart.legacy(text_theme.TextTheme), appBarTheme: dart.legacy(app_bar_theme.AppBarTheme), applyElevationOverlayColor: dart.legacy(core.bool), backgroundColor: dart.legacy(ui.Color), bannerTheme: dart.legacy(banner_theme.MaterialBannerThemeData), bottomAppBarColor: dart.legacy(ui.Color), bottomAppBarTheme: dart.legacy(bottom_app_bar_theme.BottomAppBarTheme), bottomNavigationBarTheme: dart.legacy(bottom_navigation_bar_theme.BottomNavigationBarThemeData), bottomSheetTheme: dart.legacy(bottom_sheet_theme.BottomSheetThemeData), brightness: dart.legacy(ui.Brightness), buttonBarTheme: dart.legacy(button_bar_theme.ButtonBarThemeData), buttonColor: dart.legacy(ui.Color), buttonTheme: dart.legacy(button_theme.ButtonThemeData), canvasColor: dart.legacy(ui.Color), cardColor: dart.legacy(ui.Color), cardTheme: dart.legacy(card_theme.CardTheme), chipTheme: dart.legacy(chip_theme.ChipThemeData), colorScheme: dart.legacy(color_scheme.ColorScheme), cupertinoOverrideTheme: dart.legacy(theme.CupertinoThemeData), cursorColor: dart.legacy(ui.Color), dialogBackgroundColor: dart.legacy(ui.Color), dialogTheme: dart.legacy(dialog_theme.DialogTheme), disabledColor: dart.legacy(ui.Color), dividerColor: dart.legacy(ui.Color), dividerTheme: dart.legacy(divider_theme.DividerThemeData), elevatedButtonTheme: dart.legacy(elevated_button_theme.ElevatedButtonThemeData), errorColor: dart.legacy(ui.Color), fixTextFieldOutlineLabel: dart.legacy(core.bool), floatingActionButtonTheme: dart.legacy(floating_action_button_theme.FloatingActionButtonThemeData), focusColor: dart.legacy(ui.Color), highlightColor: dart.legacy(ui.Color), hintColor: dart.legacy(ui.Color), hoverColor: dart.legacy(ui.Color), iconTheme: dart.legacy(icon_theme_data.IconThemeData), indicatorColor: dart.legacy(ui.Color), inputDecorationTheme: dart.legacy(input_decorator.InputDecorationTheme), materialTapTargetSize: dart.legacy(theme_data.MaterialTapTargetSize), navigationRailTheme: dart.legacy(navigation_rail_theme.NavigationRailThemeData), outlinedButtonTheme: dart.legacy(outlined_button_theme.OutlinedButtonThemeData), pageTransitionsTheme: dart.legacy(page_transitions_theme.PageTransitionsTheme), platform: dart.legacy(platform$.TargetPlatform), popupMenuTheme: dart.legacy(popup_menu_theme.PopupMenuThemeData), primaryColor: dart.legacy(ui.Color), primaryColorBrightness: dart.legacy(ui.Brightness), primaryColorDark: dart.legacy(ui.Color), primaryColorLight: dart.legacy(ui.Color), primaryIconTheme: dart.legacy(icon_theme_data.IconThemeData), primaryTextTheme: dart.legacy(text_theme.TextTheme), scaffoldBackgroundColor: dart.legacy(ui.Color), secondaryHeaderColor: dart.legacy(ui.Color), selectedRowColor: dart.legacy(ui.Color), shadowColor: dart.legacy(ui.Color), sliderTheme: dart.legacy(slider_theme.SliderThemeData), snackBarTheme: dart.legacy(snack_bar_theme.SnackBarThemeData), splashColor: dart.legacy(ui.Color), splashFactory: dart.legacy(ink_well.InteractiveInkFeatureFactory), tabBarTheme: dart.legacy(tab_bar_theme.TabBarTheme), textButtonTheme: dart.legacy(text_button_theme.TextButtonThemeData), textSelectionColor: dart.legacy(ui.Color), textSelectionHandleColor: dart.legacy(ui.Color), textTheme: dart.legacy(text_theme.TextTheme), timePickerTheme: dart.legacy(time_picker_theme.TimePickerThemeData), toggleButtonsTheme: dart.legacy(toggle_buttons_theme.ToggleButtonsThemeData), toggleableActiveColor: dart.legacy(ui.Color), tooltipTheme: dart.legacy(tooltip_theme.TooltipThemeData), typography: dart.legacy(typography$.Typography), unselectedWidgetColor: dart.legacy(ui.Color), visualDensity: dart.legacy(theme_data.VisualDensity)}, {}),
    _equals: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    [$_equals]: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    debugFillProperties: dart.fnType(dart.void, [dart.legacy(diagnostics.DiagnosticPropertiesBuilder)])
  }));
  dart.setGetterSignature(theme_data.ThemeData, () => ({
    __proto__: dart.getGetters(theme_data.ThemeData.__proto__),
    brightness: dart.legacy(ui.Brightness),
    hashCode: dart.legacy(core.int),
    [$hashCode]: dart.legacy(core.int)
  }));
  dart.setLibraryUri(theme_data.ThemeData, L92);
  dart.setFieldSignature(theme_data.ThemeData, () => ({
    __proto__: dart.getFields(theme_data.ThemeData.__proto__),
    visualDensity: dart.finalFieldType(dart.legacy(theme_data.VisualDensity)),
    primaryColor: dart.finalFieldType(dart.legacy(ui.Color)),
    primaryColorBrightness: dart.finalFieldType(dart.legacy(ui.Brightness)),
    primaryColorLight: dart.finalFieldType(dart.legacy(ui.Color)),
    primaryColorDark: dart.finalFieldType(dart.legacy(ui.Color)),
    canvasColor: dart.finalFieldType(dart.legacy(ui.Color)),
    shadowColor: dart.finalFieldType(dart.legacy(ui.Color)),
    accentColor: dart.finalFieldType(dart.legacy(ui.Color)),
    accentColorBrightness: dart.finalFieldType(dart.legacy(ui.Brightness)),
    scaffoldBackgroundColor: dart.finalFieldType(dart.legacy(ui.Color)),
    bottomAppBarColor: dart.finalFieldType(dart.legacy(ui.Color)),
    cardColor: dart.finalFieldType(dart.legacy(ui.Color)),
    dividerColor: dart.finalFieldType(dart.legacy(ui.Color)),
    focusColor: dart.finalFieldType(dart.legacy(ui.Color)),
    hoverColor: dart.finalFieldType(dart.legacy(ui.Color)),
    highlightColor: dart.finalFieldType(dart.legacy(ui.Color)),
    splashColor: dart.finalFieldType(dart.legacy(ui.Color)),
    splashFactory: dart.finalFieldType(dart.legacy(ink_well.InteractiveInkFeatureFactory)),
    selectedRowColor: dart.finalFieldType(dart.legacy(ui.Color)),
    unselectedWidgetColor: dart.finalFieldType(dart.legacy(ui.Color)),
    disabledColor: dart.finalFieldType(dart.legacy(ui.Color)),
    buttonTheme: dart.finalFieldType(dart.legacy(button_theme.ButtonThemeData)),
    toggleButtonsTheme: dart.finalFieldType(dart.legacy(toggle_buttons_theme.ToggleButtonsThemeData)),
    buttonColor: dart.finalFieldType(dart.legacy(ui.Color)),
    secondaryHeaderColor: dart.finalFieldType(dart.legacy(ui.Color)),
    textSelectionColor: dart.finalFieldType(dart.legacy(ui.Color)),
    cursorColor: dart.finalFieldType(dart.legacy(ui.Color)),
    textSelectionHandleColor: dart.finalFieldType(dart.legacy(ui.Color)),
    backgroundColor: dart.finalFieldType(dart.legacy(ui.Color)),
    dialogBackgroundColor: dart.finalFieldType(dart.legacy(ui.Color)),
    indicatorColor: dart.finalFieldType(dart.legacy(ui.Color)),
    hintColor: dart.finalFieldType(dart.legacy(ui.Color)),
    errorColor: dart.finalFieldType(dart.legacy(ui.Color)),
    toggleableActiveColor: dart.finalFieldType(dart.legacy(ui.Color)),
    textTheme: dart.finalFieldType(dart.legacy(text_theme.TextTheme)),
    primaryTextTheme: dart.finalFieldType(dart.legacy(text_theme.TextTheme)),
    accentTextTheme: dart.finalFieldType(dart.legacy(text_theme.TextTheme)),
    inputDecorationTheme: dart.finalFieldType(dart.legacy(input_decorator.InputDecorationTheme)),
    iconTheme: dart.finalFieldType(dart.legacy(icon_theme_data.IconThemeData)),
    primaryIconTheme: dart.finalFieldType(dart.legacy(icon_theme_data.IconThemeData)),
    accentIconTheme: dart.finalFieldType(dart.legacy(icon_theme_data.IconThemeData)),
    sliderTheme: dart.finalFieldType(dart.legacy(slider_theme.SliderThemeData)),
    tabBarTheme: dart.finalFieldType(dart.legacy(tab_bar_theme.TabBarTheme)),
    tooltipTheme: dart.finalFieldType(dart.legacy(tooltip_theme.TooltipThemeData)),
    cardTheme: dart.finalFieldType(dart.legacy(card_theme.CardTheme)),
    chipTheme: dart.finalFieldType(dart.legacy(chip_theme.ChipThemeData)),
    platform: dart.finalFieldType(dart.legacy(platform$.TargetPlatform)),
    materialTapTargetSize: dart.finalFieldType(dart.legacy(theme_data.MaterialTapTargetSize)),
    applyElevationOverlayColor: dart.finalFieldType(dart.legacy(core.bool)),
    pageTransitionsTheme: dart.finalFieldType(dart.legacy(page_transitions_theme.PageTransitionsTheme)),
    appBarTheme: dart.finalFieldType(dart.legacy(app_bar_theme.AppBarTheme)),
    bottomAppBarTheme: dart.finalFieldType(dart.legacy(bottom_app_bar_theme.BottomAppBarTheme)),
    colorScheme: dart.finalFieldType(dart.legacy(color_scheme.ColorScheme)),
    snackBarTheme: dart.finalFieldType(dart.legacy(snack_bar_theme.SnackBarThemeData)),
    dialogTheme: dart.finalFieldType(dart.legacy(dialog_theme.DialogTheme)),
    floatingActionButtonTheme: dart.finalFieldType(dart.legacy(floating_action_button_theme.FloatingActionButtonThemeData)),
    navigationRailTheme: dart.finalFieldType(dart.legacy(navigation_rail_theme.NavigationRailThemeData)),
    typography: dart.finalFieldType(dart.legacy(typography$.Typography)),
    cupertinoOverrideTheme: dart.finalFieldType(dart.legacy(theme.CupertinoThemeData)),
    bottomSheetTheme: dart.finalFieldType(dart.legacy(bottom_sheet_theme.BottomSheetThemeData)),
    popupMenuTheme: dart.finalFieldType(dart.legacy(popup_menu_theme.PopupMenuThemeData)),
    bannerTheme: dart.finalFieldType(dart.legacy(banner_theme.MaterialBannerThemeData)),
    dividerTheme: dart.finalFieldType(dart.legacy(divider_theme.DividerThemeData)),
    buttonBarTheme: dart.finalFieldType(dart.legacy(button_bar_theme.ButtonBarThemeData)),
    bottomNavigationBarTheme: dart.finalFieldType(dart.legacy(bottom_navigation_bar_theme.BottomNavigationBarThemeData)),
    timePickerTheme: dart.finalFieldType(dart.legacy(time_picker_theme.TimePickerThemeData)),
    textButtonTheme: dart.finalFieldType(dart.legacy(text_button_theme.TextButtonThemeData)),
    elevatedButtonTheme: dart.finalFieldType(dart.legacy(elevated_button_theme.ElevatedButtonThemeData)),
    outlinedButtonTheme: dart.finalFieldType(dart.legacy(outlined_button_theme.OutlinedButtonThemeData)),
    fixTextFieldOutlineLabel: dart.finalFieldType(dart.legacy(core.bool))
  }));
  dart.defineExtensionMethods(theme_data.ThemeData, ['_equals']);
  dart.defineExtensionAccessors(theme_data.ThemeData, ['hashCode']);
  dart.defineLazy(theme_data.ThemeData, {
    /*theme_data.ThemeData._localizedThemeDataCacheSize*/get _localizedThemeDataCacheSize() {
      return 5;
    },
    /*theme_data.ThemeData._localizedThemeDataCache*/get _localizedThemeDataCache() {
      return new (_FifoCacheOf_IdentityThemeDataCacheKeyL$ThemeDataL()).new(5);
    }
  }, true);
  var CupertinoThemeData__scaffoldBackgroundColor = dart.privateName(theme, "CupertinoThemeData._scaffoldBackgroundColor");
  var CupertinoThemeData__barBackgroundColor = dart.privateName(theme, "CupertinoThemeData._barBackgroundColor");
  var CupertinoThemeData__textTheme = dart.privateName(theme, "CupertinoThemeData._textTheme");
  var CupertinoThemeData__primaryContrastingColor = dart.privateName(theme, "CupertinoThemeData._primaryContrastingColor");
  var CupertinoThemeData__primaryColor = dart.privateName(theme, "CupertinoThemeData._primaryColor");
  var CupertinoThemeData_brightness = dart.privateName(theme, "CupertinoThemeData.brightness");
  var C2085;
  var CupertinoDynamicColor_darkHighContrastElevatedColor = dart.privateName(colors$0, "CupertinoDynamicColor.darkHighContrastElevatedColor");
  var C2086;
  var CupertinoDynamicColor_highContrastElevatedColor = dart.privateName(colors$0, "CupertinoDynamicColor.highContrastElevatedColor");
  var CupertinoDynamicColor_darkElevatedColor = dart.privateName(colors$0, "CupertinoDynamicColor.darkElevatedColor");
  var CupertinoDynamicColor_elevatedColor = dart.privateName(colors$0, "CupertinoDynamicColor.elevatedColor");
  var CupertinoDynamicColor_darkHighContrastColor = dart.privateName(colors$0, "CupertinoDynamicColor.darkHighContrastColor");
  var CupertinoDynamicColor_highContrastColor = dart.privateName(colors$0, "CupertinoDynamicColor.highContrastColor");
  var CupertinoDynamicColor_darkColor = dart.privateName(colors$0, "CupertinoDynamicColor.darkColor");
  var CupertinoDynamicColor_color = dart.privateName(colors$0, "CupertinoDynamicColor.color");
  var CupertinoDynamicColor__debugResolveContext = dart.privateName(colors$0, "CupertinoDynamicColor._debugResolveContext");
  var CupertinoDynamicColor__debugLabel = dart.privateName(colors$0, "CupertinoDynamicColor._debugLabel");
  var CupertinoDynamicColor__effectiveColor = dart.privateName(colors$0, "CupertinoDynamicColor._effectiveColor");
  var C2084;
  var _CupertinoTextThemeDefaults_inactiveGray = dart.privateName(theme, "_CupertinoTextThemeDefaults.inactiveGray");
  var C2087;
  var _CupertinoTextThemeDefaults_labelColor = dart.privateName(theme, "_CupertinoTextThemeDefaults.labelColor");
  var C2083;
  var _CupertinoThemeDefaults_textThemeDefaults = dart.privateName(theme, "_CupertinoThemeDefaults.textThemeDefaults");
  var C2089;
  var C2090;
  var C2088;
  var _CupertinoThemeDefaults_scaffoldBackgroundColor = dart.privateName(theme, "_CupertinoThemeDefaults.scaffoldBackgroundColor");
  var C2092;
  var C2093;
  var C2091;
  var _CupertinoThemeDefaults_barBackgroundColor = dart.privateName(theme, "_CupertinoThemeDefaults.barBackgroundColor");
  var _CupertinoThemeDefaults_primaryContrastingColor = dart.privateName(theme, "_CupertinoThemeDefaults.primaryContrastingColor");
  var C2095;
  var C2096;
  var C2097;
  var C2098;
  var C2094;
  var _CupertinoThemeDefaults_primaryColor = dart.privateName(theme, "_CupertinoThemeDefaults.primaryColor");
  var _CupertinoThemeDefaults_brightness = dart.privateName(theme, "_CupertinoThemeDefaults.brightness");
  var C2082;
  var CupertinoThemeData__defaults = dart.privateName(theme, "CupertinoThemeData._defaults");
  var C2081;
  var _materialTheme$ = dart.privateName(theme_data, "_materialTheme");
  var _cupertinoOverrideTheme$ = dart.privateName(theme_data, "_cupertinoOverrideTheme");
  theme_data.MaterialBasedCupertinoThemeData = class MaterialBasedCupertinoThemeData extends theme.CupertinoThemeData {
    get brightness() {
      let t12;
      t12 = this[_cupertinoOverrideTheme$].brightness;
      return t12 == null ? this[_materialTheme$].brightness : t12;
    }
    get primaryColor() {
      let t12;
      t12 = this[_cupertinoOverrideTheme$].primaryColor;
      return t12 == null ? this[_materialTheme$].colorScheme.primary : t12;
    }
    get primaryContrastingColor() {
      let t12;
      t12 = this[_cupertinoOverrideTheme$].primaryContrastingColor;
      return t12 == null ? this[_materialTheme$].colorScheme.onPrimary : t12;
    }
    get scaffoldBackgroundColor() {
      let t12;
      t12 = this[_cupertinoOverrideTheme$].scaffoldBackgroundColor;
      return t12 == null ? this[_materialTheme$].scaffoldBackgroundColor : t12;
    }
    copyWith(opts) {
      let brightness = opts && 'brightness' in opts ? opts.brightness : null;
      let primaryColor = opts && 'primaryColor' in opts ? opts.primaryColor : null;
      let primaryContrastingColor = opts && 'primaryContrastingColor' in opts ? opts.primaryContrastingColor : null;
      let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
      let barBackgroundColor = opts && 'barBackgroundColor' in opts ? opts.barBackgroundColor : null;
      let scaffoldBackgroundColor = opts && 'scaffoldBackgroundColor' in opts ? opts.scaffoldBackgroundColor : null;
      return new theme_data.MaterialBasedCupertinoThemeData.__(this[_materialTheme$], this[_cupertinoOverrideTheme$].copyWith({brightness: brightness, primaryColor: primaryColor, primaryContrastingColor: primaryContrastingColor, textTheme: textTheme, barBackgroundColor: barBackgroundColor, scaffoldBackgroundColor: scaffoldBackgroundColor}));
    }
    resolveFrom(context, opts) {
      let nullOk = opts && 'nullOk' in opts ? opts.nullOk : false;
      return new theme_data.MaterialBasedCupertinoThemeData.__(this[_materialTheme$], this[_cupertinoOverrideTheme$].resolveFrom(context, {nullOk: nullOk}));
    }
  };
  (theme_data.MaterialBasedCupertinoThemeData.new = function(opts) {
    let t12;
    let materialTheme = opts && 'materialTheme' in opts ? opts.materialTheme : null;
    theme_data.MaterialBasedCupertinoThemeData.__.call(this, materialTheme, (t12 = materialTheme.cupertinoOverrideTheme, t12 == null ? C2081 || CT.C2081 : t12).noDefault());
  }).prototype = theme_data.MaterialBasedCupertinoThemeData.prototype;
  (theme_data.MaterialBasedCupertinoThemeData.__ = function(_materialTheme, _cupertinoOverrideTheme) {
    this[_materialTheme$] = _materialTheme;
    this[_cupertinoOverrideTheme$] = _cupertinoOverrideTheme;
    if (!(_materialTheme != null)) dart.assertFailed(null, L93, 1681, 14, "_materialTheme != null");
    if (!(_cupertinoOverrideTheme != null)) dart.assertFailed(null, L93, 1682, 14, "_cupertinoOverrideTheme != null");
    theme_data.MaterialBasedCupertinoThemeData.__proto__.raw.call(this, _cupertinoOverrideTheme.brightness, _cupertinoOverrideTheme.primaryColor, _cupertinoOverrideTheme.primaryContrastingColor, _cupertinoOverrideTheme.textTheme, _cupertinoOverrideTheme.barBackgroundColor, _cupertinoOverrideTheme.scaffoldBackgroundColor);
    ;
  }).prototype = theme_data.MaterialBasedCupertinoThemeData.prototype;
  dart.addTypeTests(theme_data.MaterialBasedCupertinoThemeData);
  dart.addTypeCaches(theme_data.MaterialBasedCupertinoThemeData);
  dart.setMethodSignature(theme_data.MaterialBasedCupertinoThemeData, () => ({
    __proto__: dart.getMethods(theme_data.MaterialBasedCupertinoThemeData.__proto__),
    copyWith: dart.fnType(dart.legacy(theme_data.MaterialBasedCupertinoThemeData), [], {barBackgroundColor: dart.legacy(ui.Color), brightness: dart.legacy(ui.Brightness), primaryColor: dart.legacy(ui.Color), primaryContrastingColor: dart.legacy(ui.Color), scaffoldBackgroundColor: dart.legacy(ui.Color), textTheme: dart.legacy(text_theme$.CupertinoTextThemeData)}, {})
  }));
  dart.setGetterSignature(theme_data.MaterialBasedCupertinoThemeData, () => ({
    __proto__: dart.getGetters(theme_data.MaterialBasedCupertinoThemeData.__proto__),
    brightness: dart.legacy(ui.Brightness)
  }));
  dart.setLibraryUri(theme_data.MaterialBasedCupertinoThemeData, L92);
  dart.setFieldSignature(theme_data.MaterialBasedCupertinoThemeData, () => ({
    __proto__: dart.getFields(theme_data.MaterialBasedCupertinoThemeData.__proto__),
    [_materialTheme$]: dart.finalFieldType(dart.legacy(theme_data.ThemeData)),
    [_cupertinoOverrideTheme$]: dart.finalFieldType(dart.legacy(theme.CupertinoThemeData))
  }));
  var baseTheme$ = dart.privateName(theme_data, "_IdentityThemeDataCacheKey.baseTheme");
  var localTextGeometry$ = dart.privateName(theme_data, "_IdentityThemeDataCacheKey.localTextGeometry");
  theme_data._IdentityThemeDataCacheKey = class _IdentityThemeDataCacheKey extends core.Object {
    get baseTheme() {
      return this[baseTheme$];
    }
    set baseTheme(value) {
      super.baseTheme = value;
    }
    get localTextGeometry() {
      return this[localTextGeometry$];
    }
    set localTextGeometry(value) {
      super.localTextGeometry = value;
    }
    get hashCode() {
      return (dart.notNull(core.identityHashCode(this.baseTheme)) ^ dart.notNull(core.identityHashCode(this.localTextGeometry))) >>> 0;
    }
    _equals(other) {
      if (other == null) return false;
      return _IdentityThemeDataCacheKeyL().is(other) && other.baseTheme == this.baseTheme && other.localTextGeometry == this.localTextGeometry;
    }
  };
  (theme_data._IdentityThemeDataCacheKey.new = function(baseTheme, localTextGeometry) {
    this[baseTheme$] = baseTheme;
    this[localTextGeometry$] = localTextGeometry;
    ;
  }).prototype = theme_data._IdentityThemeDataCacheKey.prototype;
  dart.addTypeTests(theme_data._IdentityThemeDataCacheKey);
  dart.addTypeCaches(theme_data._IdentityThemeDataCacheKey);
  dart.setMethodSignature(theme_data._IdentityThemeDataCacheKey, () => ({
    __proto__: dart.getMethods(theme_data._IdentityThemeDataCacheKey.__proto__),
    _equals: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    [$_equals]: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)])
  }));
  dart.setGetterSignature(theme_data._IdentityThemeDataCacheKey, () => ({
    __proto__: dart.getGetters(theme_data._IdentityThemeDataCacheKey.__proto__),
    hashCode: dart.legacy(core.int),
    [$hashCode]: dart.legacy(core.int)
  }));
  dart.setLibraryUri(theme_data._IdentityThemeDataCacheKey, L92);
  dart.setFieldSignature(theme_data._IdentityThemeDataCacheKey, () => ({
    __proto__: dart.getFields(theme_data._IdentityThemeDataCacheKey.__proto__),
    baseTheme: dart.finalFieldType(dart.legacy(theme_data.ThemeData)),
    localTextGeometry: dart.finalFieldType(dart.legacy(text_theme.TextTheme))
  }));
  dart.defineExtensionMethods(theme_data._IdentityThemeDataCacheKey, ['_equals']);
  dart.defineExtensionAccessors(theme_data._IdentityThemeDataCacheKey, ['hashCode']);
  var _cache = dart.privateName(theme_data, "_cache");
  var _maximumSize$ = dart.privateName(theme_data, "_maximumSize");
  const _is__FifoCache_default = Symbol('_is__FifoCache_default');
  theme_data._FifoCache$ = dart.generic((K, V) => {
    var KL = () => (KL = dart.constFn(dart.legacy(K)))();
    var LinkedMapOfKL$VL = () => (LinkedMapOfKL$VL = dart.constFn(_js_helper.LinkedMap$(KL(), VL())))();
    var VL = () => (VL = dart.constFn(dart.legacy(V)))();
    var VoidToVL = () => (VoidToVL = dart.constFn(dart.fnType(VL(), [])))();
    var VoidToLVL = () => (VoidToLVL = dart.constFn(dart.legacy(VoidToVL())))();
    class _FifoCache extends core.Object {
      putIfAbsent(key, loader) {
        let t14, t13, t12;
        KL().as(key);
        VoidToLVL().as(loader);
        if (!(key != null)) dart.assertFailed(null, L93, 1800, 12, "key != null");
        if (!(loader != null)) dart.assertFailed(null, L93, 1801, 12, "loader != null");
        let result = this[_cache][$_get](key);
        if (result != null) return result;
        if (this[_cache][$length] == this[_maximumSize$]) this[_cache][$remove](this[_cache][$keys][$first]);
        t12 = this[_cache];
        t13 = key;
        t14 = loader();
        t12[$_set](t13, t14);
        return t14;
      }
    }
    (_FifoCache.new = function(_maximumSize) {
      this[_cache] = new (LinkedMapOfKL$VL()).new();
      this[_maximumSize$] = _maximumSize;
      if (!(_maximumSize != null && dart.notNull(_maximumSize) > 0)) dart.assertFailed(null, L93, 1782, 42, "_maximumSize != null && _maximumSize > 0");
      ;
    }).prototype = _FifoCache.prototype;
    dart.addTypeTests(_FifoCache);
    _FifoCache.prototype[_is__FifoCache_default] = true;
    dart.addTypeCaches(_FifoCache);
    dart.setMethodSignature(_FifoCache, () => ({
      __proto__: dart.getMethods(_FifoCache.__proto__),
      putIfAbsent: dart.fnType(dart.legacy(V), [dart.legacy(core.Object), dart.legacy(core.Object)])
    }));
    dart.setLibraryUri(_FifoCache, L92);
    dart.setFieldSignature(_FifoCache, () => ({
      __proto__: dart.getFields(_FifoCache.__proto__),
      [_cache]: dart.finalFieldType(dart.legacy(core.Map$(dart.legacy(K), dart.legacy(V)))),
      [_maximumSize$]: dart.finalFieldType(dart.legacy(core.int))
    }));
    return _FifoCache;
  });
  theme_data._FifoCache = theme_data._FifoCache$();
  dart.addTypeTests(theme_data._FifoCache, _is__FifoCache_default);
  var C2099;
  var C2100;
  const Object_Diagnosticable$36$20 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$20.new = function() {
  }).prototype = Object_Diagnosticable$36$20.prototype;
  dart.applyMixin(Object_Diagnosticable$36$20, diagnostics.Diagnosticable);
  theme_data.VisualDensity = class VisualDensity extends Object_Diagnosticable$36$20 {
    get horizontal() {
      return this[horizontal$];
    }
    set horizontal(value) {
      super.horizontal = value;
    }
    get vertical() {
      return this[vertical$];
    }
    set vertical(value) {
      super.vertical = value;
    }
    static get adaptivePlatformDensity() {
      switch (platform$.defaultTargetPlatform) {
        case C44 || CT.C44:
        case C48 || CT.C48:
        case C45 || CT.C45:
        {
          break;
        }
        case C46 || CT.C46:
        case C49 || CT.C49:
        case C47 || CT.C47:
        {
          return theme_data.VisualDensity.compact;
        }
      }
      return C1000 || CT.C1000;
    }
    copyWith(opts) {
      let t12, t12$;
      let horizontal = opts && 'horizontal' in opts ? opts.horizontal : null;
      let vertical = opts && 'vertical' in opts ? opts.vertical : null;
      return new theme_data.VisualDensity.new({horizontal: (t12 = horizontal, t12 == null ? this.horizontal : t12), vertical: (t12$ = vertical, t12$ == null ? this.vertical : t12$)});
    }
    get baseSizeAdjustment() {
      return new ui.Offset.new(this.horizontal, this.vertical)['*'](4);
    }
    static lerp(a, b, t) {
      return new theme_data.VisualDensity.new({horizontal: ui.lerpDouble(a.horizontal, b.horizontal, t), vertical: ui.lerpDouble(a.horizontal, b.horizontal, t)});
    }
    effectiveConstraints(constraints) {
      if (!(constraints != null && dart.test(constraints.debugAssertIsValid()))) dart.assertFailed(null, L93, 1971, 12, "constraints != null && constraints.debugAssertIsValid()");
      return constraints.copyWith({minWidth: (dart.notNull(constraints.minWidth) + dart.notNull(this.baseSizeAdjustment.dx))[$clamp](0.0, 1 / 0)[$toDouble](), minHeight: (dart.notNull(constraints.minHeight) + dart.notNull(this.baseSizeAdjustment.dy))[$clamp](0.0, 1 / 0)[$toDouble]()});
    }
    _equals(other) {
      if (other == null) return false;
      if (!dart.equals(dart.runtimeType(other), this.runtimeType)) {
        return false;
      }
      return VisualDensityL().is(other) && other.horizontal == this.horizontal && other.vertical == this.vertical;
    }
    get hashCode() {
      return ui.hashValues(this.horizontal, this.vertical);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new diagnostics.DoubleProperty.new("horizontal", this.horizontal, {defaultValue: 0.0}));
      properties.add(new diagnostics.DoubleProperty.new("vertical", this.vertical, {defaultValue: 0.0}));
    }
    toStringShort() {
      return dart.str(super.toStringShort()) + "(h: " + dart.str(debug$.debugFormatDouble(this.horizontal)) + ", v: " + dart.str(debug$.debugFormatDouble(this.vertical)) + ")";
    }
  };
  (theme_data.VisualDensity.new = function(opts) {
    let horizontal = opts && 'horizontal' in opts ? opts.horizontal : 0;
    let vertical = opts && 'vertical' in opts ? opts.vertical : 0;
    this[horizontal$] = horizontal;
    this[vertical$] = vertical;
    if (!(horizontal != null)) dart.assertFailed(null, L93, 1842, 15, "horizontal != null");
    if (!(vertical != null)) dart.assertFailed(null, L93, 1843, 15, "vertical != null");
    if (!(dart.notNull(vertical) <= 4)) dart.assertFailed(null, L93, 1844, 15, "vertical <= maximumDensity");
    if (!(dart.notNull(vertical) >= -4)) dart.assertFailed(null, L93, 1845, 15, "vertical >= minimumDensity");
    if (!(dart.notNull(horizontal) <= 4)) dart.assertFailed(null, L93, 1846, 15, "horizontal <= maximumDensity");
    if (!(dart.notNull(horizontal) >= -4)) dart.assertFailed(null, L93, 1847, 15, "horizontal >= minimumDensity");
    ;
  }).prototype = theme_data.VisualDensity.prototype;
  dart.addTypeTests(theme_data.VisualDensity);
  dart.addTypeCaches(theme_data.VisualDensity);
  const horizontal$ = VisualDensity_horizontal;
  const vertical$ = VisualDensity_vertical;
  dart.setMethodSignature(theme_data.VisualDensity, () => ({
    __proto__: dart.getMethods(theme_data.VisualDensity.__proto__),
    copyWith: dart.fnType(dart.legacy(theme_data.VisualDensity), [], {horizontal: dart.legacy(core.double), vertical: dart.legacy(core.double)}, {}),
    effectiveConstraints: dart.fnType(dart.legacy(box.BoxConstraints), [dart.legacy(box.BoxConstraints)]),
    _equals: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    [$_equals]: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    debugFillProperties: dart.fnType(dart.void, [dart.legacy(diagnostics.DiagnosticPropertiesBuilder)]),
    toStringShort: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setGetterSignature(theme_data.VisualDensity, () => ({
    __proto__: dart.getGetters(theme_data.VisualDensity.__proto__),
    baseSizeAdjustment: dart.legacy(ui.Offset),
    hashCode: dart.legacy(core.int),
    [$hashCode]: dart.legacy(core.int)
  }));
  dart.setLibraryUri(theme_data.VisualDensity, L92);
  dart.setFieldSignature(theme_data.VisualDensity, () => ({
    __proto__: dart.getFields(theme_data.VisualDensity.__proto__),
    horizontal: dart.finalFieldType(dart.legacy(core.double)),
    vertical: dart.finalFieldType(dart.legacy(core.double))
  }));
  dart.defineExtensionMethods(theme_data.VisualDensity, ['_equals']);
  dart.defineExtensionAccessors(theme_data.VisualDensity, ['hashCode']);
  dart.defineLazy(theme_data.VisualDensity, {
    /*theme_data.VisualDensity.minimumDensity*/get minimumDensity() {
      return -4;
    },
    /*theme_data.VisualDensity.maximumDensity*/get maximumDensity() {
      return 4;
    },
    /*theme_data.VisualDensity.standard*/get standard() {
      return C1000 || CT.C1000;
    },
    /*theme_data.VisualDensity.comfortable*/get comfortable() {
      return C2099 || CT.C2099;
    },
    /*theme_data.VisualDensity.compact*/get compact() {
      return C2100 || CT.C2100;
    }
  }, true);
  var C2101;
  var C2102;
  var C2103;
  dart.defineLazy(theme_data, {
    /*theme_data._kLightThemeHighlightColor*/get _kLightThemeHighlightColor() {
      return C2101 || CT.C2101;
    },
    /*theme_data._kLightThemeSplashColor*/get _kLightThemeSplashColor() {
      return C2102 || CT.C2102;
    },
    /*theme_data._kDarkThemeHighlightColor*/get _kDarkThemeHighlightColor() {
      return C2103 || CT.C2103;
    },
    /*theme_data._kDarkThemeSplashColor*/get _kDarkThemeSplashColor() {
      return C2103 || CT.C2103;
    }
  }, true);
  var C2104;
  var C2105;
  var C2106;
  var C2107;
  var C2108;
  var C2109;
  var C2110;
  var C2111;
  var C2114;
  var C2115;
  var C2116;
  var C2117;
  var C2118;
  var C2119;
  var C2120;
  var C2121;
  var C2122;
  var C2123;
  var C2113;
  var ColorSwatch__swatch = dart.privateName(colors, "ColorSwatch._swatch");
  var C2112;
  var ColorScheme_brightness = dart.privateName(color_scheme, "ColorScheme.brightness");
  var ColorScheme_onError = dart.privateName(color_scheme, "ColorScheme.onError");
  var ColorScheme_onBackground = dart.privateName(color_scheme, "ColorScheme.onBackground");
  var ColorScheme_onSurface = dart.privateName(color_scheme, "ColorScheme.onSurface");
  var ColorScheme_onSecondary = dart.privateName(color_scheme, "ColorScheme.onSecondary");
  var ColorScheme_onPrimary = dart.privateName(color_scheme, "ColorScheme.onPrimary");
  var ColorScheme_error = dart.privateName(color_scheme, "ColorScheme.error");
  var ColorScheme_background = dart.privateName(color_scheme, "ColorScheme.background");
  var ColorScheme_surface = dart.privateName(color_scheme, "ColorScheme.surface");
  var ColorScheme_secondaryVariant = dart.privateName(color_scheme, "ColorScheme.secondaryVariant");
  var ColorScheme_secondary = dart.privateName(color_scheme, "ColorScheme.secondary");
  var ColorScheme_primaryVariant = dart.privateName(color_scheme, "ColorScheme.primaryVariant");
  var ColorScheme_primary = dart.privateName(color_scheme, "ColorScheme.primary");
  var C2124;
  const Object_Diagnosticable$36$21 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$21.new = function() {
  }).prototype = Object_Diagnosticable$36$21.prototype;
  dart.applyMixin(Object_Diagnosticable$36$21, diagnostics.Diagnosticable);
  color_scheme.ColorScheme = class ColorScheme extends Object_Diagnosticable$36$21 {
    get primary() {
      return this[primary$];
    }
    set primary(value) {
      super.primary = value;
    }
    get primaryVariant() {
      return this[primaryVariant$];
    }
    set primaryVariant(value) {
      super.primaryVariant = value;
    }
    get secondary() {
      return this[secondary$];
    }
    set secondary(value) {
      super.secondary = value;
    }
    get secondaryVariant() {
      return this[secondaryVariant$];
    }
    set secondaryVariant(value) {
      super.secondaryVariant = value;
    }
    get surface() {
      return this[surface$];
    }
    set surface(value) {
      super.surface = value;
    }
    get background() {
      return this[background$0];
    }
    set background(value) {
      super.background = value;
    }
    get error() {
      return this[error$];
    }
    set error(value) {
      super.error = value;
    }
    get onPrimary() {
      return this[onPrimary$];
    }
    set onPrimary(value) {
      super.onPrimary = value;
    }
    get onSecondary() {
      return this[onSecondary$];
    }
    set onSecondary(value) {
      super.onSecondary = value;
    }
    get onSurface() {
      return this[onSurface$];
    }
    set onSurface(value) {
      super.onSurface = value;
    }
    get onBackground() {
      return this[onBackground$];
    }
    set onBackground(value) {
      super.onBackground = value;
    }
    get onError() {
      return this[onError$];
    }
    set onError(value) {
      super.onError = value;
    }
    get brightness() {
      return this[brightness$1];
    }
    set brightness(value) {
      super.brightness = value;
    }
    static fromSwatch(opts) {
      let t12, t12$, t12$0, t12$1, t12$2;
      let primarySwatch = opts && 'primarySwatch' in opts ? opts.primarySwatch : C2112 || CT.C2112;
      let primaryColorDark = opts && 'primaryColorDark' in opts ? opts.primaryColorDark : null;
      let accentColor = opts && 'accentColor' in opts ? opts.accentColor : null;
      let cardColor = opts && 'cardColor' in opts ? opts.cardColor : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let errorColor = opts && 'errorColor' in opts ? opts.errorColor : null;
      let brightness = opts && 'brightness' in opts ? opts.brightness : C511 || CT.C511;
      if (!(primarySwatch != null)) dart.assertFailed(null, L94, 124, 12, "primarySwatch != null");
      if (!(brightness != null)) dart.assertFailed(null, L94, 125, 12, "brightness != null");
      let isDark = dart.equals(brightness, ui.Brightness.dark);
      let primaryIsDark = dart.equals(color_scheme.ColorScheme._brightnessFor(primarySwatch), ui.Brightness.dark);
      let secondary = (t12 = accentColor, t12 == null ? isDark ? colors$.Colors.tealAccent._get(200) : primarySwatch : t12);
      let secondaryIsDark = dart.equals(color_scheme.ColorScheme._brightnessFor(secondary), ui.Brightness.dark);
      return new color_scheme.ColorScheme.new({primary: primarySwatch, primaryVariant: (t12$ = primaryColorDark, t12$ == null ? isDark ? colors$.Colors.black : primarySwatch._get(700) : t12$), secondary: secondary, secondaryVariant: isDark ? colors$.Colors.tealAccent._get(700) : primarySwatch._get(700), surface: (t12$0 = cardColor, t12$0 == null ? isDark ? colors$.Colors.grey._get(800) : colors$.Colors.white : t12$0), background: (t12$1 = backgroundColor, t12$1 == null ? isDark ? colors$.Colors.grey._get(700) : primarySwatch._get(200) : t12$1), error: (t12$2 = errorColor, t12$2 == null ? colors$.Colors.red._get(700) : t12$2), onPrimary: primaryIsDark ? colors$.Colors.white : colors$.Colors.black, onSecondary: secondaryIsDark ? colors$.Colors.white : colors$.Colors.black, onSurface: isDark ? colors$.Colors.white : colors$.Colors.black, onBackground: primaryIsDark ? colors$.Colors.white : colors$.Colors.black, onError: isDark ? colors$.Colors.black : colors$.Colors.white, brightness: brightness});
    }
    static _brightnessFor(color) {
      return theme_data.ThemeData.estimateBrightnessForColor(color);
    }
    copyWith(opts) {
      let t12, t12$, t12$0, t12$1, t12$2, t12$3, t12$4, t12$5, t12$6, t12$7, t12$8, t12$9, t12$10;
      let primary = opts && 'primary' in opts ? opts.primary : null;
      let primaryVariant = opts && 'primaryVariant' in opts ? opts.primaryVariant : null;
      let secondary = opts && 'secondary' in opts ? opts.secondary : null;
      let secondaryVariant = opts && 'secondaryVariant' in opts ? opts.secondaryVariant : null;
      let surface = opts && 'surface' in opts ? opts.surface : null;
      let background = opts && 'background' in opts ? opts.background : null;
      let error = opts && 'error' in opts ? opts.error : null;
      let onPrimary = opts && 'onPrimary' in opts ? opts.onPrimary : null;
      let onSecondary = opts && 'onSecondary' in opts ? opts.onSecondary : null;
      let onSurface = opts && 'onSurface' in opts ? opts.onSurface : null;
      let onBackground = opts && 'onBackground' in opts ? opts.onBackground : null;
      let onError = opts && 'onError' in opts ? opts.onError : null;
      let brightness = opts && 'brightness' in opts ? opts.brightness : null;
      return new color_scheme.ColorScheme.new({primary: (t12 = primary, t12 == null ? this.primary : t12), primaryVariant: (t12$ = primaryVariant, t12$ == null ? this.primaryVariant : t12$), secondary: (t12$0 = secondary, t12$0 == null ? this.secondary : t12$0), secondaryVariant: (t12$1 = secondaryVariant, t12$1 == null ? this.secondaryVariant : t12$1), surface: (t12$2 = surface, t12$2 == null ? this.surface : t12$2), background: (t12$3 = background, t12$3 == null ? this.background : t12$3), error: (t12$4 = error, t12$4 == null ? this.error : t12$4), onPrimary: (t12$5 = onPrimary, t12$5 == null ? this.onPrimary : t12$5), onSecondary: (t12$6 = onSecondary, t12$6 == null ? this.onSecondary : t12$6), onSurface: (t12$7 = onSurface, t12$7 == null ? this.onSurface : t12$7), onBackground: (t12$8 = onBackground, t12$8 == null ? this.onBackground : t12$8), onError: (t12$9 = onError, t12$9 == null ? this.onError : t12$9), brightness: (t12$10 = brightness, t12$10 == null ? this.brightness : t12$10)});
    }
    static lerp(a, b, t) {
      return new color_scheme.ColorScheme.new({primary: ui.Color.lerp(a.primary, b.primary, t), primaryVariant: ui.Color.lerp(a.primaryVariant, b.primaryVariant, t), secondary: ui.Color.lerp(a.secondary, b.secondary, t), secondaryVariant: ui.Color.lerp(a.secondaryVariant, b.secondaryVariant, t), surface: ui.Color.lerp(a.surface, b.surface, t), background: ui.Color.lerp(a.background, b.background, t), error: ui.Color.lerp(a.error, b.error, t), onPrimary: ui.Color.lerp(a.onPrimary, b.onPrimary, t), onSecondary: ui.Color.lerp(a.onSecondary, b.onSecondary, t), onSurface: ui.Color.lerp(a.onSurface, b.onSurface, t), onBackground: ui.Color.lerp(a.onBackground, b.onBackground, t), onError: ui.Color.lerp(a.onError, b.onError, t), brightness: dart.notNull(t) < 0.5 ? a.brightness : b.brightness});
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this.runtimeType)) return false;
      return ColorSchemeL().is(other) && dart.equals(other.primary, this.primary) && dart.equals(other.primaryVariant, this.primaryVariant) && dart.equals(other.secondary, this.secondary) && dart.equals(other.secondaryVariant, this.secondaryVariant) && dart.equals(other.surface, this.surface) && dart.equals(other.background, this.background) && dart.equals(other.error, this.error) && dart.equals(other.onPrimary, this.onPrimary) && dart.equals(other.onSecondary, this.onSecondary) && dart.equals(other.onSurface, this.onSurface) && dart.equals(other.onBackground, this.onBackground) && dart.equals(other.onError, this.onError) && dart.equals(other.brightness, this.brightness);
    }
    get hashCode() {
      return ui.hashValues(this.primary, this.primaryVariant, this.secondary, this.secondaryVariant, this.surface, this.background, this.error, this.onPrimary, this.onSecondary, this.onSurface, this.onBackground, this.onError, this.brightness);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      let defaultScheme = C2124 || CT.C2124;
      properties.add(new colors.ColorProperty.new("primary", this.primary, {defaultValue: defaultScheme.primary}));
      properties.add(new colors.ColorProperty.new("primaryVariant", this.primaryVariant, {defaultValue: defaultScheme.primaryVariant}));
      properties.add(new colors.ColorProperty.new("secondary", this.secondary, {defaultValue: defaultScheme.secondary}));
      properties.add(new colors.ColorProperty.new("secondaryVariant", this.secondaryVariant, {defaultValue: defaultScheme.secondaryVariant}));
      properties.add(new colors.ColorProperty.new("surface", this.surface, {defaultValue: defaultScheme.surface}));
      properties.add(new colors.ColorProperty.new("background", this.background, {defaultValue: defaultScheme.background}));
      properties.add(new colors.ColorProperty.new("error", this.error, {defaultValue: defaultScheme.error}));
      properties.add(new colors.ColorProperty.new("onPrimary", this.onPrimary, {defaultValue: defaultScheme.onPrimary}));
      properties.add(new colors.ColorProperty.new("onSecondary", this.onSecondary, {defaultValue: defaultScheme.onSecondary}));
      properties.add(new colors.ColorProperty.new("onSurface", this.onSurface, {defaultValue: defaultScheme.onSurface}));
      properties.add(new colors.ColorProperty.new("onBackground", this.onBackground, {defaultValue: defaultScheme.onBackground}));
      properties.add(new colors.ColorProperty.new("onError", this.onError, {defaultValue: defaultScheme.onError}));
      properties.add(new (DiagnosticsPropertyOfBrightnessL()).new("brightness", this.brightness, {defaultValue: defaultScheme.brightness}));
    }
  };
  (color_scheme.ColorScheme.new = function(opts) {
    let primary = opts && 'primary' in opts ? opts.primary : null;
    let primaryVariant = opts && 'primaryVariant' in opts ? opts.primaryVariant : null;
    let secondary = opts && 'secondary' in opts ? opts.secondary : null;
    let secondaryVariant = opts && 'secondaryVariant' in opts ? opts.secondaryVariant : null;
    let surface = opts && 'surface' in opts ? opts.surface : null;
    let background = opts && 'background' in opts ? opts.background : null;
    let error = opts && 'error' in opts ? opts.error : null;
    let onPrimary = opts && 'onPrimary' in opts ? opts.onPrimary : null;
    let onSecondary = opts && 'onSecondary' in opts ? opts.onSecondary : null;
    let onSurface = opts && 'onSurface' in opts ? opts.onSurface : null;
    let onBackground = opts && 'onBackground' in opts ? opts.onBackground : null;
    let onError = opts && 'onError' in opts ? opts.onError : null;
    let brightness = opts && 'brightness' in opts ? opts.brightness : null;
    this[primary$] = primary;
    this[primaryVariant$] = primaryVariant;
    this[secondary$] = secondary;
    this[secondaryVariant$] = secondaryVariant;
    this[surface$] = surface;
    this[background$0] = background;
    this[error$] = error;
    this[onPrimary$] = onPrimary;
    this[onSecondary$] = onSecondary;
    this[onSurface$] = onSurface;
    this[onBackground$] = onBackground;
    this[onError$] = onError;
    this[brightness$1] = brightness;
    if (!(primary != null)) dart.assertFailed(null, L94, 37, 15, "primary != null");
    if (!(primaryVariant != null)) dart.assertFailed(null, L94, 38, 15, "primaryVariant != null");
    if (!(secondary != null)) dart.assertFailed(null, L94, 39, 15, "secondary != null");
    if (!(secondaryVariant != null)) dart.assertFailed(null, L94, 40, 15, "secondaryVariant != null");
    if (!(surface != null)) dart.assertFailed(null, L94, 41, 15, "surface != null");
    if (!(background != null)) dart.assertFailed(null, L94, 42, 15, "background != null");
    if (!(error != null)) dart.assertFailed(null, L94, 43, 15, "error != null");
    if (!(onPrimary != null)) dart.assertFailed(null, L94, 44, 15, "onPrimary != null");
    if (!(onSecondary != null)) dart.assertFailed(null, L94, 45, 15, "onSecondary != null");
    if (!(onSurface != null)) dart.assertFailed(null, L94, 46, 15, "onSurface != null");
    if (!(onBackground != null)) dart.assertFailed(null, L94, 47, 15, "onBackground != null");
    if (!(onError != null)) dart.assertFailed(null, L94, 48, 15, "onError != null");
    if (!(brightness != null)) dart.assertFailed(null, L94, 49, 15, "brightness != null");
    ;
  }).prototype = color_scheme.ColorScheme.prototype;
  (color_scheme.ColorScheme.light = function(opts) {
    let primary = opts && 'primary' in opts ? opts.primary : C2104 || CT.C2104;
    let primaryVariant = opts && 'primaryVariant' in opts ? opts.primaryVariant : C2105 || CT.C2105;
    let secondary = opts && 'secondary' in opts ? opts.secondary : C2106 || CT.C2106;
    let secondaryVariant = opts && 'secondaryVariant' in opts ? opts.secondaryVariant : C2107 || CT.C2107;
    let surface = opts && 'surface' in opts ? opts.surface : C2058 || CT.C2058;
    let background = opts && 'background' in opts ? opts.background : C2058 || CT.C2058;
    let error = opts && 'error' in opts ? opts.error : C2108 || CT.C2108;
    let onPrimary = opts && 'onPrimary' in opts ? opts.onPrimary : C2058 || CT.C2058;
    let onSecondary = opts && 'onSecondary' in opts ? opts.onSecondary : C384 || CT.C384;
    let onSurface = opts && 'onSurface' in opts ? opts.onSurface : C384 || CT.C384;
    let onBackground = opts && 'onBackground' in opts ? opts.onBackground : C384 || CT.C384;
    let onError = opts && 'onError' in opts ? opts.onError : C2058 || CT.C2058;
    let brightness = opts && 'brightness' in opts ? opts.brightness : C511 || CT.C511;
    this[primary$] = primary;
    this[primaryVariant$] = primaryVariant;
    this[secondary$] = secondary;
    this[secondaryVariant$] = secondaryVariant;
    this[surface$] = surface;
    this[background$0] = background;
    this[error$] = error;
    this[onPrimary$] = onPrimary;
    this[onSecondary$] = onSecondary;
    this[onSurface$] = onSurface;
    this[onBackground$] = onBackground;
    this[onError$] = onError;
    this[brightness$1] = brightness;
    if (!(primary != null)) dart.assertFailed(null, L94, 67, 15, "primary != null");
    if (!(primaryVariant != null)) dart.assertFailed(null, L94, 68, 15, "primaryVariant != null");
    if (!(secondary != null)) dart.assertFailed(null, L94, 69, 15, "secondary != null");
    if (!(secondaryVariant != null)) dart.assertFailed(null, L94, 70, 15, "secondaryVariant != null");
    if (!(surface != null)) dart.assertFailed(null, L94, 71, 15, "surface != null");
    if (!(background != null)) dart.assertFailed(null, L94, 72, 15, "background != null");
    if (!(error != null)) dart.assertFailed(null, L94, 73, 15, "error != null");
    if (!(onPrimary != null)) dart.assertFailed(null, L94, 74, 15, "onPrimary != null");
    if (!(onSecondary != null)) dart.assertFailed(null, L94, 75, 15, "onSecondary != null");
    if (!(onSurface != null)) dart.assertFailed(null, L94, 76, 15, "onSurface != null");
    if (!(onBackground != null)) dart.assertFailed(null, L94, 77, 15, "onBackground != null");
    if (!(onError != null)) dart.assertFailed(null, L94, 78, 15, "onError != null");
    if (!(brightness != null)) dart.assertFailed(null, L94, 79, 15, "brightness != null");
    ;
  }).prototype = color_scheme.ColorScheme.prototype;
  (color_scheme.ColorScheme.dark = function(opts) {
    let primary = opts && 'primary' in opts ? opts.primary : C2109 || CT.C2109;
    let primaryVariant = opts && 'primaryVariant' in opts ? opts.primaryVariant : C2105 || CT.C2105;
    let secondary = opts && 'secondary' in opts ? opts.secondary : C2106 || CT.C2106;
    let secondaryVariant = opts && 'secondaryVariant' in opts ? opts.secondaryVariant : C2106 || CT.C2106;
    let surface = opts && 'surface' in opts ? opts.surface : C2110 || CT.C2110;
    let background = opts && 'background' in opts ? opts.background : C2110 || CT.C2110;
    let error = opts && 'error' in opts ? opts.error : C2111 || CT.C2111;
    let onPrimary = opts && 'onPrimary' in opts ? opts.onPrimary : C384 || CT.C384;
    let onSecondary = opts && 'onSecondary' in opts ? opts.onSecondary : C384 || CT.C384;
    let onSurface = opts && 'onSurface' in opts ? opts.onSurface : C2058 || CT.C2058;
    let onBackground = opts && 'onBackground' in opts ? opts.onBackground : C2058 || CT.C2058;
    let onError = opts && 'onError' in opts ? opts.onError : C384 || CT.C384;
    let brightness = opts && 'brightness' in opts ? opts.brightness : C512 || CT.C512;
    this[primary$] = primary;
    this[primaryVariant$] = primaryVariant;
    this[secondary$] = secondary;
    this[secondaryVariant$] = secondaryVariant;
    this[surface$] = surface;
    this[background$0] = background;
    this[error$] = error;
    this[onPrimary$] = onPrimary;
    this[onSecondary$] = onSecondary;
    this[onSurface$] = onSurface;
    this[onBackground$] = onBackground;
    this[onError$] = onError;
    this[brightness$1] = brightness;
    if (!(primary != null)) dart.assertFailed(null, L94, 97, 15, "primary != null");
    if (!(primaryVariant != null)) dart.assertFailed(null, L94, 98, 15, "primaryVariant != null");
    if (!(secondary != null)) dart.assertFailed(null, L94, 99, 15, "secondary != null");
    if (!(secondaryVariant != null)) dart.assertFailed(null, L94, 100, 15, "secondaryVariant != null");
    if (!(surface != null)) dart.assertFailed(null, L94, 101, 15, "surface != null");
    if (!(background != null)) dart.assertFailed(null, L94, 102, 15, "background != null");
    if (!(error != null)) dart.assertFailed(null, L94, 103, 15, "error != null");
    if (!(onPrimary != null)) dart.assertFailed(null, L94, 104, 15, "onPrimary != null");
    if (!(onSecondary != null)) dart.assertFailed(null, L94, 105, 15, "onSecondary != null");
    if (!(onSurface != null)) dart.assertFailed(null, L94, 106, 15, "onSurface != null");
    if (!(onBackground != null)) dart.assertFailed(null, L94, 107, 15, "onBackground != null");
    if (!(onError != null)) dart.assertFailed(null, L94, 108, 15, "onError != null");
    if (!(brightness != null)) dart.assertFailed(null, L94, 109, 15, "brightness != null");
    ;
  }).prototype = color_scheme.ColorScheme.prototype;
  dart.addTypeTests(color_scheme.ColorScheme);
  dart.addTypeCaches(color_scheme.ColorScheme);
  const primary$ = ColorScheme_primary;
  const primaryVariant$ = ColorScheme_primaryVariant;
  const secondary$ = ColorScheme_secondary;
  const secondaryVariant$ = ColorScheme_secondaryVariant;
  const surface$ = ColorScheme_surface;
  const background$0 = ColorScheme_background;
  const error$ = ColorScheme_error;
  const onPrimary$ = ColorScheme_onPrimary;
  const onSecondary$ = ColorScheme_onSecondary;
  const onSurface$ = ColorScheme_onSurface;
  const onBackground$ = ColorScheme_onBackground;
  const onError$ = ColorScheme_onError;
  const brightness$1 = ColorScheme_brightness;
  dart.setMethodSignature(color_scheme.ColorScheme, () => ({
    __proto__: dart.getMethods(color_scheme.ColorScheme.__proto__),
    copyWith: dart.fnType(dart.legacy(color_scheme.ColorScheme), [], {background: dart.legacy(ui.Color), brightness: dart.legacy(ui.Brightness), error: dart.legacy(ui.Color), onBackground: dart.legacy(ui.Color), onError: dart.legacy(ui.Color), onPrimary: dart.legacy(ui.Color), onSecondary: dart.legacy(ui.Color), onSurface: dart.legacy(ui.Color), primary: dart.legacy(ui.Color), primaryVariant: dart.legacy(ui.Color), secondary: dart.legacy(ui.Color), secondaryVariant: dart.legacy(ui.Color), surface: dart.legacy(ui.Color)}, {}),
    _equals: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    [$_equals]: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    debugFillProperties: dart.fnType(dart.void, [dart.legacy(diagnostics.DiagnosticPropertiesBuilder)])
  }));
  dart.setGetterSignature(color_scheme.ColorScheme, () => ({
    __proto__: dart.getGetters(color_scheme.ColorScheme.__proto__),
    hashCode: dart.legacy(core.int),
    [$hashCode]: dart.legacy(core.int)
  }));
  dart.setLibraryUri(color_scheme.ColorScheme, L95);
  dart.setFieldSignature(color_scheme.ColorScheme, () => ({
    __proto__: dart.getFields(color_scheme.ColorScheme.__proto__),
    primary: dart.finalFieldType(dart.legacy(ui.Color)),
    primaryVariant: dart.finalFieldType(dart.legacy(ui.Color)),
    secondary: dart.finalFieldType(dart.legacy(ui.Color)),
    secondaryVariant: dart.finalFieldType(dart.legacy(ui.Color)),
    surface: dart.finalFieldType(dart.legacy(ui.Color)),
    background: dart.finalFieldType(dart.legacy(ui.Color)),
    error: dart.finalFieldType(dart.legacy(ui.Color)),
    onPrimary: dart.finalFieldType(dart.legacy(ui.Color)),
    onSecondary: dart.finalFieldType(dart.legacy(ui.Color)),
    onSurface: dart.finalFieldType(dart.legacy(ui.Color)),
    onBackground: dart.finalFieldType(dart.legacy(ui.Color)),
    onError: dart.finalFieldType(dart.legacy(ui.Color)),
    brightness: dart.finalFieldType(dart.legacy(ui.Brightness))
  }));
  dart.defineExtensionMethods(color_scheme.ColorScheme, ['_equals']);
  dart.defineExtensionAccessors(color_scheme.ColorScheme, ['hashCode']);
  var _name$20 = dart.privateName(button_theme, "_name");
  var C2125;
  var C2126;
  var C2127;
  var C2128;
  button_theme.ButtonTextTheme = class ButtonTextTheme extends core.Object {
    toString() {
      return this[_name$20];
    }
  };
  (button_theme.ButtonTextTheme.new = function(index, _name) {
    this.index = index;
    this[_name$20] = _name;
    ;
  }).prototype = button_theme.ButtonTextTheme.prototype;
  dart.addTypeTests(button_theme.ButtonTextTheme);
  dart.addTypeCaches(button_theme.ButtonTextTheme);
  dart.setMethodSignature(button_theme.ButtonTextTheme, () => ({
    __proto__: dart.getMethods(button_theme.ButtonTextTheme.__proto__),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setLibraryUri(button_theme.ButtonTextTheme, L96);
  dart.setFieldSignature(button_theme.ButtonTextTheme, () => ({
    __proto__: dart.getFields(button_theme.ButtonTextTheme.__proto__),
    index: dart.finalFieldType(dart.legacy(core.int)),
    [_name$20]: dart.finalFieldType(dart.legacy(core.String))
  }));
  dart.defineExtensionMethods(button_theme.ButtonTextTheme, ['toString']);
  button_theme.ButtonTextTheme.normal = C2125 || CT.C2125;
  button_theme.ButtonTextTheme.accent = C2126 || CT.C2126;
  button_theme.ButtonTextTheme.primary = C2127 || CT.C2127;
  button_theme.ButtonTextTheme.values = C2128 || CT.C2128;
  var C2129;
  var C2130;
  var C2131;
  button_theme.ButtonBarLayoutBehavior = class ButtonBarLayoutBehavior extends core.Object {
    toString() {
      return this[_name$20];
    }
  };
  (button_theme.ButtonBarLayoutBehavior.new = function(index, _name) {
    this.index = index;
    this[_name$20] = _name;
    ;
  }).prototype = button_theme.ButtonBarLayoutBehavior.prototype;
  dart.addTypeTests(button_theme.ButtonBarLayoutBehavior);
  dart.addTypeCaches(button_theme.ButtonBarLayoutBehavior);
  dart.setMethodSignature(button_theme.ButtonBarLayoutBehavior, () => ({
    __proto__: dart.getMethods(button_theme.ButtonBarLayoutBehavior.__proto__),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setLibraryUri(button_theme.ButtonBarLayoutBehavior, L96);
  dart.setFieldSignature(button_theme.ButtonBarLayoutBehavior, () => ({
    __proto__: dart.getFields(button_theme.ButtonBarLayoutBehavior.__proto__),
    index: dart.finalFieldType(dart.legacy(core.int)),
    [_name$20]: dart.finalFieldType(dart.legacy(core.String))
  }));
  dart.defineExtensionMethods(button_theme.ButtonBarLayoutBehavior, ['toString']);
  button_theme.ButtonBarLayoutBehavior.constrained = C2129 || CT.C2129;
  button_theme.ButtonBarLayoutBehavior.padded = C2130 || CT.C2130;
  button_theme.ButtonBarLayoutBehavior.values = C2131 || CT.C2131;
  var C2134;
  var C2135;
  var C2133;
  var C2132;
  var data$12 = dart.privateName(button_theme, "ButtonTheme.data");
  button_theme.ButtonTheme = class ButtonTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[data$12];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t12, t12$, t12$0;
      let inheritedButtonTheme = context.dependOnInheritedWidgetOfExactType(ButtonThemeL());
      let buttonTheme = (t12 = inheritedButtonTheme, t12 == null ? null : t12.data);
      if ((t12$ = buttonTheme, t12$ == null ? null : t12$.colorScheme) == null) {
        let theme = theme$.Theme.of(context);
        buttonTheme == null ? buttonTheme = theme.buttonTheme : null;
        if (buttonTheme.colorScheme == null) {
          buttonTheme = buttonTheme.copyWith({colorScheme: (t12$0 = theme.buttonTheme.colorScheme, t12$0 == null ? theme.colorScheme : t12$0)});
          if (!(buttonTheme.colorScheme != null)) dart.assertFailed(null, L97, 228, 16, "buttonTheme.colorScheme != null");
        }
      }
      return buttonTheme;
    }
    wrap(context, child) {
      let ancestorTheme = context.findAncestorWidgetOfExactType(ButtonThemeL());
      return this === ancestorTheme ? child : new button_theme.ButtonTheme.fromButtonThemeData({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C2132 || CT.C2132});
    }
    updateShouldNotify(oldWidget) {
      ButtonThemeL().as(oldWidget);
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (button_theme.ButtonTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : C2125 || CT.C2125;
    let layoutBehavior = opts && 'layoutBehavior' in opts ? opts.layoutBehavior : C2130 || CT.C2130;
    let minWidth = opts && 'minWidth' in opts ? opts.minWidth : 88;
    let height = opts && 'height' in opts ? opts.height : 36;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let alignedDropdown = opts && 'alignedDropdown' in opts ? opts.alignedDropdown : false;
    let buttonColor = opts && 'buttonColor' in opts ? opts.buttonColor : null;
    let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let colorScheme = opts && 'colorScheme' in opts ? opts.colorScheme : null;
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    if (!(textTheme != null)) dart.assertFailed(null, L97, 91, 15, "textTheme != null");
    if (!(minWidth != null && dart.notNull(minWidth) >= 0.0)) dart.assertFailed(null, L97, 92, 15, "minWidth != null && minWidth >= 0.0");
    if (!(height != null && dart.notNull(height) >= 0.0)) dart.assertFailed(null, L97, 93, 15, "height != null && height >= 0.0");
    if (!(alignedDropdown != null)) dart.assertFailed(null, L97, 94, 15, "alignedDropdown != null");
    if (!(layoutBehavior != null)) dart.assertFailed(null, L97, 95, 15, "layoutBehavior != null");
    this[data$12] = new button_theme.ButtonThemeData.new({textTheme: textTheme, minWidth: minWidth, height: height, padding: padding, shape: shape, alignedDropdown: alignedDropdown, layoutBehavior: layoutBehavior, buttonColor: buttonColor, disabledColor: disabledColor, focusColor: focusColor, hoverColor: hoverColor, highlightColor: highlightColor, splashColor: splashColor, colorScheme: colorScheme, materialTapTargetSize: materialTapTargetSize});
    button_theme.ButtonTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = button_theme.ButtonTheme.prototype;
  (button_theme.ButtonTheme.fromButtonThemeData = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[data$12] = data;
    if (!(data != null)) dart.assertFailed(null, L97, 122, 15, "data != null");
    button_theme.ButtonTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = button_theme.ButtonTheme.prototype;
  (button_theme.ButtonTheme.bar = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : C2126 || CT.C2126;
    let minWidth = opts && 'minWidth' in opts ? opts.minWidth : 64;
    let height = opts && 'height' in opts ? opts.height : 36;
    let padding = opts && 'padding' in opts ? opts.padding : C1513 || CT.C1513;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let alignedDropdown = opts && 'alignedDropdown' in opts ? opts.alignedDropdown : false;
    let buttonColor = opts && 'buttonColor' in opts ? opts.buttonColor : null;
    let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let colorScheme = opts && 'colorScheme' in opts ? opts.colorScheme : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let layoutBehavior = opts && 'layoutBehavior' in opts ? opts.layoutBehavior : C2130 || CT.C2130;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    if (!(textTheme != null)) dart.assertFailed(null, L97, 186, 15, "textTheme != null");
    if (!(minWidth != null && dart.notNull(minWidth) >= 0.0)) dart.assertFailed(null, L97, 187, 15, "minWidth != null && minWidth >= 0.0");
    if (!(height != null && dart.notNull(height) >= 0.0)) dart.assertFailed(null, L97, 188, 15, "height != null && height >= 0.0");
    if (!(alignedDropdown != null)) dart.assertFailed(null, L97, 189, 15, "alignedDropdown != null");
    this[data$12] = new button_theme.ButtonThemeData.new({textTheme: textTheme, minWidth: minWidth, height: height, padding: padding, shape: shape, alignedDropdown: alignedDropdown, layoutBehavior: layoutBehavior, buttonColor: buttonColor, disabledColor: disabledColor, focusColor: focusColor, hoverColor: hoverColor, highlightColor: highlightColor, splashColor: splashColor, colorScheme: colorScheme});
    button_theme.ButtonTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = button_theme.ButtonTheme.prototype;
  dart.addTypeTests(button_theme.ButtonTheme);
  dart.addTypeCaches(button_theme.ButtonTheme);
  dart.setMethodSignature(button_theme.ButtonTheme, () => ({
    __proto__: dart.getMethods(button_theme.ButtonTheme.__proto__),
    wrap: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext), dart.legacy(framework.Widget)]),
    updateShouldNotify: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)])
  }));
  dart.setLibraryUri(button_theme.ButtonTheme, L96);
  dart.setFieldSignature(button_theme.ButtonTheme, () => ({
    __proto__: dart.getFields(button_theme.ButtonTheme.__proto__),
    data: dart.finalFieldType(dart.legacy(button_theme.ButtonThemeData))
  }));
  var _padding = dart.privateName(button_theme, "_padding");
  var _shape$ = dart.privateName(button_theme, "_shape");
  var _buttonColor = dart.privateName(button_theme, "_buttonColor");
  var _disabledColor = dart.privateName(button_theme, "_disabledColor");
  var _focusColor = dart.privateName(button_theme, "_focusColor");
  var _hoverColor = dart.privateName(button_theme, "_hoverColor");
  var _highlightColor = dart.privateName(button_theme, "_highlightColor");
  var _splashColor = dart.privateName(button_theme, "_splashColor");
  var _materialTapTargetSize = dart.privateName(button_theme, "_materialTapTargetSize");
  var C2136;
  var C2139;
  var C2138;
  var C2137;
  var C2140;
  var ButtonThemeData__materialTapTargetSize = dart.privateName(button_theme, "ButtonThemeData._materialTapTargetSize");
  var ButtonThemeData_colorScheme = dart.privateName(button_theme, "ButtonThemeData.colorScheme");
  var ButtonThemeData__splashColor = dart.privateName(button_theme, "ButtonThemeData._splashColor");
  var ButtonThemeData__highlightColor = dart.privateName(button_theme, "ButtonThemeData._highlightColor");
  var ButtonThemeData__hoverColor = dart.privateName(button_theme, "ButtonThemeData._hoverColor");
  var ButtonThemeData__focusColor = dart.privateName(button_theme, "ButtonThemeData._focusColor");
  var ButtonThemeData__disabledColor = dart.privateName(button_theme, "ButtonThemeData._disabledColor");
  var ButtonThemeData__buttonColor = dart.privateName(button_theme, "ButtonThemeData._buttonColor");
  var ButtonThemeData_alignedDropdown = dart.privateName(button_theme, "ButtonThemeData.alignedDropdown");
  var ButtonThemeData__shape = dart.privateName(button_theme, "ButtonThemeData._shape");
  var ButtonThemeData__padding = dart.privateName(button_theme, "ButtonThemeData._padding");
  var ButtonThemeData_layoutBehavior = dart.privateName(button_theme, "ButtonThemeData.layoutBehavior");
  var ButtonThemeData_textTheme = dart.privateName(button_theme, "ButtonThemeData.textTheme");
  var ButtonThemeData_height = dart.privateName(button_theme, "ButtonThemeData.height");
  var ButtonThemeData_minWidth = dart.privateName(button_theme, "ButtonThemeData.minWidth");
  var C2141;
  const Object_Diagnosticable$36$22 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$22.new = function() {
  }).prototype = Object_Diagnosticable$36$22.prototype;
  dart.applyMixin(Object_Diagnosticable$36$22, diagnostics.Diagnosticable);
  button_theme.ButtonThemeData = class ButtonThemeData extends Object_Diagnosticable$36$22 {
    get minWidth() {
      return this[minWidth$1];
    }
    set minWidth(value) {
      super.minWidth = value;
    }
    get height() {
      return this[height$4];
    }
    set height(value) {
      super.height = value;
    }
    get textTheme() {
      return this[textTheme$2];
    }
    set textTheme(value) {
      super.textTheme = value;
    }
    get layoutBehavior() {
      return this[layoutBehavior$];
    }
    set layoutBehavior(value) {
      super.layoutBehavior = value;
    }
    get [_padding]() {
      return this[_padding$];
    }
    set [_padding](value) {
      super[_padding] = value;
    }
    get [_shape$]() {
      return this[_shape$0];
    }
    set [_shape$](value) {
      super[_shape$] = value;
    }
    get alignedDropdown() {
      return this[alignedDropdown$];
    }
    set alignedDropdown(value) {
      super.alignedDropdown = value;
    }
    get [_buttonColor]() {
      return this[_buttonColor$];
    }
    set [_buttonColor](value) {
      super[_buttonColor] = value;
    }
    get [_disabledColor]() {
      return this[_disabledColor$];
    }
    set [_disabledColor](value) {
      super[_disabledColor] = value;
    }
    get [_focusColor]() {
      return this[_focusColor$];
    }
    set [_focusColor](value) {
      super[_focusColor] = value;
    }
    get [_hoverColor]() {
      return this[_hoverColor$];
    }
    set [_hoverColor](value) {
      super[_hoverColor] = value;
    }
    get [_highlightColor]() {
      return this[_highlightColor$];
    }
    set [_highlightColor](value) {
      super[_highlightColor] = value;
    }
    get [_splashColor]() {
      return this[_splashColor$];
    }
    set [_splashColor](value) {
      super[_splashColor] = value;
    }
    get colorScheme() {
      return this[colorScheme$0];
    }
    set colorScheme(value) {
      super.colorScheme = value;
    }
    get [_materialTapTargetSize]() {
      return this[_materialTapTargetSize$];
    }
    set [_materialTapTargetSize](value) {
      super[_materialTapTargetSize] = value;
    }
    get constraints() {
      return new box.BoxConstraints.new({minWidth: this.minWidth, minHeight: this.height});
    }
    get padding() {
      if (this[_padding] != null) return this[_padding];
      switch (this.textTheme) {
        case C2125 || CT.C2125:
        case C2126 || CT.C2126:
        {
          return C277 || CT.C277;
        }
        case C2127 || CT.C2127:
        {
          return C2136 || CT.C2136;
        }
      }
      if (!false) dart.assertFailed(null, L97, 353, 12, "false");
      return edge_insets.EdgeInsets.zero;
    }
    get shape() {
      if (this[_shape$] != null) return this[_shape$];
      switch (this.textTheme) {
        case C2125 || CT.C2125:
        case C2126 || CT.C2126:
        {
          return C2137 || CT.C2137;
        }
        case C2127 || CT.C2127:
        {
          return C724 || CT.C724;
        }
      }
      return C1002 || CT.C1002;
    }
    getBrightness(button) {
      let t12;
      t12 = button.colorBrightness;
      return t12 == null ? this.colorScheme.brightness : t12;
    }
    getTextTheme(button) {
      let t12;
      t12 = button.textTheme;
      return t12 == null ? this.textTheme : t12;
    }
    getDisabledTextColor(button) {
      if (MaterialStatePropertyLOfColorL().is(button.textColor)) return button.textColor;
      if (button.disabledTextColor != null) return button.disabledTextColor;
      return this.colorScheme.onSurface.withOpacity(0.38);
    }
    getDisabledFillColor(button) {
      if (button.disabledColor != null) return button.disabledColor;
      if (this[_disabledColor] != null) return this[_disabledColor];
      return this.colorScheme.onSurface.withOpacity(0.38);
    }
    getFillColor(button) {
      let t12;
      let fillColor = dart.test(button.enabled) ? button.color : button.disabledColor;
      if (fillColor != null) return fillColor;
      if (FlatButtonL().is(button) || OutlineButtonL().is(button) || dart.equals(dart.runtimeType(button), dart.wrapType(MaterialButtonL()))) return null;
      if (dart.test(button.enabled) && RaisedButtonL().is(button) && this[_buttonColor] != null) return this[_buttonColor];
      switch (this.getTextTheme(button)) {
        case C2125 || CT.C2125:
        case C2126 || CT.C2126:
        {
          return dart.test(button.enabled) ? this.colorScheme.primary : this.getDisabledFillColor(button);
        }
        case C2127 || CT.C2127:
        {
          return dart.test(button.enabled) ? (t12 = this[_buttonColor], t12 == null ? this.colorScheme.primary : t12) : this.colorScheme.onSurface.withOpacity(0.12);
        }
      }
      if (!false) dart.assertFailed(null, L97, 591, 12, "false");
      return null;
    }
    getTextColor(button) {
      if (!dart.test(button.enabled)) return this.getDisabledTextColor(button);
      if (button.textColor != null) return button.textColor;
      switch (this.getTextTheme(button)) {
        case C2125 || CT.C2125:
        {
          return dart.equals(this.getBrightness(button), ui.Brightness.dark) ? colors$.Colors.white : colors$.Colors.black87;
        }
        case C2126 || CT.C2126:
        {
          return this.colorScheme.secondary;
        }
        case C2127 || CT.C2127:
        {
          let fillColor = this.getFillColor(button);
          let fillIsDark = fillColor != null ? dart.equals(theme_data.ThemeData.estimateBrightnessForColor(fillColor), ui.Brightness.dark) : dart.equals(this.getBrightness(button), ui.Brightness.dark);
          if (fillIsDark) return colors$.Colors.white;
          if (FlatButtonL().is(button) || OutlineButtonL().is(button)) return this.colorScheme.primary;
          return colors$.Colors.black;
        }
      }
      if (!false) dart.assertFailed(null, L97, 637, 12, "false");
      return null;
    }
    getSplashColor(button) {
      if (button.splashColor != null) return button.splashColor;
      if (this[_splashColor] != null && (RaisedButtonL().is(button) || OutlineButtonL().is(button))) return this[_splashColor];
      if (this[_splashColor] != null && FlatButtonL().is(button)) {
        switch (this.getTextTheme(button)) {
          case C2125 || CT.C2125:
          case C2126 || CT.C2126:
          {
            return this[_splashColor];
          }
          case C2127 || CT.C2127:
          {
            break;
          }
        }
      }
      return this.getTextColor(button).withOpacity(0.12);
    }
    getFocusColor(button) {
      let t12, t12$;
      t12$ = (t12 = button.focusColor, t12 == null ? this[_focusColor] : t12);
      return t12$ == null ? this.getTextColor(button).withOpacity(0.12) : t12$;
    }
    getHoverColor(button) {
      let t12, t12$;
      t12$ = (t12 = button.hoverColor, t12 == null ? this[_hoverColor] : t12);
      return t12$ == null ? this.getTextColor(button).withOpacity(0.04) : t12$;
    }
    getHighlightColor(button) {
      let t12;
      if (button.highlightColor != null) return button.highlightColor;
      switch (this.getTextTheme(button)) {
        case C2125 || CT.C2125:
        case C2126 || CT.C2126:
        {
          t12 = this[_highlightColor];
          return t12 == null ? this.getTextColor(button).withOpacity(0.16) : t12;
        }
        case C2127 || CT.C2127:
        {
          return colors$.Colors.transparent;
        }
      }
      if (!false) dart.assertFailed(null, L97, 721, 12, "false");
      return colors$.Colors.transparent;
    }
    getElevation(button) {
      if (button.elevation != null) return button.elevation;
      if (FlatButtonL().is(button)) return 0.0;
      return 2.0;
    }
    getFocusElevation(button) {
      if (button.focusElevation != null) return button.focusElevation;
      if (FlatButtonL().is(button)) return 0.0;
      if (OutlineButtonL().is(button)) return 0.0;
      return 4.0;
    }
    getHoverElevation(button) {
      if (button.hoverElevation != null) return button.hoverElevation;
      if (FlatButtonL().is(button)) return 0.0;
      if (OutlineButtonL().is(button)) return 0.0;
      return 4.0;
    }
    getHighlightElevation(button) {
      if (button.highlightElevation != null) return button.highlightElevation;
      if (FlatButtonL().is(button)) return 0.0;
      if (OutlineButtonL().is(button)) return 0.0;
      return 8.0;
    }
    getDisabledElevation(button) {
      if (button.disabledElevation != null) return button.disabledElevation;
      return 0.0;
    }
    getPadding(button) {
      if (button.padding != null) return button.padding;
      if (MaterialButtonWithIconMixinL().is(button)) return C2140 || CT.C2140;
      if (this[_padding] != null) return this[_padding];
      switch (this.getTextTheme(button)) {
        case C2125 || CT.C2125:
        case C2126 || CT.C2126:
        {
          return C277 || CT.C277;
        }
        case C2127 || CT.C2127:
        {
          return C2136 || CT.C2136;
        }
      }
      if (!false) dart.assertFailed(null, L97, 828, 12, "false");
      return edge_insets.EdgeInsets.zero;
    }
    getShape(button) {
      let t12;
      t12 = button.shape;
      return t12 == null ? this.shape : t12;
    }
    getAnimationDuration(button) {
      let t12;
      t12 = button.animationDuration;
      return t12 == null ? constants.kThemeChangeDuration : t12;
    }
    getConstraints(button) {
      return this.constraints;
    }
    getMaterialTapTargetSize(button) {
      let t12, t12$;
      t12$ = (t12 = button.materialTapTargetSize, t12 == null ? this[_materialTapTargetSize] : t12);
      return t12$ == null ? theme_data.MaterialTapTargetSize.padded : t12$;
    }
    copyWith(opts) {
      let t12, t12$, t12$0, t12$1, t12$2, t12$3, t12$4, t12$5, t12$6, t12$7, t12$8, t12$9, t12$10, t12$11, t12$12;
      let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
      let layoutBehavior = opts && 'layoutBehavior' in opts ? opts.layoutBehavior : null;
      let minWidth = opts && 'minWidth' in opts ? opts.minWidth : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let alignedDropdown = opts && 'alignedDropdown' in opts ? opts.alignedDropdown : null;
      let buttonColor = opts && 'buttonColor' in opts ? opts.buttonColor : null;
      let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
      let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
      let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
      let colorScheme = opts && 'colorScheme' in opts ? opts.colorScheme : null;
      let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
      return new button_theme.ButtonThemeData.new({textTheme: (t12 = textTheme, t12 == null ? this.textTheme : t12), layoutBehavior: (t12$ = layoutBehavior, t12$ == null ? this.layoutBehavior : t12$), minWidth: (t12$0 = minWidth, t12$0 == null ? this.minWidth : t12$0), height: (t12$1 = height, t12$1 == null ? this.height : t12$1), padding: (t12$2 = padding, t12$2 == null ? this.padding : t12$2), shape: (t12$3 = shape, t12$3 == null ? this.shape : t12$3), alignedDropdown: (t12$4 = alignedDropdown, t12$4 == null ? this.alignedDropdown : t12$4), buttonColor: (t12$5 = buttonColor, t12$5 == null ? this[_buttonColor] : t12$5), disabledColor: (t12$6 = disabledColor, t12$6 == null ? this[_disabledColor] : t12$6), focusColor: (t12$7 = focusColor, t12$7 == null ? this[_focusColor] : t12$7), hoverColor: (t12$8 = hoverColor, t12$8 == null ? this[_hoverColor] : t12$8), highlightColor: (t12$9 = highlightColor, t12$9 == null ? this[_highlightColor] : t12$9), splashColor: (t12$10 = splashColor, t12$10 == null ? this[_splashColor] : t12$10), colorScheme: (t12$11 = colorScheme, t12$11 == null ? this.colorScheme : t12$11), materialTapTargetSize: (t12$12 = materialTapTargetSize, t12$12 == null ? this[_materialTapTargetSize] : t12$12)});
    }
    _equals(other) {
      if (other == null) return false;
      if (!dart.equals(dart.runtimeType(other), this.runtimeType)) return false;
      return ButtonThemeDataL().is(other) && other.textTheme == this.textTheme && other.minWidth == this.minWidth && other.height == this.height && dart.equals(other.padding, this.padding) && dart.equals(other.shape, this.shape) && dart.equals(other.alignedDropdown, this.alignedDropdown) && dart.equals(other[_buttonColor], this[_buttonColor]) && dart.equals(other[_disabledColor], this[_disabledColor]) && dart.equals(other[_focusColor], this[_focusColor]) && dart.equals(other[_hoverColor], this[_hoverColor]) && dart.equals(other[_highlightColor], this[_highlightColor]) && dart.equals(other[_splashColor], this[_splashColor]) && dart.equals(other.colorScheme, this.colorScheme) && other[_materialTapTargetSize] == this[_materialTapTargetSize];
    }
    get hashCode() {
      return ui.hashValues(this.textTheme, this.minWidth, this.height, this.padding, this.shape, this.alignedDropdown, this[_buttonColor], this[_disabledColor], this[_focusColor], this[_hoverColor], this[_highlightColor], this[_splashColor], this.colorScheme, this[_materialTapTargetSize]);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      let defaultTheme = C2141 || CT.C2141;
      properties.add(new (EnumPropertyOfButtonTextThemeL()).new("textTheme", this.textTheme, {defaultValue: defaultTheme.textTheme}));
      properties.add(new diagnostics.DoubleProperty.new("minWidth", this.minWidth, {defaultValue: defaultTheme.minWidth}));
      properties.add(new diagnostics.DoubleProperty.new("height", this.height, {defaultValue: defaultTheme.height}));
      properties.add(new (DiagnosticsPropertyOfEdgeInsetsGeometryL()).new("padding", this.padding, {defaultValue: defaultTheme.padding}));
      properties.add(new (DiagnosticsPropertyOfShapeBorderL()).new("shape", this.shape, {defaultValue: defaultTheme.shape}));
      properties.add(new diagnostics.FlagProperty.new("alignedDropdown", {value: this.alignedDropdown, defaultValue: defaultTheme.alignedDropdown, ifTrue: "dropdown width matches button"}));
      properties.add(new colors.ColorProperty.new("buttonColor", this[_buttonColor], {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("disabledColor", this[_disabledColor], {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("focusColor", this[_focusColor], {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("hoverColor", this[_hoverColor], {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("highlightColor", this[_highlightColor], {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("splashColor", this[_splashColor], {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfColorSchemeL()).new("colorScheme", this.colorScheme, {defaultValue: defaultTheme.colorScheme}));
      properties.add(new (DiagnosticsPropertyOfMaterialTapTargetSizeL()).new("materialTapTargetSize", this[_materialTapTargetSize], {defaultValue: null}));
    }
  };
  (button_theme.ButtonThemeData.new = function(opts) {
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : C2125 || CT.C2125;
    let minWidth = opts && 'minWidth' in opts ? opts.minWidth : 88;
    let height = opts && 'height' in opts ? opts.height : 36;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let layoutBehavior = opts && 'layoutBehavior' in opts ? opts.layoutBehavior : C2130 || CT.C2130;
    let alignedDropdown = opts && 'alignedDropdown' in opts ? opts.alignedDropdown : false;
    let buttonColor = opts && 'buttonColor' in opts ? opts.buttonColor : null;
    let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let colorScheme = opts && 'colorScheme' in opts ? opts.colorScheme : null;
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    this[textTheme$2] = textTheme;
    this[minWidth$1] = minWidth;
    this[height$4] = height;
    this[layoutBehavior$] = layoutBehavior;
    this[alignedDropdown$] = alignedDropdown;
    this[colorScheme$0] = colorScheme;
    if (!(textTheme != null)) dart.assertFailed(null, L97, 277, 15, "textTheme != null");
    if (!(minWidth != null && dart.notNull(minWidth) >= 0.0)) dart.assertFailed(null, L97, 278, 15, "minWidth != null && minWidth >= 0.0");
    if (!(height != null && dart.notNull(height) >= 0.0)) dart.assertFailed(null, L97, 279, 15, "height != null && height >= 0.0");
    if (!(alignedDropdown != null)) dart.assertFailed(null, L97, 280, 15, "alignedDropdown != null");
    if (!(layoutBehavior != null)) dart.assertFailed(null, L97, 281, 15, "layoutBehavior != null");
    this[_buttonColor$] = buttonColor;
    this[_disabledColor$] = disabledColor;
    this[_focusColor$] = focusColor;
    this[_hoverColor$] = hoverColor;
    this[_highlightColor$] = highlightColor;
    this[_splashColor$] = splashColor;
    this[_padding$] = padding;
    this[_shape$0] = shape;
    this[_materialTapTargetSize$] = materialTapTargetSize;
    ;
  }).prototype = button_theme.ButtonThemeData.prototype;
  dart.addTypeTests(button_theme.ButtonThemeData);
  dart.addTypeCaches(button_theme.ButtonThemeData);
  const minWidth$1 = ButtonThemeData_minWidth;
  const height$4 = ButtonThemeData_height;
  const textTheme$2 = ButtonThemeData_textTheme;
  const layoutBehavior$ = ButtonThemeData_layoutBehavior;
  const _padding$ = ButtonThemeData__padding;
  const _shape$0 = ButtonThemeData__shape;
  const alignedDropdown$ = ButtonThemeData_alignedDropdown;
  const _buttonColor$ = ButtonThemeData__buttonColor;
  const _disabledColor$ = ButtonThemeData__disabledColor;
  const _focusColor$ = ButtonThemeData__focusColor;
  const _hoverColor$ = ButtonThemeData__hoverColor;
  const _highlightColor$ = ButtonThemeData__highlightColor;
  const _splashColor$ = ButtonThemeData__splashColor;
  const colorScheme$0 = ButtonThemeData_colorScheme;
  const _materialTapTargetSize$ = ButtonThemeData__materialTapTargetSize;
  dart.setMethodSignature(button_theme.ButtonThemeData, () => ({
    __proto__: dart.getMethods(button_theme.ButtonThemeData.__proto__),
    getBrightness: dart.fnType(dart.legacy(ui.Brightness), [dart.legacy(material_button.MaterialButton)]),
    getTextTheme: dart.fnType(dart.legacy(button_theme.ButtonTextTheme), [dart.legacy(material_button.MaterialButton)]),
    getDisabledTextColor: dart.fnType(dart.legacy(ui.Color), [dart.legacy(material_button.MaterialButton)]),
    getDisabledFillColor: dart.fnType(dart.legacy(ui.Color), [dart.legacy(material_button.MaterialButton)]),
    getFillColor: dart.fnType(dart.legacy(ui.Color), [dart.legacy(material_button.MaterialButton)]),
    getTextColor: dart.fnType(dart.legacy(ui.Color), [dart.legacy(material_button.MaterialButton)]),
    getSplashColor: dart.fnType(dart.legacy(ui.Color), [dart.legacy(material_button.MaterialButton)]),
    getFocusColor: dart.fnType(dart.legacy(ui.Color), [dart.legacy(material_button.MaterialButton)]),
    getHoverColor: dart.fnType(dart.legacy(ui.Color), [dart.legacy(material_button.MaterialButton)]),
    getHighlightColor: dart.fnType(dart.legacy(ui.Color), [dart.legacy(material_button.MaterialButton)]),
    getElevation: dart.fnType(dart.legacy(core.double), [dart.legacy(material_button.MaterialButton)]),
    getFocusElevation: dart.fnType(dart.legacy(core.double), [dart.legacy(material_button.MaterialButton)]),
    getHoverElevation: dart.fnType(dart.legacy(core.double), [dart.legacy(material_button.MaterialButton)]),
    getHighlightElevation: dart.fnType(dart.legacy(core.double), [dart.legacy(material_button.MaterialButton)]),
    getDisabledElevation: dart.fnType(dart.legacy(core.double), [dart.legacy(material_button.MaterialButton)]),
    getPadding: dart.fnType(dart.legacy(edge_insets.EdgeInsetsGeometry), [dart.legacy(material_button.MaterialButton)]),
    getShape: dart.fnType(dart.legacy(borders.ShapeBorder), [dart.legacy(material_button.MaterialButton)]),
    getAnimationDuration: dart.fnType(dart.legacy(core.Duration), [dart.legacy(material_button.MaterialButton)]),
    getConstraints: dart.fnType(dart.legacy(box.BoxConstraints), [dart.legacy(material_button.MaterialButton)]),
    getMaterialTapTargetSize: dart.fnType(dart.legacy(theme_data.MaterialTapTargetSize), [dart.legacy(material_button.MaterialButton)]),
    copyWith: dart.fnType(dart.legacy(button_theme.ButtonThemeData), [], {alignedDropdown: dart.legacy(core.bool), buttonColor: dart.legacy(ui.Color), colorScheme: dart.legacy(color_scheme.ColorScheme), disabledColor: dart.legacy(ui.Color), focusColor: dart.legacy(ui.Color), height: dart.legacy(core.double), highlightColor: dart.legacy(ui.Color), hoverColor: dart.legacy(ui.Color), layoutBehavior: dart.legacy(button_theme.ButtonBarLayoutBehavior), materialTapTargetSize: dart.legacy(theme_data.MaterialTapTargetSize), minWidth: dart.legacy(core.double), padding: dart.legacy(edge_insets.EdgeInsetsGeometry), shape: dart.legacy(borders.ShapeBorder), splashColor: dart.legacy(ui.Color), textTheme: dart.legacy(button_theme.ButtonTextTheme)}, {}),
    _equals: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    [$_equals]: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    debugFillProperties: dart.fnType(dart.void, [dart.legacy(diagnostics.DiagnosticPropertiesBuilder)])
  }));
  dart.setGetterSignature(button_theme.ButtonThemeData, () => ({
    __proto__: dart.getGetters(button_theme.ButtonThemeData.__proto__),
    constraints: dart.legacy(box.BoxConstraints),
    padding: dart.legacy(edge_insets.EdgeInsetsGeometry),
    shape: dart.legacy(borders.ShapeBorder),
    hashCode: dart.legacy(core.int),
    [$hashCode]: dart.legacy(core.int)
  }));
  dart.setLibraryUri(button_theme.ButtonThemeData, L96);
  dart.setFieldSignature(button_theme.ButtonThemeData, () => ({
    __proto__: dart.getFields(button_theme.ButtonThemeData.__proto__),
    minWidth: dart.finalFieldType(dart.legacy(core.double)),
    height: dart.finalFieldType(dart.legacy(core.double)),
    textTheme: dart.finalFieldType(dart.legacy(button_theme.ButtonTextTheme)),
    layoutBehavior: dart.finalFieldType(dart.legacy(button_theme.ButtonBarLayoutBehavior)),
    [_padding]: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsetsGeometry)),
    [_shape$]: dart.finalFieldType(dart.legacy(borders.ShapeBorder)),
    alignedDropdown: dart.finalFieldType(dart.legacy(core.bool)),
    [_buttonColor]: dart.finalFieldType(dart.legacy(ui.Color)),
    [_disabledColor]: dart.finalFieldType(dart.legacy(ui.Color)),
    [_focusColor]: dart.finalFieldType(dart.legacy(ui.Color)),
    [_hoverColor]: dart.finalFieldType(dart.legacy(ui.Color)),
    [_highlightColor]: dart.finalFieldType(dart.legacy(ui.Color)),
    [_splashColor]: dart.finalFieldType(dart.legacy(ui.Color)),
    colorScheme: dart.finalFieldType(dart.legacy(color_scheme.ColorScheme)),
    [_materialTapTargetSize]: dart.finalFieldType(dart.legacy(theme_data.MaterialTapTargetSize))
  }));
  dart.defineExtensionMethods(button_theme.ButtonThemeData, ['_equals']);
  dart.defineExtensionAccessors(button_theme.ButtonThemeData, ['hashCode']);
  const Object_Diagnosticable$36$23 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$23.new = function() {
  }).prototype = Object_Diagnosticable$36$23.prototype;
  dart.applyMixin(Object_Diagnosticable$36$23, diagnostics.Diagnosticable);
  button_bar_theme.ButtonBarThemeData = class ButtonBarThemeData extends Object_Diagnosticable$36$23 {
    get alignment() {
      return this[alignment$1];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get mainAxisSize() {
      return this[mainAxisSize$];
    }
    set mainAxisSize(value) {
      super.mainAxisSize = value;
    }
    get buttonTextTheme() {
      return this[buttonTextTheme$];
    }
    set buttonTextTheme(value) {
      super.buttonTextTheme = value;
    }
    get buttonMinWidth() {
      return this[buttonMinWidth$];
    }
    set buttonMinWidth(value) {
      super.buttonMinWidth = value;
    }
    get buttonHeight() {
      return this[buttonHeight$];
    }
    set buttonHeight(value) {
      super.buttonHeight = value;
    }
    get buttonPadding() {
      return this[buttonPadding$0];
    }
    set buttonPadding(value) {
      super.buttonPadding = value;
    }
    get buttonAlignedDropdown() {
      return this[buttonAlignedDropdown$];
    }
    set buttonAlignedDropdown(value) {
      super.buttonAlignedDropdown = value;
    }
    get layoutBehavior() {
      return this[layoutBehavior$0];
    }
    set layoutBehavior(value) {
      super.layoutBehavior = value;
    }
    get overflowDirection() {
      return this[overflowDirection$];
    }
    set overflowDirection(value) {
      super.overflowDirection = value;
    }
    copyWith(opts) {
      let t12, t12$, t12$0, t12$1, t12$2, t12$3, t12$4, t12$5, t12$6;
      let alignment = opts && 'alignment' in opts ? opts.alignment : null;
      let mainAxisSize = opts && 'mainAxisSize' in opts ? opts.mainAxisSize : null;
      let buttonTextTheme = opts && 'buttonTextTheme' in opts ? opts.buttonTextTheme : null;
      let buttonMinWidth = opts && 'buttonMinWidth' in opts ? opts.buttonMinWidth : null;
      let buttonHeight = opts && 'buttonHeight' in opts ? opts.buttonHeight : null;
      let buttonPadding = opts && 'buttonPadding' in opts ? opts.buttonPadding : null;
      let buttonAlignedDropdown = opts && 'buttonAlignedDropdown' in opts ? opts.buttonAlignedDropdown : null;
      let layoutBehavior = opts && 'layoutBehavior' in opts ? opts.layoutBehavior : null;
      let overflowDirection = opts && 'overflowDirection' in opts ? opts.overflowDirection : null;
      return new button_bar_theme.ButtonBarThemeData.new({alignment: (t12 = alignment, t12 == null ? this.alignment : t12), mainAxisSize: (t12$ = mainAxisSize, t12$ == null ? this.mainAxisSize : t12$), buttonTextTheme: (t12$0 = buttonTextTheme, t12$0 == null ? this.buttonTextTheme : t12$0), buttonMinWidth: (t12$1 = buttonMinWidth, t12$1 == null ? this.buttonMinWidth : t12$1), buttonHeight: (t12$2 = buttonHeight, t12$2 == null ? this.buttonHeight : t12$2), buttonPadding: (t12$3 = buttonPadding, t12$3 == null ? this.buttonPadding : t12$3), buttonAlignedDropdown: (t12$4 = buttonAlignedDropdown, t12$4 == null ? this.buttonAlignedDropdown : t12$4), layoutBehavior: (t12$5 = layoutBehavior, t12$5 == null ? this.layoutBehavior : t12$5), overflowDirection: (t12$6 = overflowDirection, t12$6 == null ? this.overflowDirection : t12$6)});
    }
    static lerp(a, b, t) {
      let t12, t12$, t12$0, t12$1, t12$2, t12$3;
      if (!(t != null)) dart.assertFailed(null, L98, 148, 12, "t != null");
      if (a == null && b == null) return null;
      return new button_bar_theme.ButtonBarThemeData.new({alignment: dart.notNull(t) < 0.5 ? a.alignment : b.alignment, mainAxisSize: dart.notNull(t) < 0.5 ? a.mainAxisSize : b.mainAxisSize, buttonTextTheme: dart.notNull(t) < 0.5 ? a.buttonTextTheme : b.buttonTextTheme, buttonMinWidth: ui.lerpDouble((t12 = a, t12 == null ? null : t12.buttonMinWidth), (t12$ = b, t12$ == null ? null : t12$.buttonMinWidth), t), buttonHeight: ui.lerpDouble((t12$0 = a, t12$0 == null ? null : t12$0.buttonHeight), (t12$1 = b, t12$1 == null ? null : t12$1.buttonHeight), t), buttonPadding: edge_insets.EdgeInsetsGeometry.lerp((t12$2 = a, t12$2 == null ? null : t12$2.buttonPadding), (t12$3 = b, t12$3 == null ? null : t12$3.buttonPadding), t), buttonAlignedDropdown: dart.notNull(t) < 0.5 ? a.buttonAlignedDropdown : b.buttonAlignedDropdown, layoutBehavior: dart.notNull(t) < 0.5 ? a.layoutBehavior : b.layoutBehavior, overflowDirection: dart.notNull(t) < 0.5 ? a.overflowDirection : b.overflowDirection});
    }
    get hashCode() {
      return ui.hashValues(this.alignment, this.mainAxisSize, this.buttonTextTheme, this.buttonMinWidth, this.buttonHeight, this.buttonPadding, this.buttonAlignedDropdown, this.layoutBehavior, this.overflowDirection);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this.runtimeType)) return false;
      return ButtonBarThemeDataL().is(other) && other.alignment == this.alignment && other.mainAxisSize == this.mainAxisSize && other.buttonTextTheme == this.buttonTextTheme && other.buttonMinWidth == this.buttonMinWidth && other.buttonHeight == this.buttonHeight && dart.equals(other.buttonPadding, this.buttonPadding) && dart.equals(other.buttonAlignedDropdown, this.buttonAlignedDropdown) && other.layoutBehavior == this.layoutBehavior && other.overflowDirection == this.overflowDirection;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfMainAxisAlignmentL()).new("alignment", this.alignment, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfMainAxisSizeL()).new("mainAxisSize", this.mainAxisSize, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfButtonTextThemeL()).new("textTheme", this.buttonTextTheme, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("minWidth", this.buttonMinWidth, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("height", this.buttonHeight, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfEdgeInsetsGeometryL()).new("padding", this.buttonPadding, {defaultValue: null}));
      properties.add(new diagnostics.FlagProperty.new("buttonAlignedDropdown", {value: this.buttonAlignedDropdown, ifTrue: "dropdown width matches button", defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfButtonBarLayoutBehaviorL()).new("layoutBehavior", this.layoutBehavior, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfVerticalDirectionL()).new("overflowDirection", this.overflowDirection, {defaultValue: null}));
    }
  };
  (button_bar_theme.ButtonBarThemeData.new = function(opts) {
    let alignment = opts && 'alignment' in opts ? opts.alignment : null;
    let mainAxisSize = opts && 'mainAxisSize' in opts ? opts.mainAxisSize : null;
    let buttonTextTheme = opts && 'buttonTextTheme' in opts ? opts.buttonTextTheme : null;
    let buttonMinWidth = opts && 'buttonMinWidth' in opts ? opts.buttonMinWidth : null;
    let buttonHeight = opts && 'buttonHeight' in opts ? opts.buttonHeight : null;
    let buttonPadding = opts && 'buttonPadding' in opts ? opts.buttonPadding : null;
    let buttonAlignedDropdown = opts && 'buttonAlignedDropdown' in opts ? opts.buttonAlignedDropdown : null;
    let layoutBehavior = opts && 'layoutBehavior' in opts ? opts.layoutBehavior : null;
    let overflowDirection = opts && 'overflowDirection' in opts ? opts.overflowDirection : null;
    this[alignment$1] = alignment;
    this[mainAxisSize$] = mainAxisSize;
    this[buttonTextTheme$] = buttonTextTheme;
    this[buttonMinWidth$] = buttonMinWidth;
    this[buttonHeight$] = buttonHeight;
    this[buttonPadding$0] = buttonPadding;
    this[buttonAlignedDropdown$] = buttonAlignedDropdown;
    this[layoutBehavior$0] = layoutBehavior;
    this[overflowDirection$] = overflowDirection;
    if (!(buttonMinWidth == null || dart.notNull(buttonMinWidth) >= 0.0)) dart.assertFailed(null, L98, 45, 15, "buttonMinWidth == null || buttonMinWidth >= 0.0");
    if (!(buttonHeight == null || dart.notNull(buttonHeight) >= 0.0)) dart.assertFailed(null, L98, 46, 15, "buttonHeight == null || buttonHeight >= 0.0");
    ;
  }).prototype = button_bar_theme.ButtonBarThemeData.prototype;
  dart.addTypeTests(button_bar_theme.ButtonBarThemeData);
  dart.addTypeCaches(button_bar_theme.ButtonBarThemeData);
  const alignment$1 = ButtonBarThemeData_alignment;
  const mainAxisSize$ = ButtonBarThemeData_mainAxisSize;
  const buttonTextTheme$ = ButtonBarThemeData_buttonTextTheme;
  const buttonMinWidth$ = ButtonBarThemeData_buttonMinWidth;
  const buttonHeight$ = ButtonBarThemeData_buttonHeight;
  const buttonPadding$0 = ButtonBarThemeData_buttonPadding;
  const buttonAlignedDropdown$ = ButtonBarThemeData_buttonAlignedDropdown;
  const layoutBehavior$0 = ButtonBarThemeData_layoutBehavior;
  const overflowDirection$ = ButtonBarThemeData_overflowDirection;
  dart.setMethodSignature(button_bar_theme.ButtonBarThemeData, () => ({
    __proto__: dart.getMethods(button_bar_theme.ButtonBarThemeData.__proto__),
    copyWith: dart.fnType(dart.legacy(button_bar_theme.ButtonBarThemeData), [], {alignment: dart.legacy(flex.MainAxisAlignment), buttonAlignedDropdown: dart.legacy(core.bool), buttonHeight: dart.legacy(core.double), buttonMinWidth: dart.legacy(core.double), buttonPadding: dart.legacy(edge_insets.EdgeInsetsGeometry), buttonTextTheme: dart.legacy(button_theme.ButtonTextTheme), layoutBehavior: dart.legacy(button_theme.ButtonBarLayoutBehavior), mainAxisSize: dart.legacy(flex.MainAxisSize), overflowDirection: dart.legacy(basic_types.VerticalDirection)}, {}),
    _equals: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    [$_equals]: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    debugFillProperties: dart.fnType(dart.void, [dart.legacy(diagnostics.DiagnosticPropertiesBuilder)])
  }));
  dart.setGetterSignature(button_bar_theme.ButtonBarThemeData, () => ({
    __proto__: dart.getGetters(button_bar_theme.ButtonBarThemeData.__proto__),
    hashCode: dart.legacy(core.int),
    [$hashCode]: dart.legacy(core.int)
  }));
  dart.setLibraryUri(button_bar_theme.ButtonBarThemeData, L99);
  dart.setFieldSignature(button_bar_theme.ButtonBarThemeData, () => ({
    __proto__: dart.getFields(button_bar_theme.ButtonBarThemeData.__proto__),
    alignment: dart.finalFieldType(dart.legacy(flex.MainAxisAlignment)),
    mainAxisSize: dart.finalFieldType(dart.legacy(flex.MainAxisSize)),
    buttonTextTheme: dart.finalFieldType(dart.legacy(button_theme.ButtonTextTheme)),
    buttonMinWidth: dart.finalFieldType(dart.legacy(core.double)),
    buttonHeight: dart.finalFieldType(dart.legacy(core.double)),
    buttonPadding: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsetsGeometry)),
    buttonAlignedDropdown: dart.finalFieldType(dart.legacy(core.bool)),
    layoutBehavior: dart.finalFieldType(dart.legacy(button_theme.ButtonBarLayoutBehavior)),
    overflowDirection: dart.finalFieldType(dart.legacy(basic_types.VerticalDirection))
  }));
  dart.defineExtensionMethods(button_bar_theme.ButtonBarThemeData, ['_equals']);
  dart.defineExtensionAccessors(button_bar_theme.ButtonBarThemeData, ['hashCode']);
  var data$13 = dart.privateName(button_bar_theme, "ButtonBarTheme.data");
  button_bar_theme.ButtonBarTheme = class ButtonBarTheme extends framework.InheritedWidget {
    get data() {
      return this[data$13];
    }
    set data(value) {
      super.data = value;
    }
    static of(context) {
      let t12, t12$;
      let buttonBarTheme = context.dependOnInheritedWidgetOfExactType(ButtonBarThemeL());
      t12$ = (t12 = buttonBarTheme, t12 == null ? null : t12.data);
      return t12$ == null ? theme$.Theme.of(context).buttonBarTheme : t12$;
    }
    updateShouldNotify(oldWidget) {
      ButtonBarThemeL().as(oldWidget);
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (button_bar_theme.ButtonBarTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[data$13] = data;
    if (!(data != null)) dart.assertFailed(null, L98, 241, 15, "data != null");
    button_bar_theme.ButtonBarTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = button_bar_theme.ButtonBarTheme.prototype;
  dart.addTypeTests(button_bar_theme.ButtonBarTheme);
  dart.addTypeCaches(button_bar_theme.ButtonBarTheme);
  dart.setMethodSignature(button_bar_theme.ButtonBarTheme, () => ({
    __proto__: dart.getMethods(button_bar_theme.ButtonBarTheme.__proto__),
    updateShouldNotify: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)])
  }));
  dart.setLibraryUri(button_bar_theme.ButtonBarTheme, L99);
  dart.setFieldSignature(button_bar_theme.ButtonBarTheme, () => ({
    __proto__: dart.getFields(button_bar_theme.ButtonBarTheme.__proto__),
    data: dart.finalFieldType(dart.legacy(button_bar_theme.ButtonBarThemeData))
  }));
  var C2144;
  var C2145;
  var C2143;
  var C2142;
  var C2148;
  var C2149;
  var C2150;
  var C2151;
  var C2152;
  var C2147;
  var C2146;
  var C2155;
  var C2156;
  var C2154;
  var C2153;
  var C2159;
  var C2160;
  var C2158;
  var C2157;
  var C2161;
  var C2164;
  var C2165;
  var C2166;
  var C2167;
  var C2163;
  var C2162;
  var alignment$2 = dart.privateName(button_bar, "ButtonBar.alignment");
  var mainAxisSize$0 = dart.privateName(button_bar, "ButtonBar.mainAxisSize");
  var buttonTextTheme$0 = dart.privateName(button_bar, "ButtonBar.buttonTextTheme");
  var buttonMinWidth$0 = dart.privateName(button_bar, "ButtonBar.buttonMinWidth");
  var buttonHeight$0 = dart.privateName(button_bar, "ButtonBar.buttonHeight");
  var buttonPadding$1 = dart.privateName(button_bar, "ButtonBar.buttonPadding");
  var buttonAlignedDropdown$0 = dart.privateName(button_bar, "ButtonBar.buttonAlignedDropdown");
  var layoutBehavior$1 = dart.privateName(button_bar, "ButtonBar.layoutBehavior");
  var overflowDirection$0 = dart.privateName(button_bar, "ButtonBar.overflowDirection");
  var overflowButtonSpacing$ = dart.privateName(button_bar, "ButtonBar.overflowButtonSpacing");
  var children$1 = dart.privateName(button_bar, "ButtonBar.children");
  button_bar.ButtonBar = class ButtonBar extends framework.StatelessWidget {
    get alignment() {
      return this[alignment$2];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get mainAxisSize() {
      return this[mainAxisSize$0];
    }
    set mainAxisSize(value) {
      super.mainAxisSize = value;
    }
    get buttonTextTheme() {
      return this[buttonTextTheme$0];
    }
    set buttonTextTheme(value) {
      super.buttonTextTheme = value;
    }
    get buttonMinWidth() {
      return this[buttonMinWidth$0];
    }
    set buttonMinWidth(value) {
      super.buttonMinWidth = value;
    }
    get buttonHeight() {
      return this[buttonHeight$0];
    }
    set buttonHeight(value) {
      super.buttonHeight = value;
    }
    get buttonPadding() {
      return this[buttonPadding$1];
    }
    set buttonPadding(value) {
      super.buttonPadding = value;
    }
    get buttonAlignedDropdown() {
      return this[buttonAlignedDropdown$0];
    }
    set buttonAlignedDropdown(value) {
      super.buttonAlignedDropdown = value;
    }
    get layoutBehavior() {
      return this[layoutBehavior$1];
    }
    set layoutBehavior(value) {
      super.layoutBehavior = value;
    }
    get overflowDirection() {
      return this[overflowDirection$0];
    }
    set overflowDirection(value) {
      super.overflowDirection = value;
    }
    get overflowButtonSpacing() {
      return this[overflowButtonSpacing$];
    }
    set overflowButtonSpacing(value) {
      super.overflowButtonSpacing = value;
    }
    get children() {
      return this[children$1];
    }
    set children(value) {
      super.children = value;
    }
    build(context) {
      let t12, t12$, t12$0, t12$1, t12$2, t12$3, t12$4, t12$5, t12$6, t12$7, t12$8, t12$9, t12$10, t12$11, t12$12, t12$13, t12$14, t12$15;
      let parentButtonTheme = button_theme.ButtonTheme.of(context);
      let barTheme = button_bar_theme.ButtonBarTheme.of(context);
      let buttonTheme = parentButtonTheme.copyWith({textTheme: (t12$ = (t12 = this.buttonTextTheme, t12 == null ? barTheme.buttonTextTheme : t12), t12$ == null ? button_theme.ButtonTextTheme.primary : t12$), minWidth: (t12$1 = (t12$0 = this.buttonMinWidth, t12$0 == null ? barTheme.buttonMinWidth : t12$0), t12$1 == null ? 64.0 : t12$1), height: (t12$3 = (t12$2 = this.buttonHeight, t12$2 == null ? barTheme.buttonHeight : t12$2), t12$3 == null ? 36.0 : t12$3), padding: (t12$5 = (t12$4 = this.buttonPadding, t12$4 == null ? barTheme.buttonPadding : t12$4), t12$5 == null ? C1513 || CT.C1513 : t12$5), alignedDropdown: (t12$7 = (t12$6 = this.buttonAlignedDropdown, t12$6 == null ? barTheme.buttonAlignedDropdown : t12$6), t12$7 == null ? false : t12$7), layoutBehavior: (t12$9 = (t12$8 = this.layoutBehavior, t12$8 == null ? barTheme.layoutBehavior : t12$8), t12$9 == null ? button_theme.ButtonBarLayoutBehavior.padded : t12$9)});
      let paddingUnit = dart.notNull(buttonTheme.padding.horizontal) / 4.0;
      let child = new button_theme.ButtonTheme.fromButtonThemeData({data: buttonTheme, child: new button_bar._ButtonBarRow.new({mainAxisAlignment: (t12$11 = (t12$10 = this.alignment, t12$10 == null ? barTheme.alignment : t12$10), t12$11 == null ? flex.MainAxisAlignment.end : t12$11), mainAxisSize: (t12$13 = (t12$12 = this.mainAxisSize, t12$12 == null ? barTheme.mainAxisSize : t12$12), t12$13 == null ? flex.MainAxisSize.max : t12$13), overflowDirection: (t12$15 = (t12$14 = this.overflowDirection, t12$14 == null ? barTheme.overflowDirection : t12$14), t12$15 == null ? basic_types.VerticalDirection.down : t12$15), children: this.children[$map](WidgetL(), dart.fn(child => new basic.Padding.new({padding: new edge_insets.EdgeInsets.symmetric({horizontal: paddingUnit}), child: child, $creationLocationd_0dea112b090073317d4: C2142 || CT.C2142}), WidgetLToPaddingL()))[$toList](), overflowButtonSpacing: this.overflowButtonSpacing, $creationLocationd_0dea112b090073317d4: C2146 || CT.C2146}), $creationLocationd_0dea112b090073317d4: C2153 || CT.C2153});
      switch (buttonTheme.layoutBehavior) {
        case C2130 || CT.C2130:
        {
          return new basic.Padding.new({padding: new edge_insets.EdgeInsets.symmetric({vertical: 2.0 * paddingUnit, horizontal: paddingUnit}), child: child, $creationLocationd_0dea112b090073317d4: C2157 || CT.C2157});
        }
        case C2129 || CT.C2129:
        {
          return new container.Container.new({padding: new edge_insets.EdgeInsets.symmetric({horizontal: paddingUnit}), constraints: C2161 || CT.C2161, alignment: alignment.Alignment.center, child: child, $creationLocationd_0dea112b090073317d4: C2162 || CT.C2162});
        }
      }
      if (!false) dart.assertFailed(null, L100, 219, 12, "false");
      return null;
    }
  };
  (button_bar.ButtonBar.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : null;
    let mainAxisSize = opts && 'mainAxisSize' in opts ? opts.mainAxisSize : null;
    let buttonTextTheme = opts && 'buttonTextTheme' in opts ? opts.buttonTextTheme : null;
    let buttonMinWidth = opts && 'buttonMinWidth' in opts ? opts.buttonMinWidth : null;
    let buttonHeight = opts && 'buttonHeight' in opts ? opts.buttonHeight : null;
    let buttonPadding = opts && 'buttonPadding' in opts ? opts.buttonPadding : null;
    let buttonAlignedDropdown = opts && 'buttonAlignedDropdown' in opts ? opts.buttonAlignedDropdown : null;
    let layoutBehavior = opts && 'layoutBehavior' in opts ? opts.layoutBehavior : null;
    let overflowDirection = opts && 'overflowDirection' in opts ? opts.overflowDirection : null;
    let overflowButtonSpacing = opts && 'overflowButtonSpacing' in opts ? opts.overflowButtonSpacing : null;
    let children = opts && 'children' in opts ? opts.children : C1139 || CT.C1139;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[alignment$2] = alignment;
    this[mainAxisSize$0] = mainAxisSize;
    this[buttonTextTheme$0] = buttonTextTheme;
    this[buttonMinWidth$0] = buttonMinWidth;
    this[buttonHeight$0] = buttonHeight;
    this[buttonPadding$1] = buttonPadding;
    this[buttonAlignedDropdown$0] = buttonAlignedDropdown;
    this[layoutBehavior$1] = layoutBehavior;
    this[overflowDirection$0] = overflowDirection;
    this[overflowButtonSpacing$] = overflowButtonSpacing;
    this[children$1] = children;
    if (!(buttonMinWidth == null || dart.notNull(buttonMinWidth) >= 0.0)) dart.assertFailed(null, L100, 72, 15, "buttonMinWidth == null || buttonMinWidth >= 0.0");
    if (!(buttonHeight == null || dart.notNull(buttonHeight) >= 0.0)) dart.assertFailed(null, L100, 73, 15, "buttonHeight == null || buttonHeight >= 0.0");
    if (!(overflowButtonSpacing == null || dart.notNull(overflowButtonSpacing) >= 0.0)) dart.assertFailed(null, L100, 74, 15, "overflowButtonSpacing == null || overflowButtonSpacing >= 0.0");
    button_bar.ButtonBar.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = button_bar.ButtonBar.prototype;
  dart.addTypeTests(button_bar.ButtonBar);
  dart.addTypeCaches(button_bar.ButtonBar);
  dart.setMethodSignature(button_bar.ButtonBar, () => ({
    __proto__: dart.getMethods(button_bar.ButtonBar.__proto__),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(button_bar.ButtonBar, L101);
  dart.setFieldSignature(button_bar.ButtonBar, () => ({
    __proto__: dart.getFields(button_bar.ButtonBar.__proto__),
    alignment: dart.finalFieldType(dart.legacy(flex.MainAxisAlignment)),
    mainAxisSize: dart.finalFieldType(dart.legacy(flex.MainAxisSize)),
    buttonTextTheme: dart.finalFieldType(dart.legacy(button_theme.ButtonTextTheme)),
    buttonMinWidth: dart.finalFieldType(dart.legacy(core.double)),
    buttonHeight: dart.finalFieldType(dart.legacy(core.double)),
    buttonPadding: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsetsGeometry)),
    buttonAlignedDropdown: dart.finalFieldType(dart.legacy(core.bool)),
    layoutBehavior: dart.finalFieldType(dart.legacy(button_theme.ButtonBarLayoutBehavior)),
    overflowDirection: dart.finalFieldType(dart.legacy(basic_types.VerticalDirection)),
    overflowButtonSpacing: dart.finalFieldType(dart.legacy(core.double)),
    children: dart.finalFieldType(dart.legacy(core.List$(dart.legacy(framework.Widget))))
  }));
  var _name$21 = dart.privateName(basic_types, "_name");
  var C2168;
  var _name$22 = dart.privateName(flex, "_name");
  var C2169;
  var C2170;
  var C2171;
  var C2172;
  button_bar._ButtonBarRow = class _ButtonBarRow extends basic.Flex {
    createRenderObject(context) {
      return new button_bar._RenderButtonBarRow.new({direction: this.direction, mainAxisAlignment: this.mainAxisAlignment, mainAxisSize: this.mainAxisSize, crossAxisAlignment: this.crossAxisAlignment, textDirection: this.getEffectiveTextDirection(context), verticalDirection: this.verticalDirection, textBaseline: this.textBaseline, overflowButtonSpacing: this.overflowButtonSpacing});
    }
    updateRenderObject(context, renderObject) {
      let t12;
      _RenderButtonBarRowL().as(renderObject);
      t12 = renderObject;
      (() => {
        t12.direction = this.direction;
        t12.mainAxisAlignment = this.mainAxisAlignment;
        t12.mainAxisSize = this.mainAxisSize;
        t12.crossAxisAlignment = this.crossAxisAlignment;
        t12.textDirection = this.getEffectiveTextDirection(context);
        t12.verticalDirection = this.verticalDirection;
        t12.textBaseline = this.textBaseline;
        t12.overflowButtonSpacing = this.overflowButtonSpacing;
        return t12;
      })();
    }
  };
  (button_bar._ButtonBarRow.new = function(opts) {
    let children = opts && 'children' in opts ? opts.children : null;
    let direction = opts && 'direction' in opts ? opts.direction : C2168 || CT.C2168;
    let mainAxisSize = opts && 'mainAxisSize' in opts ? opts.mainAxisSize : C2169 || CT.C2169;
    let mainAxisAlignment = opts && 'mainAxisAlignment' in opts ? opts.mainAxisAlignment : C2170 || CT.C2170;
    let crossAxisAlignment = opts && 'crossAxisAlignment' in opts ? opts.crossAxisAlignment : C2171 || CT.C2171;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let overflowDirection = opts && 'overflowDirection' in opts ? opts.overflowDirection : C2172 || CT.C2172;
    let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
    let overflowButtonSpacing = opts && 'overflowButtonSpacing' in opts ? opts.overflowButtonSpacing : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this.overflowButtonSpacing = overflowButtonSpacing;
    button_bar._ButtonBarRow.__proto__.new.call(this, {children: children, direction: direction, mainAxisSize: mainAxisSize, mainAxisAlignment: mainAxisAlignment, crossAxisAlignment: crossAxisAlignment, textDirection: textDirection, verticalDirection: overflowDirection, textBaseline: textBaseline, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = button_bar._ButtonBarRow.prototype;
  dart.addTypeTests(button_bar._ButtonBarRow);
  dart.addTypeCaches(button_bar._ButtonBarRow);
  dart.setMethodSignature(button_bar._ButtonBarRow, () => ({
    __proto__: dart.getMethods(button_bar._ButtonBarRow.__proto__),
    createRenderObject: dart.fnType(dart.legacy(button_bar._RenderButtonBarRow), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(button_bar._ButtonBarRow, L101);
  dart.setFieldSignature(button_bar._ButtonBarRow, () => ({
    __proto__: dart.getFields(button_bar._ButtonBarRow.__proto__),
    overflowButtonSpacing: dart.finalFieldType(dart.legacy(core.double))
  }));
  var _hasCheckedLayoutWidth = dart.privateName(button_bar, "_hasCheckedLayoutWidth");
  var C2173;
  var C2174;
  var C2175;
  button_bar._RenderButtonBarRow = class _RenderButtonBarRow extends flex.RenderFlex {
    get constraints() {
      let t12;
      if (dart.test(this[_hasCheckedLayoutWidth])) return super.constraints;
      t12 = super.constraints;
      return t12 == null ? null : t12.copyWith({maxWidth: 1 / 0});
    }
    performLayout() {
      this[_hasCheckedLayoutWidth] = false;
      super.performLayout();
      this[_hasCheckedLayoutWidth] = true;
      if (dart.notNull(this.size.width) <= dart.notNull(this.constraints.maxWidth)) {
        super.performLayout();
      } else {
        let childConstraints = this.constraints.copyWith({minWidth: 0.0});
        let child = null;
        let currentHeight = 0.0;
        switch (this.verticalDirection) {
          case C2172 || CT.C2172:
          {
            child = this.firstChild;
            break;
          }
          case C2173 || CT.C2173:
          {
            child = this.lastChild;
            break;
          }
        }
        while (child != null) {
          let childParentData = FlexParentDataL().as(child.parentData);
          child.layout(childConstraints, {parentUsesSize: true});
          switch (this.textDirection) {
            case C238 || CT.C238:
            {
              switch (this.mainAxisAlignment) {
                case C2174 || CT.C2174:
                {
                  let midpoint = (dart.notNull(this.constraints.maxWidth) - dart.notNull(child.size.width)) / 2.0;
                  childParentData.offset = new ui.Offset.new(midpoint, currentHeight);
                  break;
                }
                case C2175 || CT.C2175:
                {
                  childParentData.offset = new ui.Offset.new(dart.notNull(this.constraints.maxWidth) - dart.notNull(child.size.width), currentHeight);
                  break;
                }
                default:
                {
                  childParentData.offset = new ui.Offset.new(0.0, currentHeight);
                  break;
                }
              }
              break;
            }
            case C237 || CT.C237:
            {
              switch (this.mainAxisAlignment) {
                case C2174 || CT.C2174:
                {
                  let midpoint = dart.notNull(this.constraints.maxWidth) / 2.0 - dart.notNull(child.size.width) / 2.0;
                  childParentData.offset = new ui.Offset.new(midpoint, currentHeight);
                  break;
                }
                case C2175 || CT.C2175:
                {
                  childParentData.offset = new ui.Offset.new(0.0, currentHeight);
                  break;
                }
                default:
                {
                  childParentData.offset = new ui.Offset.new(dart.notNull(this.constraints.maxWidth) - dart.notNull(child.size.width), currentHeight);
                  break;
                }
              }
              break;
            }
          }
          currentHeight = currentHeight + dart.notNull(child.size.height);
          switch (this.verticalDirection) {
            case C2172 || CT.C2172:
            {
              child = childParentData.nextSibling;
              break;
            }
            case C2173 || CT.C2173:
            {
              child = childParentData.previousSibling;
              break;
            }
          }
          if (this.overflowButtonSpacing != null && child != null) currentHeight = currentHeight + dart.notNull(this.overflowButtonSpacing);
        }
        this.size = this.constraints.constrain(new ui.Size.new(this.constraints.maxWidth, currentHeight));
      }
    }
  };
  (button_bar._RenderButtonBarRow.new = function(opts) {
    let children = opts && 'children' in opts ? opts.children : null;
    let direction = opts && 'direction' in opts ? opts.direction : C2168 || CT.C2168;
    let mainAxisSize = opts && 'mainAxisSize' in opts ? opts.mainAxisSize : C2169 || CT.C2169;
    let mainAxisAlignment = opts && 'mainAxisAlignment' in opts ? opts.mainAxisAlignment : C2170 || CT.C2170;
    let crossAxisAlignment = opts && 'crossAxisAlignment' in opts ? opts.crossAxisAlignment : C2171 || CT.C2171;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let verticalDirection = opts && 'verticalDirection' in opts ? opts.verticalDirection : C2172 || CT.C2172;
    let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
    let overflowButtonSpacing = opts && 'overflowButtonSpacing' in opts ? opts.overflowButtonSpacing : null;
    this[_hasCheckedLayoutWidth] = false;
    this.overflowButtonSpacing = overflowButtonSpacing;
    if (!(textDirection != null)) dart.assertFailed(null, L100, 319, 15, "textDirection != null");
    if (!(overflowButtonSpacing == null || dart.notNull(overflowButtonSpacing) >= 0)) dart.assertFailed(null, L100, 320, 15, "overflowButtonSpacing == null || overflowButtonSpacing >= 0");
    button_bar._RenderButtonBarRow.__proto__.new.call(this, {children: children, direction: direction, mainAxisSize: mainAxisSize, mainAxisAlignment: mainAxisAlignment, crossAxisAlignment: crossAxisAlignment, textDirection: textDirection, verticalDirection: verticalDirection, textBaseline: textBaseline});
    ;
  }).prototype = button_bar._RenderButtonBarRow.prototype;
  dart.addTypeTests(button_bar._RenderButtonBarRow);
  dart.addTypeCaches(button_bar._RenderButtonBarRow);
  dart.setLibraryUri(button_bar._RenderButtonBarRow, L101);
  dart.setFieldSignature(button_bar._RenderButtonBarRow, () => ({
    __proto__: dart.getFields(button_bar._RenderButtonBarRow.__proto__),
    [_hasCheckedLayoutWidth]: dart.fieldType(dart.legacy(core.bool)),
    overflowButtonSpacing: dart.fieldType(dart.legacy(core.double))
  }));
  var animationController$ = dart.privateName(bottom_sheet, "BottomSheet.animationController");
  var onClosing$ = dart.privateName(bottom_sheet, "BottomSheet.onClosing");
  var builder$ = dart.privateName(bottom_sheet, "BottomSheet.builder");
  var enableDrag$ = dart.privateName(bottom_sheet, "BottomSheet.enableDrag");
  var onDragStart$ = dart.privateName(bottom_sheet, "BottomSheet.onDragStart");
  var onDragEnd$ = dart.privateName(bottom_sheet, "BottomSheet.onDragEnd");
  var backgroundColor$16 = dart.privateName(bottom_sheet, "BottomSheet.backgroundColor");
  var elevation$20 = dart.privateName(bottom_sheet, "BottomSheet.elevation");
  var shape$18 = dart.privateName(bottom_sheet, "BottomSheet.shape");
  var clipBehavior$6 = dart.privateName(bottom_sheet, "BottomSheet.clipBehavior");
  bottom_sheet.BottomSheet = class BottomSheet extends framework.StatefulWidget {
    get animationController() {
      return this[animationController$];
    }
    set animationController(value) {
      super.animationController = value;
    }
    get onClosing() {
      return this[onClosing$];
    }
    set onClosing(value) {
      super.onClosing = value;
    }
    get builder() {
      return this[builder$];
    }
    set builder(value) {
      super.builder = value;
    }
    get enableDrag() {
      return this[enableDrag$];
    }
    set enableDrag(value) {
      super.enableDrag = value;
    }
    get onDragStart() {
      return this[onDragStart$];
    }
    set onDragStart(value) {
      super.onDragStart = value;
    }
    get onDragEnd() {
      return this[onDragEnd$];
    }
    set onDragEnd(value) {
      super.onDragEnd = value;
    }
    get backgroundColor() {
      return this[backgroundColor$16];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get elevation() {
      return this[elevation$20];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get shape() {
      return this[shape$18];
    }
    set shape(value) {
      super.shape = value;
    }
    get clipBehavior() {
      return this[clipBehavior$6];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    createState() {
      return new bottom_sheet._BottomSheetState.new();
    }
    static createAnimationController(vsync) {
      return new animation_controller.AnimationController.new({duration: bottom_sheet._bottomSheetEnterDuration, reverseDuration: bottom_sheet._bottomSheetExitDuration, debugLabel: "BottomSheet", vsync: vsync});
    }
  };
  (bottom_sheet.BottomSheet.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let animationController = opts && 'animationController' in opts ? opts.animationController : null;
    let enableDrag = opts && 'enableDrag' in opts ? opts.enableDrag : true;
    let onDragStart = opts && 'onDragStart' in opts ? opts.onDragStart : null;
    let onDragEnd = opts && 'onDragEnd' in opts ? opts.onDragEnd : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
    let onClosing = opts && 'onClosing' in opts ? opts.onClosing : null;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[animationController$] = animationController;
    this[enableDrag$] = enableDrag;
    this[onDragStart$] = onDragStart;
    this[onDragEnd$] = onDragEnd;
    this[backgroundColor$16] = backgroundColor;
    this[elevation$20] = elevation;
    this[shape$18] = shape;
    this[clipBehavior$6] = clipBehavior;
    this[onClosing$] = onClosing;
    this[builder$] = builder;
    if (!(enableDrag != null)) dart.assertFailed(null, L102, 80, 15, "enableDrag != null");
    if (!(onClosing != null)) dart.assertFailed(null, L102, 81, 15, "onClosing != null");
    if (!(builder != null)) dart.assertFailed(null, L102, 82, 15, "builder != null");
    if (!(elevation == null || dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, L102, 83, 15, "elevation == null || elevation >= 0.0");
    bottom_sheet.BottomSheet.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = bottom_sheet.BottomSheet.prototype;
  dart.addTypeTests(bottom_sheet.BottomSheet);
  dart.addTypeCaches(bottom_sheet.BottomSheet);
  dart.setMethodSignature(bottom_sheet.BottomSheet, () => ({
    __proto__: dart.getMethods(bottom_sheet.BottomSheet.__proto__),
    createState: dart.fnType(dart.legacy(bottom_sheet._BottomSheetState), [])
  }));
  dart.setLibraryUri(bottom_sheet.BottomSheet, L103);
  dart.setFieldSignature(bottom_sheet.BottomSheet, () => ({
    __proto__: dart.getFields(bottom_sheet.BottomSheet.__proto__),
    animationController: dart.finalFieldType(dart.legacy(animation_controller.AnimationController)),
    onClosing: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, []))),
    builder: dart.finalFieldType(dart.legacy(dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)]))),
    enableDrag: dart.finalFieldType(dart.legacy(core.bool)),
    onDragStart: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, [dart.legacy(drag_details.DragStartDetails)]))),
    onDragEnd: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, [dart.legacy(drag_details.DragEndDetails)], {isClosing: dart.legacy(core.bool)}, {}))),
    backgroundColor: dart.finalFieldType(dart.legacy(ui.Color)),
    elevation: dart.finalFieldType(dart.legacy(core.double)),
    shape: dart.finalFieldType(dart.legacy(borders.ShapeBorder)),
    clipBehavior: dart.finalFieldType(dart.legacy(ui.Clip))
  }));
  var _childKey = dart.privateName(bottom_sheet, "_childKey");
  var _childHeight = dart.privateName(bottom_sheet, "_childHeight");
  var _dismissUnderway = dart.privateName(bottom_sheet, "_dismissUnderway");
  var _handleDragStart = dart.privateName(bottom_sheet, "_handleDragStart");
  var _handleDragUpdate = dart.privateName(bottom_sheet, "_handleDragUpdate");
  var _handleDragEnd = dart.privateName(bottom_sheet, "_handleDragEnd");
  var C2178;
  var C2179;
  var C2177;
  var C2176;
  var C2182;
  var C2183;
  var C2184;
  var C2185;
  var C2186;
  var C2187;
  var C2181;
  var C2180;
  var C2190;
  var C2191;
  var C2192;
  var C2193;
  var C2194;
  var C2189;
  var C2188;
  bottom_sheet._BottomSheetState = class _BottomSheetState extends framework.State$(dart.legacy(bottom_sheet.BottomSheet)) {
    get [_childHeight]() {
      let renderBox = RenderBoxL().as(this[_childKey].currentContext.findRenderObject());
      return renderBox.size.height;
    }
    get [_dismissUnderway]() {
      return this.widget.animationController.status == animation.AnimationStatus.reverse;
    }
    [_handleDragStart](details) {
      let t13, t12;
      if (this.widget.onDragStart != null) {
        t12 = this.widget;
        t13 = details;
        t12.onDragStart(t13);
      }
    }
    [_handleDragUpdate](details) {
      let t13, t12;
      if (!dart.test(this.widget.enableDrag)) dart.assertFailed(null, L102, 198, 12, "widget.enableDrag");
      if (dart.test(this[_dismissUnderway])) return;
      t12 = this.widget.animationController;
      t12.value = dart.notNull(t12.value) - dart.notNull(details.primaryDelta) / dart.notNull((t13 = this[_childHeight], t13 == null ? details.primaryDelta : t13));
    }
    [_handleDragEnd](details) {
      let t14, t13, t12;
      if (!dart.test(this.widget.enableDrag)) dart.assertFailed(null, L102, 205, 12, "widget.enableDrag");
      if (dart.test(this[_dismissUnderway])) return;
      let isClosing = false;
      if (dart.notNull(details.velocity.pixelsPerSecond.dy) > 700) {
        let flingVelocity = -dart.notNull(details.velocity.pixelsPerSecond.dy) / dart.notNull(this[_childHeight]);
        if (dart.notNull(this.widget.animationController.value) > 0.0) {
          this.widget.animationController.fling({velocity: flingVelocity});
        }
        if (flingVelocity < 0.0) {
          isClosing = true;
        }
      } else if (dart.notNull(this.widget.animationController.value) < 0.5) {
        if (dart.notNull(this.widget.animationController.value) > 0.0) this.widget.animationController.fling({velocity: -1.0});
        isClosing = true;
      } else {
        this.widget.animationController.forward();
      }
      if (this.widget.onDragEnd != null) {
        t12 = this.widget;
        t13 = details;
        t14 = isClosing;
        t12.onDragEnd(t13, {isClosing: t14});
      }
      if (isClosing) {
        this.widget.onClosing();
      }
    }
    extentChanged(notification) {
      if (notification.extent == notification.minExtent) {
        this.widget.onClosing();
      }
      return false;
    }
    build(context) {
      let t12, t12$, t12$0, t12$1, t12$2, t12$3, t13, t12$4;
      let bottomSheetTheme = theme$.Theme.of(context).bottomSheetTheme;
      let color = (t12 = this.widget.backgroundColor, t12 == null ? bottomSheetTheme.backgroundColor : t12);
      let elevation = (t12$0 = (t12$ = this.widget.elevation, t12$ == null ? bottomSheetTheme.elevation : t12$), t12$0 == null ? 0.0 : t12$0);
      let shape = (t12$1 = this.widget.shape, t12$1 == null ? bottomSheetTheme.shape : t12$1);
      let clipBehavior = (t12$3 = (t12$2 = this.widget.clipBehavior, t12$2 == null ? bottomSheetTheme.clipBehavior : t12$2), t12$3 == null ? ui.Clip.none : t12$3);
      let bottomSheet = new material.Material.new({key: this[_childKey], color: color, elevation: elevation, shape: shape, clipBehavior: clipBehavior, child: new (NotificationListenerOfDraggableScrollableNotificationL()).new({onNotification: dart.bind(this, 'extentChanged'), child: (t12$4 = this.widget, t13 = context, t12$4.builder(t13)), $creationLocationd_0dea112b090073317d4: C2176 || CT.C2176}), $creationLocationd_0dea112b090073317d4: C2180 || CT.C2180});
      return !dart.test(this.widget.enableDrag) ? bottomSheet : new gesture_detector.GestureDetector.new({onVerticalDragStart: dart.bind(this, _handleDragStart), onVerticalDragUpdate: dart.bind(this, _handleDragUpdate), onVerticalDragEnd: dart.bind(this, _handleDragEnd), child: bottomSheet, excludeFromSemantics: true, $creationLocationd_0dea112b090073317d4: C2188 || CT.C2188});
    }
  };
  (bottom_sheet._BottomSheetState.new = function() {
    this[_childKey] = GlobalKeyOfStateLOfStatefulWidgetL().new({debugLabel: "BottomSheet child"});
    bottom_sheet._BottomSheetState.__proto__.new.call(this);
    ;
  }).prototype = bottom_sheet._BottomSheetState.prototype;
  dart.addTypeTests(bottom_sheet._BottomSheetState);
  dart.addTypeCaches(bottom_sheet._BottomSheetState);
  dart.setMethodSignature(bottom_sheet._BottomSheetState, () => ({
    __proto__: dart.getMethods(bottom_sheet._BottomSheetState.__proto__),
    [_handleDragStart]: dart.fnType(dart.void, [dart.legacy(drag_details.DragStartDetails)]),
    [_handleDragUpdate]: dart.fnType(dart.void, [dart.legacy(drag_details.DragUpdateDetails)]),
    [_handleDragEnd]: dart.fnType(dart.void, [dart.legacy(drag_details.DragEndDetails)]),
    extentChanged: dart.fnType(dart.legacy(core.bool), [dart.legacy(draggable_scrollable_sheet.DraggableScrollableNotification)]),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setGetterSignature(bottom_sheet._BottomSheetState, () => ({
    __proto__: dart.getGetters(bottom_sheet._BottomSheetState.__proto__),
    [_childHeight]: dart.legacy(core.double),
    [_dismissUnderway]: dart.legacy(core.bool)
  }));
  dart.setLibraryUri(bottom_sheet._BottomSheetState, L103);
  dart.setFieldSignature(bottom_sheet._BottomSheetState, () => ({
    __proto__: dart.getFields(bottom_sheet._BottomSheetState.__proto__),
    [_childKey]: dart.finalFieldType(dart.legacy(framework.GlobalKey$(dart.legacy(framework.State$(dart.legacy(framework.StatefulWidget))))))
  }));
  bottom_sheet._ModalBottomSheetLayout = class _ModalBottomSheetLayout extends shifted_box.SingleChildLayoutDelegate {
    getConstraintsForChild(constraints) {
      return new box.BoxConstraints.new({minWidth: constraints.maxWidth, maxWidth: constraints.maxWidth, minHeight: 0.0, maxHeight: dart.test(this.isScrollControlled) ? constraints.maxHeight : dart.notNull(constraints.maxHeight) * 9.0 / 16.0});
    }
    getPositionForChild(size, childSize) {
      return new ui.Offset.new(0.0, dart.notNull(size.height) - dart.notNull(childSize.height) * dart.notNull(this.progress));
    }
    shouldRelayout(oldDelegate) {
      _ModalBottomSheetLayoutL().as(oldDelegate);
      return this.progress != oldDelegate.progress;
    }
  };
  (bottom_sheet._ModalBottomSheetLayout.new = function(progress, isScrollControlled) {
    this.progress = progress;
    this.isScrollControlled = isScrollControlled;
    bottom_sheet._ModalBottomSheetLayout.__proto__.new.call(this);
    ;
  }).prototype = bottom_sheet._ModalBottomSheetLayout.prototype;
  dart.addTypeTests(bottom_sheet._ModalBottomSheetLayout);
  dart.addTypeCaches(bottom_sheet._ModalBottomSheetLayout);
  dart.setMethodSignature(bottom_sheet._ModalBottomSheetLayout, () => ({
    __proto__: dart.getMethods(bottom_sheet._ModalBottomSheetLayout.__proto__),
    shouldRelayout: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)])
  }));
  dart.setLibraryUri(bottom_sheet._ModalBottomSheetLayout, L103);
  dart.setFieldSignature(bottom_sheet._ModalBottomSheetLayout, () => ({
    __proto__: dart.getFields(bottom_sheet._ModalBottomSheetLayout.__proto__),
    progress: dart.finalFieldType(dart.legacy(core.double)),
    isScrollControlled: dart.finalFieldType(dart.legacy(core.bool))
  }));
  const _is__ModalBottomSheet_default = Symbol('_is__ModalBottomSheet_default');
  var route$0 = dart.privateName(bottom_sheet, "_ModalBottomSheet.route");
  var isScrollControlled$ = dart.privateName(bottom_sheet, "_ModalBottomSheet.isScrollControlled");
  var backgroundColor$17 = dart.privateName(bottom_sheet, "_ModalBottomSheet.backgroundColor");
  var elevation$21 = dart.privateName(bottom_sheet, "_ModalBottomSheet.elevation");
  var shape$19 = dart.privateName(bottom_sheet, "_ModalBottomSheet.shape");
  var clipBehavior$7 = dart.privateName(bottom_sheet, "_ModalBottomSheet.clipBehavior");
  var enableDrag$0 = dart.privateName(bottom_sheet, "_ModalBottomSheet.enableDrag");
  bottom_sheet._ModalBottomSheet$ = dart.generic(T => {
    var TL = () => (TL = dart.constFn(dart.legacy(T)))();
    var _ModalBottomSheetStateOfTL = () => (_ModalBottomSheetStateOfTL = dart.constFn(bottom_sheet._ModalBottomSheetState$(TL())))();
    class _ModalBottomSheet extends framework.StatefulWidget {
      get route() {
        return this[route$0];
      }
      set route(value) {
        super.route = value;
      }
      get isScrollControlled() {
        return this[isScrollControlled$];
      }
      set isScrollControlled(value) {
        super.isScrollControlled = value;
      }
      get backgroundColor() {
        return this[backgroundColor$17];
      }
      set backgroundColor(value) {
        super.backgroundColor = value;
      }
      get elevation() {
        return this[elevation$21];
      }
      set elevation(value) {
        super.elevation = value;
      }
      get shape() {
        return this[shape$19];
      }
      set shape(value) {
        super.shape = value;
      }
      get clipBehavior() {
        return this[clipBehavior$7];
      }
      set clipBehavior(value) {
        super.clipBehavior = value;
      }
      get enableDrag() {
        return this[enableDrag$0];
      }
      set enableDrag(value) {
        super.enableDrag = value;
      }
      createState() {
        return new (_ModalBottomSheetStateOfTL()).new();
      }
    }
    (_ModalBottomSheet.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let route = opts && 'route' in opts ? opts.route : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
      let isScrollControlled = opts && 'isScrollControlled' in opts ? opts.isScrollControlled : false;
      let enableDrag = opts && 'enableDrag' in opts ? opts.enableDrag : true;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[route$0] = route;
      this[backgroundColor$17] = backgroundColor;
      this[elevation$21] = elevation;
      this[shape$19] = shape;
      this[clipBehavior$7] = clipBehavior;
      this[isScrollControlled$] = isScrollControlled;
      this[enableDrag$0] = enableDrag;
      if (!(isScrollControlled != null)) dart.assertFailed(null, L102, 318, 15, "isScrollControlled != null");
      if (!(enableDrag != null)) dart.assertFailed(null, L102, 319, 15, "enableDrag != null");
      _ModalBottomSheet.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = _ModalBottomSheet.prototype;
    dart.addTypeTests(_ModalBottomSheet);
    _ModalBottomSheet.prototype[_is__ModalBottomSheet_default] = true;
    dart.addTypeCaches(_ModalBottomSheet);
    dart.setMethodSignature(_ModalBottomSheet, () => ({
      __proto__: dart.getMethods(_ModalBottomSheet.__proto__),
      createState: dart.fnType(dart.legacy(bottom_sheet._ModalBottomSheetState$(dart.legacy(T))), [])
    }));
    dart.setLibraryUri(_ModalBottomSheet, L103);
    dart.setFieldSignature(_ModalBottomSheet, () => ({
      __proto__: dart.getFields(_ModalBottomSheet.__proto__),
      route: dart.finalFieldType(dart.legacy(bottom_sheet._ModalBottomSheetRoute$(dart.legacy(T)))),
      isScrollControlled: dart.finalFieldType(dart.legacy(core.bool)),
      backgroundColor: dart.finalFieldType(dart.legacy(ui.Color)),
      elevation: dart.finalFieldType(dart.legacy(core.double)),
      shape: dart.finalFieldType(dart.legacy(borders.ShapeBorder)),
      clipBehavior: dart.finalFieldType(dart.legacy(ui.Clip)),
      enableDrag: dart.finalFieldType(dart.legacy(core.bool))
    }));
    return _ModalBottomSheet;
  });
  bottom_sheet._ModalBottomSheet = bottom_sheet._ModalBottomSheet$();
  dart.addTypeTests(bottom_sheet._ModalBottomSheet, _is__ModalBottomSheet_default);
  var _getRouteLabel = dart.privateName(bottom_sheet, "_getRouteLabel");
  var _animationController = dart.privateName(bottom_sheet, "_animationController");
  var C2197;
  var C2198;
  var C2199;
  var C2200;
  var C2201;
  var C2202;
  var C2203;
  var C2204;
  var C2205;
  var C2206;
  var C2196;
  var C2195;
  var C2209;
  var C2210;
  var C2208;
  var C2207;
  var C2213;
  var C2212;
  var C2211;
  var C2216;
  var C2217;
  var C2218;
  var C2219;
  var C2220;
  var C2215;
  var C2214;
  var C2223;
  var C2224;
  var C2225;
  var C2222;
  var C2221;
  const _is__ModalBottomSheetState_default = Symbol('_is__ModalBottomSheetState_default');
  bottom_sheet._ModalBottomSheetState$ = dart.generic(T => {
    class _ModalBottomSheetState extends framework.State$(dart.legacy(bottom_sheet._ModalBottomSheet$(dart.legacy(T)))) {
      [_getRouteLabel](localizations) {
        switch (theme$.Theme.of(this.context).platform) {
          case C48 || CT.C48:
          case C49 || CT.C49:
          {
            return "";
          }
          case C44 || CT.C44:
          case C45 || CT.C45:
          case C46 || CT.C46:
          case C47 || CT.C47:
          {
            return localizations.dialogLabel;
          }
        }
        return null;
      }
      handleDragStart(details) {
        this.animationCurve = curves.Curves.linear;
      }
      handleDragEnd(details, opts) {
        let isClosing = opts && 'isClosing' in opts ? opts.isClosing : null;
        this.animationCurve = new bottom_sheet._BottomSheetSuspendedCurve.new(this.widget.route.animation.value, {curve: bottom_sheet._modalBottomSheetCurve});
      }
      build(context) {
        if (!dart.test(debug.debugCheckHasMediaQuery(context))) dart.assertFailed(null, L102, 366, 12, "debugCheckHasMediaQuery(context)");
        if (!dart.test(debug$0.debugCheckHasMaterialLocalizations(context))) dart.assertFailed(null, L102, 367, 12, "debugCheckHasMaterialLocalizations(context)");
        let mediaQuery = media_query.MediaQuery.of(context);
        let localizations = material_localizations.MaterialLocalizations.of(context);
        let routeLabel = this[_getRouteLabel](localizations);
        return new transitions.AnimatedBuilder.new({animation: this.widget.route.animation, child: new bottom_sheet.BottomSheet.new({animationController: this.widget.route[_animationController], onClosing: dart.fn(() => {
              if (dart.test(this.widget.route.isCurrent)) {
                navigator.Navigator.pop(ObjectL(), context);
              }
            }, VoidToNullN()), builder: this.widget.route.builder, backgroundColor: this.widget.backgroundColor, elevation: this.widget.elevation, shape: this.widget.shape, clipBehavior: this.widget.clipBehavior, enableDrag: this.widget.enableDrag, onDragStart: dart.bind(this, 'handleDragStart'), onDragEnd: dart.bind(this, 'handleDragEnd'), $creationLocationd_0dea112b090073317d4: C2195 || CT.C2195}), builder: dart.fn((context, child) => {
            let animationValue = this.animationCurve.transform(dart.test(mediaQuery.accessibleNavigation) ? 1.0 : this.widget.route.animation.value);
            return new basic.Semantics.new({scopesRoute: true, namesRoute: true, label: routeLabel, explicitChildNodes: true, child: new basic.ClipRect.new({child: new basic.CustomSingleChildLayout.new({delegate: new bottom_sheet._ModalBottomSheetLayout.new(animationValue, this.widget.isScrollControlled), child: child, $creationLocationd_0dea112b090073317d4: C2207 || CT.C2207}), $creationLocationd_0dea112b090073317d4: C2211 || CT.C2211}), $creationLocationd_0dea112b090073317d4: C2214 || CT.C2214});
          }, BuildContextLAndWidgetLToSemanticsL()), $creationLocationd_0dea112b090073317d4: C2221 || CT.C2221});
      }
    }
    (_ModalBottomSheetState.new = function() {
      this.animationCurve = bottom_sheet._modalBottomSheetCurve;
      _ModalBottomSheetState.__proto__.new.call(this);
      ;
    }).prototype = _ModalBottomSheetState.prototype;
    dart.addTypeTests(_ModalBottomSheetState);
    _ModalBottomSheetState.prototype[_is__ModalBottomSheetState_default] = true;
    dart.addTypeCaches(_ModalBottomSheetState);
    dart.setMethodSignature(_ModalBottomSheetState, () => ({
      __proto__: dart.getMethods(_ModalBottomSheetState.__proto__),
      [_getRouteLabel]: dart.fnType(dart.legacy(core.String), [dart.legacy(material_localizations.MaterialLocalizations)]),
      handleDragStart: dart.fnType(dart.void, [dart.legacy(drag_details.DragStartDetails)]),
      handleDragEnd: dart.fnType(dart.void, [dart.legacy(drag_details.DragEndDetails)], {isClosing: dart.legacy(core.bool)}, {}),
      build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
    }));
    dart.setLibraryUri(_ModalBottomSheetState, L103);
    dart.setFieldSignature(_ModalBottomSheetState, () => ({
      __proto__: dart.getFields(_ModalBottomSheetState.__proto__),
      animationCurve: dart.fieldType(dart.legacy(curves.ParametricCurve$(dart.legacy(core.double))))
    }));
    return _ModalBottomSheetState;
  });
  bottom_sheet._ModalBottomSheetState = bottom_sheet._ModalBottomSheetState$();
  dart.addTypeTests(bottom_sheet._ModalBottomSheetState, _is__ModalBottomSheetState_default);
  var C2228;
  var C2229;
  var C2230;
  var C2231;
  var C2232;
  var C2233;
  var C2234;
  var C2227;
  var C2226;
  var C2237;
  var C2238;
  var C2239;
  var C2236;
  var C2235;
  var C2242;
  var C2243;
  var C2241;
  var C2240;
  const _is__ModalBottomSheetRoute_default = Symbol('_is__ModalBottomSheetRoute_default');
  var barrierLabel$ = dart.privateName(bottom_sheet, "_ModalBottomSheetRoute.barrierLabel");
  bottom_sheet._ModalBottomSheetRoute$ = dart.generic(T => {
    var TL = () => (TL = dart.constFn(dart.legacy(T)))();
    var _ModalBottomSheetOfTL = () => (_ModalBottomSheetOfTL = dart.constFn(bottom_sheet._ModalBottomSheet$(TL())))();
    class _ModalBottomSheetRoute extends routes.PopupRoute$(dart.legacy(T)) {
      get barrierLabel() {
        return this[barrierLabel$];
      }
      set barrierLabel(value) {
        super.barrierLabel = value;
      }
      get transitionDuration() {
        return bottom_sheet._bottomSheetEnterDuration;
      }
      get reverseTransitionDuration() {
        return bottom_sheet._bottomSheetExitDuration;
      }
      get barrierDismissible() {
        return this.isDismissible;
      }
      get barrierColor() {
        let t12;
        t12 = this.modalBarrierColor;
        return t12 == null ? colors$.Colors.black54 : t12;
      }
      createAnimationController() {
        if (!(this[_animationController] == null)) dart.assertFailed(null, L102, 462, 12, "_animationController == null");
        this[_animationController] = bottom_sheet.BottomSheet.createAnimationController(this.navigator.overlay);
        return this[_animationController];
      }
      buildPage(context, animation, secondaryAnimation) {
        let t12, t12$, t13, t12$0, t13$, t12$1, t13$0, t12$2, t13$1, t12$3;
        let sheetTheme = (t12$ = (t12 = this.theme, t12 == null ? null : t12.bottomSheetTheme), t12$ == null ? theme$.Theme.of(context).bottomSheetTheme : t12$);
        let bottomSheet = media_query.MediaQuery.removePadding({context: context, removeTop: true, child: new (_ModalBottomSheetOfTL()).new({route: this, backgroundColor: (t12$1 = (t12$0 = this.backgroundColor, t12$0 == null ? (t13 = sheetTheme, t13 == null ? null : t13.modalBackgroundColor) : t12$0), t12$1 == null ? (t13$ = sheetTheme, t13$ == null ? null : t13$.backgroundColor) : t12$1), elevation: (t12$3 = (t12$2 = this.elevation, t12$2 == null ? (t13$0 = sheetTheme, t13$0 == null ? null : t13$0.modalElevation) : t12$2), t12$3 == null ? (t13$1 = sheetTheme, t13$1 == null ? null : t13$1.elevation) : t12$3), shape: this.shape, clipBehavior: this.clipBehavior, isScrollControlled: this.isScrollControlled, enableDrag: this.enableDrag, $creationLocationd_0dea112b090073317d4: C2226 || CT.C2226}), $creationLocationd_0dea112b090073317d4: C2235 || CT.C2235});
        if (this.theme != null) bottomSheet = new theme$.Theme.new({data: this.theme, child: bottomSheet, $creationLocationd_0dea112b090073317d4: C2240 || CT.C2240});
        return bottomSheet;
      }
    }
    (_ModalBottomSheetRoute.new = function(opts) {
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let theme = opts && 'theme' in opts ? opts.theme : null;
      let barrierLabel = opts && 'barrierLabel' in opts ? opts.barrierLabel : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
      let modalBarrierColor = opts && 'modalBarrierColor' in opts ? opts.modalBarrierColor : null;
      let isDismissible = opts && 'isDismissible' in opts ? opts.isDismissible : true;
      let enableDrag = opts && 'enableDrag' in opts ? opts.enableDrag : true;
      let isScrollControlled = opts && 'isScrollControlled' in opts ? opts.isScrollControlled : null;
      let settings = opts && 'settings' in opts ? opts.settings : null;
      this[_animationController] = null;
      this.builder = builder;
      this.theme = theme;
      this[barrierLabel$] = barrierLabel;
      this.backgroundColor = backgroundColor;
      this.elevation = elevation;
      this.shape = shape;
      this.clipBehavior = clipBehavior;
      this.modalBarrierColor = modalBarrierColor;
      this.isDismissible = isDismissible;
      this.enableDrag = enableDrag;
      this.isScrollControlled = isScrollControlled;
      if (!(isScrollControlled != null)) dart.assertFailed(null, L102, 427, 15, "isScrollControlled != null");
      if (!(isDismissible != null)) dart.assertFailed(null, L102, 428, 15, "isDismissible != null");
      if (!(enableDrag != null)) dart.assertFailed(null, L102, 429, 15, "enableDrag != null");
      _ModalBottomSheetRoute.__proto__.new.call(this, {settings: settings});
      ;
    }).prototype = _ModalBottomSheetRoute.prototype;
    dart.addTypeTests(_ModalBottomSheetRoute);
    _ModalBottomSheetRoute.prototype[_is__ModalBottomSheetRoute_default] = true;
    dart.addTypeCaches(_ModalBottomSheetRoute);
    dart.setMethodSignature(_ModalBottomSheetRoute, () => ({
      __proto__: dart.getMethods(_ModalBottomSheetRoute.__proto__),
      buildPage: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext), dart.legacy(animation.Animation$(dart.legacy(core.double))), dart.legacy(animation.Animation$(dart.legacy(core.double)))])
    }));
    dart.setGetterSignature(_ModalBottomSheetRoute, () => ({
      __proto__: dart.getGetters(_ModalBottomSheetRoute.__proto__),
      transitionDuration: dart.legacy(core.Duration),
      barrierDismissible: dart.legacy(core.bool),
      barrierColor: dart.legacy(ui.Color)
    }));
    dart.setLibraryUri(_ModalBottomSheetRoute, L103);
    dart.setFieldSignature(_ModalBottomSheetRoute, () => ({
      __proto__: dart.getFields(_ModalBottomSheetRoute.__proto__),
      builder: dart.finalFieldType(dart.legacy(dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)]))),
      theme: dart.finalFieldType(dart.legacy(theme_data.ThemeData)),
      isScrollControlled: dart.finalFieldType(dart.legacy(core.bool)),
      backgroundColor: dart.finalFieldType(dart.legacy(ui.Color)),
      elevation: dart.finalFieldType(dart.legacy(core.double)),
      shape: dart.finalFieldType(dart.legacy(borders.ShapeBorder)),
      clipBehavior: dart.finalFieldType(dart.legacy(ui.Clip)),
      modalBarrierColor: dart.finalFieldType(dart.legacy(ui.Color)),
      isDismissible: dart.finalFieldType(dart.legacy(core.bool)),
      enableDrag: dart.finalFieldType(dart.legacy(core.bool)),
      barrierLabel: dart.finalFieldType(dart.legacy(core.String)),
      [_animationController]: dart.fieldType(dart.legacy(animation_controller.AnimationController))
    }));
    return _ModalBottomSheetRoute;
  });
  bottom_sheet._ModalBottomSheetRoute = bottom_sheet._ModalBottomSheetRoute$();
  dart.addTypeTests(bottom_sheet._ModalBottomSheetRoute, _is__ModalBottomSheetRoute_default);
  var C2244;
  var startingPoint$ = dart.privateName(bottom_sheet, "_BottomSheetSuspendedCurve.startingPoint");
  var curve$ = dart.privateName(bottom_sheet, "_BottomSheetSuspendedCurve.curve");
  bottom_sheet._BottomSheetSuspendedCurve = class _BottomSheetSuspendedCurve extends curves.ParametricCurve$(dart.legacy(core.double)) {
    get startingPoint() {
      return this[startingPoint$];
    }
    set startingPoint(value) {
      super.startingPoint = value;
    }
    get curve() {
      return this[curve$];
    }
    set curve(value) {
      super.curve = value;
    }
    transform(t) {
      if (!(dart.notNull(t) >= 0.0 && dart.notNull(t) <= 1.0)) dart.assertFailed(null, L102, 527, 12, "t >= 0.0 && t <= 1.0");
      if (!(dart.notNull(this.startingPoint) >= 0.0 && dart.notNull(this.startingPoint) <= 1.0)) dart.assertFailed(null, L102, 528, 12, "startingPoint >= 0.0 && startingPoint <= 1.0");
      if (dart.notNull(t) < dart.notNull(this.startingPoint)) {
        return t;
      }
      if (t === 1.0) {
        return t;
      }
      let curveProgress = (dart.notNull(t) - dart.notNull(this.startingPoint)) / (1 - dart.notNull(this.startingPoint));
      let transformed = this.curve.transform(curveProgress);
      return ui.lerpDouble(this.startingPoint, 1, transformed);
    }
    toString() {
      return dart.str(diagnostics.describeIdentity(this)) + "(" + dart.str(this.startingPoint) + ", " + dart.str(this.curve) + ")";
    }
  };
  (bottom_sheet._BottomSheetSuspendedCurve.new = function(startingPoint, opts) {
    let curve = opts && 'curve' in opts ? opts.curve : C2244 || CT.C2244;
    this[startingPoint$] = startingPoint;
    this[curve$] = curve;
    if (!(startingPoint != null)) dart.assertFailed(null, L102, 514, 15, "startingPoint != null");
    if (!(curve != null)) dart.assertFailed(null, L102, 515, 15, "curve != null");
    bottom_sheet._BottomSheetSuspendedCurve.__proto__.new.call(this);
    ;
  }).prototype = bottom_sheet._BottomSheetSuspendedCurve.prototype;
  dart.addTypeTests(bottom_sheet._BottomSheetSuspendedCurve);
  dart.addTypeCaches(bottom_sheet._BottomSheetSuspendedCurve);
  dart.setLibraryUri(bottom_sheet._BottomSheetSuspendedCurve, L103);
  dart.setFieldSignature(bottom_sheet._BottomSheetSuspendedCurve, () => ({
    __proto__: dart.getFields(bottom_sheet._BottomSheetSuspendedCurve.__proto__),
    startingPoint: dart.finalFieldType(dart.legacy(core.double)),
    curve: dart.finalFieldType(dart.legacy(curves.Curve))
  }));
  dart.defineExtensionMethods(bottom_sheet._BottomSheetSuspendedCurve, ['toString']);
  bottom_sheet.showModalBottomSheet = function showModalBottomSheet(T, opts) {
    let context = opts && 'context' in opts ? opts.context : null;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
    let barrierColor = opts && 'barrierColor' in opts ? opts.barrierColor : null;
    let isScrollControlled = opts && 'isScrollControlled' in opts ? opts.isScrollControlled : false;
    let useRootNavigator = opts && 'useRootNavigator' in opts ? opts.useRootNavigator : false;
    let isDismissible = opts && 'isDismissible' in opts ? opts.isDismissible : true;
    let enableDrag = opts && 'enableDrag' in opts ? opts.enableDrag : true;
    let routeSettings = opts && 'routeSettings' in opts ? opts.routeSettings : null;
    if (!(context != null)) dart.assertFailed(null, L102, 657, 10, "context != null");
    if (!(builder != null)) dart.assertFailed(null, L102, 658, 10, "builder != null");
    if (!(isScrollControlled != null)) dart.assertFailed(null, L102, 659, 10, "isScrollControlled != null");
    if (!(useRootNavigator != null)) dart.assertFailed(null, L102, 660, 10, "useRootNavigator != null");
    if (!(isDismissible != null)) dart.assertFailed(null, L102, 661, 10, "isDismissible != null");
    if (!(enableDrag != null)) dart.assertFailed(null, L102, 662, 10, "enableDrag != null");
    if (!dart.test(debug.debugCheckHasMediaQuery(context))) dart.assertFailed(null, L102, 663, 10, "debugCheckHasMediaQuery(context)");
    if (!dart.test(debug$0.debugCheckHasMaterialLocalizations(context))) dart.assertFailed(null, L102, 664, 10, "debugCheckHasMaterialLocalizations(context)");
    return navigator.Navigator.of(context, {rootNavigator: useRootNavigator}).push(dart.legacy(T), new (bottom_sheet._ModalBottomSheetRoute$(dart.legacy(T))).new({builder: builder, theme: theme$.Theme.of(context, {shadowThemeOnly: true}), isScrollControlled: isScrollControlled, barrierLabel: material_localizations.MaterialLocalizations.of(context).modalBarrierDismissLabel, backgroundColor: backgroundColor, elevation: elevation, shape: shape, clipBehavior: clipBehavior, isDismissible: isDismissible, modalBarrierColor: barrierColor, enableDrag: enableDrag, settings: routeSettings}));
  };
  bottom_sheet.showBottomSheet = function showBottomSheet(T, opts) {
    let context = opts && 'context' in opts ? opts.context : null;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
    if (!(context != null)) dart.assertFailed(null, L102, 729, 10, "context != null");
    if (!(builder != null)) dart.assertFailed(null, L102, 730, 10, "builder != null");
    if (!dart.test(debug$0.debugCheckHasScaffold(context))) dart.assertFailed(null, L102, 731, 10, "debugCheckHasScaffold(context)");
    return scaffold$.Scaffold.of(context).showBottomSheet(dart.legacy(T), builder, {backgroundColor: backgroundColor, elevation: elevation, shape: shape, clipBehavior: clipBehavior});
  };
  var C2245;
  dart.defineLazy(bottom_sheet, {
    /*bottom_sheet._bottomSheetEnterDuration*/get _bottomSheetEnterDuration() {
      return C215 || CT.C215;
    },
    /*bottom_sheet._bottomSheetExitDuration*/get _bottomSheetExitDuration() {
      return C243 || CT.C243;
    },
    /*bottom_sheet._modalBottomSheetCurve*/get _modalBottomSheetCurve() {
      return C2245 || CT.C2245;
    },
    /*bottom_sheet._minFlingVelocity*/get _minFlingVelocity() {
      return 700;
    },
    /*bottom_sheet._closeProgressThreshold*/get _closeProgressThreshold() {
      return 0.5;
    }
  }, true);
  var _name$23 = dart.privateName(scaffold$, "_name");
  var C2246;
  var C2247;
  var C2248;
  var C2249;
  var C2250;
  var C2251;
  var C2252;
  var C2253;
  var C2254;
  var C2255;
  var C2256;
  var C2257;
  scaffold$._ScaffoldSlot = class _ScaffoldSlot extends core.Object {
    toString() {
      return this[_name$23];
    }
  };
  (scaffold$._ScaffoldSlot.new = function(index, _name) {
    this.index = index;
    this[_name$23] = _name;
    ;
  }).prototype = scaffold$._ScaffoldSlot.prototype;
  dart.addTypeTests(scaffold$._ScaffoldSlot);
  dart.addTypeCaches(scaffold$._ScaffoldSlot);
  dart.setMethodSignature(scaffold$._ScaffoldSlot, () => ({
    __proto__: dart.getMethods(scaffold$._ScaffoldSlot.__proto__),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setLibraryUri(scaffold$._ScaffoldSlot, L104);
  dart.setFieldSignature(scaffold$._ScaffoldSlot, () => ({
    __proto__: dart.getFields(scaffold$._ScaffoldSlot.__proto__),
    index: dart.finalFieldType(dart.legacy(core.int)),
    [_name$23]: dart.finalFieldType(dart.legacy(core.String))
  }));
  dart.defineExtensionMethods(scaffold$._ScaffoldSlot, ['toString']);
  scaffold$._ScaffoldSlot.body = C2246 || CT.C2246;
  scaffold$._ScaffoldSlot.appBar = C2247 || CT.C2247;
  scaffold$._ScaffoldSlot.bodyScrim = C2248 || CT.C2248;
  scaffold$._ScaffoldSlot.bottomSheet = C2249 || CT.C2249;
  scaffold$._ScaffoldSlot.snackBar = C2250 || CT.C2250;
  scaffold$._ScaffoldSlot.persistentFooter = C2251 || CT.C2251;
  scaffold$._ScaffoldSlot.bottomNavigationBar = C2252 || CT.C2252;
  scaffold$._ScaffoldSlot.floatingActionButton = C2253 || CT.C2253;
  scaffold$._ScaffoldSlot.drawer = C2254 || CT.C2254;
  scaffold$._ScaffoldSlot.endDrawer = C2255 || CT.C2255;
  scaffold$._ScaffoldSlot.statusBar = C2256 || CT.C2256;
  scaffold$._ScaffoldSlot.values = C2257 || CT.C2257;
  var floatingActionButtonSize$ = dart.privateName(scaffold$, "ScaffoldPrelayoutGeometry.floatingActionButtonSize");
  var bottomSheetSize$ = dart.privateName(scaffold$, "ScaffoldPrelayoutGeometry.bottomSheetSize");
  var contentBottom$ = dart.privateName(scaffold$, "ScaffoldPrelayoutGeometry.contentBottom");
  var contentTop$ = dart.privateName(scaffold$, "ScaffoldPrelayoutGeometry.contentTop");
  var minInsets$ = dart.privateName(scaffold$, "ScaffoldPrelayoutGeometry.minInsets");
  var minViewPadding$ = dart.privateName(scaffold$, "ScaffoldPrelayoutGeometry.minViewPadding");
  var scaffoldSize$ = dart.privateName(scaffold$, "ScaffoldPrelayoutGeometry.scaffoldSize");
  var snackBarSize$ = dart.privateName(scaffold$, "ScaffoldPrelayoutGeometry.snackBarSize");
  var textDirection$1 = dart.privateName(scaffold$, "ScaffoldPrelayoutGeometry.textDirection");
  scaffold$.ScaffoldPrelayoutGeometry = class ScaffoldPrelayoutGeometry extends core.Object {
    get floatingActionButtonSize() {
      return this[floatingActionButtonSize$];
    }
    set floatingActionButtonSize(value) {
      super.floatingActionButtonSize = value;
    }
    get bottomSheetSize() {
      return this[bottomSheetSize$];
    }
    set bottomSheetSize(value) {
      super.bottomSheetSize = value;
    }
    get contentBottom() {
      return this[contentBottom$];
    }
    set contentBottom(value) {
      super.contentBottom = value;
    }
    get contentTop() {
      return this[contentTop$];
    }
    set contentTop(value) {
      super.contentTop = value;
    }
    get minInsets() {
      return this[minInsets$];
    }
    set minInsets(value) {
      super.minInsets = value;
    }
    get minViewPadding() {
      return this[minViewPadding$];
    }
    set minViewPadding(value) {
      super.minViewPadding = value;
    }
    get scaffoldSize() {
      return this[scaffoldSize$];
    }
    set scaffoldSize(value) {
      super.scaffoldSize = value;
    }
    get snackBarSize() {
      return this[snackBarSize$];
    }
    set snackBarSize(value) {
      super.snackBarSize = value;
    }
    get textDirection() {
      return this[textDirection$1];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
  };
  (scaffold$.ScaffoldPrelayoutGeometry.new = function(opts) {
    let bottomSheetSize = opts && 'bottomSheetSize' in opts ? opts.bottomSheetSize : null;
    let contentBottom = opts && 'contentBottom' in opts ? opts.contentBottom : null;
    let contentTop = opts && 'contentTop' in opts ? opts.contentTop : null;
    let floatingActionButtonSize = opts && 'floatingActionButtonSize' in opts ? opts.floatingActionButtonSize : null;
    let minInsets = opts && 'minInsets' in opts ? opts.minInsets : null;
    let minViewPadding = opts && 'minViewPadding' in opts ? opts.minViewPadding : null;
    let scaffoldSize = opts && 'scaffoldSize' in opts ? opts.scaffoldSize : null;
    let snackBarSize = opts && 'snackBarSize' in opts ? opts.snackBarSize : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    this[bottomSheetSize$] = bottomSheetSize;
    this[contentBottom$] = contentBottom;
    this[contentTop$] = contentTop;
    this[floatingActionButtonSize$] = floatingActionButtonSize;
    this[minInsets$] = minInsets;
    this[minViewPadding$] = minViewPadding;
    this[scaffoldSize$] = scaffoldSize;
    this[snackBarSize$] = snackBarSize;
    this[textDirection$1] = textDirection;
    ;
  }).prototype = scaffold$.ScaffoldPrelayoutGeometry.prototype;
  dart.addTypeTests(scaffold$.ScaffoldPrelayoutGeometry);
  dart.addTypeCaches(scaffold$.ScaffoldPrelayoutGeometry);
  dart.setLibraryUri(scaffold$.ScaffoldPrelayoutGeometry, L104);
  dart.setFieldSignature(scaffold$.ScaffoldPrelayoutGeometry, () => ({
    __proto__: dart.getFields(scaffold$.ScaffoldPrelayoutGeometry.__proto__),
    floatingActionButtonSize: dart.finalFieldType(dart.legacy(ui.Size)),
    bottomSheetSize: dart.finalFieldType(dart.legacy(ui.Size)),
    contentBottom: dart.finalFieldType(dart.legacy(core.double)),
    contentTop: dart.finalFieldType(dart.legacy(core.double)),
    minInsets: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsets)),
    minViewPadding: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsets)),
    scaffoldSize: dart.finalFieldType(dart.legacy(ui.Size)),
    snackBarSize: dart.finalFieldType(dart.legacy(ui.Size)),
    textDirection: dart.finalFieldType(dart.legacy(ui.TextDirection))
  }));
  var begin$ = dart.privateName(scaffold$, "_TransitionSnapshotFabLocation.begin");
  var end$1 = dart.privateName(scaffold$, "_TransitionSnapshotFabLocation.end");
  var animator$ = dart.privateName(scaffold$, "_TransitionSnapshotFabLocation.animator");
  var progress$ = dart.privateName(scaffold$, "_TransitionSnapshotFabLocation.progress");
  scaffold$._TransitionSnapshotFabLocation = class _TransitionSnapshotFabLocation extends floating_action_button_location.FloatingActionButtonLocation {
    get begin() {
      return this[begin$];
    }
    set begin(value) {
      super.begin = value;
    }
    get end() {
      return this[end$1];
    }
    set end(value) {
      super.end = value;
    }
    get animator() {
      return this[animator$];
    }
    set animator(value) {
      super.animator = value;
    }
    get progress() {
      return this[progress$];
    }
    set progress(value) {
      super.progress = value;
    }
    getOffset(scaffoldGeometry) {
      return this.animator.getOffset({begin: this.begin.getOffset(scaffoldGeometry), end: this.end.getOffset(scaffoldGeometry), progress: this.progress});
    }
    toString() {
      return dart.str(object$.objectRuntimeType(this, "_TransitionSnapshotFabLocation")) + "(begin: " + dart.str(this.begin) + ", end: " + dart.str(this.end) + ", progress: " + dart.str(this.progress) + ")";
    }
  };
  (scaffold$._TransitionSnapshotFabLocation.new = function(begin, end, animator, progress) {
    this[begin$] = begin;
    this[end$1] = end;
    this[animator$] = animator;
    this[progress$] = progress;
    scaffold$._TransitionSnapshotFabLocation.__proto__.new.call(this);
    ;
  }).prototype = scaffold$._TransitionSnapshotFabLocation.prototype;
  dart.addTypeTests(scaffold$._TransitionSnapshotFabLocation);
  dart.addTypeCaches(scaffold$._TransitionSnapshotFabLocation);
  dart.setMethodSignature(scaffold$._TransitionSnapshotFabLocation, () => ({
    __proto__: dart.getMethods(scaffold$._TransitionSnapshotFabLocation.__proto__),
    getOffset: dart.fnType(dart.legacy(ui.Offset), [dart.legacy(scaffold$.ScaffoldPrelayoutGeometry)])
  }));
  dart.setLibraryUri(scaffold$._TransitionSnapshotFabLocation, L104);
  dart.setFieldSignature(scaffold$._TransitionSnapshotFabLocation, () => ({
    __proto__: dart.getFields(scaffold$._TransitionSnapshotFabLocation.__proto__),
    begin: dart.finalFieldType(dart.legacy(floating_action_button_location.FloatingActionButtonLocation)),
    end: dart.finalFieldType(dart.legacy(floating_action_button_location.FloatingActionButtonLocation)),
    animator: dart.finalFieldType(dart.legacy(floating_action_button_location.FloatingActionButtonAnimator)),
    progress: dart.finalFieldType(dart.legacy(core.double))
  }));
  dart.defineExtensionMethods(scaffold$._TransitionSnapshotFabLocation, ['toString']);
  var _scaleFloatingActionButton = dart.privateName(scaffold$, "_scaleFloatingActionButton");
  var bottomNavigationBarTop$ = dart.privateName(scaffold$, "ScaffoldGeometry.bottomNavigationBarTop");
  var floatingActionButtonArea$ = dart.privateName(scaffold$, "ScaffoldGeometry.floatingActionButtonArea");
  scaffold$.ScaffoldGeometry = class ScaffoldGeometry extends core.Object {
    get bottomNavigationBarTop() {
      return this[bottomNavigationBarTop$];
    }
    set bottomNavigationBarTop(value) {
      super.bottomNavigationBarTop = value;
    }
    get floatingActionButtonArea() {
      return this[floatingActionButtonArea$];
    }
    set floatingActionButtonArea(value) {
      super.floatingActionButtonArea = value;
    }
    [_scaleFloatingActionButton](scaleFactor) {
      if (scaleFactor === 1.0) return this;
      if (scaleFactor === 0.0) {
        return new scaffold$.ScaffoldGeometry.new({bottomNavigationBarTop: this.bottomNavigationBarTop});
      }
      let scaledButton = ui.Rect.lerp(this.floatingActionButtonArea.center['&'](ui.Size.zero), this.floatingActionButtonArea, scaleFactor);
      return this.copyWith({floatingActionButtonArea: scaledButton});
    }
    copyWith(opts) {
      let t12, t12$;
      let bottomNavigationBarTop = opts && 'bottomNavigationBarTop' in opts ? opts.bottomNavigationBarTop : null;
      let floatingActionButtonArea = opts && 'floatingActionButtonArea' in opts ? opts.floatingActionButtonArea : null;
      return new scaffold$.ScaffoldGeometry.new({bottomNavigationBarTop: (t12 = bottomNavigationBarTop, t12 == null ? this.bottomNavigationBarTop : t12), floatingActionButtonArea: (t12$ = floatingActionButtonArea, t12$ == null ? this.floatingActionButtonArea : t12$)});
    }
  };
  (scaffold$.ScaffoldGeometry.new = function(opts) {
    let bottomNavigationBarTop = opts && 'bottomNavigationBarTop' in opts ? opts.bottomNavigationBarTop : null;
    let floatingActionButtonArea = opts && 'floatingActionButtonArea' in opts ? opts.floatingActionButtonArea : null;
    this[bottomNavigationBarTop$] = bottomNavigationBarTop;
    this[floatingActionButtonArea$] = floatingActionButtonArea;
    ;
  }).prototype = scaffold$.ScaffoldGeometry.prototype;
  dart.addTypeTests(scaffold$.ScaffoldGeometry);
  dart.addTypeCaches(scaffold$.ScaffoldGeometry);
  dart.setMethodSignature(scaffold$.ScaffoldGeometry, () => ({
    __proto__: dart.getMethods(scaffold$.ScaffoldGeometry.__proto__),
    [_scaleFloatingActionButton]: dart.fnType(dart.legacy(scaffold$.ScaffoldGeometry), [dart.legacy(core.double)]),
    copyWith: dart.fnType(dart.legacy(scaffold$.ScaffoldGeometry), [], {bottomNavigationBarTop: dart.legacy(core.double), floatingActionButtonArea: dart.legacy(ui.Rect)}, {})
  }));
  dart.setLibraryUri(scaffold$.ScaffoldGeometry, L104);
  dart.setFieldSignature(scaffold$.ScaffoldGeometry, () => ({
    __proto__: dart.getFields(scaffold$.ScaffoldGeometry.__proto__),
    bottomNavigationBarTop: dart.finalFieldType(dart.legacy(core.double)),
    floatingActionButtonArea: dart.finalFieldType(dart.legacy(ui.Rect))
  }));
  var _updateWith = dart.privateName(scaffold$, "_updateWith");
  scaffold$._ScaffoldGeometryNotifier = class _ScaffoldGeometryNotifier extends change_notifier.ChangeNotifier {
    get value() {
      if (!dart.test(dart.fn(() => {
        let renderObject = this.context.findRenderObject();
        if (renderObject == null || !dart.test(renderObject.owner.debugDoingPaint)) dart.throw(assertions.FlutterError.new("Scaffold.geometryOf() must only be accessed during the paint phase.\n" + "The ScaffoldGeometry is only available during the paint phase, because " + "its value is computed during the animation and layout phases prior to painting."));
        return true;
      }, VoidToboolL())())) dart.assertFailed(null, L105, 275, 12, "() {\r\n      final RenderObject renderObject = context.findRenderObject();\r\n      if (renderObject == null || !renderObject.owner.debugDoingPaint)\r\n        throw FlutterError(\r\n            'Scaffold.geometryOf() must only be accessed during the paint phase.\\n'\r\n            'The ScaffoldGeometry is only available during the paint phase, because '\r\n            'its value is computed during the animation and layout phases prior to painting.'\r\n        );\r\n      return true;\r\n    }()");
      return this.geometry[_scaleFloatingActionButton](this.floatingActionButtonScale);
    }
    [_updateWith](opts) {
      let t12;
      let bottomNavigationBarTop = opts && 'bottomNavigationBarTop' in opts ? opts.bottomNavigationBarTop : null;
      let floatingActionButtonArea = opts && 'floatingActionButtonArea' in opts ? opts.floatingActionButtonArea : null;
      let floatingActionButtonScale = opts && 'floatingActionButtonScale' in opts ? opts.floatingActionButtonScale : null;
      this.floatingActionButtonScale = (t12 = floatingActionButtonScale, t12 == null ? this.floatingActionButtonScale : t12);
      this.geometry = this.geometry.copyWith({bottomNavigationBarTop: bottomNavigationBarTop, floatingActionButtonArea: floatingActionButtonArea});
      this.notifyListeners();
    }
  };
  (scaffold$._ScaffoldGeometryNotifier.new = function(geometry, context) {
    this.floatingActionButtonScale = null;
    this.geometry = geometry;
    this.context = context;
    if (!(context != null)) dart.assertFailed(null, L105, 267, 15, "context != null");
    scaffold$._ScaffoldGeometryNotifier.__proto__.new.call(this);
    ;
  }).prototype = scaffold$._ScaffoldGeometryNotifier.prototype;
  dart.addTypeTests(scaffold$._ScaffoldGeometryNotifier);
  dart.addTypeCaches(scaffold$._ScaffoldGeometryNotifier);
  scaffold$._ScaffoldGeometryNotifier[dart.implements] = () => [change_notifier.ValueListenable$(dart.legacy(scaffold$.ScaffoldGeometry))];
  dart.setMethodSignature(scaffold$._ScaffoldGeometryNotifier, () => ({
    __proto__: dart.getMethods(scaffold$._ScaffoldGeometryNotifier.__proto__),
    [_updateWith]: dart.fnType(dart.void, [], {bottomNavigationBarTop: dart.legacy(core.double), floatingActionButtonArea: dart.legacy(ui.Rect), floatingActionButtonScale: dart.legacy(core.double)}, {})
  }));
  dart.setGetterSignature(scaffold$._ScaffoldGeometryNotifier, () => ({
    __proto__: dart.getGetters(scaffold$._ScaffoldGeometryNotifier.__proto__),
    value: dart.legacy(scaffold$.ScaffoldGeometry)
  }));
  dart.setLibraryUri(scaffold$._ScaffoldGeometryNotifier, L104);
  dart.setFieldSignature(scaffold$._ScaffoldGeometryNotifier, () => ({
    __proto__: dart.getFields(scaffold$._ScaffoldGeometryNotifier.__proto__),
    context: dart.finalFieldType(dart.legacy(framework.BuildContext)),
    floatingActionButtonScale: dart.fieldType(dart.legacy(core.double)),
    geometry: dart.fieldType(dart.legacy(scaffold$.ScaffoldGeometry))
  }));
  var bottomWidgetsHeight$ = dart.privateName(scaffold$, "_BodyBoxConstraints.bottomWidgetsHeight");
  var appBarHeight$ = dart.privateName(scaffold$, "_BodyBoxConstraints.appBarHeight");
  scaffold$._BodyBoxConstraints = class _BodyBoxConstraints extends box.BoxConstraints {
    get bottomWidgetsHeight() {
      return this[bottomWidgetsHeight$];
    }
    set bottomWidgetsHeight(value) {
      super.bottomWidgetsHeight = value;
    }
    get appBarHeight() {
      return this[appBarHeight$];
    }
    set appBarHeight(value) {
      super.appBarHeight = value;
    }
    _equals(other) {
      if (other == null) return false;
      if (!super._equals(other)) return false;
      return _BodyBoxConstraintsL().is(other) && other.bottomWidgetsHeight == this.bottomWidgetsHeight && other.appBarHeight == this.appBarHeight;
    }
    get hashCode() {
      return ui.hashValues(super.hashCode, this.bottomWidgetsHeight, this.appBarHeight);
    }
  };
  (scaffold$._BodyBoxConstraints.new = function(opts) {
    let minWidth = opts && 'minWidth' in opts ? opts.minWidth : 0;
    let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : 1 / 0;
    let minHeight = opts && 'minHeight' in opts ? opts.minHeight : 0;
    let maxHeight = opts && 'maxHeight' in opts ? opts.maxHeight : 1 / 0;
    let bottomWidgetsHeight = opts && 'bottomWidgetsHeight' in opts ? opts.bottomWidgetsHeight : null;
    let appBarHeight = opts && 'appBarHeight' in opts ? opts.appBarHeight : null;
    this[bottomWidgetsHeight$] = bottomWidgetsHeight;
    this[appBarHeight$] = appBarHeight;
    if (!(bottomWidgetsHeight != null)) dart.assertFailed(null, L105, 319, 15, "bottomWidgetsHeight != null");
    if (!(dart.notNull(bottomWidgetsHeight) >= 0)) dart.assertFailed(null, L105, 320, 15, "bottomWidgetsHeight >= 0");
    if (!(appBarHeight != null)) dart.assertFailed(null, L105, 321, 15, "appBarHeight != null");
    if (!(dart.notNull(appBarHeight) >= 0)) dart.assertFailed(null, L105, 322, 15, "appBarHeight >= 0");
    scaffold$._BodyBoxConstraints.__proto__.new.call(this, {minWidth: minWidth, maxWidth: maxWidth, minHeight: minHeight, maxHeight: maxHeight});
    ;
  }).prototype = scaffold$._BodyBoxConstraints.prototype;
  dart.addTypeTests(scaffold$._BodyBoxConstraints);
  dart.addTypeCaches(scaffold$._BodyBoxConstraints);
  dart.setLibraryUri(scaffold$._BodyBoxConstraints, L104);
  dart.setFieldSignature(scaffold$._BodyBoxConstraints, () => ({
    __proto__: dart.getFields(scaffold$._BodyBoxConstraints.__proto__),
    bottomWidgetsHeight: dart.finalFieldType(dart.legacy(core.double)),
    appBarHeight: dart.finalFieldType(dart.legacy(core.double))
  }));
  dart.defineExtensionMethods(scaffold$._BodyBoxConstraints, ['_equals']);
  dart.defineExtensionAccessors(scaffold$._BodyBoxConstraints, ['hashCode']);
  var C2260;
  var C2261;
  var C2259;
  var C2258;
  var C2264;
  var C2263;
  var C2262;
  var body$ = dart.privateName(scaffold$, "_BodyBuilder.body");
  var extendBody$ = dart.privateName(scaffold$, "_BodyBuilder.extendBody");
  var extendBodyBehindAppBar$ = dart.privateName(scaffold$, "_BodyBuilder.extendBodyBehindAppBar");
  scaffold$._BodyBuilder = class _BodyBuilder extends framework.StatelessWidget {
    get body() {
      return this[body$];
    }
    set body(value) {
      super.body = value;
    }
    get extendBody() {
      return this[extendBody$];
    }
    set extendBody(value) {
      super.extendBody = value;
    }
    get extendBodyBehindAppBar() {
      return this[extendBodyBehindAppBar$];
    }
    set extendBodyBehindAppBar(value) {
      super.extendBodyBehindAppBar = value;
    }
    build(context) {
      if (!dart.test(this.extendBody) && !dart.test(this.extendBodyBehindAppBar)) return this.body;
      return new layout_builder.LayoutBuilder.new({builder: dart.fn((context, constraints) => {
          let bodyConstraints = _BodyBoxConstraintsL().as(constraints);
          let metrics = media_query.MediaQuery.of(context);
          let bottom = dart.test(this.extendBody) ? math.max(doubleL(), metrics.padding.bottom, bodyConstraints.bottomWidgetsHeight) : metrics.padding.bottom;
          let top = dart.test(this.extendBodyBehindAppBar) ? math.max(doubleL(), metrics.padding.top, bodyConstraints.appBarHeight) : metrics.padding.top;
          return new media_query.MediaQuery.new({data: metrics.copyWith({padding: metrics.padding.copyWith({top: top, bottom: bottom})}), child: this.body, $creationLocationd_0dea112b090073317d4: C2258 || CT.C2258});
        }, BuildContextLAndBoxConstraintsLToMediaQueryL()), $creationLocationd_0dea112b090073317d4: C2262 || CT.C2262});
    }
  };
  (scaffold$._BodyBuilder.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let extendBody = opts && 'extendBody' in opts ? opts.extendBody : null;
    let extendBodyBehindAppBar = opts && 'extendBodyBehindAppBar' in opts ? opts.extendBodyBehindAppBar : null;
    let body = opts && 'body' in opts ? opts.body : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[extendBody$] = extendBody;
    this[extendBodyBehindAppBar$] = extendBodyBehindAppBar;
    this[body$] = body;
    if (!(extendBody != null)) dart.assertFailed(null, L105, 359, 15, "extendBody != null");
    if (!(extendBodyBehindAppBar != null)) dart.assertFailed(null, L105, 360, 15, "extendBodyBehindAppBar != null");
    if (!(body != null)) dart.assertFailed(null, L105, 361, 15, "body != null");
    scaffold$._BodyBuilder.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scaffold$._BodyBuilder.prototype;
  dart.addTypeTests(scaffold$._BodyBuilder);
  dart.addTypeCaches(scaffold$._BodyBuilder);
  dart.setMethodSignature(scaffold$._BodyBuilder, () => ({
    __proto__: dart.getMethods(scaffold$._BodyBuilder.__proto__),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(scaffold$._BodyBuilder, L104);
  dart.setFieldSignature(scaffold$._BodyBuilder, () => ({
    __proto__: dart.getFields(scaffold$._BodyBuilder.__proto__),
    body: dart.finalFieldType(dart.legacy(framework.Widget)),
    extendBody: dart.finalFieldType(dart.legacy(core.bool)),
    extendBodyBehindAppBar: dart.finalFieldType(dart.legacy(core.bool))
  }));
  scaffold$._ScaffoldLayout = class _ScaffoldLayout extends custom_layout.MultiChildLayoutDelegate {
    performLayout(size) {
      let looseConstraints = new box.BoxConstraints.loose(size);
      let fullWidthConstraints = looseConstraints.tighten({width: size.width});
      let bottom = size.height;
      let contentTop = 0.0;
      let bottomWidgetsHeight = 0.0;
      let appBarHeight = 0.0;
      if (dart.test(this.hasChild(scaffold$._ScaffoldSlot.appBar))) {
        appBarHeight = this.layoutChild(scaffold$._ScaffoldSlot.appBar, fullWidthConstraints).height;
        contentTop = dart.test(this.extendBodyBehindAppBar) ? 0.0 : appBarHeight;
        this.positionChild(scaffold$._ScaffoldSlot.appBar, ui.Offset.zero);
      }
      let bottomNavigationBarTop = null;
      if (dart.test(this.hasChild(scaffold$._ScaffoldSlot.bottomNavigationBar))) {
        let bottomNavigationBarHeight = this.layoutChild(scaffold$._ScaffoldSlot.bottomNavigationBar, fullWidthConstraints).height;
        bottomWidgetsHeight = bottomWidgetsHeight + dart.notNull(bottomNavigationBarHeight);
        bottomNavigationBarTop = math.max(doubleL(), 0.0, dart.notNull(bottom) - bottomWidgetsHeight);
        this.positionChild(scaffold$._ScaffoldSlot.bottomNavigationBar, new ui.Offset.new(0.0, bottomNavigationBarTop));
      }
      if (dart.test(this.hasChild(scaffold$._ScaffoldSlot.persistentFooter))) {
        let footerConstraints = new box.BoxConstraints.new({maxWidth: fullWidthConstraints.maxWidth, maxHeight: math.max(doubleL(), 0.0, dart.notNull(bottom) - bottomWidgetsHeight - dart.notNull(contentTop))});
        let persistentFooterHeight = this.layoutChild(scaffold$._ScaffoldSlot.persistentFooter, footerConstraints).height;
        bottomWidgetsHeight = bottomWidgetsHeight + dart.notNull(persistentFooterHeight);
        this.positionChild(scaffold$._ScaffoldSlot.persistentFooter, new ui.Offset.new(0.0, math.max(doubleL(), 0.0, dart.notNull(bottom) - bottomWidgetsHeight)));
      }
      let contentBottom = math.max(doubleL(), 0.0, dart.notNull(bottom) - math.max(numL(), this.minInsets.bottom, bottomWidgetsHeight));
      if (dart.test(this.hasChild(scaffold$._ScaffoldSlot.body))) {
        let bodyMaxHeight = math.max(doubleL(), 0.0, contentBottom - dart.notNull(contentTop));
        if (dart.test(this.extendBody)) {
          bodyMaxHeight = bodyMaxHeight + bottomWidgetsHeight;
          bodyMaxHeight = bodyMaxHeight[$clamp](0.0, dart.notNull(looseConstraints.maxHeight) - dart.notNull(contentTop))[$toDouble]();
          if (!(bodyMaxHeight <= math.max(numL(), 0.0, dart.notNull(looseConstraints.maxHeight) - dart.notNull(contentTop)))) dart.assertFailed(null, L105, 488, 16, "bodyMaxHeight <= math.max(0.0, looseConstraints.maxHeight - contentTop)");
        }
        let bodyConstraints = new scaffold$._BodyBoxConstraints.new({maxWidth: fullWidthConstraints.maxWidth, maxHeight: bodyMaxHeight, bottomWidgetsHeight: dart.test(this.extendBody) ? bottomWidgetsHeight : 0.0, appBarHeight: appBarHeight});
        this.layoutChild(scaffold$._ScaffoldSlot.body, bodyConstraints);
        this.positionChild(scaffold$._ScaffoldSlot.body, new ui.Offset.new(0.0, contentTop));
      }
      let bottomSheetSize = ui.Size.zero;
      let snackBarSize = ui.Size.zero;
      if (dart.test(this.hasChild(scaffold$._ScaffoldSlot.bodyScrim))) {
        let bottomSheetScrimConstraints = new box.BoxConstraints.new({maxWidth: fullWidthConstraints.maxWidth, maxHeight: contentBottom});
        this.layoutChild(scaffold$._ScaffoldSlot.bodyScrim, bottomSheetScrimConstraints);
        this.positionChild(scaffold$._ScaffoldSlot.bodyScrim, ui.Offset.zero);
      }
      if (dart.test(this.hasChild(scaffold$._ScaffoldSlot.snackBar)) && !dart.test(this.isSnackBarFloating)) {
        snackBarSize = this.layoutChild(scaffold$._ScaffoldSlot.snackBar, fullWidthConstraints);
      }
      if (dart.test(this.hasChild(scaffold$._ScaffoldSlot.bottomSheet))) {
        let bottomSheetConstraints = new box.BoxConstraints.new({maxWidth: fullWidthConstraints.maxWidth, maxHeight: math.max(doubleL(), 0.0, contentBottom - dart.notNull(contentTop))});
        bottomSheetSize = this.layoutChild(scaffold$._ScaffoldSlot.bottomSheet, bottomSheetConstraints);
        this.positionChild(scaffold$._ScaffoldSlot.bottomSheet, new ui.Offset.new((dart.notNull(size.width) - dart.notNull(bottomSheetSize.width)) / 2.0, contentBottom - dart.notNull(bottomSheetSize.height)));
      }
      let floatingActionButtonRect = null;
      if (dart.test(this.hasChild(scaffold$._ScaffoldSlot.floatingActionButton))) {
        let fabSize = this.layoutChild(scaffold$._ScaffoldSlot.floatingActionButton, looseConstraints);
        let currentGeometry = new scaffold$.ScaffoldPrelayoutGeometry.new({bottomSheetSize: bottomSheetSize, contentBottom: contentBottom, contentTop: contentTop, floatingActionButtonSize: fabSize, minInsets: this.minInsets, scaffoldSize: size, snackBarSize: snackBarSize, textDirection: this.textDirection, minViewPadding: this.minViewPadding});
        let currentFabOffset = this.currentFloatingActionButtonLocation.getOffset(currentGeometry);
        let previousFabOffset = this.previousFloatingActionButtonLocation.getOffset(currentGeometry);
        let fabOffset = this.floatingActionButtonMotionAnimator.getOffset({begin: previousFabOffset, end: currentFabOffset, progress: this.floatingActionButtonMoveAnimationProgress});
        this.positionChild(scaffold$._ScaffoldSlot.floatingActionButton, fabOffset);
        floatingActionButtonRect = fabOffset['&'](fabSize);
      }
      if (dart.test(this.hasChild(scaffold$._ScaffoldSlot.snackBar))) {
        let hasCustomWidth = this.snackBarWidth != null && dart.notNull(this.snackBarWidth) < dart.notNull(size.width);
        if (dart.equals(snackBarSize, ui.Size.zero)) {
          snackBarSize = this.layoutChild(scaffold$._ScaffoldSlot.snackBar, hasCustomWidth ? looseConstraints : fullWidthConstraints);
        }
        let snackBarYOffsetBase = null;
        if (!dart.equals(floatingActionButtonRect.size, ui.Size.zero) && dart.test(this.isSnackBarFloating)) {
          snackBarYOffsetBase = floatingActionButtonRect.top;
        } else {
          snackBarYOffsetBase = contentBottom;
        }
        let xOffset = hasCustomWidth ? (dart.notNull(size.width) - dart.notNull(this.snackBarWidth)) / 2 : 0.0;
        this.positionChild(scaffold$._ScaffoldSlot.snackBar, new ui.Offset.new(xOffset, dart.notNull(snackBarYOffsetBase) - dart.notNull(snackBarSize.height)));
      }
      if (dart.test(this.hasChild(scaffold$._ScaffoldSlot.statusBar))) {
        this.layoutChild(scaffold$._ScaffoldSlot.statusBar, fullWidthConstraints.tighten({height: this.minInsets.top}));
        this.positionChild(scaffold$._ScaffoldSlot.statusBar, ui.Offset.zero);
      }
      if (dart.test(this.hasChild(scaffold$._ScaffoldSlot.drawer))) {
        this.layoutChild(scaffold$._ScaffoldSlot.drawer, new box.BoxConstraints.tight(size));
        this.positionChild(scaffold$._ScaffoldSlot.drawer, ui.Offset.zero);
      }
      if (dart.test(this.hasChild(scaffold$._ScaffoldSlot.endDrawer))) {
        this.layoutChild(scaffold$._ScaffoldSlot.endDrawer, new box.BoxConstraints.tight(size));
        this.positionChild(scaffold$._ScaffoldSlot.endDrawer, ui.Offset.zero);
      }
      this.geometryNotifier[_updateWith]({bottomNavigationBarTop: bottomNavigationBarTop, floatingActionButtonArea: floatingActionButtonRect});
    }
    shouldRelayout(oldDelegate) {
      _ScaffoldLayoutL().as(oldDelegate);
      return !dart.equals(oldDelegate.minInsets, this.minInsets) || !dart.equals(oldDelegate.textDirection, this.textDirection) || oldDelegate.floatingActionButtonMoveAnimationProgress != this.floatingActionButtonMoveAnimationProgress || !dart.equals(oldDelegate.previousFloatingActionButtonLocation, this.previousFloatingActionButtonLocation) || !dart.equals(oldDelegate.currentFloatingActionButtonLocation, this.currentFloatingActionButtonLocation) || !dart.equals(oldDelegate.extendBody, this.extendBody) || !dart.equals(oldDelegate.extendBodyBehindAppBar, this.extendBodyBehindAppBar);
    }
  };
  (scaffold$._ScaffoldLayout.new = function(opts) {
    let minInsets = opts && 'minInsets' in opts ? opts.minInsets : null;
    let minViewPadding = opts && 'minViewPadding' in opts ? opts.minViewPadding : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let geometryNotifier = opts && 'geometryNotifier' in opts ? opts.geometryNotifier : null;
    let previousFloatingActionButtonLocation = opts && 'previousFloatingActionButtonLocation' in opts ? opts.previousFloatingActionButtonLocation : null;
    let currentFloatingActionButtonLocation = opts && 'currentFloatingActionButtonLocation' in opts ? opts.currentFloatingActionButtonLocation : null;
    let floatingActionButtonMoveAnimationProgress = opts && 'floatingActionButtonMoveAnimationProgress' in opts ? opts.floatingActionButtonMoveAnimationProgress : null;
    let floatingActionButtonMotionAnimator = opts && 'floatingActionButtonMotionAnimator' in opts ? opts.floatingActionButtonMotionAnimator : null;
    let isSnackBarFloating = opts && 'isSnackBarFloating' in opts ? opts.isSnackBarFloating : null;
    let snackBarWidth = opts && 'snackBarWidth' in opts ? opts.snackBarWidth : null;
    let extendBody = opts && 'extendBody' in opts ? opts.extendBody : null;
    let extendBodyBehindAppBar = opts && 'extendBodyBehindAppBar' in opts ? opts.extendBodyBehindAppBar : null;
    this.minInsets = minInsets;
    this.minViewPadding = minViewPadding;
    this.textDirection = textDirection;
    this.geometryNotifier = geometryNotifier;
    this.previousFloatingActionButtonLocation = previousFloatingActionButtonLocation;
    this.currentFloatingActionButtonLocation = currentFloatingActionButtonLocation;
    this.floatingActionButtonMoveAnimationProgress = floatingActionButtonMoveAnimationProgress;
    this.floatingActionButtonMotionAnimator = floatingActionButtonMotionAnimator;
    this.isSnackBarFloating = isSnackBarFloating;
    this.snackBarWidth = snackBarWidth;
    this.extendBody = extendBody;
    this.extendBodyBehindAppBar = extendBodyBehindAppBar;
    if (!(minInsets != null)) dart.assertFailed(null, L105, 415, 15, "minInsets != null");
    if (!(textDirection != null)) dart.assertFailed(null, L105, 416, 15, "textDirection != null");
    if (!(geometryNotifier != null)) dart.assertFailed(null, L105, 417, 15, "geometryNotifier != null");
    if (!(previousFloatingActionButtonLocation != null)) dart.assertFailed(null, L105, 418, 15, "previousFloatingActionButtonLocation != null");
    if (!(currentFloatingActionButtonLocation != null)) dart.assertFailed(null, L105, 419, 15, "currentFloatingActionButtonLocation != null");
    if (!(extendBody != null)) dart.assertFailed(null, L105, 420, 15, "extendBody != null");
    if (!(extendBodyBehindAppBar != null)) dart.assertFailed(null, L105, 421, 15, "extendBodyBehindAppBar != null");
    scaffold$._ScaffoldLayout.__proto__.new.call(this);
    ;
  }).prototype = scaffold$._ScaffoldLayout.prototype;
  dart.addTypeTests(scaffold$._ScaffoldLayout);
  dart.addTypeCaches(scaffold$._ScaffoldLayout);
  dart.setMethodSignature(scaffold$._ScaffoldLayout, () => ({
    __proto__: dart.getMethods(scaffold$._ScaffoldLayout.__proto__),
    performLayout: dart.fnType(dart.void, [dart.legacy(ui.Size)]),
    shouldRelayout: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)])
  }));
  dart.setLibraryUri(scaffold$._ScaffoldLayout, L104);
  dart.setFieldSignature(scaffold$._ScaffoldLayout, () => ({
    __proto__: dart.getFields(scaffold$._ScaffoldLayout.__proto__),
    extendBody: dart.finalFieldType(dart.legacy(core.bool)),
    extendBodyBehindAppBar: dart.finalFieldType(dart.legacy(core.bool)),
    minInsets: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsets)),
    minViewPadding: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsets)),
    textDirection: dart.finalFieldType(dart.legacy(ui.TextDirection)),
    geometryNotifier: dart.finalFieldType(dart.legacy(scaffold$._ScaffoldGeometryNotifier)),
    previousFloatingActionButtonLocation: dart.finalFieldType(dart.legacy(floating_action_button_location.FloatingActionButtonLocation)),
    currentFloatingActionButtonLocation: dart.finalFieldType(dart.legacy(floating_action_button_location.FloatingActionButtonLocation)),
    floatingActionButtonMoveAnimationProgress: dart.finalFieldType(dart.legacy(core.double)),
    floatingActionButtonMotionAnimator: dart.finalFieldType(dart.legacy(floating_action_button_location.FloatingActionButtonAnimator)),
    isSnackBarFloating: dart.finalFieldType(dart.legacy(core.bool)),
    snackBarWidth: dart.finalFieldType(dart.legacy(core.double))
  }));
  var child$20 = dart.privateName(scaffold$, "_FloatingActionButtonTransition.child");
  var fabMoveAnimation$ = dart.privateName(scaffold$, "_FloatingActionButtonTransition.fabMoveAnimation");
  var fabMotionAnimator$ = dart.privateName(scaffold$, "_FloatingActionButtonTransition.fabMotionAnimator");
  var geometryNotifier$ = dart.privateName(scaffold$, "_FloatingActionButtonTransition.geometryNotifier");
  var currentController$ = dart.privateName(scaffold$, "_FloatingActionButtonTransition.currentController");
  scaffold$._FloatingActionButtonTransition = class _FloatingActionButtonTransition extends framework.StatefulWidget {
    get child() {
      return this[child$20];
    }
    set child(value) {
      super.child = value;
    }
    get fabMoveAnimation() {
      return this[fabMoveAnimation$];
    }
    set fabMoveAnimation(value) {
      super.fabMoveAnimation = value;
    }
    get fabMotionAnimator() {
      return this[fabMotionAnimator$];
    }
    set fabMotionAnimator(value) {
      super.fabMotionAnimator = value;
    }
    get geometryNotifier() {
      return this[geometryNotifier$];
    }
    set geometryNotifier(value) {
      super.geometryNotifier = value;
    }
    get currentController() {
      return this[currentController$];
    }
    set currentController(value) {
      super.currentController = value;
    }
    createState() {
      return new scaffold$._FloatingActionButtonTransitionState.new();
    }
  };
  (scaffold$._FloatingActionButtonTransition.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let fabMoveAnimation = opts && 'fabMoveAnimation' in opts ? opts.fabMoveAnimation : null;
    let fabMotionAnimator = opts && 'fabMotionAnimator' in opts ? opts.fabMotionAnimator : null;
    let geometryNotifier = opts && 'geometryNotifier' in opts ? opts.geometryNotifier : null;
    let currentController = opts && 'currentController' in opts ? opts.currentController : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$20] = child;
    this[fabMoveAnimation$] = fabMoveAnimation;
    this[fabMotionAnimator$] = fabMotionAnimator;
    this[geometryNotifier$] = geometryNotifier;
    this[currentController$] = currentController;
    if (!(fabMoveAnimation != null)) dart.assertFailed(null, L105, 636, 15, "fabMoveAnimation != null");
    if (!(fabMotionAnimator != null)) dart.assertFailed(null, L105, 637, 15, "fabMotionAnimator != null");
    if (!(currentController != null)) dart.assertFailed(null, L105, 638, 15, "currentController != null");
    scaffold$._FloatingActionButtonTransition.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scaffold$._FloatingActionButtonTransition.prototype;
  dart.addTypeTests(scaffold$._FloatingActionButtonTransition);
  dart.addTypeCaches(scaffold$._FloatingActionButtonTransition);
  dart.setMethodSignature(scaffold$._FloatingActionButtonTransition, () => ({
    __proto__: dart.getMethods(scaffold$._FloatingActionButtonTransition.__proto__),
    createState: dart.fnType(dart.legacy(scaffold$._FloatingActionButtonTransitionState), [])
  }));
  dart.setLibraryUri(scaffold$._FloatingActionButtonTransition, L104);
  dart.setFieldSignature(scaffold$._FloatingActionButtonTransition, () => ({
    __proto__: dart.getFields(scaffold$._FloatingActionButtonTransition.__proto__),
    child: dart.finalFieldType(dart.legacy(framework.Widget)),
    fabMoveAnimation: dart.finalFieldType(dart.legacy(animation.Animation$(dart.legacy(core.double)))),
    fabMotionAnimator: dart.finalFieldType(dart.legacy(floating_action_button_location.FloatingActionButtonAnimator)),
    geometryNotifier: dart.finalFieldType(dart.legacy(scaffold$._ScaffoldGeometryNotifier)),
    currentController: dart.finalFieldType(dart.legacy(animation_controller.AnimationController))
  }));
  var _previousController = dart.privateName(scaffold$, "_previousController");
  var _previousScaleAnimation = dart.privateName(scaffold$, "_previousScaleAnimation");
  var _previousRotationAnimation = dart.privateName(scaffold$, "_previousRotationAnimation");
  var _currentScaleAnimation = dart.privateName(scaffold$, "_currentScaleAnimation");
  var _extendedCurrentScaleAnimation = dart.privateName(scaffold$, "_extendedCurrentScaleAnimation");
  var _currentRotationAnimation = dart.privateName(scaffold$, "_currentRotationAnimation");
  var _previousChild = dart.privateName(scaffold$, "_previousChild");
  var _handlePreviousAnimationStatusChanged = dart.privateName(scaffold$, "_handlePreviousAnimationStatusChanged");
  var _updateAnimations = dart.privateName(scaffold$, "_updateAnimations");
  var _updateGeometryScale = dart.privateName(scaffold$, "_updateGeometryScale");
  var C2265;
  var _onProgressChanged = dart.privateName(scaffold$, "_onProgressChanged");
  var _isExtendedFloatingActionButton = dart.privateName(scaffold$, "_isExtendedFloatingActionButton");
  var C2268;
  var C2269;
  var C2267;
  var C2266;
  var C2272;
  var C2273;
  var C2271;
  var C2270;
  var C2276;
  var C2277;
  var C2275;
  var C2274;
  var C2280;
  var C2281;
  var C2279;
  var C2278;
  var C2284;
  var C2285;
  var C2283;
  var C2282;
  var C2288;
  var C2289;
  var C2287;
  var C2286;
  var C2292;
  var C2293;
  var C2291;
  var C2290;
  var C2296;
  var C2297;
  var C2295;
  var C2294;
  const State_TickerProviderStateMixin$36$2 = class State_TickerProviderStateMixin extends framework.State$(dart.legacy(scaffold$._FloatingActionButtonTransition)) {};
  (State_TickerProviderStateMixin$36$2.new = function() {
    ticker_provider.TickerProviderStateMixin$(dart.legacy(scaffold$._FloatingActionButtonTransition))[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$2.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$2.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$2, ticker_provider.TickerProviderStateMixin$(dart.legacy(scaffold$._FloatingActionButtonTransition)));
  scaffold$._FloatingActionButtonTransitionState = class _FloatingActionButtonTransitionState extends State_TickerProviderStateMixin$36$2 {
    initState() {
      let t12;
      super.initState();
      this[_previousController] = (t12 = new animation_controller.AnimationController.new({duration: floating_action_button_location.kFloatingActionButtonSegue, vsync: this}), (() => {
        t12.addStatusListener(dart.bind(this, _handlePreviousAnimationStatusChanged));
        return t12;
      })());
      this[_updateAnimations]();
      if (this.widget.child != null) {
        this.widget.currentController.value = 1.0;
      } else {
        this[_updateGeometryScale](0.0);
      }
    }
    dispose() {
      this[_previousController].dispose();
      super.dispose();
    }
    didUpdateWidget(oldWidget) {
      let t12, t12$, t12$0;
      _FloatingActionButtonTransitionL().as(oldWidget);
      super.didUpdateWidget(oldWidget);
      let oldChildIsNull = oldWidget.child == null;
      let newChildIsNull = this.widget.child == null;
      if (oldChildIsNull[$_equals](newChildIsNull) && dart.equals((t12 = oldWidget.child, t12 == null ? null : t12.key), (t12$ = this.widget.child, t12$ == null ? null : t12$.key))) return;
      if (!dart.equals(oldWidget.fabMotionAnimator, this.widget.fabMotionAnimator) || !dart.equals(oldWidget.fabMoveAnimation, this.widget.fabMoveAnimation)) {
        this[_updateAnimations]();
      }
      if (this[_previousController].status == animation.AnimationStatus.dismissed) {
        let currentValue = this.widget.currentController.value;
        if (currentValue === 0.0 || oldWidget.child == null) {
          this[_previousChild] = null;
          if (this.widget.child != null) this.widget.currentController.forward();
        } else {
          this[_previousChild] = oldWidget.child;
          t12$0 = this[_previousController];
          (() => {
            t12$0.value = currentValue;
            t12$0.reverse();
            return t12$0;
          })();
          this.widget.currentController.value = 0.0;
        }
      }
    }
    [_updateAnimations]() {
      let previousExitScaleAnimation = new animations.CurvedAnimation.new({parent: this[_previousController], curve: curves.Curves.easeIn});
      let previousExitRotationAnimation = new (TweenOfdoubleL()).new({begin: 1.0, end: 1.0}).animate(new animations.CurvedAnimation.new({parent: this[_previousController], curve: curves.Curves.easeIn}));
      let currentEntranceScaleAnimation = new animations.CurvedAnimation.new({parent: this.widget.currentController, curve: curves.Curves.easeIn});
      let currentEntranceRotationAnimation = this.widget.currentController.drive(doubleL(), scaffold$._FloatingActionButtonTransitionState._entranceTurnTween);
      let moveScaleAnimation = this.widget.fabMotionAnimator.getScaleAnimation({parent: this.widget.fabMoveAnimation});
      let moveRotationAnimation = this.widget.fabMotionAnimator.getRotationAnimation({parent: this.widget.fabMoveAnimation});
      this[_previousScaleAnimation] = new (AnimationMinOfdoubleL()).new(moveScaleAnimation, previousExitScaleAnimation);
      this[_currentScaleAnimation] = new (AnimationMinOfdoubleL()).new(moveScaleAnimation, currentEntranceScaleAnimation);
      this[_extendedCurrentScaleAnimation] = this[_currentScaleAnimation].drive(doubleL(), new tween.CurveTween.new({curve: C2265 || CT.C2265}));
      this[_previousRotationAnimation] = new animations.TrainHoppingAnimation.new(previousExitRotationAnimation, moveRotationAnimation);
      this[_currentRotationAnimation] = new animations.TrainHoppingAnimation.new(currentEntranceRotationAnimation, moveRotationAnimation);
      this[_currentScaleAnimation].addListener(dart.bind(this, _onProgressChanged));
      this[_previousScaleAnimation].addListener(dart.bind(this, _onProgressChanged));
    }
    [_handlePreviousAnimationStatusChanged](status) {
      this.setState(dart.fn(() => {
        if (status == animation.AnimationStatus.dismissed) {
          if (!(this.widget.currentController.status == animation.AnimationStatus.dismissed)) dart.assertFailed(null, L105, 767, 16, "widget.currentController.status == AnimationStatus.dismissed");
          if (this.widget.child != null) this.widget.currentController.forward();
        }
      }, VoidToNullN()));
    }
    [_isExtendedFloatingActionButton](widget) {
      return FloatingActionButtonL().is(widget) && dart.test(widget.isExtended);
    }
    build(context) {
      return new basic.Stack.new({alignment: alignment.Alignment.centerRight, children: (() => {
          let t12 = JSArrayOfWidgetL().of([]);
          if (this[_previousController].status != animation.AnimationStatus.dismissed) if (dart.test(this[_isExtendedFloatingActionButton](this[_previousChild])))
            t12[$add](new transitions.FadeTransition.new({opacity: this[_previousScaleAnimation], child: this[_previousChild], $creationLocationd_0dea112b090073317d4: C2266 || CT.C2266}));
          else
            t12[$add](new transitions.ScaleTransition.new({scale: this[_previousScaleAnimation], child: new transitions.RotationTransition.new({turns: this[_previousRotationAnimation], child: this[_previousChild], $creationLocationd_0dea112b090073317d4: C2270 || CT.C2270}), $creationLocationd_0dea112b090073317d4: C2274 || CT.C2274}));
          if (dart.test(this[_isExtendedFloatingActionButton](this.widget.child)))
            t12[$add](new transitions.ScaleTransition.new({scale: this[_extendedCurrentScaleAnimation], child: new transitions.FadeTransition.new({opacity: this[_currentScaleAnimation], child: this.widget.child, $creationLocationd_0dea112b090073317d4: C2278 || CT.C2278}), $creationLocationd_0dea112b090073317d4: C2282 || CT.C2282}));
          else
            t12[$add](new transitions.ScaleTransition.new({scale: this[_currentScaleAnimation], child: new transitions.RotationTransition.new({turns: this[_currentRotationAnimation], child: this.widget.child, $creationLocationd_0dea112b090073317d4: C2286 || CT.C2286}), $creationLocationd_0dea112b090073317d4: C2290 || CT.C2290}));
          return t12;
        })(), $creationLocationd_0dea112b090073317d4: C2294 || CT.C2294});
    }
    [_onProgressChanged]() {
      this[_updateGeometryScale](math.max(doubleL(), this[_previousScaleAnimation].value, this[_currentScaleAnimation].value));
    }
    [_updateGeometryScale](scale) {
      this.widget.geometryNotifier[_updateWith]({floatingActionButtonScale: scale});
    }
  };
  (scaffold$._FloatingActionButtonTransitionState.new = function() {
    this[_previousController] = null;
    this[_previousScaleAnimation] = null;
    this[_previousRotationAnimation] = null;
    this[_currentScaleAnimation] = null;
    this[_extendedCurrentScaleAnimation] = null;
    this[_currentRotationAnimation] = null;
    this[_previousChild] = null;
    scaffold$._FloatingActionButtonTransitionState.__proto__.new.call(this);
    ;
  }).prototype = scaffold$._FloatingActionButtonTransitionState.prototype;
  dart.addTypeTests(scaffold$._FloatingActionButtonTransitionState);
  dart.addTypeCaches(scaffold$._FloatingActionButtonTransitionState);
  dart.setMethodSignature(scaffold$._FloatingActionButtonTransitionState, () => ({
    __proto__: dart.getMethods(scaffold$._FloatingActionButtonTransitionState.__proto__),
    [_updateAnimations]: dart.fnType(dart.void, []),
    [_handlePreviousAnimationStatusChanged]: dart.fnType(dart.void, [dart.legacy(animation.AnimationStatus)]),
    [_isExtendedFloatingActionButton]: dart.fnType(dart.legacy(core.bool), [dart.legacy(framework.Widget)]),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)]),
    [_onProgressChanged]: dart.fnType(dart.void, []),
    [_updateGeometryScale]: dart.fnType(dart.void, [dart.legacy(core.double)])
  }));
  dart.setLibraryUri(scaffold$._FloatingActionButtonTransitionState, L104);
  dart.setFieldSignature(scaffold$._FloatingActionButtonTransitionState, () => ({
    __proto__: dart.getFields(scaffold$._FloatingActionButtonTransitionState.__proto__),
    [_previousController]: dart.fieldType(dart.legacy(animation_controller.AnimationController)),
    [_previousScaleAnimation]: dart.fieldType(dart.legacy(animation.Animation$(dart.legacy(core.double)))),
    [_previousRotationAnimation]: dart.fieldType(dart.legacy(animation.Animation$(dart.legacy(core.double)))),
    [_currentScaleAnimation]: dart.fieldType(dart.legacy(animation.Animation$(dart.legacy(core.double)))),
    [_extendedCurrentScaleAnimation]: dart.fieldType(dart.legacy(animation.Animation$(dart.legacy(core.double)))),
    [_currentRotationAnimation]: dart.fieldType(dart.legacy(animation.Animation$(dart.legacy(core.double)))),
    [_previousChild]: dart.fieldType(dart.legacy(framework.Widget))
  }));
  dart.defineLazy(scaffold$._FloatingActionButtonTransitionState, {
    /*scaffold$._FloatingActionButtonTransitionState._entranceTurnTween*/get _entranceTurnTween() {
      return new (TweenOfdoubleL()).new({begin: 1.0 - 0.125, end: 1.0}).chain(new tween.CurveTween.new({curve: curves.Curves.easeIn}));
    }
  }, true);
  var extendBody$0 = dart.privateName(scaffold$, "Scaffold.extendBody");
  var extendBodyBehindAppBar$0 = dart.privateName(scaffold$, "Scaffold.extendBodyBehindAppBar");
  var appBar$ = dart.privateName(scaffold$, "Scaffold.appBar");
  var body$0 = dart.privateName(scaffold$, "Scaffold.body");
  var floatingActionButton$ = dart.privateName(scaffold$, "Scaffold.floatingActionButton");
  var floatingActionButtonLocation$ = dart.privateName(scaffold$, "Scaffold.floatingActionButtonLocation");
  var floatingActionButtonAnimator$ = dart.privateName(scaffold$, "Scaffold.floatingActionButtonAnimator");
  var persistentFooterButtons$ = dart.privateName(scaffold$, "Scaffold.persistentFooterButtons");
  var drawer$ = dart.privateName(scaffold$, "Scaffold.drawer");
  var endDrawer$ = dart.privateName(scaffold$, "Scaffold.endDrawer");
  var drawerScrimColor$ = dart.privateName(scaffold$, "Scaffold.drawerScrimColor");
  var backgroundColor$18 = dart.privateName(scaffold$, "Scaffold.backgroundColor");
  var bottomNavigationBar$ = dart.privateName(scaffold$, "Scaffold.bottomNavigationBar");
  var bottomSheet$ = dart.privateName(scaffold$, "Scaffold.bottomSheet");
  var resizeToAvoidBottomPadding$ = dart.privateName(scaffold$, "Scaffold.resizeToAvoidBottomPadding");
  var resizeToAvoidBottomInset$ = dart.privateName(scaffold$, "Scaffold.resizeToAvoidBottomInset");
  var primary$0 = dart.privateName(scaffold$, "Scaffold.primary");
  var drawerDragStartBehavior$ = dart.privateName(scaffold$, "Scaffold.drawerDragStartBehavior");
  var drawerEdgeDragWidth$ = dart.privateName(scaffold$, "Scaffold.drawerEdgeDragWidth");
  var drawerEnableOpenDragGesture$ = dart.privateName(scaffold$, "Scaffold.drawerEnableOpenDragGesture");
  var endDrawerEnableOpenDragGesture$ = dart.privateName(scaffold$, "Scaffold.endDrawerEnableOpenDragGesture");
  scaffold$.Scaffold = class Scaffold extends framework.StatefulWidget {
    get extendBody() {
      return this[extendBody$0];
    }
    set extendBody(value) {
      super.extendBody = value;
    }
    get extendBodyBehindAppBar() {
      return this[extendBodyBehindAppBar$0];
    }
    set extendBodyBehindAppBar(value) {
      super.extendBodyBehindAppBar = value;
    }
    get appBar() {
      return this[appBar$];
    }
    set appBar(value) {
      super.appBar = value;
    }
    get body() {
      return this[body$0];
    }
    set body(value) {
      super.body = value;
    }
    get floatingActionButton() {
      return this[floatingActionButton$];
    }
    set floatingActionButton(value) {
      super.floatingActionButton = value;
    }
    get floatingActionButtonLocation() {
      return this[floatingActionButtonLocation$];
    }
    set floatingActionButtonLocation(value) {
      super.floatingActionButtonLocation = value;
    }
    get floatingActionButtonAnimator() {
      return this[floatingActionButtonAnimator$];
    }
    set floatingActionButtonAnimator(value) {
      super.floatingActionButtonAnimator = value;
    }
    get persistentFooterButtons() {
      return this[persistentFooterButtons$];
    }
    set persistentFooterButtons(value) {
      super.persistentFooterButtons = value;
    }
    get drawer() {
      return this[drawer$];
    }
    set drawer(value) {
      super.drawer = value;
    }
    get endDrawer() {
      return this[endDrawer$];
    }
    set endDrawer(value) {
      super.endDrawer = value;
    }
    get drawerScrimColor() {
      return this[drawerScrimColor$];
    }
    set drawerScrimColor(value) {
      super.drawerScrimColor = value;
    }
    get backgroundColor() {
      return this[backgroundColor$18];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get bottomNavigationBar() {
      return this[bottomNavigationBar$];
    }
    set bottomNavigationBar(value) {
      super.bottomNavigationBar = value;
    }
    get bottomSheet() {
      return this[bottomSheet$];
    }
    set bottomSheet(value) {
      super.bottomSheet = value;
    }
    get resizeToAvoidBottomPadding() {
      return this[resizeToAvoidBottomPadding$];
    }
    set resizeToAvoidBottomPadding(value) {
      super.resizeToAvoidBottomPadding = value;
    }
    get resizeToAvoidBottomInset() {
      return this[resizeToAvoidBottomInset$];
    }
    set resizeToAvoidBottomInset(value) {
      super.resizeToAvoidBottomInset = value;
    }
    get primary() {
      return this[primary$0];
    }
    set primary(value) {
      super.primary = value;
    }
    get drawerDragStartBehavior() {
      return this[drawerDragStartBehavior$];
    }
    set drawerDragStartBehavior(value) {
      super.drawerDragStartBehavior = value;
    }
    get drawerEdgeDragWidth() {
      return this[drawerEdgeDragWidth$];
    }
    set drawerEdgeDragWidth(value) {
      super.drawerEdgeDragWidth = value;
    }
    get drawerEnableOpenDragGesture() {
      return this[drawerEnableOpenDragGesture$];
    }
    set drawerEnableOpenDragGesture(value) {
      super.drawerEnableOpenDragGesture = value;
    }
    get endDrawerEnableOpenDragGesture() {
      return this[endDrawerEnableOpenDragGesture$];
    }
    set endDrawerEnableOpenDragGesture(value) {
      super.endDrawerEnableOpenDragGesture = value;
    }
    static of(context, opts) {
      let nullOk = opts && 'nullOk' in opts ? opts.nullOk : false;
      if (!(nullOk != null)) dart.assertFailed(null, L105, 1453, 12, "nullOk != null");
      if (!(context != null)) dart.assertFailed(null, L105, 1454, 12, "context != null");
      let result = context.findAncestorStateOfType(ScaffoldStateL());
      if (dart.test(nullOk) || result != null) return result;
      dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNodeL().of([new assertions.ErrorSummary.new("Scaffold.of() called with a context that does not contain a Scaffold."), new assertions.ErrorDescription.new("No Scaffold ancestor could be found starting from the context that was passed to Scaffold.of(). " + "This usually happens when the context provided is from the same StatefulWidget as that " + "whose build function actually creates the Scaffold widget being sought."), new assertions.ErrorHint.new("There are several ways to avoid this problem. The simplest is to use a Builder to get a " + "context that is \"under\" the Scaffold. For an example of this, please see the " + "documentation for Scaffold.of():\n" + "  https://api.flutter.dev/flutter/material/Scaffold/of.html"), new assertions.ErrorHint.new("A more efficient solution is to split your build function into several widgets. This " + "introduces a new context from which you can obtain the Scaffold. In this solution, " + "you would have an outer widget that creates the Scaffold populated by instances of " + "your new inner widgets, and then in these inner widgets you would use Scaffold.of().\n" + "A less elegant but more expedient solution is assign a GlobalKey to the Scaffold, " + "then use the key.currentState property to obtain the ScaffoldState rather than " + "using the Scaffold.of() function."), context.describeElement("The context used was")])));
    }
    static geometryOf(context) {
      let scaffoldScope = context.dependOnInheritedWidgetOfExactType(_ScaffoldScopeL());
      if (scaffoldScope == null) dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNodeL().of([new assertions.ErrorSummary.new("Scaffold.geometryOf() called with a context that does not contain a Scaffold."), new assertions.ErrorDescription.new("This usually happens when the context provided is from the same StatefulWidget as that " + "whose build function actually creates the Scaffold widget being sought."), new assertions.ErrorHint.new("There are several ways to avoid this problem. The simplest is to use a Builder to get a " + "context that is \"under\" the Scaffold. For an example of this, please see the " + "documentation for Scaffold.of():\n" + "  https://api.flutter.dev/flutter/material/Scaffold/of.html"), new assertions.ErrorHint.new("A more efficient solution is to split your build function into several widgets. This " + "introduces a new context from which you can obtain the Scaffold. In this solution, " + "you would have an outer widget that creates the Scaffold populated by instances of " + "your new inner widgets, and then in these inner widgets you would use Scaffold.geometryOf()."), context.describeElement("The context used was")])));
      return scaffoldScope.geometryNotifier;
    }
    static hasDrawer(context, opts) {
      let t13, t13$, t13$0, t13$1;
      let registerForUpdates = opts && 'registerForUpdates' in opts ? opts.registerForUpdates : true;
      if (!(registerForUpdates != null)) dart.assertFailed(null, L105, 1548, 12, "registerForUpdates != null");
      if (!(context != null)) dart.assertFailed(null, L105, 1549, 12, "context != null");
      if (dart.test(registerForUpdates)) {
        let scaffold = context.dependOnInheritedWidgetOfExactType(_ScaffoldScopeL());
        t13$ = (t13 = scaffold, t13 == null ? null : t13.hasDrawer);
        return t13$ == null ? false : t13$;
      } else {
        let scaffold = context.findAncestorStateOfType(ScaffoldStateL());
        t13$1 = (t13$0 = scaffold, t13$0 == null ? null : t13$0.hasDrawer);
        return t13$1 == null ? false : t13$1;
      }
    }
    createState() {
      return new scaffold$.ScaffoldState.new();
    }
  };
  (scaffold$.Scaffold.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let appBar = opts && 'appBar' in opts ? opts.appBar : null;
    let body = opts && 'body' in opts ? opts.body : null;
    let floatingActionButton = opts && 'floatingActionButton' in opts ? opts.floatingActionButton : null;
    let floatingActionButtonLocation = opts && 'floatingActionButtonLocation' in opts ? opts.floatingActionButtonLocation : null;
    let floatingActionButtonAnimator = opts && 'floatingActionButtonAnimator' in opts ? opts.floatingActionButtonAnimator : null;
    let persistentFooterButtons = opts && 'persistentFooterButtons' in opts ? opts.persistentFooterButtons : null;
    let drawer = opts && 'drawer' in opts ? opts.drawer : null;
    let endDrawer = opts && 'endDrawer' in opts ? opts.endDrawer : null;
    let bottomNavigationBar = opts && 'bottomNavigationBar' in opts ? opts.bottomNavigationBar : null;
    let bottomSheet = opts && 'bottomSheet' in opts ? opts.bottomSheet : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let resizeToAvoidBottomPadding = opts && 'resizeToAvoidBottomPadding' in opts ? opts.resizeToAvoidBottomPadding : null;
    let resizeToAvoidBottomInset = opts && 'resizeToAvoidBottomInset' in opts ? opts.resizeToAvoidBottomInset : null;
    let primary = opts && 'primary' in opts ? opts.primary : true;
    let drawerDragStartBehavior = opts && 'drawerDragStartBehavior' in opts ? opts.drawerDragStartBehavior : C588 || CT.C588;
    let extendBody = opts && 'extendBody' in opts ? opts.extendBody : false;
    let extendBodyBehindAppBar = opts && 'extendBodyBehindAppBar' in opts ? opts.extendBodyBehindAppBar : false;
    let drawerScrimColor = opts && 'drawerScrimColor' in opts ? opts.drawerScrimColor : null;
    let drawerEdgeDragWidth = opts && 'drawerEdgeDragWidth' in opts ? opts.drawerEdgeDragWidth : null;
    let drawerEnableOpenDragGesture = opts && 'drawerEnableOpenDragGesture' in opts ? opts.drawerEnableOpenDragGesture : true;
    let endDrawerEnableOpenDragGesture = opts && 'endDrawerEnableOpenDragGesture' in opts ? opts.endDrawerEnableOpenDragGesture : true;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[appBar$] = appBar;
    this[body$0] = body;
    this[floatingActionButton$] = floatingActionButton;
    this[floatingActionButtonLocation$] = floatingActionButtonLocation;
    this[floatingActionButtonAnimator$] = floatingActionButtonAnimator;
    this[persistentFooterButtons$] = persistentFooterButtons;
    this[drawer$] = drawer;
    this[endDrawer$] = endDrawer;
    this[bottomNavigationBar$] = bottomNavigationBar;
    this[bottomSheet$] = bottomSheet;
    this[backgroundColor$18] = backgroundColor;
    this[resizeToAvoidBottomPadding$] = resizeToAvoidBottomPadding;
    this[resizeToAvoidBottomInset$] = resizeToAvoidBottomInset;
    this[primary$0] = primary;
    this[drawerDragStartBehavior$] = drawerDragStartBehavior;
    this[extendBody$0] = extendBody;
    this[extendBodyBehindAppBar$0] = extendBodyBehindAppBar;
    this[drawerScrimColor$] = drawerScrimColor;
    this[drawerEdgeDragWidth$] = drawerEdgeDragWidth;
    this[drawerEnableOpenDragGesture$] = drawerEnableOpenDragGesture;
    this[endDrawerEnableOpenDragGesture$] = endDrawerEnableOpenDragGesture;
    if (!(primary != null)) dart.assertFailed(null, L105, 1033, 15, "primary != null");
    if (!(extendBody != null)) dart.assertFailed(null, L105, 1034, 15, "extendBody != null");
    if (!(extendBodyBehindAppBar != null)) dart.assertFailed(null, L105, 1035, 15, "extendBodyBehindAppBar != null");
    if (!(drawerDragStartBehavior != null)) dart.assertFailed(null, L105, 1036, 15, "drawerDragStartBehavior != null");
    scaffold$.Scaffold.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scaffold$.Scaffold.prototype;
  dart.addTypeTests(scaffold$.Scaffold);
  dart.addTypeCaches(scaffold$.Scaffold);
  dart.setMethodSignature(scaffold$.Scaffold, () => ({
    __proto__: dart.getMethods(scaffold$.Scaffold.__proto__),
    createState: dart.fnType(dart.legacy(scaffold$.ScaffoldState), [])
  }));
  dart.setLibraryUri(scaffold$.Scaffold, L104);
  dart.setFieldSignature(scaffold$.Scaffold, () => ({
    __proto__: dart.getFields(scaffold$.Scaffold.__proto__),
    extendBody: dart.finalFieldType(dart.legacy(core.bool)),
    extendBodyBehindAppBar: dart.finalFieldType(dart.legacy(core.bool)),
    appBar: dart.finalFieldType(dart.legacy(preferred_size.PreferredSizeWidget)),
    body: dart.finalFieldType(dart.legacy(framework.Widget)),
    floatingActionButton: dart.finalFieldType(dart.legacy(framework.Widget)),
    floatingActionButtonLocation: dart.finalFieldType(dart.legacy(floating_action_button_location.FloatingActionButtonLocation)),
    floatingActionButtonAnimator: dart.finalFieldType(dart.legacy(floating_action_button_location.FloatingActionButtonAnimator)),
    persistentFooterButtons: dart.finalFieldType(dart.legacy(core.List$(dart.legacy(framework.Widget)))),
    drawer: dart.finalFieldType(dart.legacy(framework.Widget)),
    endDrawer: dart.finalFieldType(dart.legacy(framework.Widget)),
    drawerScrimColor: dart.finalFieldType(dart.legacy(ui.Color)),
    backgroundColor: dart.finalFieldType(dart.legacy(ui.Color)),
    bottomNavigationBar: dart.finalFieldType(dart.legacy(framework.Widget)),
    bottomSheet: dart.finalFieldType(dart.legacy(framework.Widget)),
    resizeToAvoidBottomPadding: dart.finalFieldType(dart.legacy(core.bool)),
    resizeToAvoidBottomInset: dart.finalFieldType(dart.legacy(core.bool)),
    primary: dart.finalFieldType(dart.legacy(core.bool)),
    drawerDragStartBehavior: dart.finalFieldType(dart.legacy(recognizer.DragStartBehavior)),
    drawerEdgeDragWidth: dart.finalFieldType(dart.legacy(core.double)),
    drawerEnableOpenDragGesture: dart.finalFieldType(dart.legacy(core.bool)),
    endDrawerEnableOpenDragGesture: dart.finalFieldType(dart.legacy(core.bool))
  }));
  var _drawerKey$ = dart.privateName(scaffold$, "_drawerKey");
  var _endDrawerKey = dart.privateName(scaffold$, "_endDrawerKey");
  var _appBarMaxHeight = dart.privateName(scaffold$, "_appBarMaxHeight");
  var _drawerOpened = dart.privateName(scaffold$, "_drawerOpened");
  var _endDrawerOpened = dart.privateName(scaffold$, "_endDrawerOpened");
  var _snackBars = dart.privateName(scaffold$, "_snackBars");
  var _snackBarController = dart.privateName(scaffold$, "_snackBarController");
  var _snackBarTimer = dart.privateName(scaffold$, "_snackBarTimer");
  var _accessibleNavigation = dart.privateName(scaffold$, "_accessibleNavigation");
  var _dismissedBottomSheets = dart.privateName(scaffold$, "_dismissedBottomSheets");
  var _currentBottomSheet = dart.privateName(scaffold$, "_currentBottomSheet");
  var _floatingActionButtonMoveController = dart.privateName(scaffold$, "_floatingActionButtonMoveController");
  var _floatingActionButtonAnimator = dart.privateName(scaffold$, "_floatingActionButtonAnimator");
  var _previousFloatingActionButtonLocation = dart.privateName(scaffold$, "_previousFloatingActionButtonLocation");
  var _floatingActionButtonLocation = dart.privateName(scaffold$, "_floatingActionButtonLocation");
  var _floatingActionButtonVisibilityController = dart.privateName(scaffold$, "_floatingActionButtonVisibilityController");
  var _primaryScrollController = dart.privateName(scaffold$, "_primaryScrollController");
  var _geometryNotifier = dart.privateName(scaffold$, "_geometryNotifier");
  var _showBodyScrim = dart.privateName(scaffold$, "_showBodyScrim");
  var _bodyScrimColor = dart.privateName(scaffold$, "_bodyScrimColor");
  var _drawerOpenedCallback = dart.privateName(scaffold$, "_drawerOpenedCallback");
  var _endDrawerOpenedCallback = dart.privateName(scaffold$, "_endDrawerOpenedCallback");
  var _handleSnackBarStatusChange = dart.privateName(scaffold$, "_handleSnackBarStatusChange");
  var _completer = dart.privateName(scaffold$, "_completer");
  var _floatingActionButtonVisibilityValue = dart.privateName(scaffold$, "_floatingActionButtonVisibilityValue");
  var C2300;
  var C2299;
  var C2298;
  var C2303;
  var C2304;
  var C2302;
  var C2301;
  var _buildBottomSheet = dart.privateName(scaffold$, "_buildBottomSheet");
  var _maybeBuildPersistentBottomSheet = dart.privateName(scaffold$, "_maybeBuildPersistentBottomSheet");
  var _isLocalHistoryEntry = dart.privateName(scaffold$, "_isLocalHistoryEntry");
  var _closeCurrentBottomSheet = dart.privateName(scaffold$, "_closeCurrentBottomSheet");
  var _widget = dart.privateName(scaffold$, "_widget");
  var _showFloatingActionButton = dart.privateName(scaffold$, "_showFloatingActionButton");
  var C2307;
  var C2308;
  var C2309;
  var C2310;
  var C2311;
  var C2312;
  var C2313;
  var C2314;
  var C2315;
  var C2316;
  var C2317;
  var C2306;
  var C2305;
  var _moveFloatingActionButton = dart.privateName(scaffold$, "_moveFloatingActionButton");
  var C2318;
  var _handleStatusBarTap = dart.privateName(scaffold$, "_handleStatusBarTap");
  var _resizeToAvoidBottomInset = dart.privateName(scaffold$, "_resizeToAvoidBottomInset");
  var C2319;
  var C2322;
  var C2323;
  var C2321;
  var C2320;
  var C2326;
  var C2327;
  var C2325;
  var C2324;
  var _addIfNonNull = dart.privateName(scaffold$, "_addIfNonNull");
  var C2330;
  var C2331;
  var C2332;
  var C2333;
  var C2334;
  var C2335;
  var C2336;
  var C2337;
  var C2329;
  var C2328;
  var _buildEndDrawer = dart.privateName(scaffold$, "_buildEndDrawer");
  var C2340;
  var C2341;
  var C2342;
  var C2343;
  var C2344;
  var C2345;
  var C2346;
  var C2347;
  var C2339;
  var C2338;
  var _buildDrawer$ = dart.privateName(scaffold$, "_buildDrawer");
  var C2350;
  var C2351;
  var C2352;
  var C2349;
  var C2348;
  var C2355;
  var C2356;
  var C2354;
  var C2353;
  var C2359;
  var C2360;
  var C2358;
  var C2357;
  var C2363;
  var C2362;
  var C2361;
  var C2366;
  var C2367;
  var C2365;
  var C2364;
  var C2370;
  var C2371;
  var C2369;
  var C2368;
  var C2374;
  var C2375;
  var C2373;
  var C2372;
  var C2378;
  var C2379;
  var C2380;
  var C2381;
  var C2382;
  var C2377;
  var C2376;
  var C2385;
  var C2386;
  var C2387;
  var C2384;
  var C2383;
  var C2390;
  var C2391;
  var C2389;
  var C2388;
  var C2394;
  var C2395;
  var C2393;
  var C2392;
  var C2398;
  var C2399;
  var C2397;
  var C2396;
  var C2402;
  var C2403;
  var C2401;
  var C2400;
  var C2406;
  var C2407;
  var C2408;
  var C2405;
  var C2404;
  const State_TickerProviderStateMixin$36$3 = class State_TickerProviderStateMixin extends framework.State$(dart.legacy(scaffold$.Scaffold)) {};
  (State_TickerProviderStateMixin$36$3.new = function() {
    ticker_provider.TickerProviderStateMixin$(dart.legacy(scaffold$.Scaffold))[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$3.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$3.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$3, ticker_provider.TickerProviderStateMixin$(dart.legacy(scaffold$.Scaffold)));
  scaffold$.ScaffoldState = class ScaffoldState extends State_TickerProviderStateMixin$36$3 {
    get hasAppBar() {
      return this.widget.appBar != null;
    }
    get hasDrawer() {
      return this.widget.drawer != null;
    }
    get hasEndDrawer() {
      return this.widget.endDrawer != null;
    }
    get hasFloatingActionButton() {
      return this.widget.floatingActionButton != null;
    }
    get appBarMaxHeight() {
      return this[_appBarMaxHeight];
    }
    get isDrawerOpen() {
      return this[_drawerOpened];
    }
    get isEndDrawerOpen() {
      return this[_endDrawerOpened];
    }
    [_drawerOpenedCallback](isOpened) {
      this.setState(dart.fn(() => {
        this[_drawerOpened] = isOpened;
      }, VoidToNullN()));
    }
    [_endDrawerOpenedCallback](isOpened) {
      this.setState(dart.fn(() => {
        this[_endDrawerOpened] = isOpened;
      }, VoidToNullN()));
    }
    openDrawer() {
      let t13;
      if (this[_endDrawerKey].currentState != null && dart.test(this[_endDrawerOpened])) this[_endDrawerKey].currentState.close();
      t13 = this[_drawerKey$].currentState;
      t13 == null ? null : t13.open();
    }
    openEndDrawer() {
      let t13;
      if (this[_drawerKey$].currentState != null && dart.test(this[_drawerOpened])) this[_drawerKey$].currentState.close();
      t13 = this[_endDrawerKey].currentState;
      t13 == null ? null : t13.open();
    }
    showSnackBar(snackbar) {
      let t13;
      this[_snackBarController] == null ? this[_snackBarController] = (t13 = snack_bar.SnackBar.createAnimationController({vsync: this}), (() => {
        t13.addStatusListener(dart.bind(this, _handleSnackBarStatusChange));
        return t13;
      })()) : null;
      if (dart.test(this[_snackBars][$isEmpty])) {
        if (!dart.test(this[_snackBarController].isDismissed)) dart.assertFailed(null, L105, 1701, 14, "_snackBarController.isDismissed");
        this[_snackBarController].forward();
      }
      let controller = null;
      controller = new (ScaffoldFeatureControllerOfSnackBarL$SnackBarClosedReasonL()).__(snackbar.withAnimation(this[_snackBarController], {fallbackKey: new framework.UniqueKey.new()}), CompleterOfSnackBarClosedReasonL().new(), dart.fn(() => {
        if (!dart.equals(this[_snackBars][$first], controller)) dart.assertFailed(null, L105, 1712, 16, "_snackBars.first == controller");
        this.hideCurrentSnackBar({reason: snack_bar.SnackBarClosedReason.hide});
      }, VoidToNullN()), null);
      this.setState(dart.fn(() => {
        this[_snackBars].addLast(controller);
      }, VoidToNullN()));
      return controller;
    }
    [_handleSnackBarStatusChange](status) {
      switch (status) {
        case C119 || CT.C119:
        {
          if (!dart.test(this[_snackBars][$isNotEmpty])) dart.assertFailed(null, L105, 1726, 16, "_snackBars.isNotEmpty");
          this.setState(dart.fn(() => {
            this[_snackBars].removeFirst();
          }, VoidToNullN()));
          if (dart.test(this[_snackBars][$isNotEmpty])) this[_snackBarController].forward();
          break;
        }
        case C122 || CT.C122:
        {
          this.setState(dart.fn(() => {
            if (!(this[_snackBarTimer] == null)) dart.assertFailed(null, L105, 1735, 18, "_snackBarTimer == null");
          }, VoidToNullN()));
          break;
        }
        case C120 || CT.C120:
        case C121 || CT.C121:
        {
          break;
        }
      }
    }
    removeCurrentSnackBar(opts) {
      let t13;
      let reason = opts && 'reason' in opts ? opts.reason : C91 || CT.C91;
      if (!(reason != null)) dart.assertFailed(null, L105, 1750, 12, "reason != null");
      if (dart.test(this[_snackBars][$isEmpty])) return;
      let completer = this[_snackBars][$first][_completer];
      if (!dart.test(completer.isCompleted)) completer.complete(reason);
      t13 = this[_snackBarTimer];
      t13 == null ? null : t13.cancel();
      this[_snackBarTimer] = null;
      this[_snackBarController].value = 0.0;
    }
    hideCurrentSnackBar(opts) {
      let t13;
      let reason = opts && 'reason' in opts ? opts.reason : C90 || CT.C90;
      if (!(reason != null)) dart.assertFailed(null, L105, 1765, 12, "reason != null");
      if (dart.test(this[_snackBars][$isEmpty]) || this[_snackBarController].status == animation.AnimationStatus.dismissed) return;
      let mediaQuery = media_query.MediaQuery.of(this.context);
      let completer = this[_snackBars][$first][_completer];
      if (dart.test(mediaQuery.accessibleNavigation)) {
        this[_snackBarController].value = 0.0;
        completer.complete(reason);
      } else {
        this[_snackBarController].reverse().then(dart.void, dart.fn(value => {
          if (!dart.test(this.mounted)) dart.assertFailed(null, L105, 1775, 16, "mounted");
          if (!dart.test(completer.isCompleted)) completer.complete(reason);
        }, voidToNullN()));
      }
      t13 = this[_snackBarTimer];
      t13 == null ? null : t13.cancel();
      this[_snackBarTimer] = null;
    }
    [_maybeBuildPersistentBottomSheet]() {
      let t13;
      if (this.widget.bottomSheet != null && this[_currentBottomSheet] == null) {
        let animationController = (t13 = bottom_sheet.BottomSheet.createAnimationController(this), (() => {
          t13.value = 1.0;
          return t13;
        })());
        let _persistentSheetHistoryEntry = null;
        const _persistentBottomSheetExtentChanged = notification => {
          if (dart.notNull(notification.extent) > dart.notNull(notification.initialExtent)) {
            if (_persistentSheetHistoryEntry == null) {
              _persistentSheetHistoryEntry = new routes.LocalHistoryEntry.new({onRemove: dart.fn(() => {
                  if (dart.notNull(notification.extent) > dart.notNull(notification.initialExtent)) {
                    draggable_scrollable_sheet.DraggableScrollableActuator.reset(notification.context);
                  }
                  this.showBodyScrim(false, 0.0);
                  this[_floatingActionButtonVisibilityValue] = 1.0;
                  _persistentSheetHistoryEntry = null;
                }, VoidToNullN())});
              routes.ModalRoute.of(ObjectL(), this.context).addLocalHistoryEntry(_persistentSheetHistoryEntry);
            }
          } else if (_persistentSheetHistoryEntry != null) {
            routes.ModalRoute.of(ObjectL(), this.context).removeLocalHistoryEntry(_persistentSheetHistoryEntry);
          }
          return false;
        };
        dart.fn(_persistentBottomSheetExtentChanged, DraggableScrollableNotificationLToboolL());
        this[_currentBottomSheet] = this[_buildBottomSheet](dart.void, dart.fn(context => new (NotificationListenerOfDraggableScrollableNotificationL()).new({onNotification: _persistentBottomSheetExtentChanged, child: new draggable_scrollable_sheet.DraggableScrollableActuator.new({child: this.widget.bottomSheet, $creationLocationd_0dea112b090073317d4: C2298 || CT.C2298}), $creationLocationd_0dea112b090073317d4: C2301 || CT.C2301}), BuildContextLToNotificationListenerLOfDraggableScrollableNotificationL()), true, {animationController: animationController});
      }
    }
    [_closeCurrentBottomSheet]() {
      if (this[_currentBottomSheet] != null) {
        if (!dart.test(this[_currentBottomSheet][_isLocalHistoryEntry])) {
          this[_currentBottomSheet].close();
        }
        if (!dart.test(dart.fn(() => {
          let t13, t13$, t13$0;
          t13$0 = (t13$ = (t13 = this[_currentBottomSheet], t13 == null ? null : t13[_completer]), t13$ == null ? null : t13$.future);
          t13$0 == null ? null : t13$0.whenComplete(dart.fn(() => {
            if (!(this[_currentBottomSheet] == null)) dart.assertFailed(null, L105, 1841, 18, "_currentBottomSheet == null");
          }, VoidToNullN()));
          return true;
        }, VoidToboolL())())) dart.assertFailed(null, L105, 1839, 14, "() {\r\n        _currentBottomSheet?._completer?.future?.whenComplete(() {\r\n          assert(_currentBottomSheet == null);\r\n        });\r\n        return true;\r\n      }()");
      }
    }
    [_buildBottomSheet](T, builder, isPersistent, opts) {
      let animationController = opts && 'animationController' in opts ? opts.animationController : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
      if (!dart.test(dart.fn(() => {
        if (this.widget.bottomSheet != null && dart.test(isPersistent) && this[_currentBottomSheet] != null) {
          dart.throw(assertions.FlutterError.new("Scaffold.bottomSheet cannot be specified while a bottom sheet " + "displayed with showBottomSheet() is still visible.\n" + "Rebuild the Scaffold with a null bottomSheet before calling showBottomSheet()."));
        }
        return true;
      }, VoidToboolL())())) dart.assertFailed(null, L105, 1857, 12, "() {\r\n      if (widget.bottomSheet != null && isPersistent && _currentBottomSheet != null) {\r\n        throw FlutterError(\r\n          'Scaffold.bottomSheet cannot be specified while a bottom sheet '\r\n          'displayed with showBottomSheet() is still visible.\\n'\r\n          'Rebuild the Scaffold with a null bottomSheet before calling showBottomSheet().'\r\n        );\r\n      }\r\n      return true;\r\n    }()");
      let completer = async.Completer$(dart.legacy(T)).new();
      let bottomSheetKey = GlobalKeyOf_StandardBottomSheetStateL().new();
      let bottomSheet = null;
      let removedEntry = false;
      const _removeCurrentBottomSheet = () => {
        removedEntry = true;
        if (this[_currentBottomSheet] == null) {
          return;
        }
        if (!dart.equals(this[_currentBottomSheet][_widget], bottomSheet)) dart.assertFailed(null, L105, 1878, 14, "_currentBottomSheet._widget == bottomSheet");
        if (!(bottomSheetKey.currentState != null)) dart.assertFailed(null, L105, 1879, 14, "bottomSheetKey.currentState != null");
        this[_showFloatingActionButton]();
        const _closed = value => {
          this.setState(dart.fn(() => {
            this[_currentBottomSheet] = null;
          }, VoidToNullN()));
          if (animationController.status != animation.AnimationStatus.dismissed) {
            this[_dismissedBottomSheets][$add](bottomSheet);
          }
          completer.complete();
        };
        dart.fn(_closed, voidTovoid());
        let closing = bottomSheetKey.currentState.close();
        if (closing != null) {
          closing.then(dart.void, _closed);
        } else {
          _closed(null);
        }
      };
      dart.fn(_removeCurrentBottomSheet, VoidTovoid());
      let entry = dart.test(isPersistent) ? null : new routes.LocalHistoryEntry.new({onRemove: dart.fn(() => {
          if (!removedEntry) {
            _removeCurrentBottomSheet();
          }
        }, VoidToNullN())});
      bottomSheet = new scaffold$._StandardBottomSheet.new({key: bottomSheetKey, animationController: animationController, enableDrag: !dart.test(isPersistent), onClosing: dart.fn(() => {
          if (this[_currentBottomSheet] == null) {
            return;
          }
          if (!dart.equals(this[_currentBottomSheet][_widget], bottomSheet)) dart.assertFailed(null, L105, 1917, 16, "_currentBottomSheet._widget == bottomSheet");
          if (!dart.test(isPersistent) && !removedEntry) {
            if (!(entry != null)) dart.assertFailed(null, L105, 1919, 18, "entry != null");
            entry.remove();
            removedEntry = true;
          }
        }, VoidToNullN()), onDismissed: dart.fn(() => {
          if (dart.test(this[_dismissedBottomSheets][$contains](bottomSheet))) {
            this.setState(dart.fn(() => {
              this[_dismissedBottomSheets][$remove](bottomSheet);
            }, VoidToNullN()));
          }
        }, VoidToNullN()), builder: builder, isPersistent: isPersistent, backgroundColor: backgroundColor, elevation: elevation, shape: shape, clipBehavior: clipBehavior, $creationLocationd_0dea112b090073317d4: C2305 || CT.C2305});
      if (!dart.test(isPersistent)) routes.ModalRoute.of(ObjectL(), this.context).addLocalHistoryEntry(entry);
      return new (scaffold$.PersistentBottomSheetController$(dart.legacy(T))).__(bottomSheet, completer, entry != null ? dart.bind(entry, 'remove') : _removeCurrentBottomSheet, dart.fn(fn => {
        let t13;
        t13 = bottomSheetKey.currentState;
        t13 == null ? null : t13.setState(fn);
      }, FnToNullN()), !dart.test(isPersistent));
    }
    showBottomSheet(T, builder, opts) {
      let t13;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
      if (!dart.test(dart.fn(() => {
        if (this.widget.bottomSheet != null) {
          dart.throw(assertions.FlutterError.new("Scaffold.bottomSheet cannot be specified while a bottom sheet " + "displayed with showBottomSheet() is still visible.\n" + "Rebuild the Scaffold with a null bottomSheet before calling showBottomSheet()."));
        }
        return true;
      }, VoidToboolL())())) dart.assertFailed(null, L105, 2035, 12, "() {\r\n      if (widget.bottomSheet != null) {\r\n        throw FlutterError(\r\n          'Scaffold.bottomSheet cannot be specified while a bottom sheet '\r\n          'displayed with showBottomSheet() is still visible.\\n'\r\n          'Rebuild the Scaffold with a null bottomSheet before calling showBottomSheet().'\r\n        );\r\n      }\r\n      return true;\r\n    }()");
      if (!dart.test(debug.debugCheckHasMediaQuery(this.context))) dart.assertFailed(null, L105, 2045, 12, "debugCheckHasMediaQuery(context)");
      this[_closeCurrentBottomSheet]();
      let controller = (t13 = bottom_sheet.BottomSheet.createAnimationController(this), (() => {
        t13.forward();
        return t13;
      })());
      this.setState(dart.fn(() => {
        this[_currentBottomSheet] = this[_buildBottomSheet](dart.legacy(T), builder, false, {animationController: controller, backgroundColor: backgroundColor, elevation: elevation, shape: shape, clipBehavior: clipBehavior});
      }, VoidToNullN()));
      return dart.legacy(scaffold$.PersistentBottomSheetController$(dart.legacy(T))).as(this[_currentBottomSheet]);
    }
    get [_floatingActionButtonVisibilityValue]() {
      return this[_floatingActionButtonVisibilityController].value;
    }
    set [_floatingActionButtonVisibilityValue](newValue) {
      if (!(newValue != null)) dart.assertFailed(null, L105, 2078, 12, "newValue != null");
      this[_floatingActionButtonVisibilityController].value = newValue[$clamp](this[_floatingActionButtonVisibilityController].lowerBound, this[_floatingActionButtonVisibilityController].upperBound);
    }
    [_showFloatingActionButton]() {
      return this[_floatingActionButtonVisibilityController].forward();
    }
    [_moveFloatingActionButton](newLocation) {
      let previousLocation = this[_floatingActionButtonLocation];
      let restartAnimationFrom = 0.0;
      if (dart.test(this[_floatingActionButtonMoveController].isAnimating)) {
        previousLocation = new scaffold$._TransitionSnapshotFabLocation.new(this[_previousFloatingActionButtonLocation], this[_floatingActionButtonLocation], this[_floatingActionButtonAnimator], this[_floatingActionButtonMoveController].value);
        restartAnimationFrom = this[_floatingActionButtonAnimator].getAnimationRestart(this[_floatingActionButtonMoveController].value);
      }
      this.setState(dart.fn(() => {
        this[_previousFloatingActionButtonLocation] = previousLocation;
        this[_floatingActionButtonLocation] = newLocation;
      }, VoidToNullN()));
      this[_floatingActionButtonMoveController].forward({from: restartAnimationFrom});
    }
    [_handleStatusBarTap]() {
      if (dart.test(this[_primaryScrollController].hasClients)) {
        this[_primaryScrollController].animateTo(0.0, {duration: C2318 || CT.C2318, curve: curves.Curves.linear});
      }
    }
    get [_resizeToAvoidBottomInset]() {
      let t13, t13$;
      t13$ = (t13 = this.widget.resizeToAvoidBottomInset, t13 == null ? this.widget.resizeToAvoidBottomPadding : t13);
      return t13$ == null ? true : t13$;
    }
    initState() {
      let t13, t13$;
      super.initState();
      this[_geometryNotifier] = new scaffold$._ScaffoldGeometryNotifier.new(C2319 || CT.C2319, this.context);
      this[_floatingActionButtonLocation] = (t13 = this.widget.floatingActionButtonLocation, t13 == null ? scaffold$._kDefaultFloatingActionButtonLocation : t13);
      this[_floatingActionButtonAnimator] = (t13$ = this.widget.floatingActionButtonAnimator, t13$ == null ? scaffold$._kDefaultFloatingActionButtonAnimator : t13$);
      this[_previousFloatingActionButtonLocation] = this[_floatingActionButtonLocation];
      this[_floatingActionButtonMoveController] = new animation_controller.AnimationController.new({vsync: this, lowerBound: 0.0, upperBound: 1.0, value: 1.0, duration: floating_action_button_location.kFloatingActionButtonSegue['*'](2)});
      this[_floatingActionButtonVisibilityController] = new animation_controller.AnimationController.new({duration: floating_action_button_location.kFloatingActionButtonSegue, vsync: this});
    }
    didUpdateWidget(oldWidget) {
      let t13, t13$;
      ScaffoldL().as(oldWidget);
      if (!dart.equals(this.widget.floatingActionButtonAnimator, oldWidget.floatingActionButtonAnimator)) {
        this[_floatingActionButtonAnimator] = (t13 = this.widget.floatingActionButtonAnimator, t13 == null ? scaffold$._kDefaultFloatingActionButtonAnimator : t13);
      }
      if (!dart.equals(this.widget.floatingActionButtonLocation, oldWidget.floatingActionButtonLocation)) {
        this[_moveFloatingActionButton]((t13$ = this.widget.floatingActionButtonLocation, t13$ == null ? scaffold$._kDefaultFloatingActionButtonLocation : t13$));
      }
      if (!dart.equals(this.widget.bottomSheet, oldWidget.bottomSheet)) {
        if (!dart.test(dart.fn(() => {
          let t13;
          if (this.widget.bottomSheet != null && dart.equals((t13 = this[_currentBottomSheet], t13 == null ? null : t13[_isLocalHistoryEntry]), true)) {
            dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNodeL().of([new assertions.ErrorSummary.new("Scaffold.bottomSheet cannot be specified while a bottom sheet displayed " + "with showBottomSheet() is still visible."), new assertions.ErrorHint.new("Use the PersistentBottomSheetController " + "returned by showBottomSheet() to close the old bottom sheet before creating " + "a Scaffold with a (non null) bottomSheet.")])));
          }
          return true;
        }, VoidToboolL())())) dart.assertFailed(null, L105, 2169, 14, "() {\r\n        if (widget.bottomSheet != null && _currentBottomSheet?._isLocalHistoryEntry == true) {\r\n          throw FlutterError.fromParts(<DiagnosticsNode>[\r\n            ErrorSummary(\r\n              'Scaffold.bottomSheet cannot be specified while a bottom sheet displayed '\r\n              'with showBottomSheet() is still visible.'\r\n            ),\r\n            ErrorHint(\r\n              'Use the PersistentBottomSheetController '\r\n              'returned by showBottomSheet() to close the old bottom sheet before creating '\r\n              'a Scaffold with a (non null) bottomSheet.'\r\n            ),\r\n          ]);\r\n        }\r\n        return true;\r\n      }()");
        this[_closeCurrentBottomSheet]();
        this[_maybeBuildPersistentBottomSheet]();
      }
      super.didUpdateWidget(oldWidget);
    }
    didChangeDependencies() {
      let mediaQuery = media_query.MediaQuery.of(this.context);
      if (dart.equals(this[_accessibleNavigation], true) && !dart.test(mediaQuery.accessibleNavigation) && this[_snackBarTimer] != null && !dart.test(this[_snackBarTimer].isActive)) {
        this.hideCurrentSnackBar({reason: snack_bar.SnackBarClosedReason.timeout});
      }
      this[_accessibleNavigation] = mediaQuery.accessibleNavigation;
      this[_maybeBuildPersistentBottomSheet]();
      super.didChangeDependencies();
    }
    dispose() {
      let t13, t13$, t13$0, t13$1;
      t13 = this[_snackBarController];
      t13 == null ? null : t13.dispose();
      t13$ = this[_snackBarTimer];
      t13$ == null ? null : t13$.cancel();
      this[_snackBarTimer] = null;
      this[_geometryNotifier].dispose();
      for (let bottomSheet of this[_dismissedBottomSheets]) {
        t13$0 = bottomSheet.animationController;
        t13$0 == null ? null : t13$0.dispose();
      }
      if (this[_currentBottomSheet] != null) {
        t13$1 = this[_currentBottomSheet][_widget].animationController;
        t13$1 == null ? null : t13$1.dispose();
      }
      this[_floatingActionButtonMoveController].dispose();
      this[_floatingActionButtonVisibilityController].dispose();
      super.dispose();
    }
    [_addIfNonNull](children, child, childId, opts) {
      let removeLeftPadding = opts && 'removeLeftPadding' in opts ? opts.removeLeftPadding : null;
      let removeTopPadding = opts && 'removeTopPadding' in opts ? opts.removeTopPadding : null;
      let removeRightPadding = opts && 'removeRightPadding' in opts ? opts.removeRightPadding : null;
      let removeBottomPadding = opts && 'removeBottomPadding' in opts ? opts.removeBottomPadding : null;
      let removeBottomInset = opts && 'removeBottomInset' in opts ? opts.removeBottomInset : false;
      let maintainBottomViewPadding = opts && 'maintainBottomViewPadding' in opts ? opts.maintainBottomViewPadding : false;
      let data = media_query.MediaQuery.of(this.context).removePadding({removeLeft: removeLeftPadding, removeTop: removeTopPadding, removeRight: removeRightPadding, removeBottom: removeBottomPadding});
      if (dart.test(removeBottomInset)) data = data.removeViewInsets({removeBottom: true});
      if (dart.test(maintainBottomViewPadding) && data.viewInsets.bottom !== 0.0) {
        data = data.copyWith({padding: data.padding.copyWith({bottom: data.viewPadding.bottom})});
      }
      if (child != null) {
        children[$add](new basic.LayoutId.new({id: childId, child: new media_query.MediaQuery.new({data: data, child: child, $creationLocationd_0dea112b090073317d4: C2320 || CT.C2320}), $creationLocationd_0dea112b090073317d4: C2324 || CT.C2324}));
      }
    }
    [_buildEndDrawer](children, textDirection) {
      if (this.widget.endDrawer != null) {
        if (!dart.test(this.hasEndDrawer)) dart.assertFailed(null, L105, 2264, 14, "hasEndDrawer");
        this[_addIfNonNull](children, new drawer.DrawerController.new({key: this[_endDrawerKey], alignment: drawer.DrawerAlignment.end, child: this.widget.endDrawer, drawerCallback: dart.bind(this, _endDrawerOpenedCallback), dragStartBehavior: this.widget.drawerDragStartBehavior, scrimColor: this.widget.drawerScrimColor, edgeDragWidth: this.widget.drawerEdgeDragWidth, enableOpenDragGesture: this.widget.endDrawerEnableOpenDragGesture, $creationLocationd_0dea112b090073317d4: C2328 || CT.C2328}), scaffold$._ScaffoldSlot.endDrawer, {removeLeftPadding: dart.equals(textDirection, ui.TextDirection.ltr), removeTopPadding: false, removeRightPadding: dart.equals(textDirection, ui.TextDirection.rtl), removeBottomPadding: false});
      }
    }
    [_buildDrawer$](children, textDirection) {
      if (this.widget.drawer != null) {
        if (!dart.test(this.hasDrawer)) dart.assertFailed(null, L105, 2289, 14, "hasDrawer");
        this[_addIfNonNull](children, new drawer.DrawerController.new({key: this[_drawerKey$], alignment: drawer.DrawerAlignment.start, child: this.widget.drawer, drawerCallback: dart.bind(this, _drawerOpenedCallback), dragStartBehavior: this.widget.drawerDragStartBehavior, scrimColor: this.widget.drawerScrimColor, edgeDragWidth: this.widget.drawerEdgeDragWidth, enableOpenDragGesture: this.widget.drawerEnableOpenDragGesture, $creationLocationd_0dea112b090073317d4: C2338 || CT.C2338}), scaffold$._ScaffoldSlot.drawer, {removeLeftPadding: dart.equals(textDirection, ui.TextDirection.rtl), removeTopPadding: false, removeRightPadding: dart.equals(textDirection, ui.TextDirection.ltr), removeBottomPadding: false});
      }
    }
    showBodyScrim(value, opacity) {
      if (!(value != null)) dart.assertFailed(null, L105, 2319, 12, "value != null");
      if (dart.equals(this[_showBodyScrim], value) && this[_bodyScrimColor].opacity == opacity) {
        return;
      }
      this.setState(dart.fn(() => {
        this[_showBodyScrim] = value;
        this[_bodyScrimColor] = colors$.Colors.black.withOpacity(opacity);
      }, VoidToNullN()));
    }
    build(context) {
      let t13, t13$, t13$0, t15;
      if (!dart.test(debug.debugCheckHasMediaQuery(context))) dart.assertFailed(null, L105, 2331, 12, "debugCheckHasMediaQuery(context)");
      if (!dart.test(debug.debugCheckHasDirectionality(context))) dart.assertFailed(null, L105, 2332, 12, "debugCheckHasDirectionality(context)");
      let mediaQuery = media_query.MediaQuery.of(context);
      let themeData = theme$.Theme.of(context);
      let textDirection = basic.Directionality.of(context);
      this[_accessibleNavigation] = mediaQuery.accessibleNavigation;
      if (dart.test(this[_snackBars][$isNotEmpty])) {
        let route = routes.ModalRoute.of(ObjectL(), context);
        if (route == null || dart.test(route.isCurrent)) {
          if (dart.test(this[_snackBarController].isCompleted) && this[_snackBarTimer] == null) {
            let snackBar = this[_snackBars][$first][_widget];
            this[_snackBarTimer] = async.Timer.new(snackBar.duration, dart.fn(() => {
              if (!(this[_snackBarController].status == animation.AnimationStatus.forward || this[_snackBarController].status == animation.AnimationStatus.completed)) dart.assertFailed(null, L105, 2344, 20, "_snackBarController.status == AnimationStatus.forward ||\r\n                   _snackBarController.status == AnimationStatus.completed");
              let mediaQuery = media_query.MediaQuery.of(context);
              if (dart.test(mediaQuery.accessibleNavigation) && snackBar.action != null) return;
              this.hideCurrentSnackBar({reason: snack_bar.SnackBarClosedReason.timeout});
            }, VoidToNullN()));
          }
        } else {
          t13 = this[_snackBarTimer];
          t13 == null ? null : t13.cancel();
          this[_snackBarTimer] = null;
        }
      }
      let children = JSArrayOfLayoutIdL().of([]);
      this[_addIfNonNull](children, this.widget.body == null ? null : new scaffold$._BodyBuilder.new({extendBody: this.widget.extendBody, extendBodyBehindAppBar: this.widget.extendBodyBehindAppBar, body: this.widget.body, $creationLocationd_0dea112b090073317d4: C2348 || CT.C2348}), scaffold$._ScaffoldSlot.body, {removeLeftPadding: false, removeTopPadding: this.widget.appBar != null, removeRightPadding: false, removeBottomPadding: this.widget.bottomNavigationBar != null || this.widget.persistentFooterButtons != null, removeBottomInset: this[_resizeToAvoidBottomInset]});
      if (dart.test(this[_showBodyScrim])) {
        this[_addIfNonNull](children, new modal_barrier.ModalBarrier.new({dismissible: false, color: this[_bodyScrimColor], $creationLocationd_0dea112b090073317d4: C2353 || CT.C2353}), scaffold$._ScaffoldSlot.bodyScrim, {removeLeftPadding: true, removeTopPadding: true, removeRightPadding: true, removeBottomPadding: true});
      }
      if (this.widget.appBar != null) {
        let topPadding = dart.test(this.widget.primary) ? mediaQuery.padding.top : 0.0;
        this[_appBarMaxHeight] = dart.notNull(this.widget.appBar.preferredSize.height) + dart.notNull(topPadding);
        if (!(dart.notNull(this[_appBarMaxHeight]) >= 0.0 && this[_appBarMaxHeight][$isFinite])) dart.assertFailed(null, L105, 2392, 14, "_appBarMaxHeight >= 0.0 && _appBarMaxHeight.isFinite");
        this[_addIfNonNull](children, new basic.ConstrainedBox.new({constraints: new box.BoxConstraints.new({maxHeight: this[_appBarMaxHeight]}), child: flexible_space_bar.FlexibleSpaceBar.createSettings({currentExtent: this[_appBarMaxHeight], child: this.widget.appBar}), $creationLocationd_0dea112b090073317d4: C2357 || CT.C2357}), scaffold$._ScaffoldSlot.appBar, {removeLeftPadding: false, removeTopPadding: false, removeRightPadding: false, removeBottomPadding: true});
      }
      let isSnackBarFloating = false;
      let snackBarWidth = null;
      if (dart.test(this[_snackBars][$isNotEmpty])) {
        let snackBarBehavior = (t13$0 = (t13$ = this[_snackBars][$first][_widget].behavior, t13$ == null ? themeData.snackBarTheme.behavior : t13$), t13$0 == null ? snack_bar_theme.SnackBarBehavior.fixed : t13$0);
        isSnackBarFloating = snackBarBehavior == snack_bar_theme.SnackBarBehavior.floating;
        snackBarWidth = this[_snackBars][$first][_widget].width;
        this[_addIfNonNull](children, this[_snackBars][$first][_widget], scaffold$._ScaffoldSlot.snackBar, {removeLeftPadding: false, removeTopPadding: true, removeRightPadding: false, removeBottomPadding: this.widget.bottomNavigationBar != null || this.widget.persistentFooterButtons != null, maintainBottomViewPadding: !dart.test(this[_resizeToAvoidBottomInset])});
      }
      if (this.widget.persistentFooterButtons != null) {
        this[_addIfNonNull](children, new container.Container.new({decoration: new box_decoration.BoxDecoration.new({border: new box_border.Border.new({top: divider.Divider.createBorderSide(context, {width: 1.0})})}), child: new safe_area.SafeArea.new({top: false, child: new button_bar.ButtonBar.new({children: this.widget.persistentFooterButtons, $creationLocationd_0dea112b090073317d4: C2361 || CT.C2361}), $creationLocationd_0dea112b090073317d4: C2364 || CT.C2364}), $creationLocationd_0dea112b090073317d4: C2368 || CT.C2368}), scaffold$._ScaffoldSlot.persistentFooter, {removeLeftPadding: false, removeTopPadding: true, removeRightPadding: false, removeBottomPadding: false, maintainBottomViewPadding: !dart.test(this[_resizeToAvoidBottomInset])});
      }
      if (this.widget.bottomNavigationBar != null) {
        this[_addIfNonNull](children, this.widget.bottomNavigationBar, scaffold$._ScaffoldSlot.bottomNavigationBar, {removeLeftPadding: false, removeTopPadding: true, removeRightPadding: false, removeBottomPadding: false, maintainBottomViewPadding: !dart.test(this[_resizeToAvoidBottomInset])});
      }
      if (this[_currentBottomSheet] != null || dart.test(this[_dismissedBottomSheets][$isNotEmpty])) {
        let stack = new basic.Stack.new({alignment: alignment.Alignment.bottomCenter, children: (() => {
            let t13 = JSArrayOfWidgetL().of([]);
            for (let t14 of this[_dismissedBottomSheets])
              t13[$add](t14);
            if (this[_currentBottomSheet] != null) t13[$add](this[_currentBottomSheet][_widget]);
            return t13;
          })(), $creationLocationd_0dea112b090073317d4: C2372 || CT.C2372});
        this[_addIfNonNull](children, stack, scaffold$._ScaffoldSlot.bottomSheet, {removeLeftPadding: false, removeTopPadding: true, removeRightPadding: false, removeBottomPadding: this[_resizeToAvoidBottomInset]});
      }
      this[_addIfNonNull](children, new scaffold$._FloatingActionButtonTransition.new({child: this.widget.floatingActionButton, fabMoveAnimation: this[_floatingActionButtonMoveController], fabMotionAnimator: this[_floatingActionButtonAnimator], geometryNotifier: this[_geometryNotifier], currentController: this[_floatingActionButtonVisibilityController], $creationLocationd_0dea112b090073317d4: C2376 || CT.C2376}), scaffold$._ScaffoldSlot.floatingActionButton, {removeLeftPadding: true, removeTopPadding: true, removeRightPadding: true, removeBottomPadding: true});
      switch (themeData.platform) {
        case C48 || CT.C48:
        case C49 || CT.C49:
        {
          this[_addIfNonNull](children, new gesture_detector.GestureDetector.new({behavior: proxy_box.HitTestBehavior.opaque, onTap: dart.bind(this, _handleStatusBarTap), excludeFromSemantics: true, $creationLocationd_0dea112b090073317d4: C2383 || CT.C2383}), scaffold$._ScaffoldSlot.statusBar, {removeLeftPadding: false, removeTopPadding: true, removeRightPadding: false, removeBottomPadding: true});
          break;
        }
        case C44 || CT.C44:
        case C45 || CT.C45:
        case C46 || CT.C46:
        case C47 || CT.C47:
        {
          break;
        }
      }
      if (dart.test(this[_endDrawerOpened])) {
        this[_buildDrawer$](children, textDirection);
        this[_buildEndDrawer](children, textDirection);
      } else {
        this[_buildEndDrawer](children, textDirection);
        this[_buildDrawer$](children, textDirection);
      }
      let minInsets = mediaQuery.padding.copyWith({bottom: dart.test(this[_resizeToAvoidBottomInset]) ? mediaQuery.viewInsets.bottom : 0.0});
      let minViewPadding = mediaQuery.viewPadding.copyWith({bottom: dart.test(this[_resizeToAvoidBottomInset]) && mediaQuery.viewInsets.bottom !== 0.0 ? 0.0 : null});
      let _extendBody = dart.notNull(minInsets.bottom) <= 0 && dart.test(this.widget.extendBody);
      return new scaffold$._ScaffoldScope.new({hasDrawer: this.hasDrawer, geometryNotifier: this[_geometryNotifier], child: new primary_scroll_controller.PrimaryScrollController.new({controller: this[_primaryScrollController], child: new material.Material.new({color: (t15 = this.widget.backgroundColor, t15 == null ? themeData.scaffoldBackgroundColor : t15), child: new transitions.AnimatedBuilder.new({animation: this[_floatingActionButtonMoveController], builder: dart.fn((context, child) => new basic.CustomMultiChildLayout.new({children: children, delegate: new scaffold$._ScaffoldLayout.new({extendBody: _extendBody, extendBodyBehindAppBar: this.widget.extendBodyBehindAppBar, minInsets: minInsets, minViewPadding: minViewPadding, currentFloatingActionButtonLocation: this[_floatingActionButtonLocation], floatingActionButtonMoveAnimationProgress: this[_floatingActionButtonMoveController].value, floatingActionButtonMotionAnimator: this[_floatingActionButtonAnimator], geometryNotifier: this[_geometryNotifier], previousFloatingActionButtonLocation: this[_previousFloatingActionButtonLocation], textDirection: textDirection, isSnackBarFloating: isSnackBarFloating, snackBarWidth: snackBarWidth}), $creationLocationd_0dea112b090073317d4: C2388 || CT.C2388}), BuildContextLAndWidgetLToCustomMultiChildLayoutL()), $creationLocationd_0dea112b090073317d4: C2392 || CT.C2392}), $creationLocationd_0dea112b090073317d4: C2396 || CT.C2396}), $creationLocationd_0dea112b090073317d4: C2400 || CT.C2400}), $creationLocationd_0dea112b090073317d4: C2404 || CT.C2404});
    }
  };
  (scaffold$.ScaffoldState.new = function() {
    this[_drawerKey$] = GlobalKeyOfDrawerControllerStateL().new();
    this[_endDrawerKey] = GlobalKeyOfDrawerControllerStateL().new();
    this[_appBarMaxHeight] = null;
    this[_drawerOpened] = false;
    this[_endDrawerOpened] = false;
    this[_snackBars] = new (ListQueueOfScaffoldFeatureControllerLOfSnackBarL$SnackBarClosedReasonL()).new();
    this[_snackBarController] = null;
    this[_snackBarTimer] = null;
    this[_accessibleNavigation] = null;
    this[_dismissedBottomSheets] = JSArrayOf_StandardBottomSheetL().of([]);
    this[_currentBottomSheet] = null;
    this[_floatingActionButtonMoveController] = null;
    this[_floatingActionButtonAnimator] = null;
    this[_previousFloatingActionButtonLocation] = null;
    this[_floatingActionButtonLocation] = null;
    this[_floatingActionButtonVisibilityController] = null;
    this[_primaryScrollController] = new scroll_controller.ScrollController.new();
    this[_geometryNotifier] = null;
    this[_showBodyScrim] = false;
    this[_bodyScrimColor] = colors$.Colors.black;
    scaffold$.ScaffoldState.__proto__.new.call(this);
    ;
  }).prototype = scaffold$.ScaffoldState.prototype;
  dart.addTypeTests(scaffold$.ScaffoldState);
  dart.addTypeCaches(scaffold$.ScaffoldState);
  dart.setMethodSignature(scaffold$.ScaffoldState, () => ({
    __proto__: dart.getMethods(scaffold$.ScaffoldState.__proto__),
    [_drawerOpenedCallback]: dart.fnType(dart.void, [dart.legacy(core.bool)]),
    [_endDrawerOpenedCallback]: dart.fnType(dart.void, [dart.legacy(core.bool)]),
    openDrawer: dart.fnType(dart.void, []),
    openEndDrawer: dart.fnType(dart.void, []),
    showSnackBar: dart.fnType(dart.legacy(scaffold$.ScaffoldFeatureController$(dart.legacy(snack_bar.SnackBar), dart.legacy(snack_bar.SnackBarClosedReason))), [dart.legacy(snack_bar.SnackBar)]),
    [_handleSnackBarStatusChange]: dart.fnType(dart.void, [dart.legacy(animation.AnimationStatus)]),
    removeCurrentSnackBar: dart.fnType(dart.void, [], {reason: dart.legacy(snack_bar.SnackBarClosedReason)}, {}),
    hideCurrentSnackBar: dart.fnType(dart.void, [], {reason: dart.legacy(snack_bar.SnackBarClosedReason)}, {}),
    [_maybeBuildPersistentBottomSheet]: dart.fnType(dart.void, []),
    [_closeCurrentBottomSheet]: dart.fnType(dart.void, []),
    [_buildBottomSheet]: dart.gFnType(T => [dart.legacy(scaffold$.PersistentBottomSheetController$(dart.legacy(T))), [dart.legacy(dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])), dart.legacy(core.bool)], {animationController: dart.legacy(animation_controller.AnimationController), backgroundColor: dart.legacy(ui.Color), clipBehavior: dart.legacy(ui.Clip), elevation: dart.legacy(core.double), shape: dart.legacy(borders.ShapeBorder)}, {}]),
    showBottomSheet: dart.gFnType(T => [dart.legacy(scaffold$.PersistentBottomSheetController$(dart.legacy(T))), [dart.legacy(dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)]))], {backgroundColor: dart.legacy(ui.Color), clipBehavior: dart.legacy(ui.Clip), elevation: dart.legacy(core.double), shape: dart.legacy(borders.ShapeBorder)}, {}]),
    [_showFloatingActionButton]: dart.fnType(dart.legacy(ticker.TickerFuture), []),
    [_moveFloatingActionButton]: dart.fnType(dart.void, [dart.legacy(floating_action_button_location.FloatingActionButtonLocation)]),
    [_handleStatusBarTap]: dart.fnType(dart.void, []),
    [_addIfNonNull]: dart.fnType(dart.void, [dart.legacy(core.List$(dart.legacy(basic.LayoutId))), dart.legacy(framework.Widget), dart.legacy(core.Object)], {maintainBottomViewPadding: dart.legacy(core.bool), removeBottomInset: dart.legacy(core.bool), removeBottomPadding: dart.legacy(core.bool), removeLeftPadding: dart.legacy(core.bool), removeRightPadding: dart.legacy(core.bool), removeTopPadding: dart.legacy(core.bool)}, {}),
    [_buildEndDrawer]: dart.fnType(dart.void, [dart.legacy(core.List$(dart.legacy(basic.LayoutId))), dart.legacy(ui.TextDirection)]),
    [_buildDrawer$]: dart.fnType(dart.void, [dart.legacy(core.List$(dart.legacy(basic.LayoutId))), dart.legacy(ui.TextDirection)]),
    showBodyScrim: dart.fnType(dart.void, [dart.legacy(core.bool), dart.legacy(core.double)]),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setGetterSignature(scaffold$.ScaffoldState, () => ({
    __proto__: dart.getGetters(scaffold$.ScaffoldState.__proto__),
    hasAppBar: dart.legacy(core.bool),
    hasDrawer: dart.legacy(core.bool),
    hasEndDrawer: dart.legacy(core.bool),
    hasFloatingActionButton: dart.legacy(core.bool),
    appBarMaxHeight: dart.legacy(core.double),
    isDrawerOpen: dart.legacy(core.bool),
    isEndDrawerOpen: dart.legacy(core.bool),
    [_floatingActionButtonVisibilityValue]: dart.legacy(core.double),
    [_resizeToAvoidBottomInset]: dart.legacy(core.bool)
  }));
  dart.setSetterSignature(scaffold$.ScaffoldState, () => ({
    __proto__: dart.getSetters(scaffold$.ScaffoldState.__proto__),
    [_floatingActionButtonVisibilityValue]: dart.legacy(core.double)
  }));
  dart.setLibraryUri(scaffold$.ScaffoldState, L104);
  dart.setFieldSignature(scaffold$.ScaffoldState, () => ({
    __proto__: dart.getFields(scaffold$.ScaffoldState.__proto__),
    [_drawerKey$]: dart.finalFieldType(dart.legacy(framework.GlobalKey$(dart.legacy(drawer.DrawerControllerState)))),
    [_endDrawerKey]: dart.finalFieldType(dart.legacy(framework.GlobalKey$(dart.legacy(drawer.DrawerControllerState)))),
    [_appBarMaxHeight]: dart.fieldType(dart.legacy(core.double)),
    [_drawerOpened]: dart.fieldType(dart.legacy(core.bool)),
    [_endDrawerOpened]: dart.fieldType(dart.legacy(core.bool)),
    [_snackBars]: dart.finalFieldType(dart.legacy(collection.Queue$(dart.legacy(scaffold$.ScaffoldFeatureController$(dart.legacy(snack_bar.SnackBar), dart.legacy(snack_bar.SnackBarClosedReason)))))),
    [_snackBarController]: dart.fieldType(dart.legacy(animation_controller.AnimationController)),
    [_snackBarTimer]: dart.fieldType(dart.legacy(async.Timer)),
    [_accessibleNavigation]: dart.fieldType(dart.legacy(core.bool)),
    [_dismissedBottomSheets]: dart.finalFieldType(dart.legacy(core.List$(dart.legacy(scaffold$._StandardBottomSheet)))),
    [_currentBottomSheet]: dart.fieldType(dart.legacy(scaffold$.PersistentBottomSheetController)),
    [_floatingActionButtonMoveController]: dart.fieldType(dart.legacy(animation_controller.AnimationController)),
    [_floatingActionButtonAnimator]: dart.fieldType(dart.legacy(floating_action_button_location.FloatingActionButtonAnimator)),
    [_previousFloatingActionButtonLocation]: dart.fieldType(dart.legacy(floating_action_button_location.FloatingActionButtonLocation)),
    [_floatingActionButtonLocation]: dart.fieldType(dart.legacy(floating_action_button_location.FloatingActionButtonLocation)),
    [_floatingActionButtonVisibilityController]: dart.fieldType(dart.legacy(animation_controller.AnimationController)),
    [_primaryScrollController]: dart.finalFieldType(dart.legacy(scroll_controller.ScrollController)),
    [_geometryNotifier]: dart.fieldType(dart.legacy(scaffold$._ScaffoldGeometryNotifier)),
    [_showBodyScrim]: dart.fieldType(dart.legacy(core.bool)),
    [_bodyScrimColor]: dart.fieldType(dart.legacy(ui.Color))
  }));
  const _is_ScaffoldFeatureController_default = Symbol('_is_ScaffoldFeatureController_default');
  var _widget$ = dart.privateName(scaffold$, "ScaffoldFeatureController._widget");
  var _completer$ = dart.privateName(scaffold$, "ScaffoldFeatureController._completer");
  var close$ = dart.privateName(scaffold$, "ScaffoldFeatureController.close");
  var setState$ = dart.privateName(scaffold$, "ScaffoldFeatureController.setState");
  scaffold$.ScaffoldFeatureController$ = dart.generic((T, U) => {
    class ScaffoldFeatureController extends core.Object {
      get [_widget]() {
        return this[_widget$];
      }
      set [_widget](value) {
        super[_widget] = value;
      }
      get [_completer]() {
        return this[_completer$];
      }
      set [_completer](value) {
        super[_completer] = value;
      }
      get close() {
        return this[close$];
      }
      set close(value) {
        super.close = value;
      }
      get setState() {
        return this[setState$];
      }
      set setState(value) {
        super.setState = value;
      }
      get closed() {
        return this[_completer].future;
      }
    }
    (ScaffoldFeatureController.__ = function(_widget, _completer, close, setState) {
      this[_widget$] = _widget;
      this[_completer$] = _completer;
      this[close$] = close;
      this[setState$] = setState;
      ;
    }).prototype = ScaffoldFeatureController.prototype;
    dart.addTypeTests(ScaffoldFeatureController);
    ScaffoldFeatureController.prototype[_is_ScaffoldFeatureController_default] = true;
    dart.addTypeCaches(ScaffoldFeatureController);
    dart.setGetterSignature(ScaffoldFeatureController, () => ({
      __proto__: dart.getGetters(ScaffoldFeatureController.__proto__),
      closed: dart.legacy(async.Future$(dart.legacy(U)))
    }));
    dart.setLibraryUri(ScaffoldFeatureController, L104);
    dart.setFieldSignature(ScaffoldFeatureController, () => ({
      __proto__: dart.getFields(ScaffoldFeatureController.__proto__),
      [_widget]: dart.finalFieldType(dart.legacy(T)),
      [_completer]: dart.finalFieldType(dart.legacy(async.Completer$(dart.legacy(U)))),
      close: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, []))),
      setState: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, [dart.legacy(dart.fnType(dart.void, []))])))
    }));
    return ScaffoldFeatureController;
  });
  scaffold$.ScaffoldFeatureController = scaffold$.ScaffoldFeatureController$();
  dart.addTypeTests(scaffold$.ScaffoldFeatureController, _is_ScaffoldFeatureController_default);
  var startingPoint$0 = dart.privateName(scaffold$, "_BottomSheetSuspendedCurve.startingPoint");
  var curve$0 = dart.privateName(scaffold$, "_BottomSheetSuspendedCurve.curve");
  scaffold$._BottomSheetSuspendedCurve = class _BottomSheetSuspendedCurve extends curves.ParametricCurve$(dart.legacy(core.double)) {
    get startingPoint() {
      return this[startingPoint$0];
    }
    set startingPoint(value) {
      super.startingPoint = value;
    }
    get curve() {
      return this[curve$0];
    }
    set curve(value) {
      super.curve = value;
    }
    transform(t) {
      if (!(dart.notNull(t) >= 0.0 && dart.notNull(t) <= 1.0)) dart.assertFailed(null, L105, 2637, 12, "t >= 0.0 && t <= 1.0");
      if (!(dart.notNull(this.startingPoint) >= 0.0 && dart.notNull(this.startingPoint) <= 1.0)) dart.assertFailed(null, L105, 2638, 12, "startingPoint >= 0.0 && startingPoint <= 1.0");
      if (dart.notNull(t) < dart.notNull(this.startingPoint)) {
        return t;
      }
      if (t === 1.0) {
        return t;
      }
      let curveProgress = (dart.notNull(t) - dart.notNull(this.startingPoint)) / (1 - dart.notNull(this.startingPoint));
      let transformed = this.curve.transform(curveProgress);
      return ui.lerpDouble(this.startingPoint, 1, transformed);
    }
    toString() {
      return dart.str(diagnostics.describeIdentity(this)) + "(" + dart.str(this.startingPoint) + ", " + dart.str(this.curve) + ")";
    }
  };
  (scaffold$._BottomSheetSuspendedCurve.new = function(startingPoint, opts) {
    let curve = opts && 'curve' in opts ? opts.curve : C2244 || CT.C2244;
    this[startingPoint$0] = startingPoint;
    this[curve$0] = curve;
    if (!(startingPoint != null)) dart.assertFailed(null, L105, 2624, 19, "startingPoint != null");
    if (!(curve != null)) dart.assertFailed(null, L105, 2625, 16, "curve != null");
    scaffold$._BottomSheetSuspendedCurve.__proto__.new.call(this);
    ;
  }).prototype = scaffold$._BottomSheetSuspendedCurve.prototype;
  dart.addTypeTests(scaffold$._BottomSheetSuspendedCurve);
  dart.addTypeCaches(scaffold$._BottomSheetSuspendedCurve);
  dart.setLibraryUri(scaffold$._BottomSheetSuspendedCurve, L104);
  dart.setFieldSignature(scaffold$._BottomSheetSuspendedCurve, () => ({
    __proto__: dart.getFields(scaffold$._BottomSheetSuspendedCurve.__proto__),
    startingPoint: dart.finalFieldType(dart.legacy(core.double)),
    curve: dart.finalFieldType(dart.legacy(curves.Curve))
  }));
  dart.defineExtensionMethods(scaffold$._BottomSheetSuspendedCurve, ['toString']);
  var animationController$0 = dart.privateName(scaffold$, "_StandardBottomSheet.animationController");
  var enableDrag$1 = dart.privateName(scaffold$, "_StandardBottomSheet.enableDrag");
  var onClosing$0 = dart.privateName(scaffold$, "_StandardBottomSheet.onClosing");
  var onDismissed$ = dart.privateName(scaffold$, "_StandardBottomSheet.onDismissed");
  var builder$0 = dart.privateName(scaffold$, "_StandardBottomSheet.builder");
  var isPersistent$ = dart.privateName(scaffold$, "_StandardBottomSheet.isPersistent");
  var backgroundColor$19 = dart.privateName(scaffold$, "_StandardBottomSheet.backgroundColor");
  var elevation$22 = dart.privateName(scaffold$, "_StandardBottomSheet.elevation");
  var shape$20 = dart.privateName(scaffold$, "_StandardBottomSheet.shape");
  var clipBehavior$8 = dart.privateName(scaffold$, "_StandardBottomSheet.clipBehavior");
  scaffold$._StandardBottomSheet = class _StandardBottomSheet extends framework.StatefulWidget {
    get animationController() {
      return this[animationController$0];
    }
    set animationController(value) {
      super.animationController = value;
    }
    get enableDrag() {
      return this[enableDrag$1];
    }
    set enableDrag(value) {
      super.enableDrag = value;
    }
    get onClosing() {
      return this[onClosing$0];
    }
    set onClosing(value) {
      super.onClosing = value;
    }
    get onDismissed() {
      return this[onDismissed$];
    }
    set onDismissed(value) {
      super.onDismissed = value;
    }
    get builder() {
      return this[builder$0];
    }
    set builder(value) {
      super.builder = value;
    }
    get isPersistent() {
      return this[isPersistent$];
    }
    set isPersistent(value) {
      super.isPersistent = value;
    }
    get backgroundColor() {
      return this[backgroundColor$19];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get elevation() {
      return this[elevation$22];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get shape() {
      return this[shape$20];
    }
    set shape(value) {
      super.shape = value;
    }
    get clipBehavior() {
      return this[clipBehavior$8];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    createState() {
      return new scaffold$._StandardBottomSheetState.new();
    }
  };
  (scaffold$._StandardBottomSheet.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let animationController = opts && 'animationController' in opts ? opts.animationController : null;
    let enableDrag = opts && 'enableDrag' in opts ? opts.enableDrag : true;
    let onClosing = opts && 'onClosing' in opts ? opts.onClosing : null;
    let onDismissed = opts && 'onDismissed' in opts ? opts.onDismissed : null;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    let isPersistent = opts && 'isPersistent' in opts ? opts.isPersistent : false;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[animationController$0] = animationController;
    this[enableDrag$1] = enableDrag;
    this[onClosing$0] = onClosing;
    this[onDismissed$] = onDismissed;
    this[builder$0] = builder;
    this[isPersistent$] = isPersistent;
    this[backgroundColor$19] = backgroundColor;
    this[elevation$22] = elevation;
    this[shape$20] = shape;
    this[clipBehavior$8] = clipBehavior;
    scaffold$._StandardBottomSheet.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scaffold$._StandardBottomSheet.prototype;
  dart.addTypeTests(scaffold$._StandardBottomSheet);
  dart.addTypeCaches(scaffold$._StandardBottomSheet);
  dart.setMethodSignature(scaffold$._StandardBottomSheet, () => ({
    __proto__: dart.getMethods(scaffold$._StandardBottomSheet.__proto__),
    createState: dart.fnType(dart.legacy(scaffold$._StandardBottomSheetState), [])
  }));
  dart.setLibraryUri(scaffold$._StandardBottomSheet, L104);
  dart.setFieldSignature(scaffold$._StandardBottomSheet, () => ({
    __proto__: dart.getFields(scaffold$._StandardBottomSheet.__proto__),
    animationController: dart.finalFieldType(dart.legacy(animation_controller.AnimationController)),
    enableDrag: dart.finalFieldType(dart.legacy(core.bool)),
    onClosing: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, []))),
    onDismissed: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, []))),
    builder: dart.finalFieldType(dart.legacy(dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)]))),
    isPersistent: dart.finalFieldType(dart.legacy(core.bool)),
    backgroundColor: dart.finalFieldType(dart.legacy(ui.Color)),
    elevation: dart.finalFieldType(dart.legacy(core.double)),
    shape: dart.finalFieldType(dart.legacy(borders.ShapeBorder)),
    clipBehavior: dart.finalFieldType(dart.legacy(ui.Clip))
  }));
  var _handleStatusChange = dart.privateName(scaffold$, "_handleStatusChange");
  var _handleDragStart$ = dart.privateName(scaffold$, "_handleDragStart");
  var _handleDragEnd$ = dart.privateName(scaffold$, "_handleDragEnd");
  var C2411;
  var C2412;
  var C2410;
  var C2409;
  var C2415;
  var C2416;
  var C2417;
  var C2414;
  var C2413;
  var _wrapBottomSheet = dart.privateName(scaffold$, "_wrapBottomSheet");
  var C2420;
  var C2421;
  var C2422;
  var C2419;
  var C2418;
  var C2425;
  var C2426;
  var C2427;
  var C2428;
  var C2429;
  var C2430;
  var C2431;
  var C2432;
  var C2433;
  var C2434;
  var C2424;
  var C2423;
  var C2437;
  var C2438;
  var C2439;
  var C2436;
  var C2435;
  var C2442;
  var C2443;
  var C2444;
  var C2441;
  var C2440;
  scaffold$._StandardBottomSheetState = class _StandardBottomSheetState extends framework.State$(dart.legacy(scaffold$._StandardBottomSheet)) {
    initState() {
      super.initState();
      if (!(this.widget.animationController != null)) dart.assertFailed(null, L105, 2695, 12, "widget.animationController != null");
      if (!(this.widget.animationController.status == animation.AnimationStatus.forward || this.widget.animationController.status == animation.AnimationStatus.completed)) dart.assertFailed(null, L105, 2696, 12, "widget.animationController.status == AnimationStatus.forward\r\n        || widget.animationController.status == AnimationStatus.completed");
      this.widget.animationController.addStatusListener(dart.bind(this, _handleStatusChange));
    }
    didUpdateWidget(oldWidget) {
      _StandardBottomSheetL().as(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.animationController, oldWidget.animationController)) dart.assertFailed(null, L105, 2704, 12, "widget.animationController == oldWidget.animationController");
    }
    close() {
      if (!(this.widget.animationController != null)) dart.assertFailed(null, L105, 2708, 12, "widget.animationController != null");
      this.widget.animationController.reverse();
      if (this.widget.onClosing != null) {
        this.widget.onClosing();
      }
      return null;
    }
    [_handleDragStart$](details) {
      this.animationCurve = curves.Curves.linear;
    }
    [_handleDragEnd$](details, opts) {
      let isClosing = opts && 'isClosing' in opts ? opts.isClosing : null;
      this.animationCurve = new scaffold$._BottomSheetSuspendedCurve.new(this.widget.animationController.value, {curve: scaffold$._standardBottomSheetCurve});
    }
    [_handleStatusChange](status) {
      if (status == animation.AnimationStatus.dismissed && this.widget.onDismissed != null) {
        this.widget.onDismissed();
      }
    }
    extentChanged(notification) {
      let extentRemaining = 1.0 - dart.notNull(notification.extent);
      let scaffold = scaffold$.Scaffold.of(this.context);
      if (extentRemaining < 0.3) {
        scaffold[_floatingActionButtonVisibilityValue] = extentRemaining * 0.3 * 10;
        scaffold.showBodyScrim(true, math.max(doubleL(), 0.1, 0.6 - dart.notNull(scaffold[_floatingActionButtonVisibilityValue])));
      } else {
        scaffold[_floatingActionButtonVisibilityValue] = 1.0;
        scaffold.showBodyScrim(false, 0.0);
      }
      if (notification.extent == notification.minExtent && scaffold.widget.bottomSheet == null) {
        this.close();
      }
      return false;
    }
    [_wrapBottomSheet](bottomSheet) {
      return new basic.Semantics.new({container: true, onDismiss: dart.bind(this, 'close'), child: new (NotificationListenerOfDraggableScrollableNotificationL()).new({onNotification: dart.bind(this, 'extentChanged'), child: bottomSheet, $creationLocationd_0dea112b090073317d4: C2409 || CT.C2409}), $creationLocationd_0dea112b090073317d4: C2413 || CT.C2413});
    }
    build(context) {
      if (this.widget.animationController != null) {
        return new transitions.AnimatedBuilder.new({animation: this.widget.animationController, builder: dart.fn((context, child) => new basic.Align.new({alignment: alignment.AlignmentDirectional.topStart, heightFactor: this.animationCurve.transform(this.widget.animationController.value), child: child, $creationLocationd_0dea112b090073317d4: C2418 || CT.C2418}), BuildContextLAndWidgetLToAlignL()), child: this[_wrapBottomSheet](new bottom_sheet.BottomSheet.new({animationController: this.widget.animationController, enableDrag: this.widget.enableDrag, onDragStart: dart.bind(this, _handleDragStart$), onDragEnd: dart.bind(this, _handleDragEnd$), onClosing: this.widget.onClosing, builder: this.widget.builder, backgroundColor: this.widget.backgroundColor, elevation: this.widget.elevation, shape: this.widget.shape, clipBehavior: this.widget.clipBehavior, $creationLocationd_0dea112b090073317d4: C2423 || CT.C2423})), $creationLocationd_0dea112b090073317d4: C2435 || CT.C2435});
      }
      return this[_wrapBottomSheet](new bottom_sheet.BottomSheet.new({onClosing: this.widget.onClosing, builder: this.widget.builder, backgroundColor: this.widget.backgroundColor, $creationLocationd_0dea112b090073317d4: C2440 || CT.C2440}));
    }
  };
  (scaffold$._StandardBottomSheetState.new = function() {
    this.animationCurve = scaffold$._standardBottomSheetCurve;
    scaffold$._StandardBottomSheetState.__proto__.new.call(this);
    ;
  }).prototype = scaffold$._StandardBottomSheetState.prototype;
  dart.addTypeTests(scaffold$._StandardBottomSheetState);
  dart.addTypeCaches(scaffold$._StandardBottomSheetState);
  dart.setMethodSignature(scaffold$._StandardBottomSheetState, () => ({
    __proto__: dart.getMethods(scaffold$._StandardBottomSheetState.__proto__),
    close: dart.fnType(dart.legacy(async.Future$(dart.void)), []),
    [_handleDragStart$]: dart.fnType(dart.void, [dart.legacy(drag_details.DragStartDetails)]),
    [_handleDragEnd$]: dart.fnType(dart.void, [dart.legacy(drag_details.DragEndDetails)], {isClosing: dart.legacy(core.bool)}, {}),
    [_handleStatusChange]: dart.fnType(dart.void, [dart.legacy(animation.AnimationStatus)]),
    extentChanged: dart.fnType(dart.legacy(core.bool), [dart.legacy(draggable_scrollable_sheet.DraggableScrollableNotification)]),
    [_wrapBottomSheet]: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.Widget)]),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(scaffold$._StandardBottomSheetState, L104);
  dart.setFieldSignature(scaffold$._StandardBottomSheetState, () => ({
    __proto__: dart.getFields(scaffold$._StandardBottomSheetState.__proto__),
    animationCurve: dart.fieldType(dart.legacy(curves.ParametricCurve$(dart.legacy(core.double))))
  }));
  const _is_PersistentBottomSheetController_default = Symbol('_is_PersistentBottomSheetController_default');
  var _isLocalHistoryEntry$ = dart.privateName(scaffold$, "PersistentBottomSheetController._isLocalHistoryEntry");
  scaffold$.PersistentBottomSheetController$ = dart.generic(T => {
    class PersistentBottomSheetController extends scaffold$.ScaffoldFeatureController$(dart.legacy(scaffold$._StandardBottomSheet), dart.legacy(T)) {
      get [_isLocalHistoryEntry]() {
        return this[_isLocalHistoryEntry$];
      }
      set [_isLocalHistoryEntry](value) {
        super[_isLocalHistoryEntry] = value;
      }
    }
    (PersistentBottomSheetController.__ = function(widget, completer, close, setState, _isLocalHistoryEntry) {
      this[_isLocalHistoryEntry$] = _isLocalHistoryEntry;
      PersistentBottomSheetController.__proto__.__.call(this, widget, completer, close, setState);
      ;
    }).prototype = PersistentBottomSheetController.prototype;
    dart.addTypeTests(PersistentBottomSheetController);
    PersistentBottomSheetController.prototype[_is_PersistentBottomSheetController_default] = true;
    dart.addTypeCaches(PersistentBottomSheetController);
    dart.setLibraryUri(PersistentBottomSheetController, L104);
    dart.setFieldSignature(PersistentBottomSheetController, () => ({
      __proto__: dart.getFields(PersistentBottomSheetController.__proto__),
      [_isLocalHistoryEntry]: dart.finalFieldType(dart.legacy(core.bool))
    }));
    return PersistentBottomSheetController;
  });
  scaffold$.PersistentBottomSheetController = scaffold$.PersistentBottomSheetController$();
  dart.addTypeTests(scaffold$.PersistentBottomSheetController, _is_PersistentBottomSheetController_default);
  var hasDrawer$ = dart.privateName(scaffold$, "_ScaffoldScope.hasDrawer");
  var geometryNotifier$0 = dart.privateName(scaffold$, "_ScaffoldScope.geometryNotifier");
  scaffold$._ScaffoldScope = class _ScaffoldScope extends framework.InheritedWidget {
    get hasDrawer() {
      return this[hasDrawer$];
    }
    set hasDrawer(value) {
      super.hasDrawer = value;
    }
    get geometryNotifier() {
      return this[geometryNotifier$0];
    }
    set geometryNotifier(value) {
      super.geometryNotifier = value;
    }
    updateShouldNotify(oldWidget) {
      _ScaffoldScopeL().as(oldWidget);
      return !dart.equals(this.hasDrawer, oldWidget.hasDrawer);
    }
  };
  (scaffold$._ScaffoldScope.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let hasDrawer = opts && 'hasDrawer' in opts ? opts.hasDrawer : null;
    let geometryNotifier = opts && 'geometryNotifier' in opts ? opts.geometryNotifier : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[hasDrawer$] = hasDrawer;
    this[geometryNotifier$0] = geometryNotifier;
    if (!(hasDrawer != null)) dart.assertFailed(null, L105, 2831, 15, "hasDrawer != null");
    scaffold$._ScaffoldScope.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scaffold$._ScaffoldScope.prototype;
  dart.addTypeTests(scaffold$._ScaffoldScope);
  dart.addTypeCaches(scaffold$._ScaffoldScope);
  dart.setMethodSignature(scaffold$._ScaffoldScope, () => ({
    __proto__: dart.getMethods(scaffold$._ScaffoldScope.__proto__),
    updateShouldNotify: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)])
  }));
  dart.setLibraryUri(scaffold$._ScaffoldScope, L104);
  dart.setFieldSignature(scaffold$._ScaffoldScope, () => ({
    __proto__: dart.getFields(scaffold$._ScaffoldScope.__proto__),
    hasDrawer: dart.finalFieldType(dart.legacy(core.bool)),
    geometryNotifier: dart.finalFieldType(dart.legacy(scaffold$._ScaffoldGeometryNotifier))
  }));
  dart.defineLazy(scaffold$, {
    /*scaffold$._kDefaultFloatingActionButtonLocation*/get _kDefaultFloatingActionButtonLocation() {
      return C229 || CT.C229;
    },
    /*scaffold$._kDefaultFloatingActionButtonAnimator*/get _kDefaultFloatingActionButtonAnimator() {
      return C239 || CT.C239;
    },
    /*scaffold$._standardBottomSheetCurve*/get _standardBottomSheetCurve() {
      return C216 || CT.C216;
    },
    /*scaffold$._kBottomSheetDominatesPercentage*/get _kBottomSheetDominatesPercentage() {
      return 0.3;
    },
    /*scaffold$._kMinBottomSheetScrimOpacity*/get _kMinBottomSheetScrimOpacity() {
      return 0.1;
    },
    /*scaffold$._kMaxBottomSheetScrimOpacity*/get _kMaxBottomSheetScrimOpacity() {
      return 0.6;
    }
  }, true);
  elevation_overlay.ElevationOverlay = class ElevationOverlay extends core.Object {
    static applyOverlay(context, color, elevation) {
      let theme = theme$.Theme.of(context);
      if (dart.notNull(elevation) > 0.0 && dart.test(theme.applyElevationOverlayColor) && dart.equals(theme.brightness, ui.Brightness.dark) && dart.equals(color, theme.colorScheme.surface)) {
        return ui.Color.alphaBlend(elevation_overlay.ElevationOverlay.overlayColor(context, elevation), color);
      }
      return color;
    }
    static overlayColor(context, elevation) {
      let theme = theme$.Theme.of(context);
      let opacity = (4.5 * math.log(dart.notNull(elevation) + 1) + 2) / 100.0;
      return theme.colorScheme.onSurface.withOpacity(opacity);
    }
  };
  (elevation_overlay.ElevationOverlay.__ = function() {
    ;
  }).prototype = elevation_overlay.ElevationOverlay.prototype;
  dart.addTypeTests(elevation_overlay.ElevationOverlay);
  dart.addTypeCaches(elevation_overlay.ElevationOverlay);
  dart.setLibraryUri(elevation_overlay.ElevationOverlay, L106);
  var _name$24 = dart.privateName(material, "_name");
  var C2445;
  var C2446;
  var C2447;
  var C2448;
  var C2449;
  var C2450;
  material.MaterialType = class MaterialType extends core.Object {
    toString() {
      return this[_name$24];
    }
  };
  (material.MaterialType.new = function(index, _name) {
    this.index = index;
    this[_name$24] = _name;
    ;
  }).prototype = material.MaterialType.prototype;
  dart.addTypeTests(material.MaterialType);
  dart.addTypeCaches(material.MaterialType);
  dart.setMethodSignature(material.MaterialType, () => ({
    __proto__: dart.getMethods(material.MaterialType.__proto__),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setLibraryUri(material.MaterialType, L67);
  dart.setFieldSignature(material.MaterialType, () => ({
    __proto__: dart.getFields(material.MaterialType.__proto__),
    index: dart.finalFieldType(dart.legacy(core.int)),
    [_name$24]: dart.finalFieldType(dart.legacy(core.String))
  }));
  dart.defineExtensionMethods(material.MaterialType, ['toString']);
  material.MaterialType.canvas = C2445 || CT.C2445;
  material.MaterialType.card = C2446 || CT.C2446;
  material.MaterialType.circle = C2447 || CT.C2447;
  material.MaterialType.button = C2448 || CT.C2448;
  material.MaterialType.transparency = C2449 || CT.C2449;
  material.MaterialType.values = C2450 || CT.C2450;
  material.MaterialInkController = class MaterialInkController extends core.Object {};
  (material.MaterialInkController.new = function() {
    ;
  }).prototype = material.MaterialInkController.prototype;
  dart.addTypeTests(material.MaterialInkController);
  dart.addTypeCaches(material.MaterialInkController);
  dart.setLibraryUri(material.MaterialInkController, L67);
  var child$21 = dart.privateName(material, "Material.child");
  var type$2 = dart.privateName(material, "Material.type");
  var elevation$23 = dart.privateName(material, "Material.elevation");
  var color$12 = dart.privateName(material, "Material.color");
  var shadowColor$3 = dart.privateName(material, "Material.shadowColor");
  var textStyle$6 = dart.privateName(material, "Material.textStyle");
  var shape$21 = dart.privateName(material, "Material.shape");
  var borderOnForeground$ = dart.privateName(material, "Material.borderOnForeground");
  var clipBehavior$9 = dart.privateName(material, "Material.clipBehavior");
  var animationDuration$2 = dart.privateName(material, "Material.animationDuration");
  var borderRadius$2 = dart.privateName(material, "Material.borderRadius");
  material.Material = class Material extends framework.StatefulWidget {
    get child() {
      return this[child$21];
    }
    set child(value) {
      super.child = value;
    }
    get type() {
      return this[type$2];
    }
    set type(value) {
      super.type = value;
    }
    get elevation() {
      return this[elevation$23];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get color() {
      return this[color$12];
    }
    set color(value) {
      super.color = value;
    }
    get shadowColor() {
      return this[shadowColor$3];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    get textStyle() {
      return this[textStyle$6];
    }
    set textStyle(value) {
      super.textStyle = value;
    }
    get shape() {
      return this[shape$21];
    }
    set shape(value) {
      super.shape = value;
    }
    get borderOnForeground() {
      return this[borderOnForeground$];
    }
    set borderOnForeground(value) {
      super.borderOnForeground = value;
    }
    get clipBehavior() {
      return this[clipBehavior$9];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get animationDuration() {
      return this[animationDuration$2];
    }
    set animationDuration(value) {
      super.animationDuration = value;
    }
    get borderRadius() {
      return this[borderRadius$2];
    }
    set borderRadius(value) {
      super.borderRadius = value;
    }
    static of(context) {
      let result = context.findAncestorRenderObjectOfType(_RenderInkFeaturesL());
      return result;
    }
    createState() {
      return new material._MaterialState.new();
    }
    debugFillProperties(properties) {
      let t15;
      super.debugFillProperties(properties);
      properties.add(new (EnumPropertyOfMaterialTypeL()).new("type", this.type));
      properties.add(new diagnostics.DoubleProperty.new("elevation", this.elevation, {defaultValue: 0.0}));
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("shadowColor", this.shadowColor, {defaultValue: null}));
      t15 = this.textStyle;
      t15 == null ? null : t15.debugFillProperties(properties, {prefix: "textStyle."});
      properties.add(new (DiagnosticsPropertyOfShapeBorderL()).new("shape", this.shape, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfboolL()).new("borderOnForeground", this.borderOnForeground, {defaultValue: true}));
      properties.add(new (DiagnosticsPropertyOfBorderRadiusGeometryL()).new("borderRadius", this.borderRadius, {defaultValue: null}));
    }
  };
  (material.Material.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let type = opts && 'type' in opts ? opts.type : C2445 || CT.C2445;
    let elevation = opts && 'elevation' in opts ? opts.elevation : 0;
    let color = opts && 'color' in opts ? opts.color : null;
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
    let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let borderOnForeground = opts && 'borderOnForeground' in opts ? opts.borderOnForeground : true;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C321 || CT.C321;
    let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : C243 || CT.C243;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[type$2] = type;
    this[elevation$23] = elevation;
    this[color$12] = color;
    this[shadowColor$3] = shadowColor;
    this[textStyle$6] = textStyle;
    this[borderRadius$2] = borderRadius;
    this[shape$21] = shape;
    this[borderOnForeground$] = borderOnForeground;
    this[clipBehavior$9] = clipBehavior;
    this[animationDuration$2] = animationDuration;
    this[child$21] = child;
    if (!(type != null)) dart.assertFailed(null, L66, 192, 15, "type != null");
    if (!(elevation != null && dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, L66, 193, 15, "elevation != null && elevation >= 0.0");
    if (!!(shape != null && borderRadius != null)) dart.assertFailed(null, L66, 194, 15, "!(shape != null && borderRadius != null)");
    if (!(animationDuration != null)) dart.assertFailed(null, L66, 195, 15, "animationDuration != null");
    if (!!(type == material.MaterialType.circle && (borderRadius != null || shape != null))) dart.assertFailed(null, L66, 196, 15, "!(identical(type, MaterialType.circle) && (borderRadius != null || shape != null))");
    if (!(borderOnForeground != null)) dart.assertFailed(null, L66, 197, 15, "borderOnForeground != null");
    if (!(clipBehavior != null)) dart.assertFailed(null, L66, 198, 15, "clipBehavior != null");
    material.Material.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = material.Material.prototype;
  dart.addTypeTests(material.Material);
  dart.addTypeCaches(material.Material);
  dart.setMethodSignature(material.Material, () => ({
    __proto__: dart.getMethods(material.Material.__proto__),
    createState: dart.fnType(dart.legacy(material._MaterialState), [])
  }));
  dart.setLibraryUri(material.Material, L67);
  dart.setFieldSignature(material.Material, () => ({
    __proto__: dart.getFields(material.Material.__proto__),
    child: dart.finalFieldType(dart.legacy(framework.Widget)),
    type: dart.finalFieldType(dart.legacy(material.MaterialType)),
    elevation: dart.finalFieldType(dart.legacy(core.double)),
    color: dart.finalFieldType(dart.legacy(ui.Color)),
    shadowColor: dart.finalFieldType(dart.legacy(ui.Color)),
    textStyle: dart.finalFieldType(dart.legacy(text_style.TextStyle)),
    shape: dart.finalFieldType(dart.legacy(borders.ShapeBorder)),
    borderOnForeground: dart.finalFieldType(dart.legacy(core.bool)),
    clipBehavior: dart.finalFieldType(dart.legacy(ui.Clip)),
    animationDuration: dart.finalFieldType(dart.legacy(core.Duration)),
    borderRadius: dart.finalFieldType(dart.legacy(border_radius.BorderRadiusGeometry))
  }));
  dart.defineLazy(material.Material, {
    /*material.Material.defaultSplashRadius*/get defaultSplashRadius() {
      return 35;
    }
  }, true);
  var _inkFeatureRenderer = dart.privateName(material, "_inkFeatureRenderer");
  var _getBackgroundColor = dart.privateName(material, "_getBackgroundColor");
  var C2453;
  var C2454;
  var C2455;
  var C2452;
  var C2451;
  var _didChangeLayout = dart.privateName(material, "_didChangeLayout");
  var C2458;
  var C2459;
  var C2460;
  var C2461;
  var C2462;
  var C2457;
  var C2456;
  var C2465;
  var C2466;
  var C2464;
  var C2463;
  var C2469;
  var C2470;
  var C2471;
  var C2472;
  var C2473;
  var C2474;
  var C2475;
  var C2476;
  var C2477;
  var C2468;
  var C2467;
  var _getShape = dart.privateName(material, "_getShape");
  var C2480;
  var C2481;
  var C2482;
  var C2483;
  var C2484;
  var C2485;
  var C2486;
  var C2487;
  var C2488;
  var C2479;
  var C2478;
  var C2491;
  var C2492;
  var C2490;
  var C2489;
  var C2495;
  var C2496;
  var C2497;
  var C2494;
  var C2493;
  const State_TickerProviderStateMixin$36$4 = class State_TickerProviderStateMixin extends framework.State$(dart.legacy(material.Material)) {};
  (State_TickerProviderStateMixin$36$4.new = function() {
    ticker_provider.TickerProviderStateMixin$(dart.legacy(material.Material))[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$4.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$4.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$4, ticker_provider.TickerProviderStateMixin$(dart.legacy(material.Material)));
  material._MaterialState = class _MaterialState extends State_TickerProviderStateMixin$36$4 {
    [_getBackgroundColor](context) {
      let theme = theme$.Theme.of(context);
      let color = this.widget.color;
      if (color == null) {
        switch (this.widget.type) {
          case C2445 || CT.C2445:
          {
            color = theme.canvasColor;
            break;
          }
          case C2446 || CT.C2446:
          {
            color = theme.cardColor;
            break;
          }
          default:
          {
            break;
          }
        }
      }
      return color;
    }
    build(context) {
      let t15, t15$, t15$0;
      let backgroundColor = this[_getBackgroundColor](context);
      if (!(backgroundColor != null || this.widget.type == material.MaterialType.transparency)) dart.assertFailed("If Material type is not MaterialType.transparency, a color must " + "either be passed in through the `color` property, or be defined " + "in the theme (ex. canvasColor != null if type is set to " + "MaterialType.canvas)", L66, 365, 7, "backgroundColor != null || widget.type == MaterialType.transparency");
      let contents = this.widget.child;
      if (contents != null) {
        contents = new implicit_animations.AnimatedDefaultTextStyle.new({style: (t15 = this.widget.textStyle, t15 == null ? theme$.Theme.of(context).textTheme.bodyText2 : t15), duration: this.widget.animationDuration, child: contents, $creationLocationd_0dea112b090073317d4: C2451 || CT.C2451});
      }
      contents = new (NotificationListenerOfLayoutChangedNotificationL()).new({onNotification: dart.fn(notification => {
          let renderer = _RenderInkFeaturesL().as(this[_inkFeatureRenderer].currentContext.findRenderObject());
          renderer[_didChangeLayout]();
          return false;
        }, LayoutChangedNotificationLToboolL()), child: new material._InkFeatures.new({key: this[_inkFeatureRenderer], absorbHitTest: this.widget.type != material.MaterialType.transparency, color: backgroundColor, child: contents, vsync: this, $creationLocationd_0dea112b090073317d4: C2456 || CT.C2456}), $creationLocationd_0dea112b090073317d4: C2463 || CT.C2463});
      if (this.widget.type == material.MaterialType.canvas && this.widget.shape == null && this.widget.borderRadius == null) {
        return new implicit_animations.AnimatedPhysicalModel.new({curve: curves.Curves.fastOutSlowIn, duration: this.widget.animationDuration, shape: box_border.BoxShape.rectangle, clipBehavior: this.widget.clipBehavior, borderRadius: border_radius.BorderRadius.zero, elevation: this.widget.elevation, color: elevation_overlay.ElevationOverlay.applyOverlay(context, backgroundColor, this.widget.elevation), shadowColor: (t15$ = this.widget.shadowColor, t15$ == null ? theme$.Theme.of(context).shadowColor : t15$), animateColor: false, child: contents, $creationLocationd_0dea112b090073317d4: C2467 || CT.C2467});
      }
      let shape = this[_getShape]();
      if (this.widget.type == material.MaterialType.transparency) {
        return material._MaterialState._transparentInterior({context: context, shape: shape, clipBehavior: this.widget.clipBehavior, contents: contents});
      }
      return new material._MaterialInterior.new({curve: curves.Curves.fastOutSlowIn, duration: this.widget.animationDuration, shape: shape, borderOnForeground: this.widget.borderOnForeground, clipBehavior: this.widget.clipBehavior, elevation: this.widget.elevation, color: backgroundColor, shadowColor: (t15$0 = this.widget.shadowColor, t15$0 == null ? theme$.Theme.of(context).shadowColor : t15$0), child: contents, $creationLocationd_0dea112b090073317d4: C2478 || CT.C2478});
    }
    static _transparentInterior(opts) {
      let context = opts && 'context' in opts ? opts.context : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
      let contents = opts && 'contents' in opts ? opts.contents : null;
      let child = new material._ShapeBorderPaint.new({child: contents, shape: shape, $creationLocationd_0dea112b090073317d4: C2489 || CT.C2489});
      if (dart.equals(clipBehavior, ui.Clip.none)) {
        return child;
      }
      return new basic.ClipPath.new({child: child, clipper: new proxy_box.ShapeBorderClipper.new({shape: shape, textDirection: basic.Directionality.of(context)}), clipBehavior: clipBehavior, $creationLocationd_0dea112b090073317d4: C2493 || CT.C2493});
    }
    [_getShape]() {
      let t15;
      if (this.widget.shape != null) return this.widget.shape;
      if (this.widget.borderRadius != null) return new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: this.widget.borderRadius});
      switch (this.widget.type) {
        case C2445 || CT.C2445:
        case C2449 || CT.C2449:
        {
          return C1002 || CT.C1002;
        }
        case C2446 || CT.C2446:
        case C2448 || CT.C2448:
        {
          return new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: (t15 = this.widget.borderRadius, t15 == null ? material.kMaterialEdges[$_get](this.widget.type) : t15)});
        }
        case C2447 || CT.C2447:
        {
          return C381 || CT.C381;
        }
      }
      return C1002 || CT.C1002;
    }
  };
  (material._MaterialState.new = function() {
    this[_inkFeatureRenderer] = GlobalKeyOfStateLOfStatefulWidgetL().new({debugLabel: "ink renderer"});
    material._MaterialState.__proto__.new.call(this);
    ;
  }).prototype = material._MaterialState.prototype;
  dart.addTypeTests(material._MaterialState);
  dart.addTypeCaches(material._MaterialState);
  dart.setMethodSignature(material._MaterialState, () => ({
    __proto__: dart.getMethods(material._MaterialState.__proto__),
    [_getBackgroundColor]: dart.fnType(dart.legacy(ui.Color), [dart.legacy(framework.BuildContext)]),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)]),
    [_getShape]: dart.fnType(dart.legacy(borders.ShapeBorder), [])
  }));
  dart.setLibraryUri(material._MaterialState, L67);
  dart.setFieldSignature(material._MaterialState, () => ({
    __proto__: dart.getFields(material._MaterialState.__proto__),
    [_inkFeatureRenderer]: dart.finalFieldType(dart.legacy(framework.GlobalKey$(dart.legacy(framework.State$(dart.legacy(framework.StatefulWidget))))))
  }));
  var _inkFeatures = dart.privateName(material, "_inkFeatures");
  material._RenderInkFeatures = class _RenderInkFeatures extends proxy_box.RenderProxyBox {
    addInkFeature(feature) {
      if (!!dart.test(feature[_debugDisposed])) dart.assertFailed(null, L66, 522, 12, "!feature._debugDisposed");
      if (!dart.equals(feature[_controller$3], this)) dart.assertFailed(null, L66, 523, 12, "feature._controller == this");
      this[_inkFeatures] == null ? this[_inkFeatures] = JSArrayOfInkFeatureL().of([]) : null;
      if (!!dart.test(this[_inkFeatures][$contains](feature))) dart.assertFailed(null, L66, 525, 12, "!_inkFeatures.contains(feature)");
      this[_inkFeatures][$add](feature);
      this.markNeedsPaint();
    }
    [_removeFeature](feature) {
      if (!(this[_inkFeatures] != null)) dart.assertFailed(null, L66, 531, 12, "_inkFeatures != null");
      this[_inkFeatures][$remove](feature);
      this.markNeedsPaint();
    }
    [_didChangeLayout]() {
      if (this[_inkFeatures] != null && dart.test(this[_inkFeatures][$isNotEmpty])) this.markNeedsPaint();
    }
    hitTestSelf(position) {
      return this.absorbHitTest;
    }
    paint(context, offset) {
      if (this[_inkFeatures] != null && dart.test(this[_inkFeatures][$isNotEmpty])) {
        let canvas = context.canvas;
        canvas.save();
        canvas.translate(offset.dx, offset.dy);
        canvas.clipRect(ui.Offset.zero['&'](this.size));
        for (let inkFeature of this[_inkFeatures])
          inkFeature[_paint](canvas);
        canvas.restore();
      }
      super.paint(context, offset);
    }
  };
  (material._RenderInkFeatures.new = function(opts) {
    let child = opts && 'child' in opts ? opts.child : null;
    let vsync = opts && 'vsync' in opts ? opts.vsync : null;
    let absorbHitTest = opts && 'absorbHitTest' in opts ? opts.absorbHitTest : null;
    let color = opts && 'color' in opts ? opts.color : null;
    this[_inkFeatures] = null;
    this.vsync = vsync;
    this.absorbHitTest = absorbHitTest;
    this.color = color;
    if (!(vsync != null)) dart.assertFailed(null, L66, 501, 15, "vsync != null");
    material._RenderInkFeatures.__proto__.new.call(this, child);
    ;
  }).prototype = material._RenderInkFeatures.prototype;
  dart.addTypeTests(material._RenderInkFeatures);
  dart.addTypeCaches(material._RenderInkFeatures);
  material._RenderInkFeatures[dart.implements] = () => [material.MaterialInkController];
  dart.setMethodSignature(material._RenderInkFeatures, () => ({
    __proto__: dart.getMethods(material._RenderInkFeatures.__proto__),
    addInkFeature: dart.fnType(dart.void, [dart.legacy(material.InkFeature)]),
    [_removeFeature]: dart.fnType(dart.void, [dart.legacy(material.InkFeature)]),
    [_didChangeLayout]: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(material._RenderInkFeatures, L67);
  dart.setFieldSignature(material._RenderInkFeatures, () => ({
    __proto__: dart.getFields(material._RenderInkFeatures.__proto__),
    vsync: dart.finalFieldType(dart.legacy(ticker.TickerProvider)),
    color: dart.fieldType(dart.legacy(ui.Color)),
    absorbHitTest: dart.fieldType(dart.legacy(core.bool)),
    [_inkFeatures]: dart.fieldType(dart.legacy(core.List$(dart.legacy(material.InkFeature))))
  }));
  var color$13 = dart.privateName(material, "_InkFeatures.color");
  var vsync$ = dart.privateName(material, "_InkFeatures.vsync");
  var absorbHitTest$ = dart.privateName(material, "_InkFeatures.absorbHitTest");
  material._InkFeatures = class _InkFeatures extends framework.SingleChildRenderObjectWidget {
    get color() {
      return this[color$13];
    }
    set color(value) {
      super.color = value;
    }
    get vsync() {
      return this[vsync$];
    }
    set vsync(value) {
      super.vsync = value;
    }
    get absorbHitTest() {
      return this[absorbHitTest$];
    }
    set absorbHitTest(value) {
      super.absorbHitTest = value;
    }
    createRenderObject(context) {
      return new material._RenderInkFeatures.new({color: this.color, absorbHitTest: this.absorbHitTest, vsync: this.vsync});
    }
    updateRenderObject(context, renderObject) {
      let t15;
      _RenderInkFeaturesL().as(renderObject);
      t15 = renderObject;
      (() => {
        t15.color = this.color;
        t15.absorbHitTest = this.absorbHitTest;
        return t15;
      })();
      if (!dart.equals(this.vsync, renderObject.vsync)) dart.assertFailed(null, L66, 590, 12, "vsync == renderObject.vsync");
    }
  };
  (material._InkFeatures.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let vsync = opts && 'vsync' in opts ? opts.vsync : null;
    let absorbHitTest = opts && 'absorbHitTest' in opts ? opts.absorbHitTest : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[color$13] = color;
    this[vsync$] = vsync;
    this[absorbHitTest$] = absorbHitTest;
    material._InkFeatures.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = material._InkFeatures.prototype;
  dart.addTypeTests(material._InkFeatures);
  dart.addTypeCaches(material._InkFeatures);
  dart.setMethodSignature(material._InkFeatures, () => ({
    __proto__: dart.getMethods(material._InkFeatures.__proto__),
    createRenderObject: dart.fnType(dart.legacy(material._RenderInkFeatures), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(material._InkFeatures, L67);
  dart.setFieldSignature(material._InkFeatures, () => ({
    __proto__: dart.getFields(material._InkFeatures.__proto__),
    color: dart.finalFieldType(dart.legacy(ui.Color)),
    vsync: dart.finalFieldType(dart.legacy(ticker.TickerProvider)),
    absorbHitTest: dart.finalFieldType(dart.legacy(core.bool))
  }));
  material.ShapeBorderTween = class ShapeBorderTween extends tween.Tween$(dart.legacy(borders.ShapeBorder)) {
    lerp(t) {
      return borders.ShapeBorder.lerp(this.begin, this.end, t);
    }
  };
  (material.ShapeBorderTween.new = function(opts) {
    let begin = opts && 'begin' in opts ? opts.begin : null;
    let end = opts && 'end' in opts ? opts.end : null;
    material.ShapeBorderTween.__proto__.new.call(this, {begin: begin, end: end});
    ;
  }).prototype = material.ShapeBorderTween.prototype;
  dart.addTypeTests(material.ShapeBorderTween);
  dart.addTypeCaches(material.ShapeBorderTween);
  dart.setLibraryUri(material.ShapeBorderTween, L67);
  var child$22 = dart.privateName(material, "_MaterialInterior.child");
  var shape$22 = dart.privateName(material, "_MaterialInterior.shape");
  var borderOnForeground$0 = dart.privateName(material, "_MaterialInterior.borderOnForeground");
  var clipBehavior$10 = dart.privateName(material, "_MaterialInterior.clipBehavior");
  var elevation$24 = dart.privateName(material, "_MaterialInterior.elevation");
  var color$14 = dart.privateName(material, "_MaterialInterior.color");
  var shadowColor$4 = dart.privateName(material, "_MaterialInterior.shadowColor");
  material._MaterialInterior = class _MaterialInterior extends implicit_animations.ImplicitlyAnimatedWidget {
    get child() {
      return this[child$22];
    }
    set child(value) {
      super.child = value;
    }
    get shape() {
      return this[shape$22];
    }
    set shape(value) {
      super.shape = value;
    }
    get borderOnForeground() {
      return this[borderOnForeground$0];
    }
    set borderOnForeground(value) {
      super.borderOnForeground = value;
    }
    get clipBehavior() {
      return this[clipBehavior$10];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get elevation() {
      return this[elevation$24];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get color() {
      return this[color$14];
    }
    set color(value) {
      super.color = value;
    }
    get shadowColor() {
      return this[shadowColor$4];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    createState() {
      return new material._MaterialInteriorState.new();
    }
    debugFillProperties(description) {
      super.debugFillProperties(description);
      description.add(new (DiagnosticsPropertyOfShapeBorderL()).new("shape", this.shape));
      description.add(new diagnostics.DoubleProperty.new("elevation", this.elevation));
      description.add(new colors.ColorProperty.new("color", this.color));
      description.add(new colors.ColorProperty.new("shadowColor", this.shadowColor));
    }
  };
  (material._MaterialInterior.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let borderOnForeground = opts && 'borderOnForeground' in opts ? opts.borderOnForeground : true;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C321 || CT.C321;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
    let curve = opts && 'curve' in opts ? opts.curve : C965 || CT.C965;
    let duration = opts && 'duration' in opts ? opts.duration : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$22] = child;
    this[shape$22] = shape;
    this[borderOnForeground$0] = borderOnForeground;
    this[clipBehavior$10] = clipBehavior;
    this[elevation$24] = elevation;
    this[color$14] = color;
    this[shadowColor$4] = shadowColor;
    if (!(child != null)) dart.assertFailed(null, L66, 704, 15, "child != null");
    if (!(shape != null)) dart.assertFailed(null, L66, 705, 15, "shape != null");
    if (!(clipBehavior != null)) dart.assertFailed(null, L66, 706, 15, "clipBehavior != null");
    if (!(elevation != null && dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, L66, 707, 15, "elevation != null && elevation >= 0.0");
    if (!(color != null)) dart.assertFailed(null, L66, 708, 15, "color != null");
    if (!(shadowColor != null)) dart.assertFailed(null, L66, 709, 15, "shadowColor != null");
    material._MaterialInterior.__proto__.new.call(this, {key: key, curve: curve, duration: duration, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = material._MaterialInterior.prototype;
  dart.addTypeTests(material._MaterialInterior);
  dart.addTypeCaches(material._MaterialInterior);
  dart.setMethodSignature(material._MaterialInterior, () => ({
    __proto__: dart.getMethods(material._MaterialInterior.__proto__),
    createState: dart.fnType(dart.legacy(material._MaterialInteriorState), [])
  }));
  dart.setLibraryUri(material._MaterialInterior, L67);
  dart.setFieldSignature(material._MaterialInterior, () => ({
    __proto__: dart.getFields(material._MaterialInterior.__proto__),
    child: dart.finalFieldType(dart.legacy(framework.Widget)),
    shape: dart.finalFieldType(dart.legacy(borders.ShapeBorder)),
    borderOnForeground: dart.finalFieldType(dart.legacy(core.bool)),
    clipBehavior: dart.finalFieldType(dart.legacy(ui.Clip)),
    elevation: dart.finalFieldType(dart.legacy(core.double)),
    color: dart.finalFieldType(dart.legacy(ui.Color)),
    shadowColor: dart.finalFieldType(dart.legacy(ui.Color))
  }));
  var _elevation = dart.privateName(material, "_elevation");
  var _shadowColor = dart.privateName(material, "_shadowColor");
  var _border$ = dart.privateName(material, "_border");
  var C2500;
  var C2501;
  var C2502;
  var C2499;
  var C2498;
  var C2505;
  var C2506;
  var C2507;
  var C2508;
  var C2509;
  var C2510;
  var C2504;
  var C2503;
  material._MaterialInteriorState = class _MaterialInteriorState extends implicit_animations.AnimatedWidgetBaseState$(dart.legacy(material._MaterialInterior)) {
    forEachTween(visitor) {
      this[_elevation] = TweenLOfdoubleL().as(visitor(this[_elevation], this.widget.elevation, dart.fn(value => new (TweenOfdoubleL()).new({begin: doubleL().as(value)}), dynamicToTweenLOfdoubleL())));
      this[_shadowColor] = ColorTweenL().as(visitor(this[_shadowColor], this.widget.shadowColor, dart.fn(value => new tween.ColorTween.new({begin: ColorL().as(value)}), dynamicToColorTweenL())));
      this[_border$] = ShapeBorderTweenL().as(visitor(this[_border$], this.widget.shape, dart.fn(value => new material.ShapeBorderTween.new({begin: ShapeBorderL().as(value)}), dynamicToShapeBorderTweenL())));
    }
    build(context) {
      let shape = this[_border$].evaluate(this.animation);
      let elevation = this[_elevation].evaluate(this.animation);
      return new basic.PhysicalShape.new({child: new material._ShapeBorderPaint.new({child: this.widget.child, shape: shape, borderOnForeground: this.widget.borderOnForeground, $creationLocationd_0dea112b090073317d4: C2498 || CT.C2498}), clipper: new proxy_box.ShapeBorderClipper.new({shape: shape, textDirection: basic.Directionality.of(context)}), clipBehavior: this.widget.clipBehavior, elevation: elevation, color: elevation_overlay.ElevationOverlay.applyOverlay(context, this.widget.color, elevation), shadowColor: this[_shadowColor].evaluate(this.animation), $creationLocationd_0dea112b090073317d4: C2503 || CT.C2503});
    }
  };
  (material._MaterialInteriorState.new = function() {
    this[_elevation] = null;
    this[_shadowColor] = null;
    this[_border$] = null;
    material._MaterialInteriorState.__proto__.new.call(this);
    ;
  }).prototype = material._MaterialInteriorState.prototype;
  dart.addTypeTests(material._MaterialInteriorState);
  dart.addTypeCaches(material._MaterialInteriorState);
  dart.setMethodSignature(material._MaterialInteriorState, () => ({
    __proto__: dart.getMethods(material._MaterialInteriorState.__proto__),
    forEachTween: dart.fnType(dart.void, [dart.legacy(dart.fnType(dart.legacy(tween.Tween), [dart.legacy(tween.Tween), dart.dynamic, dart.legacy(dart.fnType(dart.legacy(tween.Tween), [dart.dynamic]))]))]),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(material._MaterialInteriorState, L67);
  dart.setFieldSignature(material._MaterialInteriorState, () => ({
    __proto__: dart.getFields(material._MaterialInteriorState.__proto__),
    [_elevation]: dart.fieldType(dart.legacy(tween.Tween$(dart.legacy(core.double)))),
    [_shadowColor]: dart.fieldType(dart.legacy(tween.ColorTween)),
    [_border$]: dart.fieldType(dart.legacy(material.ShapeBorderTween))
  }));
  var C2513;
  var C2514;
  var C2515;
  var C2512;
  var C2511;
  var child$23 = dart.privateName(material, "_ShapeBorderPaint.child");
  var shape$23 = dart.privateName(material, "_ShapeBorderPaint.shape");
  var borderOnForeground$1 = dart.privateName(material, "_ShapeBorderPaint.borderOnForeground");
  material._ShapeBorderPaint = class _ShapeBorderPaint extends framework.StatelessWidget {
    get child() {
      return this[child$23];
    }
    set child(value) {
      super.child = value;
    }
    get shape() {
      return this[shape$23];
    }
    set shape(value) {
      super.shape = value;
    }
    get borderOnForeground() {
      return this[borderOnForeground$1];
    }
    set borderOnForeground(value) {
      super.borderOnForeground = value;
    }
    build(context) {
      return new basic.CustomPaint.new({child: this.child, painter: dart.test(this.borderOnForeground) ? null : new material._ShapeBorderPainter.new(this.shape, basic.Directionality.of(context)), foregroundPainter: dart.test(this.borderOnForeground) ? new material._ShapeBorderPainter.new(this.shape, basic.Directionality.of(context)) : null, $creationLocationd_0dea112b090073317d4: C2511 || CT.C2511});
    }
  };
  (material._ShapeBorderPaint.new = function(opts) {
    let child = opts && 'child' in opts ? opts.child : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let borderOnForeground = opts && 'borderOnForeground' in opts ? opts.borderOnForeground : true;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$23] = child;
    this[shape$23] = shape;
    this[borderOnForeground$1] = borderOnForeground;
    material._ShapeBorderPaint.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = material._ShapeBorderPaint.prototype;
  dart.addTypeTests(material._ShapeBorderPaint);
  dart.addTypeCaches(material._ShapeBorderPaint);
  dart.setMethodSignature(material._ShapeBorderPaint, () => ({
    __proto__: dart.getMethods(material._ShapeBorderPaint.__proto__),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(material._ShapeBorderPaint, L67);
  dart.setFieldSignature(material._ShapeBorderPaint, () => ({
    __proto__: dart.getFields(material._ShapeBorderPaint.__proto__),
    child: dart.finalFieldType(dart.legacy(framework.Widget)),
    shape: dart.finalFieldType(dart.legacy(borders.ShapeBorder)),
    borderOnForeground: dart.finalFieldType(dart.legacy(core.bool))
  }));
  material._ShapeBorderPainter = class _ShapeBorderPainter extends custom_paint.CustomPainter {
    paint(canvas, size) {
      this.border.paint(canvas, ui.Offset.zero['&'](size), {textDirection: this.textDirection});
    }
    shouldRepaint(oldDelegate) {
      _ShapeBorderPainterL().as(oldDelegate);
      return !dart.equals(oldDelegate.border, this.border);
    }
  };
  (material._ShapeBorderPainter.new = function(border, textDirection) {
    this.border = border;
    this.textDirection = textDirection;
    material._ShapeBorderPainter.__proto__.new.call(this);
    ;
  }).prototype = material._ShapeBorderPainter.prototype;
  dart.addTypeTests(material._ShapeBorderPainter);
  dart.addTypeCaches(material._ShapeBorderPainter);
  dart.setMethodSignature(material._ShapeBorderPainter, () => ({
    __proto__: dart.getMethods(material._ShapeBorderPainter.__proto__),
    paint: dart.fnType(dart.void, [dart.legacy(ui.Canvas), dart.legacy(ui.Size)]),
    shouldRepaint: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)])
  }));
  dart.setLibraryUri(material._ShapeBorderPainter, L67);
  dart.setFieldSignature(material._ShapeBorderPainter, () => ({
    __proto__: dart.getFields(material._ShapeBorderPainter.__proto__),
    border: dart.finalFieldType(dart.legacy(borders.ShapeBorder)),
    textDirection: dart.finalFieldType(dart.legacy(ui.TextDirection))
  }));
  dart.defineLazy(material, {
    /*material.kMaterialEdges*/get kMaterialEdges() {
      return new (LinkedMapOfMaterialTypeL$BorderRadiusL()).from([material.MaterialType.canvas, null, material.MaterialType.card, new border_radius.BorderRadius.circular(2.0), material.MaterialType.circle, null, material.MaterialType.button, new border_radius.BorderRadius.circular(2.0), material.MaterialType.transparency, null]);
    }
  }, true);
  debug$0.debugCheckHasMaterial = function debugCheckHasMaterial(context) {
    if (!dart.test(dart.fn(() => {
      if (!MaterialL().is(context.widget) && context.findAncestorWidgetOfExactType(MaterialL()) == null) {
        dart.throw(new assertions.FlutterError.fromParts((() => {
          let t15 = JSArrayOfDiagnosticsNodeL().of([]);
          t15[$add](new assertions.ErrorSummary.new("No Material widget found."));
          t15[$add](new assertions.ErrorDescription.new(dart.str(dart.runtimeType(context.widget)) + " widgets require a Material " + "widget ancestor.\n" + "In material design, most widgets are conceptually \"printed\" on " + "a sheet of material. In Flutter's material library, that " + "material is represented by the Material widget. It is the " + "Material widget that renders ink splashes, for instance. " + "Because of this, many material library widgets require that " + "there be a Material widget in the tree above them."));
          t15[$add](new assertions.ErrorHint.new("To introduce a Material widget, you can either directly " + "include one, or use a widget that contains Material itself, " + "such as a Card, Dialog, Drawer, or Scaffold."));
          for (let t16 of context.describeMissingAncestor({expectedAncestorType: dart.wrapType(MaterialL())}))
            t15[$add](t16);
          return t15;
        })()));
      }
      return true;
    }, VoidToboolL())())) dart.assertFailed(null, L107, 28, 10, "() {\r\n    if (context.widget is! Material && context.findAncestorWidgetOfExactType<Material>() == null) {\r\n      throw FlutterError.fromParts(<DiagnosticsNode>[\r\n        ErrorSummary('No Material widget found.'),\r\n        ErrorDescription(\r\n          '${context.widget.runtimeType} widgets require a Material '\r\n          'widget ancestor.\\n'\r\n          'In material design, most widgets are conceptually \"printed\" on '\r\n          \"a sheet of material. In Flutter's material library, that \"\r\n          'material is represented by the Material widget. It is the '\r\n          'Material widget that renders ink splashes, for instance. '\r\n          'Because of this, many material library widgets require that '\r\n          'there be a Material widget in the tree above them.'\r\n        ),\r\n        ErrorHint(\r\n          'To introduce a Material widget, you can either directly '\r\n          'include one, or use a widget that contains Material itself, '\r\n          'such as a Card, Dialog, Drawer, or Scaffold.',\r\n        ),\r\n        ...context.describeMissingAncestor(expectedAncestorType: Material)\r\n      ]\r\n      );\r\n    }\r\n    return true;\r\n  }()");
    return true;
  };
  debug$0.debugCheckHasMaterialLocalizations = function debugCheckHasMaterialLocalizations(context) {
    if (!dart.test(dart.fn(() => {
      if (localizations.Localizations.of(MaterialLocalizationsL(), context, dart.wrapType(MaterialLocalizationsL())) == null) {
        dart.throw(new assertions.FlutterError.fromParts((() => {
          let t17 = JSArrayOfDiagnosticsNodeL().of([]);
          t17[$add](new assertions.ErrorSummary.new("No MaterialLocalizations found."));
          t17[$add](new assertions.ErrorDescription.new(dart.str(dart.runtimeType(context.widget)) + " widgets require MaterialLocalizations " + "to be provided by a Localizations widget ancestor."));
          t17[$add](new assertions.ErrorDescription.new("The material library uses Localizations to generate messages, " + "labels, and abbreviations."));
          t17[$add](new assertions.ErrorHint.new("To introduce a MaterialLocalizations, either use a " + "MaterialApp at the root of your application to include them " + "automatically, or add a Localization widget with a " + "MaterialLocalizations delegate."));
          for (let t18 of context.describeMissingAncestor({expectedAncestorType: dart.wrapType(MaterialLocalizationsL())}))
            t17[$add](t18);
          return t17;
        })()));
      }
      return true;
    }, VoidToboolL())())) dart.assertFailed(null, L107, 72, 10, "() {\r\n    if (Localizations.of<MaterialLocalizations>(context, MaterialLocalizations) == null) {\r\n      throw FlutterError.fromParts(<DiagnosticsNode>[\r\n        ErrorSummary('No MaterialLocalizations found.'),\r\n        ErrorDescription(\r\n          '${context.widget.runtimeType} widgets require MaterialLocalizations '\r\n          'to be provided by a Localizations widget ancestor.'\r\n        ),\r\n        ErrorDescription(\r\n          'The material library uses Localizations to generate messages, '\r\n          'labels, and abbreviations.'\r\n        ),\r\n        ErrorHint(\r\n          'To introduce a MaterialLocalizations, either use a '\r\n          'MaterialApp at the root of your application to include them '\r\n          'automatically, or add a Localization widget with a '\r\n          'MaterialLocalizations delegate.'\r\n        ),\r\n        ...context.describeMissingAncestor(expectedAncestorType: MaterialLocalizations)\r\n      ]);\r\n    }\r\n    return true;\r\n  }()");
    return true;
  };
  debug$0.debugCheckHasScaffold = function debugCheckHasScaffold(context) {
    if (!dart.test(dart.fn(() => {
      if (!ScaffoldL().is(context.widget) && context.findAncestorWidgetOfExactType(ScaffoldL()) == null) {
        dart.throw(new assertions.FlutterError.fromParts((() => {
          let t19 = JSArrayOfDiagnosticsNodeL().of([]);
          t19[$add](new assertions.ErrorSummary.new("No Scaffold widget found."));
          t19[$add](new assertions.ErrorDescription.new(dart.str(dart.runtimeType(context.widget)) + " widgets require a Scaffold widget ancestor."));
          for (let t20 of context.describeMissingAncestor({expectedAncestorType: dart.wrapType(ScaffoldL())}))
            t19[$add](t20);
          t19[$add](new assertions.ErrorHint.new("Typically, the Scaffold widget is introduced by the MaterialApp or " + "WidgetsApp widget at the top of your application widget tree."));
          return t19;
        })()));
      }
      return true;
    }, VoidToboolL())())) dart.assertFailed(null, L107, 112, 10, "() {\r\n    if (context.widget is! Scaffold && context.findAncestorWidgetOfExactType<Scaffold>() == null) {\r\n      throw FlutterError.fromParts(<DiagnosticsNode>[\r\n        ErrorSummary('No Scaffold widget found.'),\r\n        ErrorDescription('${context.widget.runtimeType} widgets require a Scaffold widget ancestor.'),\r\n        ...context.describeMissingAncestor(expectedAncestorType: Scaffold),\r\n        ErrorHint(\r\n          'Typically, the Scaffold widget is introduced by the MaterialApp or '\r\n          'WidgetsApp widget at the top of your application widget tree.'\r\n        )\r\n      ]);\r\n    }\r\n    return true;\r\n  }()");
    return true;
  };
  var C2516;
  var header$ = dart.privateName(reorderable_list, "ReorderableListView.header");
  var children$2 = dart.privateName(reorderable_list, "ReorderableListView.children");
  var scrollDirection$ = dart.privateName(reorderable_list, "ReorderableListView.scrollDirection");
  var scrollController$ = dart.privateName(reorderable_list, "ReorderableListView.scrollController");
  var padding$11 = dart.privateName(reorderable_list, "ReorderableListView.padding");
  var reverse$1 = dart.privateName(reorderable_list, "ReorderableListView.reverse");
  var onReorder$ = dart.privateName(reorderable_list, "ReorderableListView.onReorder");
  reorderable_list.ReorderableListView = class ReorderableListView extends framework.StatefulWidget {
    get header() {
      return this[header$];
    }
    set header(value) {
      super.header = value;
    }
    get children() {
      return this[children$2];
    }
    set children(value) {
      super.children = value;
    }
    get scrollDirection() {
      return this[scrollDirection$];
    }
    set scrollDirection(value) {
      super.scrollDirection = value;
    }
    get scrollController() {
      return this[scrollController$];
    }
    set scrollController(value) {
      super.scrollController = value;
    }
    get padding() {
      return this[padding$11];
    }
    set padding(value) {
      super.padding = value;
    }
    get reverse() {
      return this[reverse$1];
    }
    set reverse(value) {
      super.reverse = value;
    }
    get onReorder() {
      return this[onReorder$];
    }
    set onReorder(value) {
      super.onReorder = value;
    }
    createState() {
      return new reorderable_list._ReorderableListViewState.new();
    }
  };
  (reorderable_list.ReorderableListView.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let header = opts && 'header' in opts ? opts.header : null;
    let children = opts && 'children' in opts ? opts.children : null;
    let onReorder = opts && 'onReorder' in opts ? opts.onReorder : null;
    let scrollController = opts && 'scrollController' in opts ? opts.scrollController : null;
    let scrollDirection = opts && 'scrollDirection' in opts ? opts.scrollDirection : C2516 || CT.C2516;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let reverse = opts && 'reverse' in opts ? opts.reverse : false;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[header$] = header;
    this[children$2] = children;
    this[onReorder$] = onReorder;
    this[scrollController$] = scrollController;
    this[scrollDirection$] = scrollDirection;
    this[padding$11] = padding;
    this[reverse$1] = reverse;
    if (!(scrollDirection != null)) dart.assertFailed(null, L108, 71, 15, "scrollDirection != null");
    if (!(onReorder != null)) dart.assertFailed(null, L108, 72, 15, "onReorder != null");
    if (!(children != null)) dart.assertFailed(null, L108, 73, 15, "children != null");
    if (!dart.test(children[$every](dart.fn(w => w.key != null, WidgetLToboolL())))) dart.assertFailed("All children of this widget must have a key.", L108, 75, 10, "children.every((Widget w) => w.key != null)");
    reorderable_list.ReorderableListView.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = reorderable_list.ReorderableListView.prototype;
  dart.addTypeTests(reorderable_list.ReorderableListView);
  dart.addTypeCaches(reorderable_list.ReorderableListView);
  dart.setMethodSignature(reorderable_list.ReorderableListView, () => ({
    __proto__: dart.getMethods(reorderable_list.ReorderableListView.__proto__),
    createState: dart.fnType(dart.legacy(reorderable_list._ReorderableListViewState), [])
  }));
  dart.setLibraryUri(reorderable_list.ReorderableListView, L109);
  dart.setFieldSignature(reorderable_list.ReorderableListView, () => ({
    __proto__: dart.getFields(reorderable_list.ReorderableListView.__proto__),
    header: dart.finalFieldType(dart.legacy(framework.Widget)),
    children: dart.finalFieldType(dart.legacy(core.List$(dart.legacy(framework.Widget)))),
    scrollDirection: dart.finalFieldType(dart.legacy(basic_types.Axis)),
    scrollController: dart.finalFieldType(dart.legacy(scroll_controller.ScrollController)),
    padding: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsets)),
    reverse: dart.finalFieldType(dart.legacy(core.bool)),
    onReorder: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, [dart.legacy(core.int), dart.legacy(core.int)])))
  }));
  var _overlayKey = dart.privateName(reorderable_list, "_overlayKey");
  var _listOverlayEntry = dart.privateName(reorderable_list, "_listOverlayEntry");
  var C2519;
  var C2520;
  var C2521;
  var C2522;
  var C2523;
  var C2524;
  var C2525;
  var C2518;
  var C2517;
  var C2528;
  var C2529;
  var C2527;
  var C2526;
  reorderable_list._ReorderableListViewState = class _ReorderableListViewState extends framework.State$(dart.legacy(reorderable_list.ReorderableListView)) {
    initState() {
      super.initState();
      this[_listOverlayEntry] = new overlay$.OverlayEntry.new({opaque: true, builder: dart.fn(context => new reorderable_list._ReorderableListContent.new({header: this.widget.header, children: this.widget.children, scrollController: this.widget.scrollController, scrollDirection: this.widget.scrollDirection, onReorder: this.widget.onReorder, padding: this.widget.padding, reverse: this.widget.reverse, $creationLocationd_0dea112b090073317d4: C2517 || CT.C2517}), BuildContextLTo_ReorderableListContentL())});
    }
    build(context) {
      return new overlay$.Overlay.new({key: this[_overlayKey], initialEntries: JSArrayOfOverlayEntryL().of([this[_listOverlayEntry]]), $creationLocationd_0dea112b090073317d4: C2526 || CT.C2526});
    }
  };
  (reorderable_list._ReorderableListViewState.new = function() {
    this[_overlayKey] = GlobalKeyOfStateLOfStatefulWidgetL().new({debugLabel: dart.str(dart.wrapType(ReorderableListViewL())) + " overlay key"});
    this[_listOverlayEntry] = null;
    reorderable_list._ReorderableListViewState.__proto__.new.call(this);
    ;
  }).prototype = reorderable_list._ReorderableListViewState.prototype;
  dart.addTypeTests(reorderable_list._ReorderableListViewState);
  dart.addTypeCaches(reorderable_list._ReorderableListViewState);
  dart.setMethodSignature(reorderable_list._ReorderableListViewState, () => ({
    __proto__: dart.getMethods(reorderable_list._ReorderableListViewState.__proto__),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(reorderable_list._ReorderableListViewState, L109);
  dart.setFieldSignature(reorderable_list._ReorderableListViewState, () => ({
    __proto__: dart.getFields(reorderable_list._ReorderableListViewState.__proto__),
    [_overlayKey]: dart.finalFieldType(dart.legacy(framework.GlobalKey$(dart.legacy(framework.State$(dart.legacy(framework.StatefulWidget)))))),
    [_listOverlayEntry]: dart.fieldType(dart.legacy(overlay$.OverlayEntry))
  }));
  var header$0 = dart.privateName(reorderable_list, "_ReorderableListContent.header");
  var children$3 = dart.privateName(reorderable_list, "_ReorderableListContent.children");
  var scrollController$0 = dart.privateName(reorderable_list, "_ReorderableListContent.scrollController");
  var scrollDirection$0 = dart.privateName(reorderable_list, "_ReorderableListContent.scrollDirection");
  var padding$12 = dart.privateName(reorderable_list, "_ReorderableListContent.padding");
  var onReorder$0 = dart.privateName(reorderable_list, "_ReorderableListContent.onReorder");
  var reverse$2 = dart.privateName(reorderable_list, "_ReorderableListContent.reverse");
  reorderable_list._ReorderableListContent = class _ReorderableListContent extends framework.StatefulWidget {
    get header() {
      return this[header$0];
    }
    set header(value) {
      super.header = value;
    }
    get children() {
      return this[children$3];
    }
    set children(value) {
      super.children = value;
    }
    get scrollController() {
      return this[scrollController$0];
    }
    set scrollController(value) {
      super.scrollController = value;
    }
    get scrollDirection() {
      return this[scrollDirection$0];
    }
    set scrollDirection(value) {
      super.scrollDirection = value;
    }
    get padding() {
      return this[padding$12];
    }
    set padding(value) {
      super.padding = value;
    }
    get onReorder() {
      return this[onReorder$0];
    }
    set onReorder(value) {
      super.onReorder = value;
    }
    get reverse() {
      return this[reverse$2];
    }
    set reverse(value) {
      super.reverse = value;
    }
    createState() {
      return new reorderable_list._ReorderableListContentState.new();
    }
  };
  (reorderable_list._ReorderableListContent.new = function(opts) {
    let header = opts && 'header' in opts ? opts.header : null;
    let children = opts && 'children' in opts ? opts.children : null;
    let scrollController = opts && 'scrollController' in opts ? opts.scrollController : null;
    let scrollDirection = opts && 'scrollDirection' in opts ? opts.scrollDirection : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let onReorder = opts && 'onReorder' in opts ? opts.onReorder : null;
    let reverse = opts && 'reverse' in opts ? opts.reverse : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[header$0] = header;
    this[children$3] = children;
    this[scrollController$0] = scrollController;
    this[scrollDirection$0] = scrollDirection;
    this[padding$12] = padding;
    this[onReorder$0] = onReorder;
    this[reverse$2] = reverse;
    reorderable_list._ReorderableListContent.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = reorderable_list._ReorderableListContent.prototype;
  dart.addTypeTests(reorderable_list._ReorderableListContent);
  dart.addTypeCaches(reorderable_list._ReorderableListContent);
  dart.setMethodSignature(reorderable_list._ReorderableListContent, () => ({
    __proto__: dart.getMethods(reorderable_list._ReorderableListContent.__proto__),
    createState: dart.fnType(dart.legacy(reorderable_list._ReorderableListContentState), [])
  }));
  dart.setLibraryUri(reorderable_list._ReorderableListContent, L109);
  dart.setFieldSignature(reorderable_list._ReorderableListContent, () => ({
    __proto__: dart.getFields(reorderable_list._ReorderableListContent.__proto__),
    header: dart.finalFieldType(dart.legacy(framework.Widget)),
    children: dart.finalFieldType(dart.legacy(core.List$(dart.legacy(framework.Widget)))),
    scrollController: dart.finalFieldType(dart.legacy(scroll_controller.ScrollController)),
    scrollDirection: dart.finalFieldType(dart.legacy(basic_types.Axis)),
    padding: dart.finalFieldType(dart.legacy(edge_insets.EdgeInsets)),
    onReorder: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, [dart.legacy(core.int), dart.legacy(core.int)]))),
    reverse: dart.finalFieldType(dart.legacy(core.bool))
  }));
  var _scrollController$ = dart.privateName(reorderable_list, "_scrollController");
  var _entranceController = dart.privateName(reorderable_list, "_entranceController");
  var _ghostController = dart.privateName(reorderable_list, "_ghostController");
  var _dragging = dart.privateName(reorderable_list, "_dragging");
  var _draggingFeedbackSize = dart.privateName(reorderable_list, "_draggingFeedbackSize");
  var _dragStartIndex = dart.privateName(reorderable_list, "_dragStartIndex");
  var _ghostIndex = dart.privateName(reorderable_list, "_ghostIndex");
  var _currentIndex$ = dart.privateName(reorderable_list, "_currentIndex");
  var _nextIndex = dart.privateName(reorderable_list, "_nextIndex");
  var _scrolling = dart.privateName(reorderable_list, "_scrolling");
  var _dropAreaExtent = dart.privateName(reorderable_list, "_dropAreaExtent");
  var _onEntranceStatusChanged = dart.privateName(reorderable_list, "_onEntranceStatusChanged");
  var _requestAnimationToNextIndex = dart.privateName(reorderable_list, "_requestAnimationToNextIndex");
  var _scrollTo = dart.privateName(reorderable_list, "_scrollTo");
  var C2532;
  var C2531;
  var C2530;
  var C2535;
  var C2534;
  var C2533;
  var _buildContainerForScrollDirection = dart.privateName(reorderable_list, "_buildContainerForScrollDirection");
  var C2538;
  var C2539;
  var C2537;
  var C2536;
  var C2542;
  var C2541;
  var C2540;
  var C2545;
  var C2546;
  var C2544;
  var C2543;
  var C2549;
  var C2550;
  var C2548;
  var C2547;
  var C2553;
  var C2554;
  var C2555;
  var C2552;
  var C2551;
  var C2557;
  var C2556;
  var C2559;
  var C2558;
  var C2562;
  var C2563;
  var C2564;
  var C2565;
  var C2566;
  var C2567;
  var C2568;
  var C2569;
  var C2570;
  var C2571;
  var C2572;
  var C2561;
  var C2560;
  var C2575;
  var C2574;
  var C2573;
  var C2578;
  var C2577;
  var C2576;
  var C2581;
  var C2582;
  var C2583;
  var C2580;
  var C2579;
  var C2586;
  var C2587;
  var C2588;
  var C2585;
  var C2584;
  var C2591;
  var C2592;
  var C2593;
  var C2594;
  var C2590;
  var C2589;
  var C2597;
  var C2596;
  var C2595;
  var _wrap = dart.privateName(reorderable_list, "_wrap");
  var C2598;
  var C2601;
  var C2602;
  var C2603;
  var C2600;
  var C2599;
  var C2606;
  var C2607;
  var C2608;
  var C2605;
  var C2604;
  var C2611;
  var C2612;
  var C2613;
  var C2614;
  var C2615;
  var C2610;
  var C2609;
  var C2618;
  var C2617;
  var C2616;
  const State_TickerProviderStateMixin$36$5 = class State_TickerProviderStateMixin extends framework.State$(dart.legacy(reorderable_list._ReorderableListContent)) {};
  (State_TickerProviderStateMixin$36$5.new = function() {
    ticker_provider.TickerProviderStateMixin$(dart.legacy(reorderable_list._ReorderableListContent))[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$5.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$5.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$5, ticker_provider.TickerProviderStateMixin$(dart.legacy(reorderable_list._ReorderableListContent)));
  reorderable_list._ReorderableListContentState = class _ReorderableListContentState extends State_TickerProviderStateMixin$36$5 {
    get [_dropAreaExtent]() {
      if (this[_draggingFeedbackSize] == null) {
        return 100;
      }
      let dropAreaWithoutMargin = null;
      switch (this.widget.scrollDirection) {
        case C2168 || CT.C2168:
        {
          dropAreaWithoutMargin = this[_draggingFeedbackSize].width;
          break;
        }
        case C2516 || CT.C2516:
        default:
        {
          dropAreaWithoutMargin = this[_draggingFeedbackSize].height;
          break;
        }
      }
      return dart.notNull(dropAreaWithoutMargin) + 8;
    }
    initState() {
      super.initState();
      this[_entranceController] = new animation_controller.AnimationController.new({vsync: this, duration: reorderable_list._ReorderableListContentState._reorderAnimationDuration});
      this[_ghostController] = new animation_controller.AnimationController.new({vsync: this, duration: reorderable_list._ReorderableListContentState._reorderAnimationDuration});
      this[_entranceController].addStatusListener(dart.bind(this, _onEntranceStatusChanged));
    }
    didChangeDependencies() {
      let t21, t21$;
      this[_scrollController$] = (t21$ = (t21 = this.widget.scrollController, t21 == null ? primary_scroll_controller.PrimaryScrollController.of(this.context) : t21), t21$ == null ? new scroll_controller.ScrollController.new() : t21$);
      super.didChangeDependencies();
    }
    dispose() {
      this[_entranceController].dispose();
      this[_ghostController].dispose();
      super.dispose();
    }
    [_requestAnimationToNextIndex]() {
      if (dart.test(this[_entranceController].isCompleted)) {
        this[_ghostIndex] = this[_currentIndex$];
        if (this[_nextIndex] == this[_currentIndex$]) {
          return;
        }
        this[_currentIndex$] = this[_nextIndex];
        this[_ghostController].reverse({from: 1.0});
        this[_entranceController].forward({from: 0.0});
      }
    }
    [_onEntranceStatusChanged](status) {
      if (status == animation.AnimationStatus.completed) {
        this.setState(dart.fn(() => {
          this[_requestAnimationToNextIndex]();
        }, VoidToNullN()));
      }
    }
    [_scrollTo](context) {
      if (dart.test(this[_scrolling])) return;
      let contextObject = context.findRenderObject();
      let viewport = viewport$.RenderAbstractViewport.of(contextObject);
      if (!(viewport != null)) dart.assertFailed(null, L108, 319, 12, "viewport != null");
      let margin = this[_dropAreaExtent];
      let scrollOffset = this[_scrollController$].offset;
      let topOffset = math.max(doubleL(), this[_scrollController$].position.minScrollExtent, dart.notNull(viewport.getOffsetToReveal(contextObject, 0.0).offset) - dart.notNull(margin));
      let bottomOffset = math.min(doubleL(), this[_scrollController$].position.maxScrollExtent, dart.notNull(viewport.getOffsetToReveal(contextObject, 1.0).offset) + dart.notNull(margin));
      let onScreen = dart.notNull(scrollOffset) <= topOffset && dart.notNull(scrollOffset) >= bottomOffset;
      if (!onScreen) {
        this[_scrolling] = true;
        this[_scrollController$].position.animateTo(dart.notNull(scrollOffset) < bottomOffset ? bottomOffset : topOffset, {duration: reorderable_list._ReorderableListContentState._scrollAnimationDuration, curve: curves.Curves.easeInOut}).then(core.Null, dart.fn(value => {
          this.setState(dart.fn(() => {
            this[_scrolling] = false;
          }, VoidToNullN()));
        }, voidToNullN()));
      }
    }
    [_buildContainerForScrollDirection](opts) {
      let children = opts && 'children' in opts ? opts.children : null;
      switch (this.widget.scrollDirection) {
        case C2168 || CT.C2168:
        {
          return new basic.Row.new({children: children, $creationLocationd_0dea112b090073317d4: C2530 || CT.C2530});
        }
        case C2516 || CT.C2516:
        default:
        {
          return new basic.Column.new({children: children, $creationLocationd_0dea112b090073317d4: C2533 || CT.C2533});
        }
      }
    }
    [_wrap](toWrap, index, constraints) {
      if (!(toWrap.key != null)) dart.assertFailed(null, L108, 365, 12, "toWrap.key != null");
      let keyIndexGlobalKey = new (GlobalObjectKeyOfStateLOfStatefulWidgetL()).new(toWrap.key);
      const onDragStarted = () => {
        this.setState(dart.fn(() => {
          this[_dragging] = toWrap.key;
          this[_dragStartIndex] = index;
          this[_ghostIndex] = index;
          this[_currentIndex$] = index;
          this[_entranceController].value = 1.0;
          this[_draggingFeedbackSize] = keyIndexGlobalKey.currentContext.size;
        }, VoidToNullN()));
      };
      dart.fn(onDragStarted, VoidTovoid());
      const reorder = (startIndex, endIndex) => {
        this.setState(dart.fn(() => {
          let t23, t22, t21;
          if (startIndex != endIndex) {
            t21 = this.widget;
            t22 = startIndex;
            t23 = endIndex;
            t21.onReorder(t22, t23);
          }
          this[_ghostController].reverse({from: 0.1});
          this[_entranceController].reverse({from: 0.1});
          this[_dragging] = null;
        }, VoidToNullN()));
      };
      dart.fn(reorder, intLAndintLTovoid());
      const onDragEnded = () => {
        reorder(this[_dragStartIndex], this[_currentIndex$]);
      };
      dart.fn(onDragEnded, VoidTovoid());
      const wrapWithSemantics = () => {
        let semanticsActions = new (LinkedMapOfCustomSemanticsActionL$VoidToLvoid()).new();
        function moveToStart() {
          return reorder(index, 0);
        }
        dart.fn(moveToStart, VoidTovoid());
        const moveToEnd = () => {
          return reorder(index, this.widget.children[$length]);
        };
        dart.fn(moveToEnd, VoidTovoid());
        function moveBefore() {
          return reorder(index, dart.notNull(index) - 1);
        }
        dart.fn(moveBefore, VoidTovoid());
        function moveAfter() {
          return reorder(index, dart.notNull(index) + 2);
        }
        dart.fn(moveAfter, VoidTovoid());
        let localizations = material_localizations.MaterialLocalizations.of(this.context);
        if (dart.notNull(index) > 0) {
          semanticsActions[$_set](new semantics.CustomSemanticsAction.new({label: localizations.reorderItemToStart}), moveToStart);
          let reorderItemBefore = localizations.reorderItemUp;
          if (this.widget.scrollDirection == basic_types.Axis.horizontal) {
            reorderItemBefore = dart.equals(basic.Directionality.of(this.context), ui.TextDirection.ltr) ? localizations.reorderItemLeft : localizations.reorderItemRight;
          }
          semanticsActions[$_set](new semantics.CustomSemanticsAction.new({label: reorderItemBefore}), moveBefore);
        }
        if (dart.notNull(index) < dart.notNull(this.widget.children[$length]) - 1) {
          let reorderItemAfter = localizations.reorderItemDown;
          if (this.widget.scrollDirection == basic_types.Axis.horizontal) {
            reorderItemAfter = dart.equals(basic.Directionality.of(this.context), ui.TextDirection.ltr) ? localizations.reorderItemRight : localizations.reorderItemLeft;
          }
          semanticsActions[$_set](new semantics.CustomSemanticsAction.new({label: reorderItemAfter}), moveAfter);
          semanticsActions[$_set](new semantics.CustomSemanticsAction.new({label: localizations.reorderItemToEnd}), moveToEnd);
        }
        return new basic.KeyedSubtree.new({key: keyIndexGlobalKey, child: new basic.MergeSemantics.new({child: new basic.Semantics.new({customSemanticsActions: semanticsActions, child: toWrap, $creationLocationd_0dea112b090073317d4: C2536 || CT.C2536}), $creationLocationd_0dea112b090073317d4: C2540 || CT.C2540}), $creationLocationd_0dea112b090073317d4: C2543 || CT.C2543});
      };
      dart.fn(wrapWithSemantics, VoidToWidgetL());
      const buildDragTarget = (context, acceptedCandidates, rejectedCandidates) => {
        let toWrapWithSemantics = wrapWithSemantics();
        let child = new (LongPressDraggableOfKeyL()).new({maxSimultaneousDrags: 1, axis: this.widget.scrollDirection, data: toWrap.key, ignoringFeedbackSemantics: false, feedback: new container.Container.new({alignment: alignment.Alignment.topLeft, constraints: constraints, child: new material.Material.new({elevation: 6.0, child: toWrapWithSemantics, $creationLocationd_0dea112b090073317d4: C2547 || CT.C2547}), $creationLocationd_0dea112b090073317d4: C2551 || CT.C2551}), child: dart.equals(this[_dragging], toWrap.key) ? C2556 || CT.C2556 : toWrapWithSemantics, childWhenDragging: C2558 || CT.C2558, dragAnchor: drag_target.DragAnchor.child, onDragStarted: onDragStarted, onDragCompleted: onDragEnded, onDraggableCanceled: dart.fn((velocity, offset) => {
            onDragEnded();
          }, VelocityLAndOffsetLToNullN()), $creationLocationd_0dea112b090073317d4: C2560 || CT.C2560});
        if (dart.notNull(index) >= dart.notNull(this.widget.children[$length])) {
          child = toWrap;
        }
        let spacing = null;
        switch (this.widget.scrollDirection) {
          case C2168 || CT.C2168:
          {
            spacing = new basic.SizedBox.new({width: this[_dropAreaExtent], $creationLocationd_0dea112b090073317d4: C2573 || CT.C2573});
            break;
          }
          case C2516 || CT.C2516:
          default:
          {
            spacing = new basic.SizedBox.new({height: this[_dropAreaExtent], $creationLocationd_0dea112b090073317d4: C2576 || CT.C2576});
            break;
          }
        }
        if (this[_currentIndex$] == index) {
          return this[_buildContainerForScrollDirection]({children: JSArrayOfWidgetL().of([new transitions.SizeTransition.new({sizeFactor: this[_entranceController], axis: this.widget.scrollDirection, child: spacing, $creationLocationd_0dea112b090073317d4: C2579 || CT.C2579}), child])});
        }
        if (this[_ghostIndex] == index) {
          return this[_buildContainerForScrollDirection]({children: JSArrayOfWidgetL().of([new transitions.SizeTransition.new({sizeFactor: this[_ghostController], axis: this.widget.scrollDirection, child: spacing, $creationLocationd_0dea112b090073317d4: C2584 || CT.C2584}), child])});
        }
        return child;
      };
      dart.fn(buildDragTarget, BuildContextLAndListLOfKeyLAndListLToWidgetL());
      return new basic.Builder.new({builder: dart.fn(context => new (DragTargetOfKeyL()).new({builder: buildDragTarget, onWillAccept: dart.fn(toAccept => {
            this.setState(dart.fn(() => {
              this[_nextIndex] = index;
              this[_requestAnimationToNextIndex]();
            }, VoidToNullN()));
            this[_scrollTo](context);
            return dart.equals(this[_dragging], toAccept) && !dart.equals(toAccept, toWrap.key);
          }, KeyLToboolL()), onAccept: dart.fn(accepted => {
          }, KeyLToNullN()), onLeave: dart.fn(leaving => {
          }, ObjectLToNullN()), $creationLocationd_0dea112b090073317d4: C2589 || CT.C2589}), BuildContextLToDragTargetLOfKeyL()), $creationLocationd_0dea112b090073317d4: C2595 || CT.C2595});
    }
    build(context) {
      if (!dart.test(debug$0.debugCheckHasMaterialLocalizations(context))) dart.assertFailed(null, L108, 555, 12, "debugCheckHasMaterialLocalizations(context)");
      return new layout_builder.LayoutBuilder.new({builder: dart.fn((context, constraints) => {
          let endWidgetKey = C2598 || CT.C2598;
          let finalDropArea = null;
          switch (this.widget.scrollDirection) {
            case C2168 || CT.C2168:
            {
              finalDropArea = new basic.SizedBox.new({key: endWidgetKey, width: 100, height: constraints.maxHeight, $creationLocationd_0dea112b090073317d4: C2599 || CT.C2599});
              break;
            }
            case C2516 || CT.C2516:
            default:
            {
              finalDropArea = new basic.SizedBox.new({key: endWidgetKey, height: 100, width: constraints.maxWidth, $creationLocationd_0dea112b090073317d4: C2604 || CT.C2604});
              break;
            }
          }
          let hasMoreThanOneChildElement = dart.notNull(this.widget.children[$length]) > 1;
          return new single_child_scroll_view.SingleChildScrollView.new({scrollDirection: this.widget.scrollDirection, padding: this.widget.padding, controller: this[_scrollController$], reverse: this.widget.reverse, child: this[_buildContainerForScrollDirection]({children: (() => {
                let t21 = JSArrayOfWidgetL().of([]);
                if (dart.test(this.widget.reverse) && hasMoreThanOneChildElement) t21[$add](this[_wrap](finalDropArea, this.widget.children[$length], constraints));
                if (this.widget.header != null) t21[$add](this.widget.header);
                for (let i = 0; i < dart.notNull(this.widget.children[$length]); i = i + 1)
                  t21[$add](this[_wrap](this.widget.children[$_get](i), i, constraints));
                if (!dart.test(this.widget.reverse) && hasMoreThanOneChildElement) t21[$add](this[_wrap](finalDropArea, this.widget.children[$length], constraints));
                return t21;
              })()}), $creationLocationd_0dea112b090073317d4: C2609 || CT.C2609});
        }, BuildContextLAndBoxConstraintsLToSingleChildScrollViewL()), $creationLocationd_0dea112b090073317d4: C2616 || CT.C2616});
    }
  };
  (reorderable_list._ReorderableListContentState.new = function() {
    this[_scrollController$] = null;
    this[_entranceController] = null;
    this[_ghostController] = null;
    this[_dragging] = null;
    this[_draggingFeedbackSize] = null;
    this[_dragStartIndex] = 0;
    this[_ghostIndex] = 0;
    this[_currentIndex$] = 0;
    this[_nextIndex] = 0;
    this[_scrolling] = false;
    reorderable_list._ReorderableListContentState.__proto__.new.call(this);
    ;
  }).prototype = reorderable_list._ReorderableListContentState.prototype;
  dart.addTypeTests(reorderable_list._ReorderableListContentState);
  dart.addTypeCaches(reorderable_list._ReorderableListContentState);
  dart.setMethodSignature(reorderable_list._ReorderableListContentState, () => ({
    __proto__: dart.getMethods(reorderable_list._ReorderableListContentState.__proto__),
    [_requestAnimationToNextIndex]: dart.fnType(dart.void, []),
    [_onEntranceStatusChanged]: dart.fnType(dart.void, [dart.legacy(animation.AnimationStatus)]),
    [_scrollTo]: dart.fnType(dart.void, [dart.legacy(framework.BuildContext)]),
    [_buildContainerForScrollDirection]: dart.fnType(dart.legacy(framework.Widget), [], {children: dart.legacy(core.List$(dart.legacy(framework.Widget)))}, {}),
    [_wrap]: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.Widget), dart.legacy(core.int), dart.legacy(box.BoxConstraints)]),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setGetterSignature(reorderable_list._ReorderableListContentState, () => ({
    __proto__: dart.getGetters(reorderable_list._ReorderableListContentState.__proto__),
    [_dropAreaExtent]: dart.legacy(core.double)
  }));
  dart.setLibraryUri(reorderable_list._ReorderableListContentState, L109);
  dart.setFieldSignature(reorderable_list._ReorderableListContentState, () => ({
    __proto__: dart.getFields(reorderable_list._ReorderableListContentState.__proto__),
    [_scrollController$]: dart.fieldType(dart.legacy(scroll_controller.ScrollController)),
    [_entranceController]: dart.fieldType(dart.legacy(animation_controller.AnimationController)),
    [_ghostController]: dart.fieldType(dart.legacy(animation_controller.AnimationController)),
    [_dragging]: dart.fieldType(dart.legacy(key.Key)),
    [_draggingFeedbackSize]: dart.fieldType(dart.legacy(ui.Size)),
    [_dragStartIndex]: dart.fieldType(dart.legacy(core.int)),
    [_ghostIndex]: dart.fieldType(dart.legacy(core.int)),
    [_currentIndex$]: dart.fieldType(dart.legacy(core.int)),
    [_nextIndex]: dart.fieldType(dart.legacy(core.int)),
    [_scrolling]: dart.fieldType(dart.legacy(core.bool))
  }));
  dart.defineLazy(reorderable_list._ReorderableListContentState, {
    /*reorderable_list._ReorderableListContentState._defaultDropAreaExtent*/get _defaultDropAreaExtent() {
      return 100;
    },
    /*reorderable_list._ReorderableListContentState._dropAreaMargin*/get _dropAreaMargin() {
      return 8;
    },
    /*reorderable_list._ReorderableListContentState._reorderAnimationDuration*/get _reorderAnimationDuration() {
      return C243 || CT.C243;
    },
    /*reorderable_list._ReorderableListContentState._scrollAnimationDuration*/get _scrollAnimationDuration() {
      return C243 || CT.C243;
    }
  }, true);
  material_localizations.MaterialLocalizations = class MaterialLocalizations extends core.Object {
    get expandedIconTapHint() {
      return "Collapse";
    }
    get collapsedIconTapHint() {
      return "Expand";
    }
    static of(context) {
      return localizations.Localizations.of(MaterialLocalizationsL(), context, dart.wrapType(MaterialLocalizationsL()));
    }
  };
  (material_localizations.MaterialLocalizations.new = function() {
    ;
  }).prototype = material_localizations.MaterialLocalizations.prototype;
  dart.addTypeTests(material_localizations.MaterialLocalizations);
  dart.addTypeCaches(material_localizations.MaterialLocalizations);
  dart.setGetterSignature(material_localizations.MaterialLocalizations, () => ({
    __proto__: dart.getGetters(material_localizations.MaterialLocalizations.__proto__),
    expandedIconTapHint: dart.legacy(core.String),
    collapsedIconTapHint: dart.legacy(core.String)
  }));
  dart.setLibraryUri(material_localizations.MaterialLocalizations, L110);
  material_localizations._MaterialLocalizationsDelegate = class _MaterialLocalizationsDelegate extends localizations.LocalizationsDelegate$(dart.legacy(material_localizations.MaterialLocalizations)) {
    isSupported(locale) {
      return locale.languageCode === "en";
    }
    load(locale) {
      return material_localizations.DefaultMaterialLocalizations.load(locale);
    }
    shouldReload(old) {
      _MaterialLocalizationsDelegateL().as(old);
      return false;
    }
    toString() {
      return "DefaultMaterialLocalizations.delegate(en_US)";
    }
  };
  (material_localizations._MaterialLocalizationsDelegate.new = function() {
    material_localizations._MaterialLocalizationsDelegate.__proto__.new.call(this);
    ;
  }).prototype = material_localizations._MaterialLocalizationsDelegate.prototype;
  dart.addTypeTests(material_localizations._MaterialLocalizationsDelegate);
  dart.addTypeCaches(material_localizations._MaterialLocalizationsDelegate);
  dart.setMethodSignature(material_localizations._MaterialLocalizationsDelegate, () => ({
    __proto__: dart.getMethods(material_localizations._MaterialLocalizationsDelegate.__proto__),
    isSupported: dart.fnType(dart.legacy(core.bool), [dart.legacy(ui.Locale)]),
    load: dart.fnType(dart.legacy(async.Future$(dart.legacy(material_localizations.MaterialLocalizations))), [dart.legacy(ui.Locale)]),
    shouldReload: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)])
  }));
  dart.setLibraryUri(material_localizations._MaterialLocalizationsDelegate, L110);
  dart.defineExtensionMethods(material_localizations._MaterialLocalizationsDelegate, ['toString']);
  var C2619;
  var _getDaysInMonth = dart.privateName(material_localizations, "_getDaysInMonth");
  var _formatTwoDigitZeroPad = dart.privateName(material_localizations, "_formatTwoDigitZeroPad");
  var _formatDayPeriod = dart.privateName(material_localizations, "_formatDayPeriod");
  var C2620;
  var C2621;
  var C2622;
  var C2623;
  var C2624;
  var C2625;
  var C2626;
  material_localizations.DefaultMaterialLocalizations = class DefaultMaterialLocalizations extends core.Object {
    [_getDaysInMonth](year, month) {
      if (month === 2) {
        let isLeapYear = year[$modulo](4) === 0 && year[$modulo](100) !== 0 || year[$modulo](400) === 0;
        if (isLeapYear) return 29;
        return 28;
      }
      let daysInMonth = C2619 || CT.C2619;
      return daysInMonth[$_get](dart.notNull(month) - 1);
    }
    formatHour(timeOfDay, opts) {
      let alwaysUse24HourFormat = opts && 'alwaysUse24HourFormat' in opts ? opts.alwaysUse24HourFormat : false;
      let format = this.timeOfDayFormat({alwaysUse24HourFormat: alwaysUse24HourFormat});
      switch (format) {
        case C80 || CT.C80:
        {
          return this.formatDecimal(timeOfDay.hourOfPeriod === 0 ? 12 : timeOfDay.hourOfPeriod);
        }
        case C76 || CT.C76:
        {
          return this[_formatTwoDigitZeroPad](timeOfDay.hour);
        }
        default:
        {
          dart.throw(new core.AssertionError.new(dart.str(this.runtimeType) + " does not support " + dart.str(format) + "."));
        }
      }
    }
    [_formatTwoDigitZeroPad](number) {
      if (!(0 <= dart.notNull(number) && dart.notNull(number) < 100)) dart.assertFailed(null, L111, 642, 12, "0 <= number && number < 100");
      if (dart.notNull(number) < 10) return "0" + dart.str(number);
      return dart.str(number);
    }
    formatMinute(timeOfDay) {
      let minute = timeOfDay.minute;
      return dart.notNull(minute) < 10 ? "0" + dart.str(minute) : dart.toString(minute);
    }
    formatYear(date) {
      return dart.toString(date.year);
    }
    formatCompactDate(date) {
      let month = this[_formatTwoDigitZeroPad](date.month);
      let day = this[_formatTwoDigitZeroPad](date.day);
      let year = dart.toString(date.year)[$padLeft](4, "0");
      return dart.str(month) + "/" + dart.str(day) + "/" + year;
    }
    formatShortDate(date) {
      let month = material_localizations.DefaultMaterialLocalizations._shortMonths[$_get](dart.notNull(date.month) - 1);
      return dart.str(month) + " " + dart.str(date.day) + ", " + dart.str(date.year);
    }
    formatMediumDate(date) {
      let day = material_localizations.DefaultMaterialLocalizations._shortWeekdays[$_get](dart.notNull(date.weekday) - 1);
      let month = material_localizations.DefaultMaterialLocalizations._shortMonths[$_get](dart.notNull(date.month) - 1);
      return dart.str(day) + ", " + dart.str(month) + " " + dart.str(date.day);
    }
    formatFullDate(date) {
      let month = material_localizations.DefaultMaterialLocalizations._months[$_get](dart.notNull(date.month) - 1);
      return dart.str(material_localizations.DefaultMaterialLocalizations._weekdays[$_get](dart.notNull(date.weekday) - 1)) + ", " + dart.str(month) + " " + dart.str(date.day) + ", " + dart.str(date.year);
    }
    formatMonthYear(date) {
      let year = this.formatYear(date);
      let month = material_localizations.DefaultMaterialLocalizations._months[$_get](dart.notNull(date.month) - 1);
      return dart.str(month) + " " + dart.str(year);
    }
    formatShortMonthDay(date) {
      let month = material_localizations.DefaultMaterialLocalizations._shortMonths[$_get](dart.notNull(date.month) - 1);
      return dart.str(month) + " " + dart.str(date.day);
    }
    parseCompactDate(inputString) {
      let inputParts = inputString[$split]("/");
      if (inputParts[$length] !== 3) {
        return null;
      }
      let year = core.int.tryParse(inputParts[$_get](2), {radix: 10});
      if (year == null || dart.notNull(year) < 1) {
        return null;
      }
      let month = core.int.tryParse(inputParts[$_get](0), {radix: 10});
      if (month == null || dart.notNull(month) < 1 || dart.notNull(month) > 12) {
        return null;
      }
      let day = core.int.tryParse(inputParts[$_get](1), {radix: 10});
      if (day == null || dart.notNull(day) < 1 || dart.notNull(day) > dart.notNull(this[_getDaysInMonth](year, month))) {
        return null;
      }
      return new core.DateTime.new(year, month, day);
    }
    get narrowWeekdays() {
      return material_localizations.DefaultMaterialLocalizations._narrowWeekdays;
    }
    get firstDayOfWeekIndex() {
      return 0;
    }
    get dateSeparator() {
      return "/";
    }
    get dateHelpText() {
      return "mm/dd/yyyy";
    }
    get selectYearSemanticsLabel() {
      return "Select year";
    }
    get unspecifiedDate() {
      return "Date";
    }
    get unspecifiedDateRange() {
      return "Date Range";
    }
    get dateInputLabel() {
      return "Enter Date";
    }
    get dateRangeStartLabel() {
      return "Start Date";
    }
    get dateRangeEndLabel() {
      return "End Date";
    }
    dateRangeStartDateSemanticLabel(fullDate) {
      return "Start date " + dart.str(fullDate);
    }
    dateRangeEndDateSemanticLabel(fullDate) {
      return "End date " + dart.str(fullDate);
    }
    get invalidDateFormatLabel() {
      return "Invalid format.";
    }
    get invalidDateRangeLabel() {
      return "Invalid range.";
    }
    get dateOutOfRangeLabel() {
      return "Out of range.";
    }
    get saveButtonLabel() {
      return "SAVE";
    }
    get datePickerHelpText() {
      return "SELECT DATE";
    }
    get dateRangePickerHelpText() {
      return "SELECT RANGE";
    }
    get calendarModeButtonLabel() {
      return "Switch to calendar";
    }
    get inputDateModeButtonLabel() {
      return "Switch to input";
    }
    get timePickerDialHelpText() {
      return "SELECT TIME";
    }
    get timePickerInputHelpText() {
      return "ENTER TIME";
    }
    get timePickerHourLabel() {
      return "Hour";
    }
    get timePickerMinuteLabel() {
      return "Minute";
    }
    get invalidTimeLabel() {
      return "Enter a valid time";
    }
    get dialModeButtonLabel() {
      return "Switch to dial picker mode";
    }
    get inputTimeModeButtonLabel() {
      return "Switch to text input mode";
    }
    [_formatDayPeriod](timeOfDay) {
      switch (timeOfDay.period) {
        case C73 || CT.C73:
        {
          return this.anteMeridiemAbbreviation;
        }
        case C74 || CT.C74:
        {
          return this.postMeridiemAbbreviation;
        }
      }
      return null;
    }
    formatDecimal(number) {
      if (dart.notNull(number) > -1000 && dart.notNull(number) < 1000) return dart.toString(number);
      let digits = number[$abs]()[$toString]();
      let result = new core.StringBuffer.new(dart.notNull(number) < 0 ? "-" : "");
      let maxDigitIndex = digits.length - 1;
      for (let i = 0; i <= maxDigitIndex; i = i + 1) {
        result.write(digits[$_get](i));
        if (i < maxDigitIndex && (maxDigitIndex - i)[$modulo](3) === 0) result.write(",");
      }
      return result.toString();
    }
    formatTimeOfDay(timeOfDay, opts) {
      let t22, t22$;
      let alwaysUse24HourFormat = opts && 'alwaysUse24HourFormat' in opts ? opts.alwaysUse24HourFormat : false;
      let buffer = new core.StringBuffer.new();
      t22 = buffer;
      (() => {
        t22.write(this.formatHour(timeOfDay, {alwaysUse24HourFormat: alwaysUse24HourFormat}));
        t22.write(":");
        t22.write(this.formatMinute(timeOfDay));
        return t22;
      })();
      if (dart.test(alwaysUse24HourFormat)) {
        return dart.str(buffer);
      }
      t22$ = buffer;
      (() => {
        t22$.write(" ");
        t22$.write(this[_formatDayPeriod](timeOfDay));
        return t22$;
      })();
      return dart.str(buffer);
    }
    get openAppDrawerTooltip() {
      return "Open navigation menu";
    }
    get backButtonTooltip() {
      return "Back";
    }
    get closeButtonTooltip() {
      return "Close";
    }
    get deleteButtonTooltip() {
      return "Delete";
    }
    get moreButtonTooltip() {
      return "More";
    }
    get nextMonthTooltip() {
      return "Next month";
    }
    get previousMonthTooltip() {
      return "Previous month";
    }
    get nextPageTooltip() {
      return "Next page";
    }
    get previousPageTooltip() {
      return "Previous page";
    }
    get showMenuTooltip() {
      return "Show menu";
    }
    get drawerLabel() {
      return "Navigation menu";
    }
    get popupMenuLabel() {
      return "Popup menu";
    }
    get dialogLabel() {
      return "Dialog";
    }
    get alertDialogLabel() {
      return "Alert";
    }
    get searchFieldLabel() {
      return "Search";
    }
    aboutListTileTitle(applicationName) {
      return "About " + dart.str(applicationName);
    }
    get licensesPageTitle() {
      return "Licenses";
    }
    licensesPackageDetailText(licenseCount) {
      if (!(dart.notNull(licenseCount) >= 0)) dart.assertFailed(null, L111, 915, 13, "licenseCount >= 0");
      switch (licenseCount) {
        case 0:
        {
          return "No licenses.";
        }
        case 1:
        {
          return "1 license.";
        }
        default:
        {
          return dart.str(licenseCount) + " licenses.";
        }
      }
    }
    pageRowsInfoTitle(firstRow, lastRow, rowCount, rowCountIsApproximate) {
      return dart.test(rowCountIsApproximate) ? dart.str(firstRow) + "–" + dart.str(lastRow) + " of about " + dart.str(rowCount) : dart.str(firstRow) + "–" + dart.str(lastRow) + " of " + dart.str(rowCount);
    }
    get rowsPerPageTitle() {
      return "Rows per page:";
    }
    tabLabel(opts) {
      let tabIndex = opts && 'tabIndex' in opts ? opts.tabIndex : null;
      let tabCount = opts && 'tabCount' in opts ? opts.tabCount : null;
      if (!(dart.notNull(tabIndex) >= 1)) dart.assertFailed(null, L111, 938, 12, "tabIndex >= 1");
      if (!(dart.notNull(tabCount) >= 1)) dart.assertFailed(null, L111, 939, 12, "tabCount >= 1");
      return "Tab " + dart.str(tabIndex) + " of " + dart.str(tabCount);
    }
    selectedRowCountTitle(selectedRowCount) {
      switch (selectedRowCount) {
        case 0:
        {
          return "No items selected";
        }
        case 1:
        {
          return "1 item selected";
        }
        default:
        {
          return dart.str(selectedRowCount) + " items selected";
        }
      }
    }
    get cancelButtonLabel() {
      return "CANCEL";
    }
    get closeButtonLabel() {
      return "CLOSE";
    }
    get continueButtonLabel() {
      return "CONTINUE";
    }
    get copyButtonLabel() {
      return "Copy";
    }
    get cutButtonLabel() {
      return "Cut";
    }
    get okButtonLabel() {
      return "OK";
    }
    get pasteButtonLabel() {
      return "Paste";
    }
    get selectAllButtonLabel() {
      return "Select all";
    }
    get viewLicensesButtonLabel() {
      return "VIEW LICENSES";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get timePickerHourModeAnnouncement() {
      return "Select hours";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Select minutes";
    }
    get modalBarrierDismissLabel() {
      return "Dismiss";
    }
    get scriptCategory() {
      return typography$.ScriptCategory.englishLike;
    }
    timeOfDayFormat(opts) {
      let alwaysUse24HourFormat = opts && 'alwaysUse24HourFormat' in opts ? opts.alwaysUse24HourFormat : false;
      return dart.test(alwaysUse24HourFormat) ? time.TimeOfDayFormat.HH_colon_mm : time.TimeOfDayFormat.h_colon_mm_space_a;
    }
    get signedInLabel() {
      return "Signed in";
    }
    get hideAccountsLabel() {
      return "Hide accounts";
    }
    get showAccountsLabel() {
      return "Show accounts";
    }
    get reorderItemUp() {
      return "Move up";
    }
    get reorderItemDown() {
      return "Move down";
    }
    get reorderItemLeft() {
      return "Move left";
    }
    get reorderItemRight() {
      return "Move right";
    }
    get reorderItemToEnd() {
      return "Move to the end";
    }
    get reorderItemToStart() {
      return "Move to the start";
    }
    get expandedIconTapHint() {
      return "Collapse";
    }
    get collapsedIconTapHint() {
      return "Expand";
    }
    get refreshIndicatorSemanticLabel() {
      return "Refresh";
    }
    static load(locale) {
      return new (SynchronousFutureOfMaterialLocalizationsL()).new(C2620 || CT.C2620);
    }
    remainingTextFieldCharacterCount(remaining) {
      switch (remaining) {
        case 0:
        {
          return "No characters remaining";
        }
        case 1:
        {
          return "1 character remaining";
        }
        default:
        {
          return dart.str(remaining) + " characters remaining";
        }
      }
    }
  };
  (material_localizations.DefaultMaterialLocalizations.new = function() {
    ;
  }).prototype = material_localizations.DefaultMaterialLocalizations.prototype;
  dart.addTypeTests(material_localizations.DefaultMaterialLocalizations);
  dart.addTypeCaches(material_localizations.DefaultMaterialLocalizations);
  material_localizations.DefaultMaterialLocalizations[dart.implements] = () => [material_localizations.MaterialLocalizations];
  dart.setMethodSignature(material_localizations.DefaultMaterialLocalizations, () => ({
    __proto__: dart.getMethods(material_localizations.DefaultMaterialLocalizations.__proto__),
    [_getDaysInMonth]: dart.fnType(dart.legacy(core.int), [dart.legacy(core.int), dart.legacy(core.int)]),
    formatHour: dart.fnType(dart.legacy(core.String), [dart.legacy(time.TimeOfDay)], {alwaysUse24HourFormat: dart.legacy(core.bool)}, {}),
    [_formatTwoDigitZeroPad]: dart.fnType(dart.legacy(core.String), [dart.legacy(core.int)]),
    formatMinute: dart.fnType(dart.legacy(core.String), [dart.legacy(time.TimeOfDay)]),
    formatYear: dart.fnType(dart.legacy(core.String), [dart.legacy(core.DateTime)]),
    formatCompactDate: dart.fnType(dart.legacy(core.String), [dart.legacy(core.DateTime)]),
    formatShortDate: dart.fnType(dart.legacy(core.String), [dart.legacy(core.DateTime)]),
    formatMediumDate: dart.fnType(dart.legacy(core.String), [dart.legacy(core.DateTime)]),
    formatFullDate: dart.fnType(dart.legacy(core.String), [dart.legacy(core.DateTime)]),
    formatMonthYear: dart.fnType(dart.legacy(core.String), [dart.legacy(core.DateTime)]),
    formatShortMonthDay: dart.fnType(dart.legacy(core.String), [dart.legacy(core.DateTime)]),
    parseCompactDate: dart.fnType(dart.legacy(core.DateTime), [dart.legacy(core.String)]),
    dateRangeStartDateSemanticLabel: dart.fnType(dart.legacy(core.String), [dart.legacy(core.String)]),
    dateRangeEndDateSemanticLabel: dart.fnType(dart.legacy(core.String), [dart.legacy(core.String)]),
    [_formatDayPeriod]: dart.fnType(dart.legacy(core.String), [dart.legacy(time.TimeOfDay)]),
    formatDecimal: dart.fnType(dart.legacy(core.String), [dart.legacy(core.int)]),
    formatTimeOfDay: dart.fnType(dart.legacy(core.String), [dart.legacy(time.TimeOfDay)], {alwaysUse24HourFormat: dart.legacy(core.bool)}, {}),
    aboutListTileTitle: dart.fnType(dart.legacy(core.String), [dart.legacy(core.String)]),
    licensesPackageDetailText: dart.fnType(dart.legacy(core.String), [dart.legacy(core.int)]),
    pageRowsInfoTitle: dart.fnType(dart.legacy(core.String), [dart.legacy(core.int), dart.legacy(core.int), dart.legacy(core.int), dart.legacy(core.bool)]),
    tabLabel: dart.fnType(dart.legacy(core.String), [], {tabCount: dart.legacy(core.int), tabIndex: dart.legacy(core.int)}, {}),
    selectedRowCountTitle: dart.fnType(dart.legacy(core.String), [dart.legacy(core.int)]),
    timeOfDayFormat: dart.fnType(dart.legacy(time.TimeOfDayFormat), [], {alwaysUse24HourFormat: dart.legacy(core.bool)}, {}),
    remainingTextFieldCharacterCount: dart.fnType(dart.legacy(core.String), [dart.legacy(core.int)])
  }));
  dart.setGetterSignature(material_localizations.DefaultMaterialLocalizations, () => ({
    __proto__: dart.getGetters(material_localizations.DefaultMaterialLocalizations.__proto__),
    narrowWeekdays: dart.legacy(core.List$(dart.legacy(core.String))),
    firstDayOfWeekIndex: dart.legacy(core.int),
    dateSeparator: dart.legacy(core.String),
    dateHelpText: dart.legacy(core.String),
    selectYearSemanticsLabel: dart.legacy(core.String),
    unspecifiedDate: dart.legacy(core.String),
    unspecifiedDateRange: dart.legacy(core.String),
    dateInputLabel: dart.legacy(core.String),
    dateRangeStartLabel: dart.legacy(core.String),
    dateRangeEndLabel: dart.legacy(core.String),
    invalidDateFormatLabel: dart.legacy(core.String),
    invalidDateRangeLabel: dart.legacy(core.String),
    dateOutOfRangeLabel: dart.legacy(core.String),
    saveButtonLabel: dart.legacy(core.String),
    datePickerHelpText: dart.legacy(core.String),
    dateRangePickerHelpText: dart.legacy(core.String),
    calendarModeButtonLabel: dart.legacy(core.String),
    inputDateModeButtonLabel: dart.legacy(core.String),
    timePickerDialHelpText: dart.legacy(core.String),
    timePickerInputHelpText: dart.legacy(core.String),
    timePickerHourLabel: dart.legacy(core.String),
    timePickerMinuteLabel: dart.legacy(core.String),
    invalidTimeLabel: dart.legacy(core.String),
    dialModeButtonLabel: dart.legacy(core.String),
    inputTimeModeButtonLabel: dart.legacy(core.String),
    openAppDrawerTooltip: dart.legacy(core.String),
    backButtonTooltip: dart.legacy(core.String),
    closeButtonTooltip: dart.legacy(core.String),
    deleteButtonTooltip: dart.legacy(core.String),
    moreButtonTooltip: dart.legacy(core.String),
    nextMonthTooltip: dart.legacy(core.String),
    previousMonthTooltip: dart.legacy(core.String),
    nextPageTooltip: dart.legacy(core.String),
    previousPageTooltip: dart.legacy(core.String),
    showMenuTooltip: dart.legacy(core.String),
    drawerLabel: dart.legacy(core.String),
    popupMenuLabel: dart.legacy(core.String),
    dialogLabel: dart.legacy(core.String),
    alertDialogLabel: dart.legacy(core.String),
    searchFieldLabel: dart.legacy(core.String),
    licensesPageTitle: dart.legacy(core.String),
    rowsPerPageTitle: dart.legacy(core.String),
    cancelButtonLabel: dart.legacy(core.String),
    closeButtonLabel: dart.legacy(core.String),
    continueButtonLabel: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    okButtonLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    viewLicensesButtonLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    timePickerHourModeAnnouncement: dart.legacy(core.String),
    timePickerMinuteModeAnnouncement: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    scriptCategory: dart.legacy(typography$.ScriptCategory),
    signedInLabel: dart.legacy(core.String),
    hideAccountsLabel: dart.legacy(core.String),
    showAccountsLabel: dart.legacy(core.String),
    reorderItemUp: dart.legacy(core.String),
    reorderItemDown: dart.legacy(core.String),
    reorderItemLeft: dart.legacy(core.String),
    reorderItemRight: dart.legacy(core.String),
    reorderItemToEnd: dart.legacy(core.String),
    reorderItemToStart: dart.legacy(core.String),
    expandedIconTapHint: dart.legacy(core.String),
    collapsedIconTapHint: dart.legacy(core.String),
    refreshIndicatorSemanticLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(material_localizations.DefaultMaterialLocalizations, L110);
  dart.defineLazy(material_localizations.DefaultMaterialLocalizations, {
    /*material_localizations.DefaultMaterialLocalizations._shortWeekdays*/get _shortWeekdays() {
      return C2621 || CT.C2621;
    },
    /*material_localizations.DefaultMaterialLocalizations._weekdays*/get _weekdays() {
      return C2622 || CT.C2622;
    },
    /*material_localizations.DefaultMaterialLocalizations._narrowWeekdays*/get _narrowWeekdays() {
      return C2623 || CT.C2623;
    },
    /*material_localizations.DefaultMaterialLocalizations._shortMonths*/get _shortMonths() {
      return C2624 || CT.C2624;
    },
    /*material_localizations.DefaultMaterialLocalizations._months*/get _months() {
      return C2625 || CT.C2625;
    },
    /*material_localizations.DefaultMaterialLocalizations.delegate*/get delegate() {
      return C2626 || CT.C2626;
    }
  }, true);
  var C2629;
  var C2630;
  var C2628;
  var C2627;
  var C2633;
  var C2634;
  var C2632;
  var C2631;
  var C2637;
  var C2638;
  var C2636;
  var C2635;
  var data$14 = dart.privateName(theme$, "Theme.data");
  var isMaterialAppTheme$ = dart.privateName(theme$, "Theme.isMaterialAppTheme");
  var child$24 = dart.privateName(theme$, "Theme.child");
  theme$.Theme = class Theme extends framework.StatelessWidget {
    get data() {
      return this[data$14];
    }
    set data(value) {
      super.data = value;
    }
    get isMaterialAppTheme() {
      return this[isMaterialAppTheme$];
    }
    set isMaterialAppTheme(value) {
      super.isMaterialAppTheme = value;
    }
    get child() {
      return this[child$24];
    }
    set child(value) {
      super.child = value;
    }
    static of(context, opts) {
      let t22, t22$, t22$0, t22$1, t22$2;
      let shadowThemeOnly = opts && 'shadowThemeOnly' in opts ? opts.shadowThemeOnly : false;
      let inheritedTheme = context.dependOnInheritedWidgetOfExactType(_InheritedThemeL());
      if (dart.test(shadowThemeOnly)) {
        if (inheritedTheme == null || dart.test(inheritedTheme.theme.isMaterialAppTheme)) return null;
        return inheritedTheme.theme.data;
      }
      let localizations = material_localizations.MaterialLocalizations.of(context);
      let category = (t22$ = (t22 = localizations, t22 == null ? null : t22.scriptCategory), t22$ == null ? typography$.ScriptCategory.englishLike : t22$);
      let theme = (t22$2 = (t22$1 = (t22$0 = inheritedTheme, t22$0 == null ? null : t22$0.theme), t22$1 == null ? null : t22$1.data), t22$2 == null ? theme$.Theme._kFallbackTheme : t22$2);
      return theme_data.ThemeData.localize(theme, theme.typography.geometryThemeFor(category));
    }
    build(context) {
      return new theme$._InheritedTheme.new({theme: this, child: new theme.CupertinoTheme.new({data: new theme_data.MaterialBasedCupertinoThemeData.new({materialTheme: this.data}), child: new icon_theme.IconTheme.new({data: this.data.iconTheme, child: this.child, $creationLocationd_0dea112b090073317d4: C2627 || CT.C2627}), $creationLocationd_0dea112b090073317d4: C2631 || CT.C2631}), $creationLocationd_0dea112b090073317d4: C2635 || CT.C2635});
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfThemeDataL()).new("data", this.data, {showName: false}));
    }
  };
  (theme$.Theme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let isMaterialAppTheme = opts && 'isMaterialAppTheme' in opts ? opts.isMaterialAppTheme : false;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[data$14] = data;
    this[isMaterialAppTheme$] = isMaterialAppTheme;
    this[child$24] = child;
    if (!(child != null)) dart.assertFailed(null, L112, 47, 15, "child != null");
    if (!(data != null)) dart.assertFailed(null, L112, 48, 15, "data != null");
    theme$.Theme.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = theme$.Theme.prototype;
  dart.addTypeTests(theme$.Theme);
  dart.addTypeCaches(theme$.Theme);
  dart.setMethodSignature(theme$.Theme, () => ({
    __proto__: dart.getMethods(theme$.Theme.__proto__),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(theme$.Theme, L113);
  dart.setFieldSignature(theme$.Theme, () => ({
    __proto__: dart.getFields(theme$.Theme.__proto__),
    data: dart.finalFieldType(dart.legacy(theme_data.ThemeData)),
    isMaterialAppTheme: dart.finalFieldType(dart.legacy(core.bool)),
    child: dart.finalFieldType(dart.legacy(framework.Widget))
  }));
  dart.defineLazy(theme$.Theme, {
    /*theme$.Theme._kFallbackTheme*/get _kFallbackTheme() {
      return theme_data.ThemeData.fallback();
    }
  }, true);
  var C2641;
  var C2642;
  var C2640;
  var C2639;
  var theme$0 = dart.privateName(theme$, "_InheritedTheme.theme");
  theme$._InheritedTheme = class _InheritedTheme extends inherited_theme.InheritedTheme {
    get theme() {
      return this[theme$0];
    }
    set theme(value) {
      super.theme = value;
    }
    wrap(context, child) {
      let ancestorTheme = context.findAncestorWidgetOfExactType(_InheritedThemeL());
      return this === ancestorTheme ? child : new theme$.Theme.new({data: this.theme.data, child: child, $creationLocationd_0dea112b090073317d4: C2639 || CT.C2639});
    }
    updateShouldNotify(old) {
      _InheritedThemeL().as(old);
      return !dart.equals(this.theme.data, old.theme.data);
    }
  };
  (theme$._InheritedTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let theme = opts && 'theme' in opts ? opts.theme : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[theme$0] = theme;
    if (!(theme != null)) dart.assertFailed(null, L112, 174, 15, "theme != null");
    theme$._InheritedTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = theme$._InheritedTheme.prototype;
  dart.addTypeTests(theme$._InheritedTheme);
  dart.addTypeCaches(theme$._InheritedTheme);
  dart.setMethodSignature(theme$._InheritedTheme, () => ({
    __proto__: dart.getMethods(theme$._InheritedTheme.__proto__),
    wrap: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext), dart.legacy(framework.Widget)]),
    updateShouldNotify: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)])
  }));
  dart.setLibraryUri(theme$._InheritedTheme, L113);
  dart.setFieldSignature(theme$._InheritedTheme, () => ({
    __proto__: dart.getFields(theme$._InheritedTheme.__proto__),
    theme: dart.finalFieldType(dart.legacy(theme$.Theme))
  }));
  theme$.ThemeDataTween = class ThemeDataTween extends tween.Tween$(dart.legacy(theme_data.ThemeData)) {
    lerp(t) {
      return theme_data.ThemeData.lerp(this.begin, this.end, t);
    }
  };
  (theme$.ThemeDataTween.new = function(opts) {
    let begin = opts && 'begin' in opts ? opts.begin : null;
    let end = opts && 'end' in opts ? opts.end : null;
    theme$.ThemeDataTween.__proto__.new.call(this, {begin: begin, end: end});
    ;
  }).prototype = theme$.ThemeDataTween.prototype;
  dart.addTypeTests(theme$.ThemeDataTween);
  dart.addTypeCaches(theme$.ThemeDataTween);
  dart.setLibraryUri(theme$.ThemeDataTween, L113);
  var data$15 = dart.privateName(theme$, "AnimatedTheme.data");
  var isMaterialAppTheme$0 = dart.privateName(theme$, "AnimatedTheme.isMaterialAppTheme");
  var child$25 = dart.privateName(theme$, "AnimatedTheme.child");
  theme$.AnimatedTheme = class AnimatedTheme extends implicit_animations.ImplicitlyAnimatedWidget {
    get data() {
      return this[data$15];
    }
    set data(value) {
      super.data = value;
    }
    get isMaterialAppTheme() {
      return this[isMaterialAppTheme$0];
    }
    set isMaterialAppTheme(value) {
      super.isMaterialAppTheme = value;
    }
    get child() {
      return this[child$25];
    }
    set child(value) {
      super.child = value;
    }
    createState() {
      return new theme$._AnimatedThemeState.new();
    }
  };
  (theme$.AnimatedTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let isMaterialAppTheme = opts && 'isMaterialAppTheme' in opts ? opts.isMaterialAppTheme : false;
    let curve = opts && 'curve' in opts ? opts.curve : C965 || CT.C965;
    let duration = opts && 'duration' in opts ? opts.duration : C243 || CT.C243;
    let onEnd = opts && 'onEnd' in opts ? opts.onEnd : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[data$15] = data;
    this[isMaterialAppTheme$0] = isMaterialAppTheme;
    this[child$25] = child;
    if (!(child != null)) dart.assertFailed(null, L112, 234, 15, "child != null");
    if (!(data != null)) dart.assertFailed(null, L112, 235, 15, "data != null");
    theme$.AnimatedTheme.__proto__.new.call(this, {key: key, curve: curve, duration: duration, onEnd: onEnd, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = theme$.AnimatedTheme.prototype;
  dart.addTypeTests(theme$.AnimatedTheme);
  dart.addTypeCaches(theme$.AnimatedTheme);
  dart.setMethodSignature(theme$.AnimatedTheme, () => ({
    __proto__: dart.getMethods(theme$.AnimatedTheme.__proto__),
    createState: dart.fnType(dart.legacy(theme$._AnimatedThemeState), [])
  }));
  dart.setLibraryUri(theme$.AnimatedTheme, L113);
  dart.setFieldSignature(theme$.AnimatedTheme, () => ({
    __proto__: dart.getFields(theme$.AnimatedTheme.__proto__),
    data: dart.finalFieldType(dart.legacy(theme_data.ThemeData)),
    isMaterialAppTheme: dart.finalFieldType(dart.legacy(core.bool)),
    child: dart.finalFieldType(dart.legacy(framework.Widget))
  }));
  var _data = dart.privateName(theme$, "_data");
  var C2645;
  var C2646;
  var C2644;
  var C2643;
  theme$._AnimatedThemeState = class _AnimatedThemeState extends implicit_animations.AnimatedWidgetBaseState$(dart.legacy(theme$.AnimatedTheme)) {
    forEachTween(visitor) {
      this[_data] = ThemeDataTweenL().as(visitor(this[_data], this.widget.data, dart.fn(value => new theme$.ThemeDataTween.new({begin: ThemeDataL().as(value)}), dynamicToThemeDataTweenL())));
      if (!(this[_data] != null)) dart.assertFailed(null, L112, 260, 12, "_data != null");
    }
    build(context) {
      return new theme$.Theme.new({isMaterialAppTheme: this.widget.isMaterialAppTheme, child: this.widget.child, data: this[_data].evaluate(this.animation), $creationLocationd_0dea112b090073317d4: C2643 || CT.C2643});
    }
    debugFillProperties(description) {
      super.debugFillProperties(description);
      description.add(new (DiagnosticsPropertyOfThemeDataTweenL()).new("data", this[_data], {showName: false, defaultValue: null}));
    }
  };
  (theme$._AnimatedThemeState.new = function() {
    this[_data] = null;
    theme$._AnimatedThemeState.__proto__.new.call(this);
    ;
  }).prototype = theme$._AnimatedThemeState.prototype;
  dart.addTypeTests(theme$._AnimatedThemeState);
  dart.addTypeCaches(theme$._AnimatedThemeState);
  dart.setMethodSignature(theme$._AnimatedThemeState, () => ({
    __proto__: dart.getMethods(theme$._AnimatedThemeState.__proto__),
    forEachTween: dart.fnType(dart.void, [dart.legacy(dart.fnType(dart.legacy(tween.Tween), [dart.legacy(tween.Tween), dart.dynamic, dart.legacy(dart.fnType(dart.legacy(tween.Tween), [dart.dynamic]))]))]),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(theme$._AnimatedThemeState, L113);
  dart.setFieldSignature(theme$._AnimatedThemeState, () => ({
    __proto__: dart.getFields(theme$._AnimatedThemeState.__proto__),
    [_data]: dart.fieldType(dart.legacy(theme$.ThemeDataTween))
  }));
  dart.defineLazy(theme$, {
    /*theme$.kThemeAnimationDuration*/get kThemeAnimationDuration() {
      return C243 || CT.C243;
    }
  }, true);
  const Object_Diagnosticable$36$24 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$24.new = function() {
  }).prototype = Object_Diagnosticable$36$24.prototype;
  dart.applyMixin(Object_Diagnosticable$36$24, diagnostics.Diagnosticable);
  app_bar_theme.AppBarTheme = class AppBarTheme extends Object_Diagnosticable$36$24 {
    get brightness() {
      return this[brightness$2];
    }
    set brightness(value) {
      super.brightness = value;
    }
    get color() {
      return this[color$15];
    }
    set color(value) {
      super.color = value;
    }
    get elevation() {
      return this[elevation$25];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get shadowColor() {
      return this[shadowColor$5];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    get iconTheme() {
      return this[iconTheme$0];
    }
    set iconTheme(value) {
      super.iconTheme = value;
    }
    get actionsIconTheme() {
      return this[actionsIconTheme$];
    }
    set actionsIconTheme(value) {
      super.actionsIconTheme = value;
    }
    get textTheme() {
      return this[textTheme$3];
    }
    set textTheme(value) {
      super.textTheme = value;
    }
    get centerTitle() {
      return this[centerTitle$0];
    }
    set centerTitle(value) {
      super.centerTitle = value;
    }
    copyWith(opts) {
      let t22, t22$, t22$0, t22$1, t22$2, t22$3, t22$4, t22$5;
      let actionsIconTheme = opts && 'actionsIconTheme' in opts ? opts.actionsIconTheme : null;
      let brightness = opts && 'brightness' in opts ? opts.brightness : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
      let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
      let centerTitle = opts && 'centerTitle' in opts ? opts.centerTitle : null;
      return new app_bar_theme.AppBarTheme.new({brightness: (t22 = brightness, t22 == null ? this.brightness : t22), color: (t22$ = color, t22$ == null ? this.color : t22$), elevation: (t22$0 = elevation, t22$0 == null ? this.elevation : t22$0), shadowColor: (t22$1 = shadowColor, t22$1 == null ? this.shadowColor : t22$1), iconTheme: (t22$2 = iconTheme, t22$2 == null ? this.iconTheme : t22$2), actionsIconTheme: (t22$3 = actionsIconTheme, t22$3 == null ? this.actionsIconTheme : t22$3), textTheme: (t22$4 = textTheme, t22$4 == null ? this.textTheme : t22$4), centerTitle: (t22$5 = centerTitle, t22$5 == null ? this.centerTitle : t22$5)});
    }
    static of(context) {
      return theme$.Theme.of(context).appBarTheme;
    }
    static lerp(a, b, t) {
      let t22, t22$, t22$0, t22$1, t22$2, t22$3, t22$4, t22$5, t22$6, t22$7, t22$8, t22$9, t22$10, t22$11, t22$12, t22$13;
      if (!(t != null)) dart.assertFailed(null, L114, 121, 12, "t != null");
      return new app_bar_theme.AppBarTheme.new({brightness: dart.notNull(t) < 0.5 ? (t22 = a, t22 == null ? null : t22.brightness) : (t22$ = b, t22$ == null ? null : t22$.brightness), color: ui.Color.lerp((t22$0 = a, t22$0 == null ? null : t22$0.color), (t22$1 = b, t22$1 == null ? null : t22$1.color), t), elevation: ui.lerpDouble((t22$2 = a, t22$2 == null ? null : t22$2.elevation), (t22$3 = b, t22$3 == null ? null : t22$3.elevation), t), shadowColor: ui.Color.lerp((t22$4 = a, t22$4 == null ? null : t22$4.shadowColor), (t22$5 = b, t22$5 == null ? null : t22$5.shadowColor), t), iconTheme: icon_theme_data.IconThemeData.lerp((t22$6 = a, t22$6 == null ? null : t22$6.iconTheme), (t22$7 = b, t22$7 == null ? null : t22$7.iconTheme), t), actionsIconTheme: icon_theme_data.IconThemeData.lerp((t22$8 = a, t22$8 == null ? null : t22$8.actionsIconTheme), (t22$9 = b, t22$9 == null ? null : t22$9.actionsIconTheme), t), textTheme: text_theme.TextTheme.lerp((t22$10 = a, t22$10 == null ? null : t22$10.textTheme), (t22$11 = b, t22$11 == null ? null : t22$11.textTheme), t), centerTitle: dart.notNull(t) < 0.5 ? (t22$12 = a, t22$12 == null ? null : t22$12.centerTitle) : (t22$13 = b, t22$13 == null ? null : t22$13.centerTitle)});
    }
    get hashCode() {
      return ui.hashValues(this.brightness, this.color, this.elevation, this.shadowColor, this.iconTheme, this.actionsIconTheme, this.textTheme, this.centerTitle);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this.runtimeType)) return false;
      return AppBarThemeL().is(other) && dart.equals(other.brightness, this.brightness) && dart.equals(other.color, this.color) && other.elevation == this.elevation && dart.equals(other.shadowColor, this.shadowColor) && dart.equals(other.iconTheme, this.iconTheme) && dart.equals(other.actionsIconTheme, this.actionsIconTheme) && dart.equals(other.textTheme, this.textTheme) && dart.equals(other.centerTitle, this.centerTitle);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfBrightnessL()).new("brightness", this.brightness, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfdoubleL()).new("elevation", this.elevation, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("shadowColor", this.shadowColor, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfIconThemeDataL()).new("iconTheme", this.iconTheme, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfIconThemeDataL()).new("actionsIconTheme", this.actionsIconTheme, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfTextThemeL()).new("textTheme", this.textTheme, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfboolL()).new("centerTitle", this.centerTitle, {defaultValue: null}));
    }
  };
  (app_bar_theme.AppBarTheme.new = function(opts) {
    let brightness = opts && 'brightness' in opts ? opts.brightness : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
    let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
    let actionsIconTheme = opts && 'actionsIconTheme' in opts ? opts.actionsIconTheme : null;
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
    let centerTitle = opts && 'centerTitle' in opts ? opts.centerTitle : null;
    this[brightness$2] = brightness;
    this[color$15] = color;
    this[elevation$25] = elevation;
    this[shadowColor$5] = shadowColor;
    this[iconTheme$0] = iconTheme;
    this[actionsIconTheme$] = actionsIconTheme;
    this[textTheme$3] = textTheme;
    this[centerTitle$0] = centerTitle;
    ;
  }).prototype = app_bar_theme.AppBarTheme.prototype;
  dart.addTypeTests(app_bar_theme.AppBarTheme);
  dart.addTypeCaches(app_bar_theme.AppBarTheme);
  const brightness$2 = AppBarTheme_brightness;
  const color$15 = AppBarTheme_color;
  const elevation$25 = AppBarTheme_elevation;
  const shadowColor$5 = AppBarTheme_shadowColor;
  const iconTheme$0 = AppBarTheme_iconTheme;
  const actionsIconTheme$ = AppBarTheme_actionsIconTheme;
  const textTheme$3 = AppBarTheme_textTheme;
  const centerTitle$0 = AppBarTheme_centerTitle;
  dart.setMethodSignature(app_bar_theme.AppBarTheme, () => ({
    __proto__: dart.getMethods(app_bar_theme.AppBarTheme.__proto__),
    copyWith: dart.fnType(dart.legacy(app_bar_theme.AppBarTheme), [], {actionsIconTheme: dart.legacy(icon_theme_data.IconThemeData), brightness: dart.legacy(ui.Brightness), centerTitle: dart.legacy(core.bool), color: dart.legacy(ui.Color), elevation: dart.legacy(core.double), iconTheme: dart.legacy(icon_theme_data.IconThemeData), shadowColor: dart.legacy(ui.Color), textTheme: dart.legacy(text_theme.TextTheme)}, {}),
    _equals: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    [$_equals]: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    debugFillProperties: dart.fnType(dart.void, [dart.legacy(diagnostics.DiagnosticPropertiesBuilder)])
  }));
  dart.setGetterSignature(app_bar_theme.AppBarTheme, () => ({
    __proto__: dart.getGetters(app_bar_theme.AppBarTheme.__proto__),
    hashCode: dart.legacy(core.int),
    [$hashCode]: dart.legacy(core.int)
  }));
  dart.setLibraryUri(app_bar_theme.AppBarTheme, L115);
  dart.setFieldSignature(app_bar_theme.AppBarTheme, () => ({
    __proto__: dart.getFields(app_bar_theme.AppBarTheme.__proto__),
    brightness: dart.finalFieldType(dart.legacy(ui.Brightness)),
    color: dart.finalFieldType(dart.legacy(ui.Color)),
    elevation: dart.finalFieldType(dart.legacy(core.double)),
    shadowColor: dart.finalFieldType(dart.legacy(ui.Color)),
    iconTheme: dart.finalFieldType(dart.legacy(icon_theme_data.IconThemeData)),
    actionsIconTheme: dart.finalFieldType(dart.legacy(icon_theme_data.IconThemeData)),
    textTheme: dart.finalFieldType(dart.legacy(text_theme.TextTheme)),
    centerTitle: dart.finalFieldType(dart.legacy(core.bool))
  }));
  dart.defineExtensionMethods(app_bar_theme.AppBarTheme, ['_equals']);
  dart.defineExtensionAccessors(app_bar_theme.AppBarTheme, ['hashCode']);
  var toolbarHeight$ = dart.privateName(app_bar, "_ToolbarContainerLayout.toolbarHeight");
  app_bar._ToolbarContainerLayout = class _ToolbarContainerLayout extends shifted_box.SingleChildLayoutDelegate {
    get toolbarHeight() {
      return this[toolbarHeight$];
    }
    set toolbarHeight(value) {
      super.toolbarHeight = value;
    }
    getConstraintsForChild(constraints) {
      return constraints.tighten({height: this.toolbarHeight});
    }
    getSize(constraints) {
      return new ui.Size.new(constraints.maxWidth, this.toolbarHeight);
    }
    getPositionForChild(size, childSize) {
      return new ui.Offset.new(0.0, dart.notNull(size.height) - dart.notNull(childSize.height));
    }
    shouldRelayout(oldDelegate) {
      _ToolbarContainerLayoutL().as(oldDelegate);
      return this.toolbarHeight != oldDelegate.toolbarHeight;
    }
  };
  (app_bar._ToolbarContainerLayout.new = function(toolbarHeight) {
    this[toolbarHeight$] = toolbarHeight;
    app_bar._ToolbarContainerLayout.__proto__.new.call(this);
    ;
  }).prototype = app_bar._ToolbarContainerLayout.prototype;
  dart.addTypeTests(app_bar._ToolbarContainerLayout);
  dart.addTypeCaches(app_bar._ToolbarContainerLayout);
  dart.setMethodSignature(app_bar._ToolbarContainerLayout, () => ({
    __proto__: dart.getMethods(app_bar._ToolbarContainerLayout.__proto__),
    shouldRelayout: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)])
  }));
  dart.setLibraryUri(app_bar._ToolbarContainerLayout, L116);
  dart.setFieldSignature(app_bar._ToolbarContainerLayout, () => ({
    __proto__: dart.getFields(app_bar._ToolbarContainerLayout.__proto__),
    toolbarHeight: dart.finalFieldType(dart.legacy(core.double))
  }));
  var _getEffectiveCenterTitle$ = dart.privateName(app_bar, "_getEffectiveCenterTitle");
  var leading$2 = dart.privateName(app_bar, "AppBar.leading");
  var automaticallyImplyLeading$ = dart.privateName(app_bar, "AppBar.automaticallyImplyLeading");
  var title$4 = dart.privateName(app_bar, "AppBar.title");
  var actions$0 = dart.privateName(app_bar, "AppBar.actions");
  var flexibleSpace$ = dart.privateName(app_bar, "AppBar.flexibleSpace");
  var bottom$ = dart.privateName(app_bar, "AppBar.bottom");
  var elevation$26 = dart.privateName(app_bar, "AppBar.elevation");
  var shadowColor$6 = dart.privateName(app_bar, "AppBar.shadowColor");
  var shape$24 = dart.privateName(app_bar, "AppBar.shape");
  var backgroundColor$20 = dart.privateName(app_bar, "AppBar.backgroundColor");
  var brightness$3 = dart.privateName(app_bar, "AppBar.brightness");
  var iconTheme$1 = dart.privateName(app_bar, "AppBar.iconTheme");
  var actionsIconTheme$0 = dart.privateName(app_bar, "AppBar.actionsIconTheme");
  var textTheme$4 = dart.privateName(app_bar, "AppBar.textTheme");
  var primary$1 = dart.privateName(app_bar, "AppBar.primary");
  var centerTitle$1 = dart.privateName(app_bar, "AppBar.centerTitle");
  var excludeHeaderSemantics$ = dart.privateName(app_bar, "AppBar.excludeHeaderSemantics");
  var titleSpacing$ = dart.privateName(app_bar, "AppBar.titleSpacing");
  var toolbarOpacity$0 = dart.privateName(app_bar, "AppBar.toolbarOpacity");
  var bottomOpacity$ = dart.privateName(app_bar, "AppBar.bottomOpacity");
  var preferredSize = dart.privateName(app_bar, "AppBar.preferredSize");
  var toolbarHeight$0 = dart.privateName(app_bar, "AppBar.toolbarHeight");
  var leadingWidth$ = dart.privateName(app_bar, "AppBar.leadingWidth");
  app_bar.AppBar = class AppBar extends framework.StatefulWidget {
    get leading() {
      return this[leading$2];
    }
    set leading(value) {
      super.leading = value;
    }
    get automaticallyImplyLeading() {
      return this[automaticallyImplyLeading$];
    }
    set automaticallyImplyLeading(value) {
      super.automaticallyImplyLeading = value;
    }
    get title() {
      return this[title$4];
    }
    set title(value) {
      super.title = value;
    }
    get actions() {
      return this[actions$0];
    }
    set actions(value) {
      super.actions = value;
    }
    get flexibleSpace() {
      return this[flexibleSpace$];
    }
    set flexibleSpace(value) {
      super.flexibleSpace = value;
    }
    get bottom() {
      return this[bottom$];
    }
    set bottom(value) {
      super.bottom = value;
    }
    get elevation() {
      return this[elevation$26];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get shadowColor() {
      return this[shadowColor$6];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    get shape() {
      return this[shape$24];
    }
    set shape(value) {
      super.shape = value;
    }
    get backgroundColor() {
      return this[backgroundColor$20];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get brightness() {
      return this[brightness$3];
    }
    set brightness(value) {
      super.brightness = value;
    }
    get iconTheme() {
      return this[iconTheme$1];
    }
    set iconTheme(value) {
      super.iconTheme = value;
    }
    get actionsIconTheme() {
      return this[actionsIconTheme$0];
    }
    set actionsIconTheme(value) {
      super.actionsIconTheme = value;
    }
    get textTheme() {
      return this[textTheme$4];
    }
    set textTheme(value) {
      super.textTheme = value;
    }
    get primary() {
      return this[primary$1];
    }
    set primary(value) {
      super.primary = value;
    }
    get centerTitle() {
      return this[centerTitle$1];
    }
    set centerTitle(value) {
      super.centerTitle = value;
    }
    get excludeHeaderSemantics() {
      return this[excludeHeaderSemantics$];
    }
    set excludeHeaderSemantics(value) {
      super.excludeHeaderSemantics = value;
    }
    get titleSpacing() {
      return this[titleSpacing$];
    }
    set titleSpacing(value) {
      super.titleSpacing = value;
    }
    get toolbarOpacity() {
      return this[toolbarOpacity$0];
    }
    set toolbarOpacity(value) {
      super.toolbarOpacity = value;
    }
    get bottomOpacity() {
      return this[bottomOpacity$];
    }
    set bottomOpacity(value) {
      super.bottomOpacity = value;
    }
    get preferredSize() {
      return this[preferredSize];
    }
    set preferredSize(value) {
      super.preferredSize = value;
    }
    get toolbarHeight() {
      return this[toolbarHeight$0];
    }
    set toolbarHeight(value) {
      super.toolbarHeight = value;
    }
    get leadingWidth() {
      return this[leadingWidth$];
    }
    set leadingWidth(value) {
      super.leadingWidth = value;
    }
    [_getEffectiveCenterTitle$](theme) {
      if (this.centerTitle != null) return this.centerTitle;
      if (theme.appBarTheme.centerTitle != null) return theme.appBarTheme.centerTitle;
      if (!(theme.platform != null)) dart.assertFailed(null, L117, 464, 12, "theme.platform != null");
      switch (theme.platform) {
        case C44 || CT.C44:
        case C45 || CT.C45:
        case C46 || CT.C46:
        case C47 || CT.C47:
        {
          return false;
        }
        case C48 || CT.C48:
        case C49 || CT.C49:
        {
          return this.actions == null || dart.notNull(this.actions[$length]) < 2;
        }
      }
      return null;
    }
    createState() {
      return new app_bar._AppBarState.new();
    }
  };
  (app_bar.AppBar.new = function(opts) {
    let t23, t23$, t23$0, t22;
    let key = opts && 'key' in opts ? opts.key : null;
    let leading = opts && 'leading' in opts ? opts.leading : null;
    let automaticallyImplyLeading = opts && 'automaticallyImplyLeading' in opts ? opts.automaticallyImplyLeading : true;
    let title = opts && 'title' in opts ? opts.title : null;
    let actions = opts && 'actions' in opts ? opts.actions : null;
    let flexibleSpace = opts && 'flexibleSpace' in opts ? opts.flexibleSpace : null;
    let bottom = opts && 'bottom' in opts ? opts.bottom : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let brightness = opts && 'brightness' in opts ? opts.brightness : null;
    let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
    let actionsIconTheme = opts && 'actionsIconTheme' in opts ? opts.actionsIconTheme : null;
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
    let primary = opts && 'primary' in opts ? opts.primary : true;
    let centerTitle = opts && 'centerTitle' in opts ? opts.centerTitle : null;
    let excludeHeaderSemantics = opts && 'excludeHeaderSemantics' in opts ? opts.excludeHeaderSemantics : false;
    let titleSpacing = opts && 'titleSpacing' in opts ? opts.titleSpacing : 16;
    let toolbarOpacity = opts && 'toolbarOpacity' in opts ? opts.toolbarOpacity : 1;
    let bottomOpacity = opts && 'bottomOpacity' in opts ? opts.bottomOpacity : 1;
    let toolbarHeight = opts && 'toolbarHeight' in opts ? opts.toolbarHeight : null;
    let leadingWidth = opts && 'leadingWidth' in opts ? opts.leadingWidth : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[leading$2] = leading;
    this[automaticallyImplyLeading$] = automaticallyImplyLeading;
    this[title$4] = title;
    this[actions$0] = actions;
    this[flexibleSpace$] = flexibleSpace;
    this[bottom$] = bottom;
    this[elevation$26] = elevation;
    this[shadowColor$6] = shadowColor;
    this[shape$24] = shape;
    this[backgroundColor$20] = backgroundColor;
    this[brightness$3] = brightness;
    this[iconTheme$1] = iconTheme;
    this[actionsIconTheme$0] = actionsIconTheme;
    this[textTheme$4] = textTheme;
    this[primary$1] = primary;
    this[centerTitle$1] = centerTitle;
    this[excludeHeaderSemantics$] = excludeHeaderSemantics;
    this[titleSpacing$] = titleSpacing;
    this[toolbarOpacity$0] = toolbarOpacity;
    this[bottomOpacity$] = bottomOpacity;
    this[toolbarHeight$0] = toolbarHeight;
    this[leadingWidth$] = leadingWidth;
    if (!(automaticallyImplyLeading != null)) dart.assertFailed(null, L117, 212, 15, "automaticallyImplyLeading != null");
    if (!(elevation == null || dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, L117, 213, 15, "elevation == null || elevation >= 0.0");
    if (!(primary != null)) dart.assertFailed(null, L117, 214, 15, "primary != null");
    if (!(titleSpacing != null)) dart.assertFailed(null, L117, 215, 15, "titleSpacing != null");
    if (!(toolbarOpacity != null)) dart.assertFailed(null, L117, 216, 15, "toolbarOpacity != null");
    if (!(bottomOpacity != null)) dart.assertFailed(null, L117, 217, 15, "bottomOpacity != null");
    this[preferredSize] = new ui.Size.fromHeight((t22 = toolbarHeight, t22 == null ? 56 + dart.notNull((t23$0 = (t23$ = (t23 = bottom, t23 == null ? null : t23.preferredSize), t23$ == null ? null : t23$.height), t23$0 == null ? 0.0 : t23$0)) : t22));
    app_bar.AppBar.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = app_bar.AppBar.prototype;
  dart.addTypeTests(app_bar.AppBar);
  dart.addTypeCaches(app_bar.AppBar);
  app_bar.AppBar[dart.implements] = () => [preferred_size.PreferredSizeWidget];
  dart.setMethodSignature(app_bar.AppBar, () => ({
    __proto__: dart.getMethods(app_bar.AppBar.__proto__),
    [_getEffectiveCenterTitle$]: dart.fnType(dart.legacy(core.bool), [dart.legacy(theme_data.ThemeData)]),
    createState: dart.fnType(dart.legacy(app_bar._AppBarState), [])
  }));
  dart.setLibraryUri(app_bar.AppBar, L116);
  dart.setFieldSignature(app_bar.AppBar, () => ({
    __proto__: dart.getFields(app_bar.AppBar.__proto__),
    leading: dart.finalFieldType(dart.legacy(framework.Widget)),
    automaticallyImplyLeading: dart.finalFieldType(dart.legacy(core.bool)),
    title: dart.finalFieldType(dart.legacy(framework.Widget)),
    actions: dart.finalFieldType(dart.legacy(core.List$(dart.legacy(framework.Widget)))),
    flexibleSpace: dart.finalFieldType(dart.legacy(framework.Widget)),
    bottom: dart.finalFieldType(dart.legacy(preferred_size.PreferredSizeWidget)),
    elevation: dart.finalFieldType(dart.legacy(core.double)),
    shadowColor: dart.finalFieldType(dart.legacy(ui.Color)),
    shape: dart.finalFieldType(dart.legacy(borders.ShapeBorder)),
    backgroundColor: dart.finalFieldType(dart.legacy(ui.Color)),
    brightness: dart.finalFieldType(dart.legacy(ui.Brightness)),
    iconTheme: dart.finalFieldType(dart.legacy(icon_theme_data.IconThemeData)),
    actionsIconTheme: dart.finalFieldType(dart.legacy(icon_theme_data.IconThemeData)),
    textTheme: dart.finalFieldType(dart.legacy(text_theme.TextTheme)),
    primary: dart.finalFieldType(dart.legacy(core.bool)),
    centerTitle: dart.finalFieldType(dart.legacy(core.bool)),
    excludeHeaderSemantics: dart.finalFieldType(dart.legacy(core.bool)),
    titleSpacing: dart.finalFieldType(dart.legacy(core.double)),
    toolbarOpacity: dart.finalFieldType(dart.legacy(core.double)),
    bottomOpacity: dart.finalFieldType(dart.legacy(core.double)),
    preferredSize: dart.finalFieldType(dart.legacy(ui.Size)),
    toolbarHeight: dart.finalFieldType(dart.legacy(core.double)),
    leadingWidth: dart.finalFieldType(dart.legacy(core.double))
  }));
  var _handleDrawerButton = dart.privateName(app_bar, "_handleDrawerButton");
  var _handleDrawerButtonEnd = dart.privateName(app_bar, "_handleDrawerButtonEnd");
  var C2647;
  var C2651;
  var C2650;
  var C2649;
  var C2652;
  var C2648;
  var C2655;
  var C2656;
  var C2657;
  var C2654;
  var C2653;
  var C2659;
  var C2658;
  var C2661;
  var C2660;
  var C2664;
  var C2665;
  var C2663;
  var C2662;
  var C2668;
  var C2667;
  var C2666;
  var C2671;
  var C2672;
  var C2673;
  var C2670;
  var C2669;
  var C2676;
  var C2677;
  var C2678;
  var C2679;
  var C2675;
  var C2674;
  var C2682;
  var C2683;
  var C2681;
  var C2680;
  var C2686;
  var C2687;
  var C2688;
  var C2685;
  var C2684;
  var C2692;
  var C2691;
  var C2690;
  var C2689;
  var C2695;
  var C2696;
  var C2697;
  var C2694;
  var C2693;
  var C2700;
  var C2701;
  var C2702;
  var C2703;
  var C2704;
  var C2699;
  var C2698;
  var C2707;
  var C2708;
  var C2706;
  var C2705;
  var C2711;
  var C2712;
  var C2710;
  var C2709;
  var C2715;
  var C2714;
  var C2713;
  var C2718;
  var C2719;
  var C2717;
  var C2716;
  var C2722;
  var C2721;
  var C2720;
  var C2725;
  var C2726;
  var C2724;
  var C2723;
  var C2729;
  var C2730;
  var C2728;
  var C2727;
  var C2733;
  var C2734;
  var C2735;
  var C2732;
  var C2731;
  var C2738;
  var C2739;
  var C2737;
  var C2736;
  var C2742;
  var C2743;
  var C2741;
  var C2740;
  var C2746;
  var C2747;
  var C2745;
  var C2744;
  var C2750;
  var C2751;
  var C2749;
  var C2748;
  var C2754;
  var C2755;
  var C2756;
  var C2757;
  var C2758;
  var C2753;
  var C2752;
  var C2761;
  var C2762;
  var C2760;
  var C2759;
  var C2765;
  var C2766;
  var C2764;
  var C2763;
  app_bar._AppBarState = class _AppBarState extends framework.State$(dart.legacy(app_bar.AppBar)) {
    [_handleDrawerButton]() {
      scaffold$.Scaffold.of(this.context).openDrawer();
    }
    [_handleDrawerButtonEnd]() {
      scaffold$.Scaffold.of(this.context).openEndDrawer();
    }
    build(context) {
      let t22, t22$, t22$0, t22$1, t22$2, t22$3, t22$4, t22$5, t22$6, t22$7, t22$8, t22$9, t23, t22$10, t22$11, t22$12, t23$, t22$13, t22$14, t22$15, t22$16, t22$17, t22$18, t22$19, t23$0, t23$1, t23$2, t23$3, t23$4, t23$5, t23$6, t23$7;
      if (!(!dart.test(this.widget.primary) || dart.test(debug.debugCheckHasMediaQuery(context)))) dart.assertFailed(null, L117, 496, 12, "!widget.primary || debugCheckHasMediaQuery(context)");
      if (!dart.test(debug$0.debugCheckHasMaterialLocalizations(context))) dart.assertFailed(null, L117, 497, 12, "debugCheckHasMaterialLocalizations(context)");
      let theme = theme$.Theme.of(context);
      let appBarTheme = app_bar_theme.AppBarTheme.of(context);
      let scaffold = scaffold$.Scaffold.of(context, {nullOk: true});
      let parentRoute = routes.ModalRoute.of(ObjectL(), context);
      let hasDrawer = (t22$ = (t22 = scaffold, t22 == null ? null : t22.hasDrawer), t22$ == null ? false : t22$);
      let hasEndDrawer = (t22$1 = (t22$0 = scaffold, t22$0 == null ? null : t22$0.hasEndDrawer), t22$1 == null ? false : t22$1);
      let canPop = (t22$3 = (t22$2 = parentRoute, t22$2 == null ? null : t22$2.canPop), t22$3 == null ? false : t22$3);
      let useCloseButton = PageRouteL().is(parentRoute) && dart.test(parentRoute.fullscreenDialog);
      let toolbarHeight = (t22$4 = this.widget.toolbarHeight, t22$4 == null ? 56 : t22$4);
      let overallIconTheme = (t22$6 = (t22$5 = this.widget.iconTheme, t22$5 == null ? appBarTheme.iconTheme : t22$5), t22$6 == null ? theme.primaryIconTheme : t22$6);
      let actionsIconTheme = (t22$8 = (t22$7 = this.widget.actionsIconTheme, t22$7 == null ? appBarTheme.actionsIconTheme : t22$7), t22$8 == null ? overallIconTheme : t22$8);
      let centerStyle = (t22$11 = (t22$10 = (t22$9 = this.widget.textTheme, t22$9 == null ? null : t22$9.headline6), t22$10 == null ? (t23 = appBarTheme.textTheme, t23 == null ? null : t23.headline6) : t22$10), t22$11 == null ? theme.primaryTextTheme.headline6 : t22$11);
      let sideStyle = (t22$14 = (t22$13 = (t22$12 = this.widget.textTheme, t22$12 == null ? null : t22$12.bodyText2), t22$13 == null ? (t23$ = appBarTheme.textTheme, t23$ == null ? null : t23$.bodyText2) : t22$13), t22$14 == null ? theme.primaryTextTheme.bodyText2 : t22$14);
      if (this.widget.toolbarOpacity !== 1.0) {
        let opacity = (C2647 || CT.C2647).transform(this.widget.toolbarOpacity);
        if ((t22$15 = centerStyle, t22$15 == null ? null : t22$15.color) != null) centerStyle = centerStyle.copyWith({color: centerStyle.color.withOpacity(opacity)});
        if ((t22$16 = sideStyle, t22$16 == null ? null : t22$16.color) != null) sideStyle = sideStyle.copyWith({color: sideStyle.color.withOpacity(opacity)});
        overallIconTheme = overallIconTheme.copyWith({opacity: dart.notNull(opacity) * dart.notNull((t22$17 = overallIconTheme.opacity, t22$17 == null ? 1.0 : t22$17))});
        actionsIconTheme = actionsIconTheme.copyWith({opacity: dart.notNull(opacity) * dart.notNull((t22$18 = actionsIconTheme.opacity, t22$18 == null ? 1.0 : t22$18))});
      }
      let leading = this.widget.leading;
      if (leading == null && dart.test(this.widget.automaticallyImplyLeading)) {
        if (dart.test(hasDrawer)) {
          leading = new icon_button.IconButton.new({icon: C2648 || CT.C2648, onPressed: dart.bind(this, _handleDrawerButton), tooltip: material_localizations.MaterialLocalizations.of(context).openAppDrawerTooltip, $creationLocationd_0dea112b090073317d4: C2653 || CT.C2653});
        } else {
          if (dart.test(canPop)) leading = useCloseButton ? C2658 || CT.C2658 : C2660 || CT.C2660;
        }
      }
      if (leading != null) {
        leading = new basic.ConstrainedBox.new({constraints: new box.BoxConstraints.tightFor({width: (t22$19 = this.widget.leadingWidth, t22$19 == null ? 56 : t22$19)}), child: leading, $creationLocationd_0dea112b090073317d4: C2662 || CT.C2662});
      }
      let title = this.widget.title;
      if (title != null) {
        let namesRoute = null;
        switch (theme.platform) {
          case C44 || CT.C44:
          case C45 || CT.C45:
          case C46 || CT.C46:
          case C47 || CT.C47:
          {
            namesRoute = true;
            break;
          }
          case C48 || CT.C48:
          case C49 || CT.C49:
          {
            break;
          }
        }
        title = new app_bar._AppBarTitleBox.new({child: title, $creationLocationd_0dea112b090073317d4: C2666 || CT.C2666});
        if (!dart.test(this.widget.excludeHeaderSemantics)) {
          title = new basic.Semantics.new({namesRoute: namesRoute, child: title, header: true, $creationLocationd_0dea112b090073317d4: C2669 || CT.C2669});
        }
        title = new text$.DefaultTextStyle.new({style: centerStyle, softWrap: false, overflow: paragraph.TextOverflow.ellipsis, child: title, $creationLocationd_0dea112b090073317d4: C2674 || CT.C2674});
        let mediaQueryData = media_query.MediaQuery.of(context);
        title = new media_query.MediaQuery.new({data: mediaQueryData.copyWith({textScaleFactor: math.min(doubleL(), mediaQueryData.textScaleFactor, 1.34)}), child: title, $creationLocationd_0dea112b090073317d4: C2680 || CT.C2680});
      }
      let actions = null;
      if (this.widget.actions != null && dart.test(this.widget.actions[$isNotEmpty])) {
        actions = new basic.Row.new({mainAxisSize: flex.MainAxisSize.min, crossAxisAlignment: flex.CrossAxisAlignment.stretch, children: this.widget.actions, $creationLocationd_0dea112b090073317d4: C2684 || CT.C2684});
      } else if (dart.test(hasEndDrawer)) {
        actions = new icon_button.IconButton.new({icon: C2689 || CT.C2689, onPressed: dart.bind(this, _handleDrawerButtonEnd), tooltip: material_localizations.MaterialLocalizations.of(context).openAppDrawerTooltip, $creationLocationd_0dea112b090073317d4: C2693 || CT.C2693});
      }
      if (actions != null) {
        actions = icon_theme.IconTheme.merge({data: actionsIconTheme, child: actions});
      }
      let toolbar = new navigation_toolbar.NavigationToolbar.new({leading: leading, middle: title, trailing: actions, centerMiddle: this.widget[_getEffectiveCenterTitle$](theme), middleSpacing: this.widget.titleSpacing, $creationLocationd_0dea112b090073317d4: C2698 || CT.C2698});
      let appBar = new basic.ClipRect.new({child: new basic.CustomSingleChildLayout.new({delegate: new app_bar._ToolbarContainerLayout.new(toolbarHeight), child: icon_theme.IconTheme.merge({data: overallIconTheme, child: new text$.DefaultTextStyle.new({style: sideStyle, child: toolbar, $creationLocationd_0dea112b090073317d4: C2705 || CT.C2705})}), $creationLocationd_0dea112b090073317d4: C2709 || CT.C2709}), $creationLocationd_0dea112b090073317d4: C2713 || CT.C2713});
      if (this.widget.bottom != null) {
        appBar = new basic.Column.new({mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, children: (() => {
            let t22 = JSArrayOfWidgetL().of([]);
            t22[$add](new basic.Flexible.new({child: new basic.ConstrainedBox.new({constraints: new box.BoxConstraints.new({maxHeight: toolbarHeight}), child: appBar, $creationLocationd_0dea112b090073317d4: C2716 || CT.C2716}), $creationLocationd_0dea112b090073317d4: C2720 || CT.C2720}));
            if (this.widget.bottomOpacity === 1.0)
              t22[$add](this.widget.bottom);
            else
              t22[$add](new basic.Opacity.new({opacity: (C2647 || CT.C2647).transform(this.widget.bottomOpacity), child: this.widget.bottom, $creationLocationd_0dea112b090073317d4: C2723 || CT.C2723}));
            return t22;
          })(), $creationLocationd_0dea112b090073317d4: C2727 || CT.C2727});
      }
      if (dart.test(this.widget.primary)) {
        appBar = new safe_area.SafeArea.new({bottom: false, top: true, child: appBar, $creationLocationd_0dea112b090073317d4: C2731 || CT.C2731});
      }
      appBar = new basic.Align.new({alignment: alignment.Alignment.topCenter, child: appBar, $creationLocationd_0dea112b090073317d4: C2736 || CT.C2736});
      if (this.widget.flexibleSpace != null) {
        appBar = new basic.Stack.new({fit: stack.StackFit.passthrough, children: JSArrayOfWidgetL().of([this.widget.flexibleSpace, new material.Material.new({type: material.MaterialType.transparency, child: appBar, $creationLocationd_0dea112b090073317d4: C2740 || CT.C2740})]), $creationLocationd_0dea112b090073317d4: C2744 || CT.C2744});
      }
      let brightness = (t23$1 = (t23$0 = this.widget.brightness, t23$0 == null ? appBarTheme.brightness : t23$0), t23$1 == null ? theme.primaryColorBrightness : t23$1);
      let overlayStyle = dart.equals(brightness, ui.Brightness.dark) ? system_chrome.SystemUiOverlayStyle.light : system_chrome.SystemUiOverlayStyle.dark;
      return new basic.Semantics.new({container: true, child: new (AnnotatedRegionOfSystemUiOverlayStyleL()).new({value: overlayStyle, child: new material.Material.new({color: (t23$3 = (t23$2 = this.widget.backgroundColor, t23$2 == null ? appBarTheme.color : t23$2), t23$3 == null ? theme.primaryColor : t23$3), elevation: (t23$5 = (t23$4 = this.widget.elevation, t23$4 == null ? appBarTheme.elevation : t23$4), t23$5 == null ? 4 : t23$5), shadowColor: (t23$7 = (t23$6 = this.widget.shadowColor, t23$6 == null ? appBarTheme.shadowColor : t23$6), t23$7 == null ? app_bar._AppBarState._defaultShadowColor : t23$7), shape: this.widget.shape, child: new basic.Semantics.new({explicitChildNodes: true, child: appBar, $creationLocationd_0dea112b090073317d4: C2748 || CT.C2748}), $creationLocationd_0dea112b090073317d4: C2752 || CT.C2752}), $creationLocationd_0dea112b090073317d4: C2759 || CT.C2759}), $creationLocationd_0dea112b090073317d4: C2763 || CT.C2763});
    }
  };
  (app_bar._AppBarState.new = function() {
    app_bar._AppBarState.__proto__.new.call(this);
    ;
  }).prototype = app_bar._AppBarState.prototype;
  dart.addTypeTests(app_bar._AppBarState);
  dart.addTypeCaches(app_bar._AppBarState);
  dart.setMethodSignature(app_bar._AppBarState, () => ({
    __proto__: dart.getMethods(app_bar._AppBarState.__proto__),
    [_handleDrawerButton]: dart.fnType(dart.void, []),
    [_handleDrawerButtonEnd]: dart.fnType(dart.void, []),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(app_bar._AppBarState, L116);
  dart.defineLazy(app_bar._AppBarState, {
    /*app_bar._AppBarState._defaultElevation*/get _defaultElevation() {
      return 4;
    },
    /*app_bar._AppBarState._defaultShadowColor*/get _defaultShadowColor() {
      return C384 || CT.C384;
    }
  }, true);
  var child$26 = dart.privateName(app_bar, "_FloatingAppBar.child");
  app_bar._FloatingAppBar = class _FloatingAppBar extends framework.StatefulWidget {
    get child() {
      return this[child$26];
    }
    set child(value) {
      super.child = value;
    }
    createState() {
      return new app_bar._FloatingAppBarState.new();
    }
  };
  (app_bar._FloatingAppBar.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$26] = child;
    app_bar._FloatingAppBar.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = app_bar._FloatingAppBar.prototype;
  dart.addTypeTests(app_bar._FloatingAppBar);
  dart.addTypeCaches(app_bar._FloatingAppBar);
  dart.setMethodSignature(app_bar._FloatingAppBar, () => ({
    __proto__: dart.getMethods(app_bar._FloatingAppBar.__proto__),
    createState: dart.fnType(dart.legacy(app_bar._FloatingAppBarState), [])
  }));
  dart.setLibraryUri(app_bar._FloatingAppBar, L116);
  dart.setFieldSignature(app_bar._FloatingAppBar, () => ({
    __proto__: dart.getFields(app_bar._FloatingAppBar.__proto__),
    child: dart.finalFieldType(dart.legacy(framework.Widget))
  }));
  var _position$ = dart.privateName(app_bar, "_position");
  var _isScrollingListener = dart.privateName(app_bar, "_isScrollingListener");
  var _headerRenderer = dart.privateName(app_bar, "_headerRenderer");
  app_bar._FloatingAppBarState = class _FloatingAppBarState extends framework.State$(dart.legacy(app_bar._FloatingAppBar)) {
    didChangeDependencies() {
      let t23;
      super.didChangeDependencies();
      if (this[_position$] != null) this[_position$].isScrollingNotifier.removeListener(dart.bind(this, _isScrollingListener));
      this[_position$] = (t23 = scrollable.Scrollable.of(this.context), t23 == null ? null : t23.position);
      if (this[_position$] != null) this[_position$].isScrollingNotifier.addListener(dart.bind(this, _isScrollingListener));
    }
    dispose() {
      if (this[_position$] != null) this[_position$].isScrollingNotifier.removeListener(dart.bind(this, _isScrollingListener));
      super.dispose();
    }
    [_headerRenderer]() {
      return this.context.findAncestorRenderObjectOfType(RenderSliverFloatingPersistentHeaderL());
    }
    [_isScrollingListener]() {
      let t23, t23$;
      if (this[_position$] == null) return;
      let header = this[_headerRenderer]();
      if (dart.test(this[_position$].isScrollingNotifier.value)) {
        t23 = header;
        t23 == null ? null : t23.maybeStopSnapAnimation(this[_position$].userScrollDirection);
      } else {
        t23$ = header;
        t23$ == null ? null : t23$.maybeStartSnapAnimation(this[_position$].userScrollDirection);
      }
    }
    build(context) {
      return this.widget.child;
    }
  };
  (app_bar._FloatingAppBarState.new = function() {
    this[_position$] = null;
    app_bar._FloatingAppBarState.__proto__.new.call(this);
    ;
  }).prototype = app_bar._FloatingAppBarState.prototype;
  dart.addTypeTests(app_bar._FloatingAppBarState);
  dart.addTypeCaches(app_bar._FloatingAppBarState);
  dart.setMethodSignature(app_bar._FloatingAppBarState, () => ({
    __proto__: dart.getMethods(app_bar._FloatingAppBarState.__proto__),
    [_headerRenderer]: dart.fnType(dart.legacy(sliver_persistent_header.RenderSliverFloatingPersistentHeader), []),
    [_isScrollingListener]: dart.fnType(dart.void, []),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(app_bar._FloatingAppBarState, L116);
  dart.setFieldSignature(app_bar._FloatingAppBarState, () => ({
    __proto__: dart.getFields(app_bar._FloatingAppBarState.__proto__),
    [_position$]: dart.fieldType(dart.legacy(scroll_position.ScrollPosition))
  }));
  var _bottomHeight = dart.privateName(app_bar, "_bottomHeight");
  var C2769;
  var C2770;
  var C2768;
  var C2767;
  var C2773;
  var C2774;
  var C2775;
  var C2776;
  var C2777;
  var C2778;
  var C2779;
  var C2780;
  var C2781;
  var C2782;
  var C2783;
  var C2784;
  var C2785;
  var C2786;
  var C2787;
  var C2788;
  var C2789;
  var C2790;
  var C2791;
  var C2792;
  var C2793;
  var C2794;
  var C2772;
  var C2771;
  var C2797;
  var C2796;
  var C2795;
  var snapConfiguration$ = dart.privateName(app_bar, "_SliverAppBarDelegate.snapConfiguration");
  var stretchConfiguration$ = dart.privateName(app_bar, "_SliverAppBarDelegate.stretchConfiguration");
  app_bar._SliverAppBarDelegate = class _SliverAppBarDelegate extends sliver_persistent_header$.SliverPersistentHeaderDelegate {
    get snapConfiguration() {
      return this[snapConfiguration$];
    }
    set snapConfiguration(value) {
      super.snapConfiguration = value;
    }
    get stretchConfiguration() {
      return this[stretchConfiguration$];
    }
    set stretchConfiguration(value) {
      super.stretchConfiguration = value;
    }
    get minExtent() {
      return this.collapsedHeight;
    }
    get maxExtent() {
      let t24, t23;
      return math.max(doubleL(), dart.notNull(this.topPadding) + dart.notNull((t23 = this.expandedHeight, t23 == null ? dart.notNull((t24 = this.toolbarHeight, t24 == null ? 56 : t24)) + dart.notNull(this[_bottomHeight]) : t23)), this.minExtent);
    }
    build(context, shrinkOffset, overlapsContent) {
      let t23, t23$, t23$0;
      let visibleMainHeight = dart.notNull(this.maxExtent) - dart.notNull(shrinkOffset) - dart.notNull(this.topPadding);
      let extraToolbarHeight = math.max(doubleL(), dart.notNull(this.minExtent) - dart.notNull(this[_bottomHeight]) - dart.notNull(this.topPadding) - dart.notNull((t23 = this.toolbarHeight, t23 == null ? 56 : t23)), 0.0);
      let visibleToolbarHeight = visibleMainHeight - dart.notNull(this[_bottomHeight]) - extraToolbarHeight;
      let isPinnedWithOpacityFade = dart.test(this.pinned) && dart.test(this.floating) && this.bottom != null && extraToolbarHeight === 0.0;
      let toolbarOpacity = !dart.test(this.pinned) || isPinnedWithOpacityFade ? (visibleToolbarHeight / dart.notNull((t23$ = this.toolbarHeight, t23$ == null ? 56 : t23$)))[$clamp](0.0, 1.0) : 1.0;
      let appBar = flexible_space_bar.FlexibleSpaceBar.createSettings({minExtent: this.minExtent, maxExtent: this.maxExtent, currentExtent: math.max(doubleL(), this.minExtent, dart.notNull(this.maxExtent) - dart.notNull(shrinkOffset)), toolbarOpacity: toolbarOpacity, child: new app_bar.AppBar.new({leading: this.leading, automaticallyImplyLeading: this.automaticallyImplyLeading, title: this.title, actions: this.actions, flexibleSpace: this.title == null && this.flexibleSpace != null && !dart.test(this.excludeHeaderSemantics) ? new basic.Semantics.new({child: this.flexibleSpace, header: true, $creationLocationd_0dea112b090073317d4: C2767 || CT.C2767}) : this.flexibleSpace, bottom: this.bottom, elevation: dart.test(this.forceElevated) || dart.test(overlapsContent) || dart.test(this.pinned) && dart.notNull(shrinkOffset) > dart.notNull(this.maxExtent) - dart.notNull(this.minExtent) ? (t23$0 = this.elevation, t23$0 == null ? 4.0 : t23$0) : 0.0, shadowColor: this.shadowColor, backgroundColor: this.backgroundColor, brightness: this.brightness, iconTheme: this.iconTheme, actionsIconTheme: this.actionsIconTheme, textTheme: this.textTheme, primary: this.primary, centerTitle: this.centerTitle, excludeHeaderSemantics: this.excludeHeaderSemantics, titleSpacing: this.titleSpacing, shape: this.shape, toolbarOpacity: toolbarOpacity, bottomOpacity: dart.test(this.pinned) ? 1.0 : (visibleMainHeight / dart.notNull(this[_bottomHeight]))[$clamp](0.0, 1.0), toolbarHeight: this.toolbarHeight, leadingWidth: this.leadingWidth, $creationLocationd_0dea112b090073317d4: C2771 || CT.C2771})});
      return dart.test(this.floating) ? new app_bar._FloatingAppBar.new({child: appBar, $creationLocationd_0dea112b090073317d4: C2795 || CT.C2795}) : appBar;
    }
    shouldRebuild(oldDelegate) {
      _SliverAppBarDelegateL().as(oldDelegate);
      return !dart.equals(this.leading, oldDelegate.leading) || !dart.equals(this.automaticallyImplyLeading, oldDelegate.automaticallyImplyLeading) || !dart.equals(this.title, oldDelegate.title) || !dart.equals(this.actions, oldDelegate.actions) || !dart.equals(this.flexibleSpace, oldDelegate.flexibleSpace) || !dart.equals(this.bottom, oldDelegate.bottom) || this[_bottomHeight] != oldDelegate[_bottomHeight] || this.elevation != oldDelegate.elevation || !dart.equals(this.shadowColor, oldDelegate.shadowColor) || !dart.equals(this.backgroundColor, oldDelegate.backgroundColor) || !dart.equals(this.brightness, oldDelegate.brightness) || !dart.equals(this.iconTheme, oldDelegate.iconTheme) || !dart.equals(this.actionsIconTheme, oldDelegate.actionsIconTheme) || !dart.equals(this.textTheme, oldDelegate.textTheme) || !dart.equals(this.primary, oldDelegate.primary) || !dart.equals(this.centerTitle, oldDelegate.centerTitle) || this.titleSpacing != oldDelegate.titleSpacing || this.expandedHeight != oldDelegate.expandedHeight || this.topPadding != oldDelegate.topPadding || !dart.equals(this.pinned, oldDelegate.pinned) || !dart.equals(this.floating, oldDelegate.floating) || !dart.equals(this.snapConfiguration, oldDelegate.snapConfiguration) || !dart.equals(this.stretchConfiguration, oldDelegate.stretchConfiguration) || !dart.equals(this.forceElevated, oldDelegate.forceElevated) || this.toolbarHeight != oldDelegate.toolbarHeight || this.leadingWidth != this.leadingWidth;
    }
    toString() {
      return dart.str(diagnostics.describeIdentity(this)) + "(topPadding: " + dart.str(this.topPadding[$toStringAsFixed](1)) + ", bottomHeight: " + dart.str(this[_bottomHeight][$toStringAsFixed](1)) + ", ...)";
    }
  };
  (app_bar._SliverAppBarDelegate.new = function(opts) {
    let t23, t23$, t23$0;
    let leading = opts && 'leading' in opts ? opts.leading : null;
    let automaticallyImplyLeading = opts && 'automaticallyImplyLeading' in opts ? opts.automaticallyImplyLeading : null;
    let title = opts && 'title' in opts ? opts.title : null;
    let actions = opts && 'actions' in opts ? opts.actions : null;
    let flexibleSpace = opts && 'flexibleSpace' in opts ? opts.flexibleSpace : null;
    let bottom = opts && 'bottom' in opts ? opts.bottom : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
    let forceElevated = opts && 'forceElevated' in opts ? opts.forceElevated : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let brightness = opts && 'brightness' in opts ? opts.brightness : null;
    let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
    let actionsIconTheme = opts && 'actionsIconTheme' in opts ? opts.actionsIconTheme : null;
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
    let primary = opts && 'primary' in opts ? opts.primary : null;
    let centerTitle = opts && 'centerTitle' in opts ? opts.centerTitle : null;
    let excludeHeaderSemantics = opts && 'excludeHeaderSemantics' in opts ? opts.excludeHeaderSemantics : null;
    let titleSpacing = opts && 'titleSpacing' in opts ? opts.titleSpacing : null;
    let expandedHeight = opts && 'expandedHeight' in opts ? opts.expandedHeight : null;
    let collapsedHeight = opts && 'collapsedHeight' in opts ? opts.collapsedHeight : null;
    let topPadding = opts && 'topPadding' in opts ? opts.topPadding : null;
    let floating = opts && 'floating' in opts ? opts.floating : null;
    let pinned = opts && 'pinned' in opts ? opts.pinned : null;
    let snapConfiguration = opts && 'snapConfiguration' in opts ? opts.snapConfiguration : null;
    let stretchConfiguration = opts && 'stretchConfiguration' in opts ? opts.stretchConfiguration : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let toolbarHeight = opts && 'toolbarHeight' in opts ? opts.toolbarHeight : null;
    let leadingWidth = opts && 'leadingWidth' in opts ? opts.leadingWidth : null;
    this.leading = leading;
    this.automaticallyImplyLeading = automaticallyImplyLeading;
    this.title = title;
    this.actions = actions;
    this.flexibleSpace = flexibleSpace;
    this.bottom = bottom;
    this.elevation = elevation;
    this.shadowColor = shadowColor;
    this.forceElevated = forceElevated;
    this.backgroundColor = backgroundColor;
    this.brightness = brightness;
    this.iconTheme = iconTheme;
    this.actionsIconTheme = actionsIconTheme;
    this.textTheme = textTheme;
    this.primary = primary;
    this.centerTitle = centerTitle;
    this.excludeHeaderSemantics = excludeHeaderSemantics;
    this.titleSpacing = titleSpacing;
    this.expandedHeight = expandedHeight;
    this.collapsedHeight = collapsedHeight;
    this.topPadding = topPadding;
    this.floating = floating;
    this.pinned = pinned;
    this[snapConfiguration$] = snapConfiguration;
    this[stretchConfiguration$] = stretchConfiguration;
    this.shape = shape;
    this.toolbarHeight = toolbarHeight;
    this.leadingWidth = leadingWidth;
    if (!(dart.test(primary) || topPadding === 0.0)) dart.assertFailed(null, L117, 813, 15, "primary || topPadding == 0.0");
    this[_bottomHeight] = (t23$0 = (t23$ = (t23 = bottom, t23 == null ? null : t23.preferredSize), t23$ == null ? null : t23$.height), t23$0 == null ? 0.0 : t23$0);
    app_bar._SliverAppBarDelegate.__proto__.new.call(this);
    ;
  }).prototype = app_bar._SliverAppBarDelegate.prototype;
  dart.addTypeTests(app_bar._SliverAppBarDelegate);
  dart.addTypeCaches(app_bar._SliverAppBarDelegate);
  dart.setMethodSignature(app_bar._SliverAppBarDelegate, () => ({
    __proto__: dart.getMethods(app_bar._SliverAppBarDelegate.__proto__),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext), dart.legacy(core.double), dart.legacy(core.bool)]),
    shouldRebuild: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setGetterSignature(app_bar._SliverAppBarDelegate, () => ({
    __proto__: dart.getGetters(app_bar._SliverAppBarDelegate.__proto__),
    minExtent: dart.legacy(core.double),
    maxExtent: dart.legacy(core.double)
  }));
  dart.setLibraryUri(app_bar._SliverAppBarDelegate, L116);
  dart.setFieldSignature(app_bar._SliverAppBarDelegate, () => ({
    __proto__: dart.getFields(app_bar._SliverAppBarDelegate.__proto__),
    leading: dart.finalFieldType(dart.legacy(framework.Widget)),
    automaticallyImplyLeading: dart.finalFieldType(dart.legacy(core.bool)),
    title: dart.finalFieldType(dart.legacy(framework.Widget)),
    actions: dart.finalFieldType(dart.legacy(core.List$(dart.legacy(framework.Widget)))),
    flexibleSpace: dart.finalFieldType(dart.legacy(framework.Widget)),
    bottom: dart.finalFieldType(dart.legacy(preferred_size.PreferredSizeWidget)),
    elevation: dart.finalFieldType(dart.legacy(core.double)),
    shadowColor: dart.finalFieldType(dart.legacy(ui.Color)),
    forceElevated: dart.finalFieldType(dart.legacy(core.bool)),
    backgroundColor: dart.finalFieldType(dart.legacy(ui.Color)),
    brightness: dart.finalFieldType(dart.legacy(ui.Brightness)),
    iconTheme: dart.finalFieldType(dart.legacy(icon_theme_data.IconThemeData)),
    actionsIconTheme: dart.finalFieldType(dart.legacy(icon_theme_data.IconThemeData)),
    textTheme: dart.finalFieldType(dart.legacy(text_theme.TextTheme)),
    primary: dart.finalFieldType(dart.legacy(core.bool)),
    centerTitle: dart.finalFieldType(dart.legacy(core.bool)),
    excludeHeaderSemantics: dart.finalFieldType(dart.legacy(core.bool)),
    titleSpacing: dart.finalFieldType(dart.legacy(core.double)),
    expandedHeight: dart.finalFieldType(dart.legacy(core.double)),
    collapsedHeight: dart.finalFieldType(dart.legacy(core.double)),
    topPadding: dart.finalFieldType(dart.legacy(core.double)),
    floating: dart.finalFieldType(dart.legacy(core.bool)),
    pinned: dart.finalFieldType(dart.legacy(core.bool)),
    shape: dart.finalFieldType(dart.legacy(borders.ShapeBorder)),
    toolbarHeight: dart.finalFieldType(dart.legacy(core.double)),
    leadingWidth: dart.finalFieldType(dart.legacy(core.double)),
    [_bottomHeight]: dart.finalFieldType(dart.legacy(core.double)),
    snapConfiguration: dart.finalFieldType(dart.legacy(sliver_persistent_header.FloatingHeaderSnapConfiguration)),
    stretchConfiguration: dart.finalFieldType(dart.legacy(sliver_persistent_header.OverScrollHeaderStretchConfiguration))
  }));
  dart.defineExtensionMethods(app_bar._SliverAppBarDelegate, ['toString']);
  var leading$3 = dart.privateName(app_bar, "SliverAppBar.leading");
  var automaticallyImplyLeading$0 = dart.privateName(app_bar, "SliverAppBar.automaticallyImplyLeading");
  var title$5 = dart.privateName(app_bar, "SliverAppBar.title");
  var actions$1 = dart.privateName(app_bar, "SliverAppBar.actions");
  var flexibleSpace$0 = dart.privateName(app_bar, "SliverAppBar.flexibleSpace");
  var bottom$0 = dart.privateName(app_bar, "SliverAppBar.bottom");
  var elevation$27 = dart.privateName(app_bar, "SliverAppBar.elevation");
  var shadowColor$7 = dart.privateName(app_bar, "SliverAppBar.shadowColor");
  var forceElevated$ = dart.privateName(app_bar, "SliverAppBar.forceElevated");
  var backgroundColor$21 = dart.privateName(app_bar, "SliverAppBar.backgroundColor");
  var brightness$4 = dart.privateName(app_bar, "SliverAppBar.brightness");
  var iconTheme$2 = dart.privateName(app_bar, "SliverAppBar.iconTheme");
  var actionsIconTheme$1 = dart.privateName(app_bar, "SliverAppBar.actionsIconTheme");
  var textTheme$5 = dart.privateName(app_bar, "SliverAppBar.textTheme");
  var primary$2 = dart.privateName(app_bar, "SliverAppBar.primary");
  var centerTitle$2 = dart.privateName(app_bar, "SliverAppBar.centerTitle");
  var excludeHeaderSemantics$0 = dart.privateName(app_bar, "SliverAppBar.excludeHeaderSemantics");
  var titleSpacing$0 = dart.privateName(app_bar, "SliverAppBar.titleSpacing");
  var collapsedHeight$ = dart.privateName(app_bar, "SliverAppBar.collapsedHeight");
  var expandedHeight$ = dart.privateName(app_bar, "SliverAppBar.expandedHeight");
  var floating$ = dart.privateName(app_bar, "SliverAppBar.floating");
  var pinned$ = dart.privateName(app_bar, "SliverAppBar.pinned");
  var shape$25 = dart.privateName(app_bar, "SliverAppBar.shape");
  var snap$ = dart.privateName(app_bar, "SliverAppBar.snap");
  var stretch$ = dart.privateName(app_bar, "SliverAppBar.stretch");
  var stretchTriggerOffset$ = dart.privateName(app_bar, "SliverAppBar.stretchTriggerOffset");
  var onStretchTrigger$ = dart.privateName(app_bar, "SliverAppBar.onStretchTrigger");
  var toolbarHeight$1 = dart.privateName(app_bar, "SliverAppBar.toolbarHeight");
  var leadingWidth$0 = dart.privateName(app_bar, "SliverAppBar.leadingWidth");
  app_bar.SliverAppBar = class SliverAppBar extends framework.StatefulWidget {
    get leading() {
      return this[leading$3];
    }
    set leading(value) {
      super.leading = value;
    }
    get automaticallyImplyLeading() {
      return this[automaticallyImplyLeading$0];
    }
    set automaticallyImplyLeading(value) {
      super.automaticallyImplyLeading = value;
    }
    get title() {
      return this[title$5];
    }
    set title(value) {
      super.title = value;
    }
    get actions() {
      return this[actions$1];
    }
    set actions(value) {
      super.actions = value;
    }
    get flexibleSpace() {
      return this[flexibleSpace$0];
    }
    set flexibleSpace(value) {
      super.flexibleSpace = value;
    }
    get bottom() {
      return this[bottom$0];
    }
    set bottom(value) {
      super.bottom = value;
    }
    get elevation() {
      return this[elevation$27];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get shadowColor() {
      return this[shadowColor$7];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    get forceElevated() {
      return this[forceElevated$];
    }
    set forceElevated(value) {
      super.forceElevated = value;
    }
    get backgroundColor() {
      return this[backgroundColor$21];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get brightness() {
      return this[brightness$4];
    }
    set brightness(value) {
      super.brightness = value;
    }
    get iconTheme() {
      return this[iconTheme$2];
    }
    set iconTheme(value) {
      super.iconTheme = value;
    }
    get actionsIconTheme() {
      return this[actionsIconTheme$1];
    }
    set actionsIconTheme(value) {
      super.actionsIconTheme = value;
    }
    get textTheme() {
      return this[textTheme$5];
    }
    set textTheme(value) {
      super.textTheme = value;
    }
    get primary() {
      return this[primary$2];
    }
    set primary(value) {
      super.primary = value;
    }
    get centerTitle() {
      return this[centerTitle$2];
    }
    set centerTitle(value) {
      super.centerTitle = value;
    }
    get excludeHeaderSemantics() {
      return this[excludeHeaderSemantics$0];
    }
    set excludeHeaderSemantics(value) {
      super.excludeHeaderSemantics = value;
    }
    get titleSpacing() {
      return this[titleSpacing$0];
    }
    set titleSpacing(value) {
      super.titleSpacing = value;
    }
    get collapsedHeight() {
      return this[collapsedHeight$];
    }
    set collapsedHeight(value) {
      super.collapsedHeight = value;
    }
    get expandedHeight() {
      return this[expandedHeight$];
    }
    set expandedHeight(value) {
      super.expandedHeight = value;
    }
    get floating() {
      return this[floating$];
    }
    set floating(value) {
      super.floating = value;
    }
    get pinned() {
      return this[pinned$];
    }
    set pinned(value) {
      super.pinned = value;
    }
    get shape() {
      return this[shape$25];
    }
    set shape(value) {
      super.shape = value;
    }
    get snap() {
      return this[snap$];
    }
    set snap(value) {
      super.snap = value;
    }
    get stretch() {
      return this[stretch$];
    }
    set stretch(value) {
      super.stretch = value;
    }
    get stretchTriggerOffset() {
      return this[stretchTriggerOffset$];
    }
    set stretchTriggerOffset(value) {
      super.stretchTriggerOffset = value;
    }
    get onStretchTrigger() {
      return this[onStretchTrigger$];
    }
    set onStretchTrigger(value) {
      super.onStretchTrigger = value;
    }
    get toolbarHeight() {
      return this[toolbarHeight$1];
    }
    set toolbarHeight(value) {
      super.toolbarHeight = value;
    }
    get leadingWidth() {
      return this[leadingWidth$0];
    }
    set leadingWidth(value) {
      super.leadingWidth = value;
    }
    createState() {
      return new app_bar._SliverAppBarState.new();
    }
  };
  (app_bar.SliverAppBar.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let leading = opts && 'leading' in opts ? opts.leading : null;
    let automaticallyImplyLeading = opts && 'automaticallyImplyLeading' in opts ? opts.automaticallyImplyLeading : true;
    let title = opts && 'title' in opts ? opts.title : null;
    let actions = opts && 'actions' in opts ? opts.actions : null;
    let flexibleSpace = opts && 'flexibleSpace' in opts ? opts.flexibleSpace : null;
    let bottom = opts && 'bottom' in opts ? opts.bottom : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
    let forceElevated = opts && 'forceElevated' in opts ? opts.forceElevated : false;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let brightness = opts && 'brightness' in opts ? opts.brightness : null;
    let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
    let actionsIconTheme = opts && 'actionsIconTheme' in opts ? opts.actionsIconTheme : null;
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
    let primary = opts && 'primary' in opts ? opts.primary : true;
    let centerTitle = opts && 'centerTitle' in opts ? opts.centerTitle : null;
    let excludeHeaderSemantics = opts && 'excludeHeaderSemantics' in opts ? opts.excludeHeaderSemantics : false;
    let titleSpacing = opts && 'titleSpacing' in opts ? opts.titleSpacing : 16;
    let collapsedHeight = opts && 'collapsedHeight' in opts ? opts.collapsedHeight : null;
    let expandedHeight = opts && 'expandedHeight' in opts ? opts.expandedHeight : null;
    let floating = opts && 'floating' in opts ? opts.floating : false;
    let pinned = opts && 'pinned' in opts ? opts.pinned : false;
    let snap = opts && 'snap' in opts ? opts.snap : false;
    let stretch = opts && 'stretch' in opts ? opts.stretch : false;
    let stretchTriggerOffset = opts && 'stretchTriggerOffset' in opts ? opts.stretchTriggerOffset : 100;
    let onStretchTrigger = opts && 'onStretchTrigger' in opts ? opts.onStretchTrigger : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let toolbarHeight = opts && 'toolbarHeight' in opts ? opts.toolbarHeight : 56;
    let leadingWidth = opts && 'leadingWidth' in opts ? opts.leadingWidth : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[leading$3] = leading;
    this[automaticallyImplyLeading$0] = automaticallyImplyLeading;
    this[title$5] = title;
    this[actions$1] = actions;
    this[flexibleSpace$0] = flexibleSpace;
    this[bottom$0] = bottom;
    this[elevation$27] = elevation;
    this[shadowColor$7] = shadowColor;
    this[forceElevated$] = forceElevated;
    this[backgroundColor$21] = backgroundColor;
    this[brightness$4] = brightness;
    this[iconTheme$2] = iconTheme;
    this[actionsIconTheme$1] = actionsIconTheme;
    this[textTheme$5] = textTheme;
    this[primary$2] = primary;
    this[centerTitle$2] = centerTitle;
    this[excludeHeaderSemantics$0] = excludeHeaderSemantics;
    this[titleSpacing$0] = titleSpacing;
    this[collapsedHeight$] = collapsedHeight;
    this[expandedHeight$] = expandedHeight;
    this[floating$] = floating;
    this[pinned$] = pinned;
    this[snap$] = snap;
    this[stretch$] = stretch;
    this[stretchTriggerOffset$] = stretchTriggerOffset;
    this[onStretchTrigger$] = onStretchTrigger;
    this[shape$25] = shape;
    this[toolbarHeight$1] = toolbarHeight;
    this[leadingWidth$0] = leadingWidth;
    if (!(automaticallyImplyLeading != null)) dart.assertFailed(null, L117, 1053, 15, "automaticallyImplyLeading != null");
    if (!(forceElevated != null)) dart.assertFailed(null, L117, 1054, 15, "forceElevated != null");
    if (!(primary != null)) dart.assertFailed(null, L117, 1055, 15, "primary != null");
    if (!(titleSpacing != null)) dart.assertFailed(null, L117, 1056, 15, "titleSpacing != null");
    if (!(floating != null)) dart.assertFailed(null, L117, 1057, 15, "floating != null");
    if (!(pinned != null)) dart.assertFailed(null, L117, 1058, 15, "pinned != null");
    if (!(snap != null)) dart.assertFailed(null, L117, 1059, 15, "snap != null");
    if (!(stretch != null)) dart.assertFailed(null, L117, 1060, 15, "stretch != null");
    if (!(toolbarHeight != null)) dart.assertFailed(null, L117, 1061, 15, "toolbarHeight != null");
    if (!(dart.test(floating) || !dart.test(snap))) dart.assertFailed("The \"snap\" argument only makes sense for floating app bars.", L117, 1062, 15, "floating || !snap");
    if (!(dart.notNull(stretchTriggerOffset) > 0.0)) dart.assertFailed(null, L117, 1063, 15, "stretchTriggerOffset > 0.0");
    if (!(collapsedHeight == null || dart.notNull(collapsedHeight) > dart.notNull(toolbarHeight))) dart.assertFailed("The \"collapsedHeight\" argument has to be larger than [toolbarHeight].", L117, 1064, 15, "collapsedHeight == null || collapsedHeight > toolbarHeight");
    app_bar.SliverAppBar.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = app_bar.SliverAppBar.prototype;
  dart.addTypeTests(app_bar.SliverAppBar);
  dart.addTypeCaches(app_bar.SliverAppBar);
  dart.setMethodSignature(app_bar.SliverAppBar, () => ({
    __proto__: dart.getMethods(app_bar.SliverAppBar.__proto__),
    createState: dart.fnType(dart.legacy(app_bar._SliverAppBarState), [])
  }));
  dart.setLibraryUri(app_bar.SliverAppBar, L116);
  dart.setFieldSignature(app_bar.SliverAppBar, () => ({
    __proto__: dart.getFields(app_bar.SliverAppBar.__proto__),
    leading: dart.finalFieldType(dart.legacy(framework.Widget)),
    automaticallyImplyLeading: dart.finalFieldType(dart.legacy(core.bool)),
    title: dart.finalFieldType(dart.legacy(framework.Widget)),
    actions: dart.finalFieldType(dart.legacy(core.List$(dart.legacy(framework.Widget)))),
    flexibleSpace: dart.finalFieldType(dart.legacy(framework.Widget)),
    bottom: dart.finalFieldType(dart.legacy(preferred_size.PreferredSizeWidget)),
    elevation: dart.finalFieldType(dart.legacy(core.double)),
    shadowColor: dart.finalFieldType(dart.legacy(ui.Color)),
    forceElevated: dart.finalFieldType(dart.legacy(core.bool)),
    backgroundColor: dart.finalFieldType(dart.legacy(ui.Color)),
    brightness: dart.finalFieldType(dart.legacy(ui.Brightness)),
    iconTheme: dart.finalFieldType(dart.legacy(icon_theme_data.IconThemeData)),
    actionsIconTheme: dart.finalFieldType(dart.legacy(icon_theme_data.IconThemeData)),
    textTheme: dart.finalFieldType(dart.legacy(text_theme.TextTheme)),
    primary: dart.finalFieldType(dart.legacy(core.bool)),
    centerTitle: dart.finalFieldType(dart.legacy(core.bool)),
    excludeHeaderSemantics: dart.finalFieldType(dart.legacy(core.bool)),
    titleSpacing: dart.finalFieldType(dart.legacy(core.double)),
    collapsedHeight: dart.finalFieldType(dart.legacy(core.double)),
    expandedHeight: dart.finalFieldType(dart.legacy(core.double)),
    floating: dart.finalFieldType(dart.legacy(core.bool)),
    pinned: dart.finalFieldType(dart.legacy(core.bool)),
    shape: dart.finalFieldType(dart.legacy(borders.ShapeBorder)),
    snap: dart.finalFieldType(dart.legacy(core.bool)),
    stretch: dart.finalFieldType(dart.legacy(core.bool)),
    stretchTriggerOffset: dart.finalFieldType(dart.legacy(core.double)),
    onStretchTrigger: dart.finalFieldType(dart.legacy(dart.fnType(async.Future$(dart.void), []))),
    toolbarHeight: dart.finalFieldType(dart.legacy(core.double)),
    leadingWidth: dart.finalFieldType(dart.legacy(core.double))
  }));
  var _snapConfiguration = dart.privateName(app_bar, "_snapConfiguration");
  var _stretchConfiguration = dart.privateName(app_bar, "_stretchConfiguration");
  var _updateSnapConfiguration = dart.privateName(app_bar, "_updateSnapConfiguration");
  var _updateStretchConfiguration = dart.privateName(app_bar, "_updateStretchConfiguration");
  var C2800;
  var C2801;
  var C2802;
  var C2799;
  var C2798;
  var C2805;
  var C2806;
  var C2807;
  var C2804;
  var C2803;
  const State_TickerProviderStateMixin$36$6 = class State_TickerProviderStateMixin extends framework.State$(dart.legacy(app_bar.SliverAppBar)) {};
  (State_TickerProviderStateMixin$36$6.new = function() {
    ticker_provider.TickerProviderStateMixin$(dart.legacy(app_bar.SliverAppBar))[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$6.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$6.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$6, ticker_provider.TickerProviderStateMixin$(dart.legacy(app_bar.SliverAppBar)));
  app_bar._SliverAppBarState = class _SliverAppBarState extends State_TickerProviderStateMixin$36$6 {
    [_updateSnapConfiguration]() {
      if (dart.test(this.widget.snap) && dart.test(this.widget.floating)) {
        this[_snapConfiguration] = new sliver_persistent_header.FloatingHeaderSnapConfiguration.new({vsync: this, curve: curves.Curves.easeOut, duration: C243 || CT.C243});
      } else {
        this[_snapConfiguration] = null;
      }
    }
    [_updateStretchConfiguration]() {
      if (dart.test(this.widget.stretch)) {
        this[_stretchConfiguration] = new sliver_persistent_header.OverScrollHeaderStretchConfiguration.new({stretchTriggerOffset: this.widget.stretchTriggerOffset, onStretchTrigger: this.widget.onStretchTrigger});
      } else {
        this[_stretchConfiguration] = null;
      }
    }
    initState() {
      super.initState();
      this[_updateSnapConfiguration]();
      this[_updateStretchConfiguration]();
    }
    didUpdateWidget(oldWidget) {
      SliverAppBarL().as(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.snap, oldWidget.snap) || !dart.equals(this.widget.floating, oldWidget.floating)) this[_updateSnapConfiguration]();
      if (!dart.equals(this.widget.stretch, oldWidget.stretch)) this[_updateStretchConfiguration]();
    }
    build(context) {
      let t23, t23$, t23$0, t23$1, t23$2;
      if (!(!dart.test(this.widget.primary) || dart.test(debug.debugCheckHasMediaQuery(context)))) dart.assertFailed(null, L117, 1407, 12, "!widget.primary || debugCheckHasMediaQuery(context)");
      let bottomHeight = (t23$0 = (t23$ = (t23 = this.widget.bottom, t23 == null ? null : t23.preferredSize), t23$ == null ? null : t23$.height), t23$0 == null ? 0.0 : t23$0);
      let topPadding = dart.test(this.widget.primary) ? media_query.MediaQuery.of(context).padding.top : 0.0;
      let collapsedHeight = dart.test(this.widget.pinned) && dart.test(this.widget.floating) && this.widget.bottom != null ? dart.notNull((t23$1 = this.widget.collapsedHeight, t23$1 == null ? 0.0 : t23$1)) + dart.notNull(bottomHeight) + dart.notNull(topPadding) : dart.notNull((t23$2 = this.widget.collapsedHeight, t23$2 == null ? this.widget.toolbarHeight : t23$2)) + dart.notNull(bottomHeight) + dart.notNull(topPadding);
      return media_query.MediaQuery.removePadding({context: context, removeBottom: true, child: new sliver_persistent_header$.SliverPersistentHeader.new({floating: this.widget.floating, pinned: this.widget.pinned, delegate: new app_bar._SliverAppBarDelegate.new({leading: this.widget.leading, automaticallyImplyLeading: this.widget.automaticallyImplyLeading, title: this.widget.title, actions: this.widget.actions, flexibleSpace: this.widget.flexibleSpace, bottom: this.widget.bottom, elevation: this.widget.elevation, shadowColor: this.widget.shadowColor, forceElevated: this.widget.forceElevated, backgroundColor: this.widget.backgroundColor, brightness: this.widget.brightness, iconTheme: this.widget.iconTheme, actionsIconTheme: this.widget.actionsIconTheme, textTheme: this.widget.textTheme, primary: this.widget.primary, centerTitle: this.widget.centerTitle, excludeHeaderSemantics: this.widget.excludeHeaderSemantics, titleSpacing: this.widget.titleSpacing, expandedHeight: this.widget.expandedHeight, collapsedHeight: collapsedHeight, topPadding: topPadding, floating: this.widget.floating, pinned: this.widget.pinned, shape: this.widget.shape, snapConfiguration: this[_snapConfiguration], stretchConfiguration: this[_stretchConfiguration], toolbarHeight: this.widget.toolbarHeight, leadingWidth: this.widget.leadingWidth}), $creationLocationd_0dea112b090073317d4: C2798 || CT.C2798}), $creationLocationd_0dea112b090073317d4: C2803 || CT.C2803});
    }
  };
  (app_bar._SliverAppBarState.new = function() {
    this[_snapConfiguration] = null;
    this[_stretchConfiguration] = null;
    app_bar._SliverAppBarState.__proto__.new.call(this);
    ;
  }).prototype = app_bar._SliverAppBarState.prototype;
  dart.addTypeTests(app_bar._SliverAppBarState);
  dart.addTypeCaches(app_bar._SliverAppBarState);
  dart.setMethodSignature(app_bar._SliverAppBarState, () => ({
    __proto__: dart.getMethods(app_bar._SliverAppBarState.__proto__),
    [_updateSnapConfiguration]: dart.fnType(dart.void, []),
    [_updateStretchConfiguration]: dart.fnType(dart.void, []),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(app_bar._SliverAppBarState, L116);
  dart.setFieldSignature(app_bar._SliverAppBarState, () => ({
    __proto__: dart.getFields(app_bar._SliverAppBarState.__proto__),
    [_snapConfiguration]: dart.fieldType(dart.legacy(sliver_persistent_header.FloatingHeaderSnapConfiguration)),
    [_stretchConfiguration]: dart.fieldType(dart.legacy(sliver_persistent_header.OverScrollHeaderStretchConfiguration))
  }));
  app_bar._AppBarTitleBox = class _AppBarTitleBox extends framework.SingleChildRenderObjectWidget {
    createRenderObject(context) {
      return new app_bar._RenderAppBarTitleBox.new({textDirection: basic.Directionality.of(context)});
    }
    updateRenderObject(context, renderObject) {
      _RenderAppBarTitleBoxL().as(renderObject);
      renderObject.textDirection = basic.Directionality.of(context);
    }
  };
  (app_bar._AppBarTitleBox.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    if (!(child != null)) dart.assertFailed(null, L117, 1459, 71, "child != null");
    app_bar._AppBarTitleBox.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = app_bar._AppBarTitleBox.prototype;
  dart.addTypeTests(app_bar._AppBarTitleBox);
  dart.addTypeCaches(app_bar._AppBarTitleBox);
  dart.setMethodSignature(app_bar._AppBarTitleBox, () => ({
    __proto__: dart.getMethods(app_bar._AppBarTitleBox.__proto__),
    createRenderObject: dart.fnType(dart.legacy(app_bar._RenderAppBarTitleBox), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(app_bar._AppBarTitleBox, L116);
  app_bar._RenderAppBarTitleBox = class _RenderAppBarTitleBox extends shifted_box.RenderAligningShiftedBox {
    performLayout() {
      let constraints = this.constraints;
      let innerConstraints = constraints.copyWith({maxHeight: 1 / 0});
      this.child.layout(innerConstraints, {parentUsesSize: true});
      this.size = constraints.constrain(this.child.size);
      this.alignChild();
    }
  };
  (app_bar._RenderAppBarTitleBox.new = function(opts) {
    let child = opts && 'child' in opts ? opts.child : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    app_bar._RenderAppBarTitleBox.__proto__.new.call(this, {child: child, alignment: alignment.Alignment.center, textDirection: textDirection});
    ;
  }).prototype = app_bar._RenderAppBarTitleBox.prototype;
  dart.addTypeTests(app_bar._RenderAppBarTitleBox);
  dart.addTypeCaches(app_bar._RenderAppBarTitleBox);
  dart.setLibraryUri(app_bar._RenderAppBarTitleBox, L116);
  dart.defineLazy(app_bar, {
    /*app_bar._kLeadingWidth*/get _kLeadingWidth() {
      return 56;
    },
    /*app_bar._kMaxTitleTextScaleFactor*/get _kMaxTitleTextScaleFactor() {
      return 1.34;
    }
  }, true);
  dart.trackLibraries("packages/flutter/src/material/icon_button.dart", {
    "package:flutter/src/material/icon_button.dart": icon_button,
    "package:flutter/src/material/back_button.dart": back_button,
    "package:flutter/src/material/time.dart": time,
    "package:flutter/src/material/snack_bar.dart": snack_bar,
    "package:flutter/src/material/floating_action_button_location.dart": floating_action_button_location,
    "package:flutter/src/material/tooltip.dart": tooltip,
    "package:flutter/src/material/floating_action_button.dart": floating_action_button,
    "package:flutter/src/material/flexible_space_bar.dart": flexible_space_bar,
    "package:flutter/src/material/list_tile.dart": list_tile,
    "package:flutter/src/material/drawer.dart": drawer,
    "package:flutter/src/material/divider.dart": divider,
    "package:flutter/src/material/dialog.dart": dialog,
    "package:flutter/src/material/raised_button.dart": raised_button,
    "package:flutter/src/material/outline_button.dart": outline_button,
    "package:flutter/src/material/material_button.dart": material_button,
    "package:flutter/src/material/button.dart": button,
    "package:flutter/src/material/flat_button.dart": flat_button,
    "package:flutter/src/material/tooltip_theme.dart": tooltip_theme,
    "package:flutter/src/material/toggle_buttons_theme.dart": toggle_buttons_theme,
    "package:flutter/src/material/time_picker_theme.dart": time_picker_theme,
    "package:flutter/src/material/text_button_theme.dart": text_button_theme,
    "package:flutter/src/material/tabs.dart": tabs$,
    "package:flutter/src/material/tab_bar_theme.dart": tab_bar_theme,
    "package:flutter/src/material/snack_bar_theme.dart": snack_bar_theme,
    "package:flutter/src/material/slider_theme.dart": slider_theme,
    "package:flutter/src/material/popup_menu_theme.dart": popup_menu_theme,
    "package:flutter/src/material/page_transitions_theme.dart": page_transitions_theme,
    "package:flutter/src/material/outlined_button_theme.dart": outlined_button_theme,
    "package:flutter/src/material/navigation_rail.dart": navigation_rail,
    "package:flutter/src/material/navigation_rail_theme.dart": navigation_rail_theme,
    "package:flutter/src/material/input_decorator.dart": input_decorator,
    "package:flutter/src/material/ink_splash.dart": ink_splash,
    "package:flutter/src/material/button_style.dart": button_style,
    "package:flutter/src/material/elevated_button_theme.dart": elevated_button_theme,
    "package:flutter/src/material/divider_theme.dart": divider_theme,
    "package:flutter/src/material/dialog_theme.dart": dialog_theme,
    "package:flutter/src/material/chip_theme.dart": chip_theme,
    "package:flutter/src/material/card_theme.dart": card_theme,
    "package:flutter/src/material/ink_highlight.dart": ink_highlight,
    "package:flutter/src/material/feedback.dart": feedback,
    "package:flutter/src/material/ink_well.dart": ink_well,
    "package:flutter/src/material/bottom_navigation_bar.dart": bottom_navigation_bar,
    "package:flutter/src/material/bottom_navigation_bar_theme.dart": bottom_navigation_bar_theme,
    "package:flutter/src/material/bottom_app_bar_theme.dart": bottom_app_bar_theme,
    "package:flutter/src/material/banner_theme.dart": banner_theme,
    "package:flutter/src/material/theme_data.dart": theme_data,
    "package:flutter/src/material/color_scheme.dart": color_scheme,
    "package:flutter/src/material/button_theme.dart": button_theme,
    "package:flutter/src/material/button_bar_theme.dart": button_bar_theme,
    "package:flutter/src/material/button_bar.dart": button_bar,
    "package:flutter/src/material/bottom_sheet.dart": bottom_sheet,
    "package:flutter/src/material/scaffold.dart": scaffold$,
    "package:flutter/src/material/elevation_overlay.dart": elevation_overlay,
    "package:flutter/src/material/material.dart": material,
    "package:flutter/src/material/debug.dart": debug$0,
    "package:flutter/src/material/reorderable_list.dart": reorderable_list,
    "package:flutter/src/material/material_localizations.dart": material_localizations,
    "package:flutter/src/material/theme.dart": theme$,
    "package:flutter/src/material/app_bar_theme.dart": app_bar_theme,
    "package:flutter/src/material/app_bar.dart": app_bar
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["icon_button.dart","back_button.dart","time.dart","snack_bar.dart","floating_action_button_location.dart","tooltip.dart","floating_action_button.dart","flexible_space_bar.dart","list_tile.dart","drawer.dart","divider.dart","dialog.dart","material_button.dart","raised_button.dart","outline_button.dart","button.dart","flat_button.dart","tooltip_theme.dart","toggle_buttons_theme.dart","time_picker_theme.dart","text_button_theme.dart","tabs.dart","tab_bar_theme.dart","snack_bar_theme.dart","slider_theme.dart","popup_menu_theme.dart","page_transitions_theme.dart","outlined_button_theme.dart","navigation_rail.dart","navigation_rail_theme.dart","input_decorator.dart","ink_well.dart","ink_splash.dart","material.dart","button_style.dart","elevated_button_theme.dart","divider_theme.dart","dialog_theme.dart","chip_theme.dart","card_theme.dart","ink_highlight.dart","feedback.dart","bottom_navigation_bar.dart","bottom_navigation_bar_theme.dart","bottom_app_bar_theme.dart","banner_theme.dart","theme_data.dart","color_scheme.dart","button_theme.dart","button_bar_theme.dart","button_bar.dart","bottom_sheet.dart","scaffold.dart","elevation_overlay.dart","debug.dart","reorderable_list.dart","material_localizations.dart","theme.dart","app_bar_theme.dart","app_bar.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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b,KAAK;;EACb;;;;;;;;;;;;;;;;;;;;;;;;;QAkHA;QACmB;QACV;QACD;QACI;QACV;QACA;QACA;QACA;QACA;QACA;QACA;QACC;QACD;QACA;QACK;QACQ;QACL;QACF;QACP;QACK;QACL;QACiB;QACL;QACA;;UACP,AAAmB,AAAQ,kBAAT,IAAI,QAA2B,aAAnB,kBAAkB,KAAI;UACpD,AAAa,YAAD,IAAI;UAChB,AAAU,SAAD,IAAI;UACb,AAAK,IAAD,IAAI;UACR,AAAM,KAAD,IAAI;AAChB,yEACO,GAAG,aACG,SAAS,eACP,WAAW,eACX,WAAW,aACb,SAAS,aACT,SAAS,qBACD,iBAAiB,SAC7B,KAAK,cACA,UAAU,cACV,UAAU,kBACN,cAAc,eACjB,WAAW,sBACJ,kBAAkB,uBACjB,mBAAmB,0BAChB,sBAAsB,cAClC,UAAU,WACb,OAAO,iBACD,aAAa,SACrB,KAAK,gBACE,YAAY,aACf,SAAS,aACT,SAAS,yBACG,qBAAqB,SACrC,iCACsB,iCACT,uBAChB,IAAI,mBAEJ,KAAK;;EAGV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAoCa;;;;;;IACA;;;;;;IACD;;;;;;IACD;;;;;;IACK;;;;;;IACV;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACC;;;;;;IACI;;;;;;IACL;;;;;;IACA;;;;;;IACa;;;;;;IACL;;;;;;IACF;;;;;;IACP;;;;;;IACK;;;;;;IACL;;;;;;IACE;;;;;;IACe;;;;;;;AAER,YAAA,AAAkB,mBAAL,QAAQ,oBAAe;IAAI;;AAGvB;IAAqB;;;QA3DpD;QACW;QACV;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACU;QACV;QACA;QACU;QACV;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;IAvBU;IACV;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACU;IACV;IACA;IACU;IACV;IACA;IACA;IACA;IACA;IACA;IACA;IACA;UACK,AAA2B,kBAAT,IAA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MAA+C,SAAzC,kCAAsB;;;AAExD,YAAO,AAA4C,+BAAzB,AAAY,WAAD,QAAM,SAAM;IACnD;;;QA5jCO;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QAKA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;IA9CA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAKA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;UACK,AAAQ,OAAD,IAAI;SACX,EAAE,MAAM,IAAI,QAAQ,UAAU,IAAI,yBAAO;SACzC,EAAE,MAAM,IAAI,QAAQ,UAAU,IAAI,yBAAO;;EAAyD;;QAQ7F;QAKV;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;IAbU;IAKV;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;UACK,AAAQ,OAAD,IAAI;SACX,aAAG,sBAAsB,KAAI,AAAU,qBAAqB,IAAwB,iEACpF;IACF,eAAE;IACG,mBAAE;IACD,qBAAE;IACF,qBAAE;IACD,sBAAE;IACC,yBAAE;IACJ,sBAAE;IACL,oBAAE;IACD,qBAAE;IACC,wBAAE;IACR,kBAAE;IACK,yBAAa;IAChB,sBAAE;IACH,qBAAE;IACN,iBAAE;IACE,oBAAE;IACD,qBAAE;IACQ,+BAAE;IACjB,iBAAE;IACE,qBAAE;IACF,oBAAE;IACD,qBAAE;IACQ,+BAAE;IAChB,kBAAE;IACE,qBAAE;IACD,sBAAE;IACH,qBAAE;IACA,uBAAE;IACG,4BAAE;IACN,wBAAE;IACH,uBAAE;IACI,6BAAE;IACH,6BAAE;;EAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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,KAAK,0DAA6C,uBAAuB,yCAAmC,AAAY,WAAD,6BAA6C;AACO,MAArL,AAAW,UAAD,KAAK,0DAA6C,uBAAuB,yCAAmC,AAAY,WAAD,6BAA6C;IAChL;;;QA9nCiB;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;IArEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;UACL,AAAc,aAAD,IAAI;UACjB,AAAa,YAAD,IAAI;UAChB,AAAuB,sBAAD,IAAI;UAC1B,AAAkB,iBAAD,IAAI;UACrB,AAAiB,gBAAD,IAAI;UACpB,AAAY,WAAD,IAAI;UACf,AAAsB,qBAAD,IAAI;UACzB,AAAY,WAAD,IAAI;UACf,AAAY,WAAD,IAAI;UACf,AAAwB,uBAAD,IAAI;UAC3B,AAAkB,iBAAD,IAAI;UACrB,AAAU,SAAD,IAAI;UACb,AAAa,YAAD,IAAI;UAChB,AAAW,UAAD,IAAI;UACd,AAAW,UAAD,IAAI;UACd,AAAe,cAAD,IAAI;UAClB,AAAY,WAAD,IAAI;UACf,AAAc,aAAD,IAA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","file":"../../../../../../packages/flutter/src/material/icon_button.dart.lib.js"}');
  // Exports:
  return {
    src__material__icon_button: icon_button,
    src__material__back_button: back_button,
    src__material__time: time,
    src__material__snack_bar: snack_bar,
    src__material__floating_action_button_location: floating_action_button_location,
    src__material__tooltip: tooltip,
    src__material__floating_action_button: floating_action_button,
    src__material__flexible_space_bar: flexible_space_bar,
    src__material__list_tile: list_tile,
    src__material__drawer: drawer,
    src__material__divider: divider,
    src__material__dialog: dialog,
    src__material__raised_button: raised_button,
    src__material__outline_button: outline_button,
    src__material__material_button: material_button,
    src__material__button: button,
    src__material__flat_button: flat_button,
    src__material__tooltip_theme: tooltip_theme,
    src__material__toggle_buttons_theme: toggle_buttons_theme,
    src__material__time_picker_theme: time_picker_theme,
    src__material__text_button_theme: text_button_theme,
    src__material__tabs: tabs$,
    src__material__tab_bar_theme: tab_bar_theme,
    src__material__snack_bar_theme: snack_bar_theme,
    src__material__slider_theme: slider_theme,
    src__material__popup_menu_theme: popup_menu_theme,
    src__material__page_transitions_theme: page_transitions_theme,
    src__material__outlined_button_theme: outlined_button_theme,
    src__material__navigation_rail: navigation_rail,
    src__material__navigation_rail_theme: navigation_rail_theme,
    src__material__input_decorator: input_decorator,
    src__material__ink_splash: ink_splash,
    src__material__button_style: button_style,
    src__material__elevated_button_theme: elevated_button_theme,
    src__material__divider_theme: divider_theme,
    src__material__dialog_theme: dialog_theme,
    src__material__chip_theme: chip_theme,
    src__material__card_theme: card_theme,
    src__material__ink_highlight: ink_highlight,
    src__material__feedback: feedback,
    src__material__ink_well: ink_well,
    src__material__bottom_navigation_bar: bottom_navigation_bar,
    src__material__bottom_navigation_bar_theme: bottom_navigation_bar_theme,
    src__material__bottom_app_bar_theme: bottom_app_bar_theme,
    src__material__banner_theme: banner_theme,
    src__material__theme_data: theme_data,
    src__material__color_scheme: color_scheme,
    src__material__button_theme: button_theme,
    src__material__button_bar_theme: button_bar_theme,
    src__material__button_bar: button_bar,
    src__material__bottom_sheet: bottom_sheet,
    src__material__scaffold: scaffold$,
    src__material__elevation_overlay: elevation_overlay,
    src__material__material: material,
    src__material__debug: debug$0,
    src__material__reorderable_list: reorderable_list,
    src__material__material_localizations: material_localizations,
    src__material__theme: theme$,
    src__material__app_bar_theme: app_bar_theme,
    src__material__app_bar: app_bar
  };
}));

//# sourceMappingURL=icon_button.dart.lib.js.map
