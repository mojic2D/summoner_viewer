define(['dart_sdk', 'packages/flutter/src/widgets/widget_span.dart', 'packages/flutter/src/cupertino/route.dart', 'packages/flutter/src/foundation/debug.dart', 'packages/flutter/src/material/icon_button.dart', 'packages/flutter/src/animation/listener_helpers.dart'], (function load__packages__flutter__src__material__page_dart(dart_sdk, packages__flutter__src__widgets__widget_span$46dart, packages__flutter__src__cupertino__route$46dart, packages__flutter__src__foundation__debug$46dart, packages__flutter__src__material__icon_button$46dart, packages__flutter__src__animation__listener_helpers$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const ui = dart_sdk.ui;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const pages = packages__flutter__src__widgets__widget_span$46dart.src__widgets__pages;
  const basic = packages__flutter__src__widgets__widget_span$46dart.src__widgets__basic;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const navigator = packages__flutter__src__widgets__widget_span$46dart.src__widgets__navigator;
  const route = packages__flutter__src__cupertino__route$46dart.src__cupertino__route;
  const assertions = packages__flutter__src__foundation__debug$46dart.src__foundation__assertions;
  const theme$ = packages__flutter__src__material__icon_button$46dart.src__material__theme;
  const animation = packages__flutter__src__animation__listener_helpers$46dart.src__animation__animation;
  var page = Object.create(dart.library);
  var MaterialRouteTransitionMixinL = () => (MaterialRouteTransitionMixinL = dart.constFn(dart.legacy(page.MaterialRouteTransitionMixin)))();
  var CupertinoRouteTransitionMixinL = () => (CupertinoRouteTransitionMixinL = dart.constFn(dart.legacy(route.CupertinoRouteTransitionMixin)))();
  var boolL = () => (boolL = dart.constFn(dart.legacy(core.bool)))();
  var VoidToboolL = () => (VoidToboolL = dart.constFn(dart.fnType(boolL(), [])))();
  var _LocationL = () => (_LocationL = dart.constFn(dart.legacy(widget_inspector._Location)))();
  const CT = Object.create(null);
  var L1 = "package:flutter/src/material/page.dart";
  var L0 = "file:///C:/flutter/packages/flutter/lib/src/material/page.dart";
  dart.defineLazy(CT, {
    get C0() {
      return C0 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 300000
      });
    },
    get C3() {
      return C3 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scopesRoute",
        [_Location_column]: 7,
        [_Location_line]: 115,
        [_Location_file]: null
      });
    },
    get C4() {
      return C4 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "explicitChildNodes",
        [_Location_column]: 7,
        [_Location_line]: 116,
        [_Location_file]: null
      });
    },
    get C5() {
      return C5 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 117,
        [_Location_file]: null
      });
    },
    get C2() {
      return C2 = dart.constList([C3 || CT.C3, C4 || CT.C4, C5 || CT.C5], _LocationL());
    },
    get C1() {
      return C1 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2 || CT.C2,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 114,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/page.dart"
      });
    }
  }, false);
  var Duration__duration = dart.privateName(core, "Duration._duration");
  var C0;
  var _Location_parameterLocations = dart.privateName(widget_inspector, "_Location.parameterLocations");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  var C3;
  var C4;
  var C5;
  var C2;
  var C1;
  const _is_MaterialRouteTransitionMixin_default = Symbol('_is_MaterialRouteTransitionMixin_default');
  page.MaterialRouteTransitionMixin$ = dart.generic(T => {
    var TL = () => (TL = dart.constFn(dart.legacy(T)))();
    class MaterialRouteTransitionMixin extends pages.PageRoute$(dart.legacy(T)) {}
    MaterialRouteTransitionMixin[dart.mixinOn] = PageRoute => class MaterialRouteTransitionMixin extends PageRoute {
      get transitionDuration() {
        return C0 || CT.C0;
      }
      get barrierColor() {
        return null;
      }
      get barrierLabel() {
        return null;
      }
      canTransitionTo(nextRoute) {
        return MaterialRouteTransitionMixinL().is(nextRoute) && !dart.test(nextRoute.fullscreenDialog) || CupertinoRouteTransitionMixinL().is(nextRoute) && !dart.test(nextRoute.fullscreenDialog);
      }
      buildPage(context, animation, secondaryAnimation) {
        let t0;
        let result = (t0 = context, this.builder(t0));
        if (!dart.test(dart.fn(() => {
          if (result == null) {
            dart.throw(assertions.FlutterError.new("The builder for route \"" + dart.str(this.settings.name) + "\" returned null.\n" + "Route builders must never return null."));
          }
          return true;
        }, VoidToboolL())())) dart.assertFailed(null, L0, 105, 12, "() {\r\n      if (result == null) {\r\n        throw FlutterError(\r\n          'The builder for route \"${settings.name}\" returned null.\\n'\r\n          'Route builders must never return null.'\r\n        );\r\n      }\r\n      return true;\r\n    }()");
        return new basic.Semantics.new({scopesRoute: true, explicitChildNodes: true, child: result, $creationLocationd_0dea112b090073317d4: C1 || CT.C1});
      }
      buildTransitions(context, animation, secondaryAnimation, child) {
        let theme = theme$.Theme.of(context).pageTransitionsTheme;
        return theme.buildTransitions(TL(), this, context, animation, secondaryAnimation, child);
      }
    };
    dart.addTypeTests(MaterialRouteTransitionMixin);
    MaterialRouteTransitionMixin.prototype[_is_MaterialRouteTransitionMixin_default] = true;
    dart.addTypeCaches(MaterialRouteTransitionMixin);
    MaterialRouteTransitionMixin[dart.implements] = () => [pages.PageRoute$(dart.legacy(T))];
    dart.setMethodSignature(MaterialRouteTransitionMixin, () => ({
      __proto__: dart.getMethods(MaterialRouteTransitionMixin.__proto__),
      buildPage: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext), dart.legacy(animation.Animation$(dart.legacy(core.double))), dart.legacy(animation.Animation$(dart.legacy(core.double)))])
    }));
    dart.setGetterSignature(MaterialRouteTransitionMixin, () => ({
      __proto__: dart.getGetters(MaterialRouteTransitionMixin.__proto__),
      transitionDuration: dart.legacy(core.Duration),
      barrierColor: dart.legacy(ui.Color),
      barrierLabel: dart.legacy(core.String)
    }));
    dart.setLibraryUri(MaterialRouteTransitionMixin, L1);
    return MaterialRouteTransitionMixin;
  });
  page.MaterialRouteTransitionMixin = page.MaterialRouteTransitionMixin$();
  dart.addTypeTests(page.MaterialRouteTransitionMixin, _is_MaterialRouteTransitionMixin_default);
  const _is_MaterialPageRoute_default = Symbol('_is_MaterialPageRoute_default');
  var builder$ = dart.privateName(page, "MaterialPageRoute.builder");
  var maintainState$ = dart.privateName(page, "MaterialPageRoute.maintainState");
  page.MaterialPageRoute$ = dart.generic(T => {
    const PageRoute_MaterialRouteTransitionMixin$36 = class PageRoute_MaterialRouteTransitionMixin extends pages.PageRoute$(dart.legacy(T)) {};
    (PageRoute_MaterialRouteTransitionMixin$36.new = function(opts) {
      PageRoute_MaterialRouteTransitionMixin$36.__proto__.new.call(this, opts);
    }).prototype = PageRoute_MaterialRouteTransitionMixin$36.prototype;
    dart.applyMixin(PageRoute_MaterialRouteTransitionMixin$36, page.MaterialRouteTransitionMixin$(dart.legacy(T)));
    class MaterialPageRoute extends PageRoute_MaterialRouteTransitionMixin$36 {
      get builder() {
        return this[builder$];
      }
      set builder(value) {
        super.builder = value;
      }
      get maintainState() {
        return this[maintainState$];
      }
      set maintainState(value) {
        super.maintainState = value;
      }
      get debugLabel() {
        return dart.str(super.debugLabel) + "(" + dart.str(this.settings.name) + ")";
      }
    }
    (MaterialPageRoute.new = function(opts) {
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let settings = opts && 'settings' in opts ? opts.settings : null;
      let maintainState = opts && 'maintainState' in opts ? opts.maintainState : true;
      let fullscreenDialog = opts && 'fullscreenDialog' in opts ? opts.fullscreenDialog : false;
      this[builder$] = builder;
      this[maintainState$] = maintainState;
      if (!(builder != null)) dart.assertFailed(null, L0, 45, 15, "builder != null");
      if (!(maintainState != null)) dart.assertFailed(null, L0, 46, 15, "maintainState != null");
      if (!(fullscreenDialog != null)) dart.assertFailed(null, L0, 47, 15, "fullscreenDialog != null");
      if (!dart.test(this.opaque)) dart.assertFailed(null, L0, 48, 15, "opaque");
      MaterialPageRoute.__proto__.new.call(this, {settings: settings, fullscreenDialog: fullscreenDialog});
      ;
    }).prototype = MaterialPageRoute.prototype;
    dart.addTypeTests(MaterialPageRoute);
    MaterialPageRoute.prototype[_is_MaterialPageRoute_default] = true;
    dart.addTypeCaches(MaterialPageRoute);
    dart.setLibraryUri(MaterialPageRoute, L1);
    dart.setFieldSignature(MaterialPageRoute, () => ({
      __proto__: dart.getFields(MaterialPageRoute.__proto__),
      builder: dart.finalFieldType(dart.legacy(dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)]))),
      maintainState: dart.finalFieldType(dart.legacy(core.bool))
    }));
    return MaterialPageRoute;
  });
  page.MaterialPageRoute = page.MaterialPageRoute$();
  dart.addTypeTests(page.MaterialPageRoute, _is_MaterialPageRoute_default);
  const _is_MaterialPage_default = Symbol('_is_MaterialPage_default');
  var builder$0 = dart.privateName(page, "MaterialPage.builder");
  var maintainState$0 = dart.privateName(page, "MaterialPage.maintainState");
  var fullscreenDialog$ = dart.privateName(page, "MaterialPage.fullscreenDialog");
  page.MaterialPage$ = dart.generic(T => {
    var TL = () => (TL = dart.constFn(dart.legacy(T)))();
    var _PageBasedMaterialPageRouteOfTL = () => (_PageBasedMaterialPageRouteOfTL = dart.constFn(page._PageBasedMaterialPageRoute$(TL())))();
    class MaterialPage extends navigator.Page$(dart.legacy(T)) {
      get builder() {
        return this[builder$0];
      }
      set builder(value) {
        super.builder = value;
      }
      get maintainState() {
        return this[maintainState$0];
      }
      set maintainState(value) {
        super.maintainState = value;
      }
      get fullscreenDialog() {
        return this[fullscreenDialog$];
      }
      set fullscreenDialog(value) {
        super.fullscreenDialog = value;
      }
      createRoute(context) {
        return new (_PageBasedMaterialPageRouteOfTL()).new({page: this});
      }
    }
    (MaterialPage.new = function(opts) {
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let maintainState = opts && 'maintainState' in opts ? opts.maintainState : true;
      let fullscreenDialog = opts && 'fullscreenDialog' in opts ? opts.fullscreenDialog : false;
      let key = opts && 'key' in opts ? opts.key : null;
      let name = opts && 'name' in opts ? opts.name : null;
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      this[builder$0] = builder;
      this[maintainState$0] = maintainState;
      this[fullscreenDialog$] = fullscreenDialog;
      if (!(builder != null)) dart.assertFailed(null, L0, 157, 15, "builder != null");
      if (!(maintainState != null)) dart.assertFailed(null, L0, 158, 15, "maintainState != null");
      if (!(fullscreenDialog != null)) dart.assertFailed(null, L0, 159, 15, "fullscreenDialog != null");
      MaterialPage.__proto__.new.call(this, {key: key, name: name, arguments: $arguments});
      ;
    }).prototype = MaterialPage.prototype;
    dart.addTypeTests(MaterialPage);
    MaterialPage.prototype[_is_MaterialPage_default] = true;
    dart.addTypeCaches(MaterialPage);
    dart.setMethodSignature(MaterialPage, () => ({
      __proto__: dart.getMethods(MaterialPage.__proto__),
      createRoute: dart.fnType(dart.legacy(navigator.Route$(dart.legacy(T))), [dart.legacy(framework.BuildContext)])
    }));
    dart.setLibraryUri(MaterialPage, L1);
    dart.setFieldSignature(MaterialPage, () => ({
      __proto__: dart.getFields(MaterialPage.__proto__),
      builder: dart.finalFieldType(dart.legacy(dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)]))),
      maintainState: dart.finalFieldType(dart.legacy(core.bool)),
      fullscreenDialog: dart.finalFieldType(dart.legacy(core.bool))
    }));
    return MaterialPage;
  });
  page.MaterialPage = page.MaterialPage$();
  dart.addTypeTests(page.MaterialPage, _is_MaterialPage_default);
  var _page = dart.privateName(page, "_page");
  const _is__PageBasedMaterialPageRoute_default = Symbol('_is__PageBasedMaterialPageRoute_default');
  page._PageBasedMaterialPageRoute$ = dart.generic(T => {
    var TL = () => (TL = dart.constFn(dart.legacy(T)))();
    var MaterialPageOfTL = () => (MaterialPageOfTL = dart.constFn(page.MaterialPage$(TL())))();
    var MaterialPageLOfTL = () => (MaterialPageLOfTL = dart.constFn(dart.legacy(MaterialPageOfTL())))();
    const PageRoute_MaterialRouteTransitionMixin$36 = class PageRoute_MaterialRouteTransitionMixin extends pages.PageRoute$(dart.legacy(T)) {};
    (PageRoute_MaterialRouteTransitionMixin$36.new = function(opts) {
      PageRoute_MaterialRouteTransitionMixin$36.__proto__.new.call(this, opts);
    }).prototype = PageRoute_MaterialRouteTransitionMixin$36.prototype;
    dart.applyMixin(PageRoute_MaterialRouteTransitionMixin$36, page.MaterialRouteTransitionMixin$(dart.legacy(T)));
    class _PageBasedMaterialPageRoute extends PageRoute_MaterialRouteTransitionMixin$36 {
      get [_page]() {
        return MaterialPageLOfTL().as(this.settings);
      }
      get builder() {
        return this[_page].builder;
      }
      get maintainState() {
        return this[_page].maintainState;
      }
      get fullscreenDialog() {
        return this[_page].fullscreenDialog;
      }
      get debugLabel() {
        return dart.str(super.debugLabel) + "(" + dart.str(this[_page].name) + ")";
      }
    }
    (_PageBasedMaterialPageRoute.new = function(opts) {
      let page = opts && 'page' in opts ? opts.page : null;
      if (!(page != null)) dart.assertFailed(null, L0, 184, 15, "page != null");
      if (!dart.test(this.opaque)) dart.assertFailed(null, L0, 185, 15, "opaque");
      _PageBasedMaterialPageRoute.__proto__.new.call(this, {settings: page});
      ;
    }).prototype = _PageBasedMaterialPageRoute.prototype;
    dart.addTypeTests(_PageBasedMaterialPageRoute);
    _PageBasedMaterialPageRoute.prototype[_is__PageBasedMaterialPageRoute_default] = true;
    dart.addTypeCaches(_PageBasedMaterialPageRoute);
    dart.setGetterSignature(_PageBasedMaterialPageRoute, () => ({
      __proto__: dart.getGetters(_PageBasedMaterialPageRoute.__proto__),
      [_page]: dart.legacy(page.MaterialPage$(dart.legacy(T))),
      builder: dart.legacy(dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])),
      maintainState: dart.legacy(core.bool),
      fullscreenDialog: dart.legacy(core.bool)
    }));
    dart.setLibraryUri(_PageBasedMaterialPageRoute, L1);
    return _PageBasedMaterialPageRoute;
  });
  page._PageBasedMaterialPageRoute = page._PageBasedMaterialPageRoute$();
  dart.addTypeTests(page._PageBasedMaterialPageRoute, _is__PageBasedMaterialPageRoute_default);
  dart.trackLibraries("packages/flutter/src/material/page.dart", {
    "package:flutter/src/material/page.dart": page
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["page.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkFqC;MAAiC;;AAG1C;MAAI;;AAGH;MAAI;sBAGe;AAE5C,cAAkB,AAChB,oCADM,SAAS,gBAAqC,AAAU,SAAD,sBAC/C,oCAAV,SAAS,gBAAsC,AAAU,SAAD;MAChE;gBAIe,SACK,WACA;;AAEL,2BAAiB,OAAO,EAAf,AAAO;AAC7B,uBAAO,AAQN;AAPC,cAAI,AAAO,MAAD,IAAI;AAIX,YAHD,WAAM,4BAAY,AAChB,sCAA0B,AAAS,sBAAK,wBACxC;;AAGJ,gBAAO;;AAET,cAAO,uCACQ,0BACO,aACb,MAAM;MAEjB;uBAGqC,SAA2B,WAA6B,oBAA2B;AAC3F,oBAAc,AAAY,gBAAT,OAAO;AACnD,cAAO,AAAM,MAAD,wBAAqB,MAAM,OAAO,EAAE,SAAS,EAAE,kBAAkB,EAAE,KAAK;MACtF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAzEoB;;;;;;MAGT;;;;;;;AAGc,cAAuC,UAA9B,oBAAW,eAAG,AAAS,sBAAK;MAAE;;;UAjB/C;UACD;UACT;UACA;MAHU;MAEV;YAEK,AAAQ,OAAD,IAAI;YACX,AAAc,aAAD,IAAI;YACjB,AAAiB,gBAAD,IAAI;qBACpB;AACP,4DAAgB,QAAQ,oBAAoB,gBAAgB;;IAAC;;;;;;;;;;;;;;;;;;;;;;MAkH9C;;;;;;MAGT;;;;;;MAGA;;;;;;kBAGuB;AAChC,cAAO,oDAAqC;MAC9C;;;UAvBiB;UACV;UACA;UACI;UACF;UACA;MALQ;MACV;MACA;YAIK,AAAQ,OAAD,IAAI;YACX,AAAc,aAAD,IAAI;YACjB,AAAiB,gBAAD,IAAI;AAC3B,kDAAW,GAAG,QAAQ,IAAI,aAAa;;IAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BzB,cAAS,wBAAT;MAA2B;;AAG3B,cAAA,AAAM;MAAO;;AAGhB,cAAA,AAAM;MAAa;;AAGhB,cAAA,AAAM;MAAgB;;AAG1B,cAAoC,UAA3B,oBAAW,eAAG,AAAM,oBAAK;MAAE;;;UAjBjC;YAChB,AAAK,IAAD,IAAI;qBACR;AACP,sEAAgB,IAAI;;IAAC","file":"../../../../../../packages/flutter/src/material/page.dart.lib.js"}');
  // Exports:
  return {
    src__material__page: page
  };
}));

//# sourceMappingURL=page.dart.lib.js.map
