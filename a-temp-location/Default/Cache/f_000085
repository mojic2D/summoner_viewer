define(['dart_sdk', 'packages/flutter/src/widgets/widget_span.dart', 'packages/flutter/src/material/icon_button.dart', 'packages/flutter/src/painting/edge_insets.dart', 'packages/flutter/src/painting/box_border.dart', 'packages/flutter/src/material/colors.dart', 'packages/flutter/src/widgets/animated_size.dart', 'packages/flutter/src/painting/border_radius.dart', 'packages/flutter/src/widgets/icon.dart', 'packages/flutter/src/material/icons.dart', 'packages/flutter/src/rendering/layer.dart', 'packages/flutter/src/rendering/proxy_box.dart', 'packages/flutter/src/rendering/shifted_box.dart', 'packages/flutter/src/rendering/custom_paint.dart', 'packages/flutter/src/rendering/editable.dart', 'packages/flutter/src/services/text_input.dart'], (function load__packages__flutter__src__material__text_selection_dart(dart_sdk, packages__flutter__src__widgets__widget_span$46dart, packages__flutter__src__material__icon_button$46dart, packages__flutter__src__painting__edge_insets$46dart, packages__flutter__src__painting__box_border$46dart, packages__flutter__src__material__colors$46dart, packages__flutter__src__widgets__animated_size$46dart, packages__flutter__src__painting__border_radius$46dart, packages__flutter__src__widgets__icon$46dart, packages__flutter__src__material__icons$46dart, packages__flutter__src__rendering__layer$46dart, packages__flutter__src__rendering__proxy_box$46dart, packages__flutter__src__rendering__shifted_box$46dart, packages__flutter__src__rendering__custom_paint$46dart, packages__flutter__src__rendering__editable$46dart, packages__flutter__src__services__text_input$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const _interceptors = dart_sdk._interceptors;
  const ui = dart_sdk.ui;
  const math = dart_sdk.math;
  const async = dart_sdk.async;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const text_selection = packages__flutter__src__widgets__widget_span$46dart.src__widgets__text_selection;
  const text = packages__flutter__src__widgets__widget_span$46dart.src__widgets__text;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const basic = packages__flutter__src__widgets__widget_span$46dart.src__widgets__basic;
  const ticker_provider = packages__flutter__src__widgets__widget_span$46dart.src__widgets__ticker_provider;
  const debug = packages__flutter__src__widgets__widget_span$46dart.src__widgets__debug;
  const media_query = packages__flutter__src__widgets__widget_span$46dart.src__widgets__media_query;
  const button_theme = packages__flutter__src__material__icon_button$46dart.src__material__button_theme;
  const flat_button = packages__flutter__src__material__icon_button$46dart.src__material__flat_button;
  const material_localizations = packages__flutter__src__material__icon_button$46dart.src__material__material_localizations;
  const material = packages__flutter__src__material__icon_button$46dart.src__material__material;
  const icon_button = packages__flutter__src__material__icon_button$46dart.src__material__icon_button;
  const debug$ = packages__flutter__src__material__icon_button$46dart.src__material__debug;
  const theme = packages__flutter__src__material__icon_button$46dart.src__material__theme;
  const edge_insets = packages__flutter__src__painting__edge_insets$46dart.src__painting__edge_insets;
  const box_border = packages__flutter__src__painting__box_border$46dart.src__painting__box_border;
  const colors = packages__flutter__src__material__colors$46dart.src__material__colors;
  const animated_size = packages__flutter__src__widgets__animated_size$46dart.src__widgets__animated_size;
  const border_radius = packages__flutter__src__painting__border_radius$46dart.src__painting__border_radius;
  const icon = packages__flutter__src__widgets__icon$46dart.src__widgets__icon;
  const icons = packages__flutter__src__material__icons$46dart.src__material__icons;
  const box = packages__flutter__src__rendering__layer$46dart.src__rendering__box;
  const object = packages__flutter__src__rendering__layer$46dart.src__rendering__object;
  const proxy_box = packages__flutter__src__rendering__proxy_box$46dart.src__rendering__proxy_box;
  const shifted_box = packages__flutter__src__rendering__shifted_box$46dart.src__rendering__shifted_box;
  const custom_paint = packages__flutter__src__rendering__custom_paint$46dart.src__rendering__custom_paint;
  const editable = packages__flutter__src__rendering__editable$46dart.src__rendering__editable;
  const text_input = packages__flutter__src__services__text_input$46dart.src__services__text_input;
  var text_selection$ = Object.create(dart.library);
  var $_equals = dartx._equals;
  var $add = dartx.add;
  var $isEmpty = dartx.isEmpty;
  var $length = dartx.length;
  var $_get = dartx._get;
  var $where = dartx.where;
  var $forEach = dartx.forEach;
  var $isNotEmpty = dartx.isNotEmpty;
  var _LocationL = () => (_LocationL = dart.constFn(dart.legacy(widget_inspector._Location)))();
  var VoidToNullN = () => (VoidToNullN = dart.constFn(dart.fnType(core.Null, [])))();
  var _TextSelectionToolbarL = () => (_TextSelectionToolbarL = dart.constFn(dart.legacy(text_selection$._TextSelectionToolbar)))();
  var _ItemDataL = () => (_ItemDataL = dart.constFn(dart.legacy(text_selection$._ItemData)))();
  var JSArrayOf_ItemDataL = () => (JSArrayOf_ItemDataL = dart.constFn(_interceptors.JSArray$(_ItemDataL())))();
  var WidgetL = () => (WidgetL = dart.constFn(dart.legacy(framework.Widget)))();
  var JSArrayOfWidgetL = () => (JSArrayOfWidgetL = dart.constFn(_interceptors.JSArray$(WidgetL())))();
  var _TextSelectionToolbarContainerRenderBoxL = () => (_TextSelectionToolbarContainerRenderBoxL = dart.constFn(dart.legacy(text_selection$._TextSelectionToolbarContainerRenderBox)))();
  var ToolbarItemsParentDataL = () => (ToolbarItemsParentDataL = dart.constFn(dart.legacy(text_selection.ToolbarItemsParentData)))();
  var boolL = () => (boolL = dart.constFn(dart.legacy(core.bool)))();
  var BoxHitTestResultL = () => (BoxHitTestResultL = dart.constFn(dart.legacy(box.BoxHitTestResult)))();
  var OffsetL = () => (OffsetL = dart.constFn(dart.legacy(ui.Offset)))();
  var BoxHitTestResultLAndOffsetLToboolL = () => (BoxHitTestResultLAndOffsetLToboolL = dart.constFn(dart.fnType(boolL(), [BoxHitTestResultL(), OffsetL()])))();
  var RenderBoxL = () => (RenderBoxL = dart.constFn(dart.legacy(box.RenderBox)))();
  var RenderObjectL = () => (RenderObjectL = dart.constFn(dart.legacy(object.RenderObject)))();
  var _TextSelectionToolbarItemsRenderBoxL = () => (_TextSelectionToolbarItemsRenderBoxL = dart.constFn(dart.legacy(text_selection$._TextSelectionToolbarItemsRenderBox)))();
  var ElementL = () => (ElementL = dart.constFn(dart.legacy(framework.Element)))();
  var ElementLToboolL = () => (ElementLToboolL = dart.constFn(dart.fnType(boolL(), [ElementL()])))();
  var RenderObjectLToNullN = () => (RenderObjectLToNullN = dart.constFn(dart.fnType(core.Null, [RenderObjectL()])))();
  var doubleL = () => (doubleL = dart.constFn(dart.legacy(core.double)))();
  var _TextSelectionToolbarLayoutL = () => (_TextSelectionToolbarLayoutL = dart.constFn(dart.legacy(text_selection$._TextSelectionToolbarLayout)))();
  var _TextSelectionHandlePainterL = () => (_TextSelectionHandlePainterL = dart.constFn(dart.legacy(text_selection$._TextSelectionHandlePainter)))();
  var VoidTovoid = () => (VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))();
  var FutureOfvoid = () => (FutureOfvoid = dart.constFn(async.Future$(dart.void)))();
  var FutureLOfvoid = () => (FutureLOfvoid = dart.constFn(dart.legacy(FutureOfvoid())))();
  var VoidToFutureLOfvoid = () => (VoidToFutureLOfvoid = dart.constFn(dart.fnType(FutureLOfvoid(), [])))();
  const CT = Object.create(null);
  var L1 = "file:///C:/flutter/packages/flutter/lib/src/material/text_selection.dart";
  var L0 = "package:flutter/src/material/text_selection.dart";
  dart.defineLazy(CT, {
    get C2() {
      return C2 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 30,
        [_Location_line]: 100,
        [_Location_file]: null
      });
    },
    get C1() {
      return C1 = dart.constList([C2 || CT.C2], _LocationL());
    },
    get C0() {
      return C0 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1 || CT.C1,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 100,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/text_selection.dart"
      });
    },
    get C5() {
      return C5 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPressed",
        [_Location_column]: 9,
        [_Location_line]: 92,
        [_Location_file]: null
      });
    },
    get C6() {
      return C6 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 9,
        [_Location_line]: 93,
        [_Location_file]: null
      });
    },
    get C7() {
      return C7 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shape",
        [_Location_column]: 9,
        [_Location_line]: 99,
        [_Location_file]: null
      });
    },
    get C8() {
      return C8 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 100,
        [_Location_file]: null
      });
    },
    get C4() {
      return C4 = dart.constList([C5 || CT.C5, C6 || CT.C6, C7 || CT.C7, C8 || CT.C8], _LocationL());
    },
    get C3() {
      return C3 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C4 || CT.C4,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 91,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/text_selection.dart"
      });
    },
    get C11() {
      return C11 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 7,
        [_Location_line]: 87,
        [_Location_file]: null
      });
    },
    get C12() {
      return C12 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 91,
        [_Location_file]: null
      });
    },
    get C10() {
      return C10 = dart.constList([C11 || CT.C11, C12 || CT.C12], _LocationL());
    },
    get C9() {
      return C9 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C10 || CT.C10,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 86,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/text_selection.dart"
      });
    },
    get C16() {
      return C16 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 29,
        [_Location_line]: 181,
        [_Location_file]: null
      });
    },
    get C17() {
      return C17 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 41,
        [_Location_line]: 181,
        [_Location_file]: null
      });
    },
    get C15() {
      return C15 = dart.constList([C16 || CT.C16, C17 || CT.C17], _LocationL());
    },
    get C14() {
      return C14 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C15 || CT.C15,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 181,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/text_selection.dart"
      });
    },
    get C13() {
      return C13 = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget__location]: C14 || CT.C14,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 0,
        [SizedBox_width]: 0
      });
    },
    get C21() {
      return C21 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 29,
        [_Location_line]: 199,
        [_Location_file]: null
      });
    },
    get C22() {
      return C22 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 41,
        [_Location_line]: 199,
        [_Location_file]: null
      });
    },
    get C20() {
      return C20 = dart.constList([C21 || CT.C21, C22 || CT.C22], _LocationL());
    },
    get C19() {
      return C19 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C20 || CT.C20,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 199,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/text_selection.dart"
      });
    },
    get C18() {
      return C18 = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget__location]: C19 || CT.C19,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 0,
        [SizedBox_width]: 0
      });
    },
    get C23() {
      return C23 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 140000
      });
    },
    get C25() {
      return C25 = dart.const({
        __proto__: ui.Radius.prototype,
        [Radius_y]: 7,
        [Radius_x]: 7
      });
    },
    get C24() {
      return C24 = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [BorderRadius_bottomRight]: C25 || CT.C25,
        [BorderRadius_bottomLeft]: C25 || CT.C25,
        [BorderRadius_topRight]: C25 || CT.C25,
        [BorderRadius_topLeft]: C25 || CT.C25
      });
    },
    get C28() {
      return C28 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "icon",
        [_Location_column]: 44,
        [_Location_line]: 229,
        [_Location_file]: null
      });
    },
    get C27() {
      return C27 = dart.constList([C28 || CT.C28], _LocationL());
    },
    get C26() {
      return C26 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C27 || CT.C27,
        [_Location_name]: null,
        [_Location_column]: 25,
        [_Location_line]: 229,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/text_selection.dart"
      });
    },
    get C31() {
      return C31 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "icon",
        [_Location_column]: 19,
        [_Location_line]: 229,
        [_Location_file]: null
      });
    },
    get C32() {
      return C32 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPressed",
        [_Location_column]: 19,
        [_Location_line]: 230,
        [_Location_file]: null
      });
    },
    get C33() {
      return C33 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "tooltip",
        [_Location_column]: 19,
        [_Location_line]: 235,
        [_Location_file]: null
      });
    },
    get C30() {
      return C30 = dart.constList([C31 || CT.C31, C32 || CT.C32, C33 || CT.C33], _LocationL());
    },
    get C29() {
      return C29 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C30 || CT.C30,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 225,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/text_selection.dart"
      });
    },
    get C36() {
      return C36 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "type",
        [_Location_column]: 17,
        [_Location_line]: 224,
        [_Location_file]: null
      });
    },
    get C37() {
      return C37 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 225,
        [_Location_file]: null
      });
    },
    get C35() {
      return C35 = dart.constList([C36 || CT.C36, C37 || CT.C37], _LocationL());
    },
    get C34() {
      return C34 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C35 || CT.C35,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 223,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/text_selection.dart"
      });
    },
    get C40() {
      return C40 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isAbove",
        [_Location_column]: 13,
        [_Location_line]: 218,
        [_Location_file]: null
      });
    },
    get C41() {
      return C41 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "overflowOpen",
        [_Location_column]: 13,
        [_Location_line]: 219,
        [_Location_file]: null
      });
    },
    get C42() {
      return C42 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 13,
        [_Location_line]: 220,
        [_Location_file]: null
      });
    },
    get C39() {
      return C39 = dart.constList([C40 || CT.C40, C41 || CT.C41, C42 || CT.C42], _LocationL());
    },
    get C38() {
      return C38 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C39 || CT.C39,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 217,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/text_selection.dart"
      });
    },
    get C45() {
      return C45 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "borderRadius",
        [_Location_column]: 11,
        [_Location_line]: 213,
        [_Location_file]: null
      });
    },
    get C46() {
      return C46 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipBehavior",
        [_Location_column]: 11,
        [_Location_line]: 214,
        [_Location_file]: null
      });
    },
    get C47() {
      return C47 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "elevation",
        [_Location_column]: 11,
        [_Location_line]: 215,
        [_Location_file]: null
      });
    },
    get C48() {
      return C48 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "type",
        [_Location_column]: 11,
        [_Location_line]: 216,
        [_Location_file]: null
      });
    },
    get C49() {
      return C49 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 217,
        [_Location_file]: null
      });
    },
    get C44() {
      return C44 = dart.constList([C45 || CT.C45, C46 || CT.C46, C47 || CT.C47, C48 || CT.C48, C49 || CT.C49], _LocationL());
    },
    get C43() {
      return C43 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C44 || CT.C44,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 210,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/text_selection.dart"
      });
    },
    get C52() {
      return C52 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "vsync",
        [_Location_column]: 9,
        [_Location_line]: 206,
        [_Location_file]: null
      });
    },
    get C53() {
      return C53 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "duration",
        [_Location_column]: 9,
        [_Location_line]: 209,
        [_Location_file]: null
      });
    },
    get C54() {
      return C54 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 210,
        [_Location_file]: null
      });
    },
    get C51() {
      return C51 = dart.constList([C52 || CT.C52, C53 || CT.C53, C54 || CT.C54], _LocationL());
    },
    get C50() {
      return C50 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C51 || CT.C51,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 205,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/text_selection.dart"
      });
    },
    get C57() {
      return C57 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 7,
        [_Location_line]: 203,
        [_Location_file]: null
      });
    },
    get C58() {
      return C58 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "overflowOpen",
        [_Location_column]: 7,
        [_Location_line]: 204,
        [_Location_file]: null
      });
    },
    get C59() {
      return C59 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 205,
        [_Location_file]: null
      });
    },
    get C56() {
      return C56 = dart.constList([C57 || CT.C57, C58 || CT.C58, C59 || CT.C59], _LocationL());
    },
    get C55() {
      return C55 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C56 || CT.C56,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 202,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/text_selection.dart"
      });
    },
    get C60() {
      return C60 = dart.fn(text_selection$._TextSelectionToolbarItemsElement._shouldPaint, ElementLToboolL());
    },
    get C61() {
      return C61 = dart.const({
        __proto__: ui.Size.prototype,
        [OffsetBase__dy]: 0,
        [OffsetBase__dx]: 0
      });
    },
    get C62() {
      return C62 = dart.const({
        __proto__: ui.Size.prototype,
        [OffsetBase__dy]: 22,
        [OffsetBase__dx]: 22
      });
    },
    get C65() {
      return C65 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipboardStatus",
        [_Location_column]: 13,
        [_Location_line]: 783,
        [_Location_file]: null
      });
    },
    get C66() {
      return C66 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "handleCut",
        [_Location_column]: 13,
        [_Location_line]: 784,
        [_Location_file]: null
      });
    },
    get C67() {
      return C67 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "handleCopy",
        [_Location_column]: 13,
        [_Location_line]: 785,
        [_Location_file]: null
      });
    },
    get C68() {
      return C68 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "handlePaste",
        [_Location_column]: 13,
        [_Location_line]: 786,
        [_Location_file]: null
      });
    },
    get C69() {
      return C69 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "handleSelectAll",
        [_Location_column]: 13,
        [_Location_line]: 787,
        [_Location_file]: null
      });
    },
    get C70() {
      return C70 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isAbove",
        [_Location_column]: 13,
        [_Location_line]: 788,
        [_Location_file]: null
      });
    },
    get C64() {
      return C64 = dart.constList([C65 || CT.C65, C66 || CT.C66, C67 || CT.C67, C68 || CT.C68, C69 || CT.C69, C70 || CT.C70], _LocationL());
    },
    get C63() {
      return C63 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C64 || CT.C64,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 782,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/text_selection.dart"
      });
    },
    get C73() {
      return C73 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "delegate",
        [_Location_column]: 11,
        [_Location_line]: 777,
        [_Location_file]: null
      });
    },
    get C74() {
      return C74 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 782,
        [_Location_file]: null
      });
    },
    get C72() {
      return C72 = dart.constList([C73 || CT.C73, C74 || CT.C74], _LocationL());
    },
    get C71() {
      return C71 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C72 || CT.C72,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 776,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/text_selection.dart"
      });
    },
    get C77() {
      return C77 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 7,
        [_Location_line]: 775,
        [_Location_file]: null
      });
    },
    get C76() {
      return C76 = dart.constList([C77 || CT.C77], _LocationL());
    },
    get C75() {
      return C75 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C76 || CT.C76,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 774,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/text_selection.dart"
      });
    },
    get C80() {
      return C80 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "painter",
        [_Location_column]: 9,
        [_Location_line]: 802,
        [_Location_file]: null
      });
    },
    get C79() {
      return C79 = dart.constList([C80 || CT.C80], _LocationL());
    },
    get C78() {
      return C78 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C79 || CT.C79,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 801,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/text_selection.dart"
      });
    },
    get C83() {
      return C83 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 7,
        [_Location_line]: 799,
        [_Location_file]: null
      });
    },
    get C84() {
      return C84 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 7,
        [_Location_line]: 800,
        [_Location_file]: null
      });
    },
    get C85() {
      return C85 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 801,
        [_Location_file]: null
      });
    },
    get C82() {
      return C82 = dart.constList([C83 || CT.C83, C84 || CT.C84, C85 || CT.C85], _LocationL());
    },
    get C81() {
      return C81 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C82 || CT.C82,
        [_Location_name]: null,
        [_Location_column]: 27,
        [_Location_line]: 798,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/text_selection.dart"
      });
    },
    get C88() {
      return C88 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "angle",
        [_Location_column]: 11,
        [_Location_line]: 814,
        [_Location_file]: null
      });
    },
    get C89() {
      return C89 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 815,
        [_Location_file]: null
      });
    },
    get C87() {
      return C87 = dart.constList([C88 || CT.C88, C89 || CT.C89], _LocationL());
    },
    get C86() {
      return C86 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C87 || CT.C87,
        [_Location_name]: null,
        [_Location_column]: 26,
        [_Location_line]: 813,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/text_selection.dart"
      });
    },
    get C90() {
      return C90 = dart.const({
        __proto__: text_selection.TextSelectionHandleType.prototype,
        [_name]: "TextSelectionHandleType.left",
        index: 0
      });
    },
    get C91() {
      return C91 = dart.const({
        __proto__: text_selection.TextSelectionHandleType.prototype,
        [_name]: "TextSelectionHandleType.right",
        index: 1
      });
    },
    get C94() {
      return C94 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "angle",
        [_Location_column]: 11,
        [_Location_line]: 821,
        [_Location_file]: null
      });
    },
    get C95() {
      return C95 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 822,
        [_Location_file]: null
      });
    },
    get C93() {
      return C93 = dart.constList([C94 || CT.C94, C95 || CT.C95], _LocationL());
    },
    get C92() {
      return C92 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C93 || CT.C93,
        [_Location_name]: null,
        [_Location_column]: 26,
        [_Location_line]: 820,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/material/text_selection.dart"
      });
    },
    get C96() {
      return C96 = dart.const({
        __proto__: text_selection.TextSelectionHandleType.prototype,
        [_name]: "TextSelectionHandleType.collapsed",
        index: 2
      });
    },
    get C97() {
      return C97 = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 0,
        [OffsetBase__dx]: 22
      });
    },
    get C98() {
      return C98 = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: -4,
        [OffsetBase__dx]: 11
      });
    }
  }, false);
  var clipboardStatus$ = dart.privateName(text_selection$, "_TextSelectionToolbar.clipboardStatus");
  var handleCut$ = dart.privateName(text_selection$, "_TextSelectionToolbar.handleCut");
  var handleCopy$ = dart.privateName(text_selection$, "_TextSelectionToolbar.handleCopy");
  var handlePaste$ = dart.privateName(text_selection$, "_TextSelectionToolbar.handlePaste");
  var handleSelectAll$ = dart.privateName(text_selection$, "_TextSelectionToolbar.handleSelectAll");
  var isAbove$ = dart.privateName(text_selection$, "_TextSelectionToolbar.isAbove");
  text_selection$._TextSelectionToolbar = class _TextSelectionToolbar extends framework.StatefulWidget {
    get clipboardStatus() {
      return this[clipboardStatus$];
    }
    set clipboardStatus(value) {
      super.clipboardStatus = value;
    }
    get handleCut() {
      return this[handleCut$];
    }
    set handleCut(value) {
      super.handleCut = value;
    }
    get handleCopy() {
      return this[handleCopy$];
    }
    set handleCopy(value) {
      super.handleCopy = value;
    }
    get handlePaste() {
      return this[handlePaste$];
    }
    set handlePaste(value) {
      super.handlePaste = value;
    }
    get handleSelectAll() {
      return this[handleSelectAll$];
    }
    set handleSelectAll(value) {
      super.handleSelectAll = value;
    }
    get isAbove() {
      return this[isAbove$];
    }
    set isAbove(value) {
      super.isAbove = value;
    }
    createState() {
      return new text_selection$._TextSelectionToolbarState.new();
    }
  };
  (text_selection$._TextSelectionToolbar.new = function(opts) {
    let clipboardStatus = opts && 'clipboardStatus' in opts ? opts.clipboardStatus : null;
    let key = opts && 'key' in opts ? opts.key : null;
    let handleCut = opts && 'handleCut' in opts ? opts.handleCut : null;
    let handleCopy = opts && 'handleCopy' in opts ? opts.handleCopy : null;
    let handlePaste = opts && 'handlePaste' in opts ? opts.handlePaste : null;
    let handleSelectAll = opts && 'handleSelectAll' in opts ? opts.handleSelectAll : null;
    let isAbove = opts && 'isAbove' in opts ? opts.isAbove : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[clipboardStatus$] = clipboardStatus;
    this[handleCut$] = handleCut;
    this[handleCopy$] = handleCopy;
    this[handlePaste$] = handlePaste;
    this[handleSelectAll$] = handleSelectAll;
    this[isAbove$] = isAbove;
    text_selection$._TextSelectionToolbar.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = text_selection$._TextSelectionToolbar.prototype;
  dart.addTypeTests(text_selection$._TextSelectionToolbar);
  dart.addTypeCaches(text_selection$._TextSelectionToolbar);
  dart.setMethodSignature(text_selection$._TextSelectionToolbar, () => ({
    __proto__: dart.getMethods(text_selection$._TextSelectionToolbar.__proto__),
    createState: dart.fnType(dart.legacy(text_selection$._TextSelectionToolbarState), [])
  }));
  dart.setLibraryUri(text_selection$._TextSelectionToolbar, L0);
  dart.setFieldSignature(text_selection$._TextSelectionToolbar, () => ({
    __proto__: dart.getFields(text_selection$._TextSelectionToolbar.__proto__),
    clipboardStatus: dart.finalFieldType(dart.legacy(text_selection.ClipboardStatusNotifier)),
    handleCut: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, []))),
    handleCopy: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, []))),
    handlePaste: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, []))),
    handleSelectAll: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, []))),
    isAbove: dart.finalFieldType(dart.legacy(core.bool))
  }));
  var onPressed$ = dart.privateName(text_selection$, "_ItemData.onPressed");
  var label$ = dart.privateName(text_selection$, "_ItemData.label");
  text_selection$._ItemData = class _ItemData extends core.Object {
    get onPressed() {
      return this[onPressed$];
    }
    set onPressed(value) {
      super.onPressed = value;
    }
    get label() {
      return this[label$];
    }
    set label(value) {
      super.label = value;
    }
  };
  (text_selection$._ItemData.new = function(onPressed, label) {
    this[onPressed$] = onPressed;
    this[label$] = label;
    if (!(onPressed != null)) dart.assertFailed(null, L1, 65, 14, "onPressed != null");
    if (!(label != null)) dart.assertFailed(null, L1, 66, 14, "label != null");
    ;
  }).prototype = text_selection$._ItemData.prototype;
  dart.addTypeTests(text_selection$._ItemData);
  dart.addTypeCaches(text_selection$._ItemData);
  dart.setLibraryUri(text_selection$._ItemData, L0);
  dart.setFieldSignature(text_selection$._ItemData, () => ({
    __proto__: dart.getFields(text_selection$._ItemData.__proto__),
    onPressed: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, []))),
    label: dart.finalFieldType(dart.legacy(core.String))
  }));
  var _clipboardStatus = dart.privateName(text_selection$, "_clipboardStatus");
  var _overflowOpen = dart.privateName(text_selection$, "_overflowOpen");
  var _containerKey = dart.privateName(text_selection$, "_containerKey");
  var _Location_parameterLocations = dart.privateName(widget_inspector, "_Location.parameterLocations");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  var C2;
  var C1;
  var C0;
  var C5;
  var C6;
  var C7;
  var C8;
  var C4;
  var C3;
  var C11;
  var C12;
  var C10;
  var C9;
  var _getItem = dart.privateName(text_selection$, "_getItem");
  var _reset = dart.privateName(text_selection$, "_reset");
  var _onChangedClipboardStatus = dart.privateName(text_selection$, "_onChangedClipboardStatus");
  var C16;
  var C17;
  var C15;
  var C14;
  var Widget__location = dart.privateName(framework, "Widget._location");
  var Widget_key = dart.privateName(framework, "Widget.key");
  var SingleChildRenderObjectWidget_child = dart.privateName(framework, "SingleChildRenderObjectWidget.child");
  var SizedBox_height = dart.privateName(basic, "SizedBox.height");
  var SizedBox_width = dart.privateName(basic, "SizedBox.width");
  var C13;
  var C21;
  var C22;
  var C20;
  var C19;
  var C18;
  var Duration__duration = dart.privateName(core, "Duration._duration");
  var C23;
  var Radius_y = dart.privateName(ui, "Radius.y");
  var Radius_x = dart.privateName(ui, "Radius.x");
  var C25;
  var BorderRadius_bottomRight = dart.privateName(border_radius, "BorderRadius.bottomRight");
  var BorderRadius_bottomLeft = dart.privateName(border_radius, "BorderRadius.bottomLeft");
  var BorderRadius_topRight = dart.privateName(border_radius, "BorderRadius.topRight");
  var BorderRadius_topLeft = dart.privateName(border_radius, "BorderRadius.topLeft");
  var C24;
  var C28;
  var C27;
  var C26;
  var C31;
  var C32;
  var C33;
  var C30;
  var C29;
  var C36;
  var C37;
  var C35;
  var C34;
  var C40;
  var C41;
  var C42;
  var C39;
  var C38;
  var C45;
  var C46;
  var C47;
  var C48;
  var C49;
  var C44;
  var C43;
  var C52;
  var C53;
  var C54;
  var C51;
  var C50;
  var C57;
  var C58;
  var C59;
  var C56;
  var C55;
  const State_TickerProviderStateMixin$36 = class State_TickerProviderStateMixin extends framework.State$(dart.legacy(text_selection$._TextSelectionToolbar)) {};
  (State_TickerProviderStateMixin$36.new = function() {
    ticker_provider.TickerProviderStateMixin$(dart.legacy(text_selection$._TextSelectionToolbar))[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36, ticker_provider.TickerProviderStateMixin$(dart.legacy(text_selection$._TextSelectionToolbar)));
  text_selection$._TextSelectionToolbarState = class _TextSelectionToolbarState extends State_TickerProviderStateMixin$36 {
    [_getItem](itemData, isFirst, isLast) {
      if (!(isFirst != null)) dart.assertFailed(null, L1, 84, 12, "isFirst != null");
      if (!(isLast != null)) dart.assertFailed(null, L1, 85, 12, "isLast != null");
      return new button_theme.ButtonTheme.fromButtonThemeData({data: button_theme.ButtonTheme.of(this.context).copyWith({height: 48, minWidth: 48}), child: new flat_button.FlatButton.new({onPressed: itemData.onPressed, padding: new edge_insets.EdgeInsets.only({left: 9.5 + (dart.test(isFirst) ? 5.0 : 0.0), right: 9.5 + (dart.test(isLast) ? 5.0 : 0.0)}), shape: box_border.Border.all({width: 0.0, color: colors.Colors.transparent}), child: new text.Text.new(itemData.label, {$creationLocationd_0dea112b090073317d4: C0 || CT.C0}), $creationLocationd_0dea112b090073317d4: C3 || CT.C3}), $creationLocationd_0dea112b090073317d4: C9 || CT.C9});
    }
    [_reset]() {
      this[_containerKey] = new framework.UniqueKey.new();
      this[_overflowOpen] = false;
    }
    [_onChangedClipboardStatus]() {
      this.setState(dart.fn(() => {
      }, VoidToNullN()));
    }
    initState() {
      let t0;
      super.initState();
      this[_clipboardStatus] = (t0 = this.widget.clipboardStatus, t0 == null ? new text_selection.ClipboardStatusNotifier.new() : t0);
      this[_clipboardStatus].addListener(dart.bind(this, _onChangedClipboardStatus));
      this[_clipboardStatus].update();
    }
    didUpdateWidget(oldWidget) {
      _TextSelectionToolbarL().as(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (!(this.widget.handleCut == null)[$_equals](oldWidget.handleCut == null) || !(this.widget.handleCopy == null)[$_equals](oldWidget.handleCopy == null) || !(this.widget.handlePaste == null)[$_equals](oldWidget.handlePaste == null) || !(this.widget.handleSelectAll == null)[$_equals](oldWidget.handleSelectAll == null)) {
        this[_reset]();
      }
      if (oldWidget.clipboardStatus == null && this.widget.clipboardStatus != null) {
        this[_clipboardStatus].removeListener(dart.bind(this, _onChangedClipboardStatus));
        this[_clipboardStatus].dispose();
        this[_clipboardStatus] = this.widget.clipboardStatus;
      } else if (oldWidget.clipboardStatus != null) {
        if (this.widget.clipboardStatus == null) {
          this[_clipboardStatus] = new text_selection.ClipboardStatusNotifier.new();
          this[_clipboardStatus].addListener(dart.bind(this, _onChangedClipboardStatus));
          oldWidget.clipboardStatus.removeListener(dart.bind(this, _onChangedClipboardStatus));
        } else if (!dart.equals(this.widget.clipboardStatus, oldWidget.clipboardStatus)) {
          this[_clipboardStatus] = this.widget.clipboardStatus;
          this[_clipboardStatus].addListener(dart.bind(this, _onChangedClipboardStatus));
          oldWidget.clipboardStatus.removeListener(dart.bind(this, _onChangedClipboardStatus));
        }
      }
      if (this.widget.handlePaste != null) {
        this[_clipboardStatus].update();
      }
    }
    dispose() {
      super.dispose();
      if (!dart.test(this[_clipboardStatus].disposed)) {
        this[_clipboardStatus].removeListener(dart.bind(this, _onChangedClipboardStatus));
        if (this.widget.clipboardStatus == null) {
          this[_clipboardStatus].dispose();
        }
      }
    }
    build(context) {
      if (this.widget.handlePaste != null && this[_clipboardStatus].value == text_selection.ClipboardStatus.unknown) {
        return C13 || CT.C13;
      }
      let localizations = material_localizations.MaterialLocalizations.of(context);
      let itemDatas = (() => {
        let t0 = JSArrayOf_ItemDataL().of([]);
        if (this.widget.handleCut != null) t0[$add](new text_selection$._ItemData.new(this.widget.handleCut, localizations.cutButtonLabel));
        if (this.widget.handleCopy != null) t0[$add](new text_selection$._ItemData.new(this.widget.handleCopy, localizations.copyButtonLabel));
        if (this.widget.handlePaste != null && this[_clipboardStatus].value == text_selection.ClipboardStatus.pasteable) t0[$add](new text_selection$._ItemData.new(this.widget.handlePaste, localizations.pasteButtonLabel));
        if (this.widget.handleSelectAll != null) t0[$add](new text_selection$._ItemData.new(this.widget.handleSelectAll, localizations.selectAllButtonLabel));
        return t0;
      })();
      if (dart.test(itemDatas[$isEmpty])) {
        return C18 || CT.C18;
      }
      return new text_selection$._TextSelectionToolbarContainer.new({key: this[_containerKey], overflowOpen: this[_overflowOpen], child: new animated_size.AnimatedSize.new({vsync: this, duration: C23 || CT.C23, child: new material.Material.new({borderRadius: C24 || CT.C24, clipBehavior: ui.Clip.antiAlias, elevation: 1.0, type: material.MaterialType.card, child: new text_selection$._TextSelectionToolbarItems.new({isAbove: this.widget.isAbove, overflowOpen: this[_overflowOpen], children: (() => {
                let t1 = JSArrayOfWidgetL().of([]);
                t1[$add](new material.Material.new({type: material.MaterialType.card, child: new icon_button.IconButton.new({icon: new icon.Icon.new(dart.test(this[_overflowOpen]) ? icons.Icons.arrow_back : icons.Icons.more_vert, {$creationLocationd_0dea112b090073317d4: C26 || CT.C26}), onPressed: dart.fn(() => {
                      this.setState(dart.fn(() => {
                        this[_overflowOpen] = !dart.test(this[_overflowOpen]);
                      }, VoidToNullN()));
                    }, VoidToNullN()), tooltip: dart.test(this[_overflowOpen]) ? localizations.backButtonTooltip : localizations.moreButtonTooltip, $creationLocationd_0dea112b090073317d4: C29 || CT.C29}), $creationLocationd_0dea112b090073317d4: C34 || CT.C34}));
                for (let i = 0; i < dart.notNull(itemDatas[$length]); i = i + 1)
                  t1[$add](this[_getItem](itemDatas[$_get](i), i === 0, i === dart.notNull(itemDatas[$length]) - 1));
                return t1;
              })(), $creationLocationd_0dea112b090073317d4: C38 || CT.C38}), $creationLocationd_0dea112b090073317d4: C43 || CT.C43}), $creationLocationd_0dea112b090073317d4: C50 || CT.C50}), $creationLocationd_0dea112b090073317d4: C55 || CT.C55});
    }
  };
  (text_selection$._TextSelectionToolbarState.new = function() {
    this[_clipboardStatus] = null;
    this[_overflowOpen] = false;
    this[_containerKey] = new framework.UniqueKey.new();
    text_selection$._TextSelectionToolbarState.__proto__.new.call(this);
    ;
  }).prototype = text_selection$._TextSelectionToolbarState.prototype;
  dart.addTypeTests(text_selection$._TextSelectionToolbarState);
  dart.addTypeCaches(text_selection$._TextSelectionToolbarState);
  dart.setMethodSignature(text_selection$._TextSelectionToolbarState, () => ({
    __proto__: dart.getMethods(text_selection$._TextSelectionToolbarState.__proto__),
    [_getItem]: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(text_selection$._ItemData), dart.legacy(core.bool), dart.legacy(core.bool)]),
    [_reset]: dart.fnType(dart.void, []),
    [_onChangedClipboardStatus]: dart.fnType(dart.void, []),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(text_selection$._TextSelectionToolbarState, L0);
  dart.setFieldSignature(text_selection$._TextSelectionToolbarState, () => ({
    __proto__: dart.getFields(text_selection$._TextSelectionToolbarState.__proto__),
    [_clipboardStatus]: dart.fieldType(dart.legacy(text_selection.ClipboardStatusNotifier)),
    [_overflowOpen]: dart.fieldType(dart.legacy(core.bool)),
    [_containerKey]: dart.fieldType(dart.legacy(framework.UniqueKey))
  }));
  var overflowOpen$ = dart.privateName(text_selection$, "_TextSelectionToolbarContainer.overflowOpen");
  text_selection$._TextSelectionToolbarContainer = class _TextSelectionToolbarContainer extends framework.SingleChildRenderObjectWidget {
    get overflowOpen() {
      return this[overflowOpen$];
    }
    set overflowOpen(value) {
      super.overflowOpen = value;
    }
    createRenderObject(context) {
      return new text_selection$._TextSelectionToolbarContainerRenderBox.new({overflowOpen: this.overflowOpen});
    }
    updateRenderObject(context, renderObject) {
      _TextSelectionToolbarContainerRenderBoxL().as(renderObject);
      renderObject.overflowOpen = this.overflowOpen;
    }
  };
  (text_selection$._TextSelectionToolbarContainer.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let overflowOpen = opts && 'overflowOpen' in opts ? opts.overflowOpen : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[overflowOpen$] = overflowOpen;
    if (!(child != null)) dart.assertFailed(null, L1, 258, 15, "child != null");
    if (!(overflowOpen != null)) dart.assertFailed(null, L1, 259, 15, "overflowOpen != null");
    text_selection$._TextSelectionToolbarContainer.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = text_selection$._TextSelectionToolbarContainer.prototype;
  dart.addTypeTests(text_selection$._TextSelectionToolbarContainer);
  dart.addTypeCaches(text_selection$._TextSelectionToolbarContainer);
  dart.setMethodSignature(text_selection$._TextSelectionToolbarContainer, () => ({
    __proto__: dart.getMethods(text_selection$._TextSelectionToolbarContainer.__proto__),
    createRenderObject: dart.fnType(dart.legacy(text_selection$._TextSelectionToolbarContainerRenderBox), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(text_selection$._TextSelectionToolbarContainer, L0);
  dart.setFieldSignature(text_selection$._TextSelectionToolbarContainer, () => ({
    __proto__: dart.getFields(text_selection$._TextSelectionToolbarContainer.__proto__),
    overflowOpen: dart.finalFieldType(dart.legacy(core.bool))
  }));
  var _closedWidth = dart.privateName(text_selection$, "_closedWidth");
  text_selection$._TextSelectionToolbarContainerRenderBox = class _TextSelectionToolbarContainerRenderBox extends proxy_box.RenderProxyBox {
    get overflowOpen() {
      return this[_overflowOpen];
    }
    set overflowOpen(value) {
      if (dart.equals(value, this.overflowOpen)) {
        return;
      }
      this[_overflowOpen] = value;
      this.markNeedsLayout();
    }
    performLayout() {
      this.child.layout(this.constraints.loosen(), {parentUsesSize: true});
      if (!dart.test(this.overflowOpen) && this[_closedWidth] == null) {
        this[_closedWidth] = this.child.size.width;
      }
      this.size = this.constraints.constrain(new ui.Size.new(this[_closedWidth] == null || dart.notNull(this.child.size.width) > dart.notNull(this[_closedWidth]) ? this.child.size.width : this[_closedWidth], this.child.size.height));
      let childParentData = ToolbarItemsParentDataL().as(this.child.parentData);
      childParentData.offset = new ui.Offset.new(dart.notNull(this.size.width) - dart.notNull(this.child.size.width), 0.0);
    }
    paint(context, offset) {
      let childParentData = ToolbarItemsParentDataL().as(this.child.parentData);
      context.paintChild(this.child, childParentData.offset['+'](offset));
    }
    hitTestChildren(result, opts) {
      let position = opts && 'position' in opts ? opts.position : null;
      let childParentData = ToolbarItemsParentDataL().as(this.child.parentData);
      return result.addWithPaintOffset({offset: childParentData.offset, position: position, hitTest: dart.fn((result, transformed) => {
          if (!dart.equals(transformed, position['-'](childParentData.offset))) dart.assertFailed(null, L1, 341, 16, "transformed == position - childParentData.offset");
          return this.child.hitTest(result, {position: transformed});
        }, BoxHitTestResultLAndOffsetLToboolL())});
    }
    setupParentData(child) {
      RenderBoxL().as(child);
      if (!ToolbarItemsParentDataL().is(child.parentData)) {
        child.parentData = new text_selection.ToolbarItemsParentData.new();
      }
    }
    applyPaintTransform(child, transform) {
      RenderObjectL().as(child);
      let childParentData = ToolbarItemsParentDataL().as(child.parentData);
      transform.translate(childParentData.offset.dx, childParentData.offset.dy);
      super.applyPaintTransform(child, transform);
    }
  };
  (text_selection$._TextSelectionToolbarContainerRenderBox.new = function(opts) {
    let overflowOpen = opts && 'overflowOpen' in opts ? opts.overflowOpen : null;
    this[_closedWidth] = null;
    if (!(overflowOpen != null)) dart.assertFailed(null, L1, 278, 15, "overflowOpen != null");
    this[_overflowOpen] = overflowOpen;
    text_selection$._TextSelectionToolbarContainerRenderBox.__proto__.new.call(this);
    ;
  }).prototype = text_selection$._TextSelectionToolbarContainerRenderBox.prototype;
  dart.addTypeTests(text_selection$._TextSelectionToolbarContainerRenderBox);
  dart.addTypeCaches(text_selection$._TextSelectionToolbarContainerRenderBox);
  dart.setGetterSignature(text_selection$._TextSelectionToolbarContainerRenderBox, () => ({
    __proto__: dart.getGetters(text_selection$._TextSelectionToolbarContainerRenderBox.__proto__),
    overflowOpen: dart.legacy(core.bool)
  }));
  dart.setSetterSignature(text_selection$._TextSelectionToolbarContainerRenderBox, () => ({
    __proto__: dart.getSetters(text_selection$._TextSelectionToolbarContainerRenderBox.__proto__),
    overflowOpen: dart.legacy(core.bool)
  }));
  dart.setLibraryUri(text_selection$._TextSelectionToolbarContainerRenderBox, L0);
  dart.setFieldSignature(text_selection$._TextSelectionToolbarContainerRenderBox, () => ({
    __proto__: dart.getFields(text_selection$._TextSelectionToolbarContainerRenderBox.__proto__),
    [_closedWidth]: dart.fieldType(dart.legacy(core.double)),
    [_overflowOpen]: dart.fieldType(dart.legacy(core.bool))
  }));
  text_selection$._TextSelectionToolbarItems = class _TextSelectionToolbarItems extends framework.MultiChildRenderObjectWidget {
    createRenderObject(context) {
      return new text_selection$._TextSelectionToolbarItemsRenderBox.new({isAbove: this.isAbove, overflowOpen: this.overflowOpen});
    }
    updateRenderObject(context, renderObject) {
      let t2;
      _TextSelectionToolbarItemsRenderBoxL().as(renderObject);
      t2 = renderObject;
      (() => {
        t2.isAbove = this.isAbove;
        t2.overflowOpen = this.overflowOpen;
        return t2;
      })();
    }
    createElement() {
      return new text_selection$._TextSelectionToolbarItemsElement.new(this);
    }
  };
  (text_selection$._TextSelectionToolbarItems.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let isAbove = opts && 'isAbove' in opts ? opts.isAbove : null;
    let overflowOpen = opts && 'overflowOpen' in opts ? opts.overflowOpen : null;
    let children = opts && 'children' in opts ? opts.children : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this.isAbove = isAbove;
    this.overflowOpen = overflowOpen;
    if (!(children != null)) dart.assertFailed(null, L1, 370, 15, "children != null");
    if (!(isAbove != null)) dart.assertFailed(null, L1, 371, 15, "isAbove != null");
    if (!(overflowOpen != null)) dart.assertFailed(null, L1, 372, 15, "overflowOpen != null");
    text_selection$._TextSelectionToolbarItems.__proto__.new.call(this, {key: key, children: children, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = text_selection$._TextSelectionToolbarItems.prototype;
  dart.addTypeTests(text_selection$._TextSelectionToolbarItems);
  dart.addTypeCaches(text_selection$._TextSelectionToolbarItems);
  dart.setMethodSignature(text_selection$._TextSelectionToolbarItems, () => ({
    __proto__: dart.getMethods(text_selection$._TextSelectionToolbarItems.__proto__),
    createRenderObject: dart.fnType(dart.legacy(text_selection$._TextSelectionToolbarItemsRenderBox), [dart.legacy(framework.BuildContext)]),
    createElement: dart.fnType(dart.legacy(text_selection$._TextSelectionToolbarItemsElement), [])
  }));
  dart.setLibraryUri(text_selection$._TextSelectionToolbarItems, L0);
  dart.setFieldSignature(text_selection$._TextSelectionToolbarItems, () => ({
    __proto__: dart.getFields(text_selection$._TextSelectionToolbarItems.__proto__),
    isAbove: dart.finalFieldType(dart.legacy(core.bool)),
    overflowOpen: dart.finalFieldType(dart.legacy(core.bool))
  }));
  var C60;
  text_selection$._TextSelectionToolbarItemsElement = class _TextSelectionToolbarItemsElement extends framework.MultiChildRenderObjectElement {
    static _shouldPaint(child) {
      return ToolbarItemsParentDataL().as(child.renderObject.parentData).shouldPaint;
    }
    debugVisitOnstageChildren(visitor) {
      this.children[$where](C60 || CT.C60)[$forEach](visitor);
    }
  };
  (text_selection$._TextSelectionToolbarItemsElement.new = function(widget) {
    text_selection$._TextSelectionToolbarItemsElement.__proto__.new.call(this, widget);
    ;
  }).prototype = text_selection$._TextSelectionToolbarItemsElement.prototype;
  dart.addTypeTests(text_selection$._TextSelectionToolbarItemsElement);
  dart.addTypeCaches(text_selection$._TextSelectionToolbarItemsElement);
  dart.setLibraryUri(text_selection$._TextSelectionToolbarItemsElement, L0);
  var _lastIndexThatFits = dart.privateName(text_selection$, "_lastIndexThatFits");
  var _isAbove = dart.privateName(text_selection$, "_isAbove");
  var _layoutChildren = dart.privateName(text_selection$, "_layoutChildren");
  var _shouldPaintChild = dart.privateName(text_selection$, "_shouldPaintChild");
  var OffsetBase__dy = dart.privateName(ui, "OffsetBase._dy");
  var OffsetBase__dx = dart.privateName(ui, "OffsetBase._dx");
  var C61;
  var _placeChildren = dart.privateName(text_selection$, "_placeChildren");
  const RenderBox_ContainerRenderObjectMixin$36 = class RenderBox_ContainerRenderObjectMixin extends box.RenderBox {};
  (RenderBox_ContainerRenderObjectMixin$36.new = function() {
    object.ContainerRenderObjectMixin$(dart.legacy(box.RenderBox), dart.legacy(text_selection.ToolbarItemsParentData))[dart.mixinNew].call(this);
    RenderBox_ContainerRenderObjectMixin$36.__proto__.new.call(this);
  }).prototype = RenderBox_ContainerRenderObjectMixin$36.prototype;
  dart.applyMixin(RenderBox_ContainerRenderObjectMixin$36, object.ContainerRenderObjectMixin$(dart.legacy(box.RenderBox), dart.legacy(text_selection.ToolbarItemsParentData)));
  text_selection$._TextSelectionToolbarItemsRenderBox = class _TextSelectionToolbarItemsRenderBox extends RenderBox_ContainerRenderObjectMixin$36 {
    get isAbove() {
      return this[_isAbove];
    }
    set isAbove(value) {
      if (dart.equals(value, this.isAbove)) {
        return;
      }
      this[_isAbove] = value;
      this.markNeedsLayout();
    }
    get overflowOpen() {
      return this[_overflowOpen];
    }
    set overflowOpen(value) {
      if (dart.equals(value, this.overflowOpen)) {
        return;
      }
      this[_overflowOpen] = value;
      this.markNeedsLayout();
    }
    [_layoutChildren]() {
      let sizedConstraints = dart.test(this[_overflowOpen]) ? this.constraints : new box.BoxConstraints.loose(new ui.Size.new(this.constraints.maxWidth, 44));
      let i = -1;
      let width = 0.0;
      this.visitChildren(dart.fn(renderObjectChild => {
        i = i + 1;
        if (this[_lastIndexThatFits] !== -1 && !dart.test(this.overflowOpen)) {
          return;
        }
        let child = RenderBoxL().as(renderObjectChild);
        child.layout(sizedConstraints.loosen(), {parentUsesSize: true});
        width = width + dart.notNull(child.size.width);
        if (width > dart.notNull(sizedConstraints.maxWidth) && this[_lastIndexThatFits] === -1) {
          this[_lastIndexThatFits] = i - 1;
        }
      }, RenderObjectLToNullN()));
      let navButton = this.firstChild;
      if (this[_lastIndexThatFits] !== -1 && this[_lastIndexThatFits] === dart.notNull(this.childCount) - 2 && width - dart.notNull(navButton.size.width) <= dart.notNull(sizedConstraints.maxWidth)) {
        this[_lastIndexThatFits] = -1;
      }
    }
    [_shouldPaintChild](renderObjectChild, index) {
      if (dart.equals(renderObjectChild, this.firstChild)) {
        return this[_lastIndexThatFits] !== -1;
      }
      if (this[_lastIndexThatFits] === -1) {
        return true;
      }
      return (dart.notNull(index) > dart.notNull(this[_lastIndexThatFits]))[$_equals](this.overflowOpen);
    }
    [_placeChildren]() {
      let i = -1;
      let nextSize = C61 || CT.C61;
      let fitWidth = 0.0;
      let navButton = this.firstChild;
      let overflowHeight = dart.test(this.overflowOpen) && !dart.test(this.isAbove) ? navButton.size.height : 0.0;
      this.visitChildren(dart.fn(renderObjectChild => {
        i = i + 1;
        let child = RenderBoxL().as(renderObjectChild);
        let childParentData = ToolbarItemsParentDataL().as(child.parentData);
        if (dart.equals(renderObjectChild, navButton)) {
          return;
        }
        if (!dart.test(this[_shouldPaintChild](renderObjectChild, i))) {
          childParentData.shouldPaint = false;
          return;
        }
        childParentData.shouldPaint = true;
        if (!dart.test(this.overflowOpen)) {
          childParentData.offset = new ui.Offset.new(fitWidth, 0.0);
          fitWidth = fitWidth + dart.notNull(child.size.width);
          nextSize = new ui.Size.new(fitWidth, math.max(doubleL(), child.size.height, nextSize.height));
        } else {
          childParentData.offset = new ui.Offset.new(0.0, overflowHeight);
          overflowHeight = dart.notNull(overflowHeight) + dart.notNull(child.size.height);
          nextSize = new ui.Size.new(math.max(doubleL(), child.size.width, nextSize.width), overflowHeight);
        }
      }, RenderObjectLToNullN()));
      let navButtonParentData = ToolbarItemsParentDataL().as(navButton.parentData);
      if (dart.test(this[_shouldPaintChild](this.firstChild, 0))) {
        navButtonParentData.shouldPaint = true;
        if (dart.test(this.overflowOpen)) {
          navButtonParentData.offset = dart.test(this.isAbove) ? new ui.Offset.new(0.0, overflowHeight) : ui.Offset.zero;
          nextSize = new ui.Size.new(nextSize.width, dart.test(this.isAbove) ? dart.notNull(nextSize.height) + dart.notNull(navButton.size.height) : nextSize.height);
        } else {
          navButtonParentData.offset = new ui.Offset.new(fitWidth, 0.0);
          nextSize = new ui.Size.new(dart.notNull(nextSize.width) + dart.notNull(navButton.size.width), nextSize.height);
        }
      } else {
        navButtonParentData.shouldPaint = false;
      }
      this.size = nextSize;
    }
    performLayout() {
      this[_lastIndexThatFits] = -1;
      if (this.firstChild == null) {
        this.performResize();
        return;
      }
      this[_layoutChildren]();
      this[_placeChildren]();
    }
    paint(context, offset) {
      this.visitChildren(dart.fn(renderObjectChild => {
        let child = RenderBoxL().as(renderObjectChild);
        let childParentData = ToolbarItemsParentDataL().as(child.parentData);
        if (!dart.test(childParentData.shouldPaint)) {
          return;
        }
        context.paintChild(child, childParentData.offset['+'](offset));
      }, RenderObjectLToNullN()));
    }
    setupParentData(child) {
      RenderBoxL().as(child);
      if (!ToolbarItemsParentDataL().is(child.parentData)) {
        child.parentData = new text_selection.ToolbarItemsParentData.new();
      }
    }
    hitTestChildren(result, opts) {
      let position = opts && 'position' in opts ? opts.position : null;
      let child = this.lastChild;
      while (child != null) {
        let childParentData = ToolbarItemsParentDataL().as(child.parentData);
        if (!dart.test(childParentData.shouldPaint)) {
          child = childParentData.previousSibling;
          continue;
        }
        let isHit = result.addWithPaintOffset({offset: childParentData.offset, position: position, hitTest: dart.fn((result, transformed) => {
            if (!dart.equals(transformed, position['-'](childParentData.offset))) dart.assertFailed(null, L1, 622, 18, "transformed == position - childParentData.offset");
            return child.hitTest(result, {position: transformed});
          }, BoxHitTestResultLAndOffsetLToboolL())});
        if (dart.test(isHit)) return true;
        child = childParentData.previousSibling;
      }
      return false;
    }
    visitChildrenForSemantics(visitor) {
      this.visitChildren(dart.fn(renderObjectChild => {
        let child = RenderBoxL().as(renderObjectChild);
        let childParentData = ToolbarItemsParentDataL().as(child.parentData);
        if (dart.test(childParentData.shouldPaint)) {
          visitor(renderObjectChild);
        }
      }, RenderObjectLToNullN()));
    }
  };
  (text_selection$._TextSelectionToolbarItemsRenderBox.new = function(opts) {
    let isAbove = opts && 'isAbove' in opts ? opts.isAbove : null;
    let overflowOpen = opts && 'overflowOpen' in opts ? opts.overflowOpen : null;
    this[_lastIndexThatFits] = -1;
    if (!(overflowOpen != null)) dart.assertFailed(null, L1, 416, 15, "overflowOpen != null");
    if (!(isAbove != null)) dart.assertFailed(null, L1, 417, 15, "isAbove != null");
    this[_isAbove] = isAbove;
    this[_overflowOpen] = overflowOpen;
    text_selection$._TextSelectionToolbarItemsRenderBox.__proto__.new.call(this);
    ;
  }).prototype = text_selection$._TextSelectionToolbarItemsRenderBox.prototype;
  dart.addTypeTests(text_selection$._TextSelectionToolbarItemsRenderBox);
  dart.addTypeCaches(text_selection$._TextSelectionToolbarItemsRenderBox);
  dart.setMethodSignature(text_selection$._TextSelectionToolbarItemsRenderBox, () => ({
    __proto__: dart.getMethods(text_selection$._TextSelectionToolbarItemsRenderBox.__proto__),
    [_layoutChildren]: dart.fnType(dart.void, []),
    [_shouldPaintChild]: dart.fnType(dart.legacy(core.bool), [dart.legacy(object.RenderObject), dart.legacy(core.int)]),
    [_placeChildren]: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(text_selection$._TextSelectionToolbarItemsRenderBox, () => ({
    __proto__: dart.getGetters(text_selection$._TextSelectionToolbarItemsRenderBox.__proto__),
    isAbove: dart.legacy(core.bool),
    overflowOpen: dart.legacy(core.bool)
  }));
  dart.setSetterSignature(text_selection$._TextSelectionToolbarItemsRenderBox, () => ({
    __proto__: dart.getSetters(text_selection$._TextSelectionToolbarItemsRenderBox.__proto__),
    isAbove: dart.legacy(core.bool),
    overflowOpen: dart.legacy(core.bool)
  }));
  dart.setLibraryUri(text_selection$._TextSelectionToolbarItemsRenderBox, L0);
  dart.setFieldSignature(text_selection$._TextSelectionToolbarItemsRenderBox, () => ({
    __proto__: dart.getFields(text_selection$._TextSelectionToolbarItemsRenderBox.__proto__),
    [_lastIndexThatFits]: dart.fieldType(dart.legacy(core.int)),
    [_isAbove]: dart.fieldType(dart.legacy(core.bool)),
    [_overflowOpen]: dart.fieldType(dart.legacy(core.bool))
  }));
  text_selection$._TextSelectionToolbarLayout = class _TextSelectionToolbarLayout extends shifted_box.SingleChildLayoutDelegate {
    static _centerOn(position, width, min, max) {
      if (dart.notNull(position) - dart.notNull(width) / 2.0 < dart.notNull(min)) {
        return min;
      }
      if (dart.notNull(position) + dart.notNull(width) / 2.0 > dart.notNull(max)) {
        return dart.notNull(max) - dart.notNull(width);
      }
      return dart.notNull(position) - dart.notNull(width) / 2.0;
    }
    getConstraintsForChild(constraints) {
      return constraints.loosen();
    }
    getPositionForChild(size, childSize) {
      return new ui.Offset.new(text_selection$._TextSelectionToolbarLayout._centerOn(this.anchor.dx, childSize.width, 8, dart.notNull(size.width) - 8), dart.test(this.fitsAbove) ? math.max(doubleL(), this.upperBounds, dart.notNull(this.anchor.dy) - dart.notNull(childSize.height)) : this.anchor.dy);
    }
    shouldRelayout(oldDelegate) {
      _TextSelectionToolbarLayoutL().as(oldDelegate);
      return !dart.equals(this.anchor, oldDelegate.anchor);
    }
  };
  (text_selection$._TextSelectionToolbarLayout.new = function(anchor, upperBounds, fitsAbove) {
    this.anchor = anchor;
    this.upperBounds = upperBounds;
    this.fitsAbove = fitsAbove;
    text_selection$._TextSelectionToolbarLayout.__proto__.new.call(this);
    ;
  }).prototype = text_selection$._TextSelectionToolbarLayout.prototype;
  dart.addTypeTests(text_selection$._TextSelectionToolbarLayout);
  dart.addTypeCaches(text_selection$._TextSelectionToolbarLayout);
  dart.setMethodSignature(text_selection$._TextSelectionToolbarLayout, () => ({
    __proto__: dart.getMethods(text_selection$._TextSelectionToolbarLayout.__proto__),
    shouldRelayout: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)])
  }));
  dart.setLibraryUri(text_selection$._TextSelectionToolbarLayout, L0);
  dart.setFieldSignature(text_selection$._TextSelectionToolbarLayout, () => ({
    __proto__: dart.getFields(text_selection$._TextSelectionToolbarLayout.__proto__),
    anchor: dart.finalFieldType(dart.legacy(ui.Offset)),
    upperBounds: dart.finalFieldType(dart.legacy(core.double)),
    fitsAbove: dart.finalFieldType(dart.legacy(core.bool))
  }));
  text_selection$._TextSelectionHandlePainter = class _TextSelectionHandlePainter extends custom_paint.CustomPainter {
    paint(canvas, size) {
      let t2, t2$;
      let paint = (t2 = ui.Paint.new(), (() => {
        t2.color = this.color;
        return t2;
      })());
      let radius = dart.notNull(size.width) / 2.0;
      let circle = new ui.Rect.fromCircle({center: new ui.Offset.new(radius, radius), radius: radius});
      let point = new ui.Rect.fromLTWH(0.0, 0.0, radius, radius);
      let path = (t2$ = ui.Path.new(), (() => {
        t2$.addOval(circle);
        t2$.addRect(point);
        return t2$;
      })());
      canvas.drawPath(path, paint);
    }
    shouldRepaint(oldPainter) {
      _TextSelectionHandlePainterL().as(oldPainter);
      return !dart.equals(this.color, oldPainter.color);
    }
  };
  (text_selection$._TextSelectionHandlePainter.new = function(opts) {
    let color = opts && 'color' in opts ? opts.color : null;
    this.color = color;
    text_selection$._TextSelectionHandlePainter.__proto__.new.call(this);
    ;
  }).prototype = text_selection$._TextSelectionHandlePainter.prototype;
  dart.addTypeTests(text_selection$._TextSelectionHandlePainter);
  dart.addTypeCaches(text_selection$._TextSelectionHandlePainter);
  dart.setMethodSignature(text_selection$._TextSelectionHandlePainter, () => ({
    __proto__: dart.getMethods(text_selection$._TextSelectionHandlePainter.__proto__),
    paint: dart.fnType(dart.void, [dart.legacy(ui.Canvas), dart.legacy(ui.Size)]),
    shouldRepaint: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)])
  }));
  dart.setLibraryUri(text_selection$._TextSelectionHandlePainter, L0);
  dart.setFieldSignature(text_selection$._TextSelectionHandlePainter, () => ({
    __proto__: dart.getFields(text_selection$._TextSelectionHandlePainter.__proto__),
    color: dart.finalFieldType(dart.legacy(ui.Color))
  }));
  var C62;
  var C65;
  var C66;
  var C67;
  var C68;
  var C69;
  var C70;
  var C64;
  var C63;
  var C73;
  var C74;
  var C72;
  var C71;
  var C77;
  var C76;
  var C75;
  var C80;
  var C79;
  var C78;
  var C83;
  var C84;
  var C85;
  var C82;
  var C81;
  var C88;
  var C89;
  var C87;
  var C86;
  var _name = dart.privateName(text_selection, "_name");
  var C90;
  var C91;
  var C94;
  var C95;
  var C93;
  var C92;
  var C96;
  var C97;
  var C98;
  text_selection$._MaterialTextSelectionControls = class _MaterialTextSelectionControls extends text_selection.TextSelectionControls {
    getHandleSize(textLineHeight) {
      return C62 || CT.C62;
    }
    buildToolbar(context, globalEditableRegion, textLineHeight, selectionMidpoint, endpoints, delegate, clipboardStatus) {
      if (!dart.test(debug.debugCheckHasMediaQuery(context))) dart.assertFailed(null, L1, 749, 12, "debugCheckHasMediaQuery(context)");
      if (!dart.test(debug$.debugCheckHasMaterialLocalizations(context))) dart.assertFailed(null, L1, 750, 12, "debugCheckHasMaterialLocalizations(context)");
      let startTextSelectionPoint = endpoints[$_get](0);
      let endTextSelectionPoint = dart.notNull(endpoints[$length]) > 1 ? endpoints[$_get](1) : endpoints[$_get](0);
      let paddingTop = media_query.MediaQuery.of(context).padding.top;
      let availableHeight = dart.notNull(globalEditableRegion.top) + dart.notNull(startTextSelectionPoint.point.dy) - dart.notNull(textLineHeight) - dart.notNull(paddingTop);
      let fitsAbove = 60 <= availableHeight;
      let anchor = new ui.Offset.new(dart.notNull(globalEditableRegion.left) + dart.notNull(selectionMidpoint.dx), fitsAbove ? dart.notNull(globalEditableRegion.top) + dart.notNull(startTextSelectionPoint.point.dy) - dart.notNull(textLineHeight) - 8 : dart.notNull(globalEditableRegion.top) + dart.notNull(endTextSelectionPoint.point.dy) + 20);
      return new basic.Stack.new({children: JSArrayOfWidgetL().of([new basic.CustomSingleChildLayout.new({delegate: new text_selection$._TextSelectionToolbarLayout.new(anchor, 8 + dart.notNull(paddingTop), fitsAbove), child: new text_selection$._TextSelectionToolbar.new({clipboardStatus: clipboardStatus, handleCut: dart.test(this.canCut(delegate)) ? dart.fn(() => this.handleCut(delegate), VoidTovoid()) : null, handleCopy: dart.test(this.canCopy(delegate)) ? dart.fn(() => this.handleCopy(delegate, clipboardStatus), VoidTovoid()) : null, handlePaste: dart.test(this.canPaste(delegate)) ? dart.fn(() => this.handlePaste(delegate), VoidToFutureLOfvoid()) : null, handleSelectAll: dart.test(this.canSelectAll(delegate)) ? dart.fn(() => this.handleSelectAll(delegate), VoidTovoid()) : null, isAbove: fitsAbove, $creationLocationd_0dea112b090073317d4: C63 || CT.C63}), $creationLocationd_0dea112b090073317d4: C71 || CT.C71})]), $creationLocationd_0dea112b090073317d4: C75 || CT.C75});
    }
    buildHandle(context, type, textHeight) {
      let handle = new basic.SizedBox.new({width: 22, height: 22, child: new basic.CustomPaint.new({painter: new text_selection$._TextSelectionHandlePainter.new({color: theme.Theme.of(context).textSelectionHandleColor}), $creationLocationd_0dea112b090073317d4: C78 || CT.C78}), $creationLocationd_0dea112b090073317d4: C81 || CT.C81});
      switch (type) {
        case C90 || CT.C90:
        {
          return new basic.Transform.rotate({angle: 3.141592653589793 / 2.0, child: handle, $creationLocationd_0dea112b090073317d4: C86 || CT.C86});
        }
        case C91 || CT.C91:
        {
          return handle;
        }
        case C96 || CT.C96:
        {
          return new basic.Transform.rotate({angle: 3.141592653589793 / 4.0, child: handle, $creationLocationd_0dea112b090073317d4: C92 || CT.C92});
        }
      }
      if (!(type != null)) dart.assertFailed(null, L1, 825, 12, "type != null");
      return null;
    }
    getHandleAnchor(type, textLineHeight) {
      switch (type) {
        case C90 || CT.C90:
        {
          return C97 || CT.C97;
        }
        case C91 || CT.C91:
        {
          return ui.Offset.zero;
        }
        default:
        {
          return C98 || CT.C98;
        }
      }
    }
    canSelectAll(delegate) {
      let value = delegate.textEditingValue;
      return dart.test(delegate.selectAllEnabled) && value.text[$isNotEmpty] && !(value.selection.start === 0 && value.selection.end === value.text.length);
    }
  };
  (text_selection$._MaterialTextSelectionControls.new = function() {
    ;
  }).prototype = text_selection$._MaterialTextSelectionControls.prototype;
  dart.addTypeTests(text_selection$._MaterialTextSelectionControls);
  dart.addTypeCaches(text_selection$._MaterialTextSelectionControls);
  dart.setMethodSignature(text_selection$._MaterialTextSelectionControls, () => ({
    __proto__: dart.getMethods(text_selection$._MaterialTextSelectionControls.__proto__),
    getHandleSize: dart.fnType(dart.legacy(ui.Size), [dart.legacy(core.double)]),
    buildToolbar: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext), dart.legacy(ui.Rect), dart.legacy(core.double), dart.legacy(ui.Offset), dart.legacy(core.List$(dart.legacy(editable.TextSelectionPoint))), dart.legacy(text_input.TextSelectionDelegate), dart.legacy(text_selection.ClipboardStatusNotifier)]),
    buildHandle: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext), dart.legacy(text_selection.TextSelectionHandleType), dart.legacy(core.double)]),
    getHandleAnchor: dart.fnType(dart.legacy(ui.Offset), [dart.legacy(text_selection.TextSelectionHandleType), dart.legacy(core.double)])
  }));
  dart.setLibraryUri(text_selection$._MaterialTextSelectionControls, L0);
  dart.defineLazy(text_selection$, {
    /*text_selection$._kHandleSize*/get _kHandleSize() {
      return 22;
    },
    /*text_selection$._kToolbarScreenPadding*/get _kToolbarScreenPadding() {
      return 8;
    },
    /*text_selection$._kToolbarHeight*/get _kToolbarHeight() {
      return 44;
    },
    /*text_selection$._kToolbarContentDistanceBelow*/get _kToolbarContentDistanceBelow() {
      return 20;
    },
    /*text_selection$._kToolbarContentDistance*/get _kToolbarContentDistance() {
      return 8;
    },
    /*text_selection$.materialTextSelectionControls*/get materialTextSelectionControls() {
      return new text_selection$._MaterialTextSelectionControls.new();
    }
  }, true);
  dart.trackLibraries("packages/flutter/src/material/text_selection.dart", {
    "package:flutter/src/material/text_selection.dart": text_selection$
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["text_selection.dart"],"names":[],"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","file":"../../../../../../packages/flutter/src/material/text_selection.dart.lib.js"}');
  // Exports:
  return {
    src__material__text_selection: text_selection$
  };
}));

//# sourceMappingURL=text_selection.dart.lib.js.map
