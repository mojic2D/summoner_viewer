define(['dart_sdk', 'packages/flutter/src/widgets/widget_span.dart', 'packages/flutter/src/cupertino/date_picker.dart', 'packages/flutter/src/painting/edge_insets.dart', 'packages/flutter/src/cupertino/button.dart', 'packages/flutter/src/rendering/paragraph.dart', 'packages/flutter/src/rendering/layer.dart', 'packages/flutter/src/rendering/shifted_box.dart', 'packages/flutter/src/rendering/custom_paint.dart', 'packages/flutter/src/cupertino/text_theme.dart', 'packages/vector_math/vector_math_64.dart', 'packages/flutter/src/rendering/editable.dart', 'packages/flutter/src/services/text_input.dart', 'packages/flutter/src/animation/listener_helpers.dart', 'packages/flutter/src/animation/animation_controller.dart', 'packages/flutter/src/painting/box_decoration.dart', 'packages/flutter/src/painting/box_border.dart', 'packages/flutter/src/painting/strut_style.dart', 'packages/flutter/src/foundation/debug.dart'], (function load__packages__flutter__src__cupertino__text_selection_dart(dart_sdk, packages__flutter__src__widgets__widget_span$46dart, packages__flutter__src__cupertino__date_picker$46dart, packages__flutter__src__painting__edge_insets$46dart, packages__flutter__src__cupertino__button$46dart, packages__flutter__src__rendering__paragraph$46dart, packages__flutter__src__rendering__layer$46dart, packages__flutter__src__rendering__shifted_box$46dart, packages__flutter__src__rendering__custom_paint$46dart, packages__flutter__src__cupertino__text_theme$46dart, packages__vector_math__vector_math_64$46dart, packages__flutter__src__rendering__editable$46dart, packages__flutter__src__services__text_input$46dart, packages__flutter__src__animation__listener_helpers$46dart, packages__flutter__src__animation__animation_controller$46dart, packages__flutter__src__painting__box_decoration$46dart, packages__flutter__src__painting__box_border$46dart, packages__flutter__src__painting__strut_style$46dart, packages__flutter__src__foundation__debug$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const _interceptors = dart_sdk._interceptors;
  const ui = dart_sdk.ui;
  const async = dart_sdk.async;
  const _js_helper = dart_sdk._js_helper;
  const collection = dart_sdk.collection;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const text_selection = packages__flutter__src__widgets__widget_span$46dart.src__widgets__text_selection;
  const basic = packages__flutter__src__widgets__widget_span$46dart.src__widgets__basic;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const media_query = packages__flutter__src__widgets__widget_span$46dart.src__widgets__media_query;
  const text$ = packages__flutter__src__widgets__widget_span$46dart.src__widgets__text;
  const debug = packages__flutter__src__widgets__widget_span$46dart.src__widgets__debug;
  const container = packages__flutter__src__widgets__widget_span$46dart.src__widgets__container;
  const transitions = packages__flutter__src__widgets__widget_span$46dart.src__widgets__transitions;
  const ticker_provider = packages__flutter__src__widgets__widget_span$46dart.src__widgets__ticker_provider;
  const localizations$ = packages__flutter__src__cupertino__date_picker$46dart.src__cupertino__localizations;
  const edge_insets = packages__flutter__src__painting__edge_insets$46dart.src__painting__edge_insets;
  const button = packages__flutter__src__cupertino__button$46dart.src__cupertino__button;
  const paragraph = packages__flutter__src__rendering__paragraph$46dart.src__rendering__paragraph;
  const box = packages__flutter__src__rendering__layer$46dart.src__rendering__box;
  const object = packages__flutter__src__rendering__layer$46dart.src__rendering__object;
  const shifted_box = packages__flutter__src__rendering__shifted_box$46dart.src__rendering__shifted_box;
  const custom_paint = packages__flutter__src__rendering__custom_paint$46dart.src__rendering__custom_paint;
  const theme = packages__flutter__src__cupertino__text_theme$46dart.src__cupertino__theme;
  const colors = packages__flutter__src__cupertino__text_theme$46dart.src__cupertino__colors;
  const vector_math_64 = packages__vector_math__vector_math_64$46dart.vector_math_64;
  const editable = packages__flutter__src__rendering__editable$46dart.src__rendering__editable;
  const text_input = packages__flutter__src__services__text_input$46dart.src__services__text_input;
  const animation = packages__flutter__src__animation__listener_helpers$46dart.src__animation__animation;
  const animation_controller = packages__flutter__src__animation__animation_controller$46dart.src__animation__animation_controller;
  const box_decoration = packages__flutter__src__painting__box_decoration$46dart.src__painting__box_decoration;
  const box_border = packages__flutter__src__painting__box_border$46dart.src__painting__box_border;
  const text_style = packages__flutter__src__painting__strut_style$46dart.src__painting__text_style;
  const diagnostics = packages__flutter__src__foundation__debug$46dart.src__foundation__diagnostics;
  var text_selection$ = Object.create(dart.library);
  var $isNotEmpty = dartx.isNotEmpty;
  var $add = dartx.add;
  var $isEmpty = dartx.isEmpty;
  var $clamp = dartx.clamp;
  var $first = dartx.first;
  var $last = dartx.last;
  var $length = dartx.length;
  var $containsKey = dartx.containsKey;
  var $_get = dartx._get;
  var $values = dartx.values;
  var $forEach = dartx.forEach;
  var $contains = dartx.contains;
  var $remove = dartx.remove;
  var $_set = dartx._set;
  var $where = dartx.where;
  var $toString = dartx.toString;
  var VoidToNullN = () => (VoidToNullN = dart.constFn(dart.fnType(core.Null, [])))();
  var _CupertinoTextSelectionToolbarWrapperL = () => (_CupertinoTextSelectionToolbarWrapperL = dart.constFn(dart.legacy(text_selection$._CupertinoTextSelectionToolbarWrapper)))();
  var _LocationL = () => (_LocationL = dart.constFn(dart.legacy(widget_inspector._Location)))();
  var WidgetL = () => (WidgetL = dart.constFn(dart.legacy(framework.Widget)))();
  var JSArrayOfWidgetL = () => (JSArrayOfWidgetL = dart.constFn(_interceptors.JSArray$(WidgetL())))();
  var StringL = () => (StringL = dart.constFn(dart.legacy(core.String)))();
  var VoidTovoid = () => (VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))();
  var VoidToLvoid = () => (VoidToLvoid = dart.constFn(dart.legacy(VoidTovoid())))();
  var StringLAndFnTovoid = () => (StringLAndFnTovoid = dart.constFn(dart.fnType(dart.void, [StringL(), VoidToLvoid()])))();
  var _ToolbarRenderBoxL = () => (_ToolbarRenderBoxL = dart.constFn(dart.legacy(text_selection$._ToolbarRenderBox)))();
  var RenderObjectL = () => (RenderObjectL = dart.constFn(dart.legacy(object.RenderObject)))();
  var _ToolbarParentDataL = () => (_ToolbarParentDataL = dart.constFn(dart.legacy(text_selection$._ToolbarParentData)))();
  var PaintingContextL = () => (PaintingContextL = dart.constFn(dart.legacy(object.PaintingContext)))();
  var OffsetL = () => (OffsetL = dart.constFn(dart.legacy(ui.Offset)))();
  var PaintingContextLAndOffsetLTovoid = () => (PaintingContextLAndOffsetLTovoid = dart.constFn(dart.fnType(dart.void, [PaintingContextL(), OffsetL()])))();
  var ColorL = () => (ColorL = dart.constFn(dart.legacy(ui.Color)))();
  var JSArrayOfColorL = () => (JSArrayOfColorL = dart.constFn(_interceptors.JSArray$(ColorL())))();
  var doubleL = () => (doubleL = dart.constFn(dart.legacy(core.double)))();
  var JSArrayOfdoubleL = () => (JSArrayOfdoubleL = dart.constFn(_interceptors.JSArray$(doubleL())))();
  var boolL = () => (boolL = dart.constFn(dart.legacy(core.bool)))();
  var VoidToboolL = () => (VoidToboolL = dart.constFn(dart.fnType(boolL(), [])))();
  var _TextSelectionHandlePainterL = () => (_TextSelectionHandlePainterL = dart.constFn(dart.legacy(text_selection$._TextSelectionHandlePainter)))();
  var FutureOfvoid = () => (FutureOfvoid = dart.constFn(async.Future$(dart.void)))();
  var FutureLOfvoid = () => (FutureLOfvoid = dart.constFn(dart.legacy(FutureOfvoid())))();
  var VoidToFutureLOfvoid = () => (VoidToFutureLOfvoid = dart.constFn(dart.fnType(FutureLOfvoid(), [])))();
  var _CupertinoTextSelectionToolbarContentL = () => (_CupertinoTextSelectionToolbarContentL = dart.constFn(dart.legacy(text_selection$._CupertinoTextSelectionToolbarContent)))();
  var _CupertinoTextSelectionToolbarItemsRenderBoxL = () => (_CupertinoTextSelectionToolbarItemsRenderBoxL = dart.constFn(dart.legacy(text_selection$._CupertinoTextSelectionToolbarItemsRenderBox)))();
  var _CupertinoTextSelectionToolbarItemsSlotL = () => (_CupertinoTextSelectionToolbarItemsSlotL = dart.constFn(dart.legacy(text_selection$._CupertinoTextSelectionToolbarItemsSlot)))();
  var ElementL = () => (ElementL = dart.constFn(dart.legacy(framework.Element)))();
  var LinkedMapOf_CupertinoTextSelectionToolbarItemsSlotL$ElementL = () => (LinkedMapOf_CupertinoTextSelectionToolbarItemsSlotL$ElementL = dart.constFn(_js_helper.LinkedMap$(_CupertinoTextSelectionToolbarItemsSlotL(), ElementL())))();
  var LinkedMapOfElementL$_CupertinoTextSelectionToolbarItemsSlotL = () => (LinkedMapOfElementL$_CupertinoTextSelectionToolbarItemsSlotL = dart.constFn(_js_helper.LinkedMap$(ElementL(), _CupertinoTextSelectionToolbarItemsSlotL())))();
  var _HashSetOfElementL = () => (_HashSetOfElementL = dart.constFn(collection._HashSet$(ElementL())))();
  var _CupertinoTextSelectionToolbarItemsL = () => (_CupertinoTextSelectionToolbarItemsL = dart.constFn(dart.legacy(text_selection$._CupertinoTextSelectionToolbarItems)))();
  var RenderBoxL = () => (RenderBoxL = dart.constFn(dart.legacy(box.RenderBox)))();
  var IndexedSlotL = () => (IndexedSlotL = dart.constFn(dart.legacy(framework.IndexedSlot)))();
  var IndexedSlotOfElementL = () => (IndexedSlotOfElementL = dart.constFn(framework.IndexedSlot$(ElementL())))();
  var IndexedSlotLOfElementL = () => (IndexedSlotLOfElementL = dart.constFn(dart.legacy(IndexedSlotOfElementL())))();
  var ToolbarItemsParentDataL = () => (ToolbarItemsParentDataL = dart.constFn(dart.legacy(text_selection.ToolbarItemsParentData)))();
  var ListOfElementL = () => (ListOfElementL = dart.constFn(core.List$(ElementL())))();
  var ElementLAnd_CupertinoTextSelectionToolbarItemsSlotLToNullN = () => (ElementLAnd_CupertinoTextSelectionToolbarItemsSlotLToNullN = dart.constFn(dart.fnType(core.Null, [ElementL(), _CupertinoTextSelectionToolbarItemsSlotL()])))();
  var ElementLToboolL = () => (ElementLToboolL = dart.constFn(dart.fnType(boolL(), [ElementL()])))();
  var LinkedMapOf_CupertinoTextSelectionToolbarItemsSlotL$RenderBoxL = () => (LinkedMapOf_CupertinoTextSelectionToolbarItemsSlotL$RenderBoxL = dart.constFn(_js_helper.LinkedMap$(_CupertinoTextSelectionToolbarItemsSlotL(), RenderBoxL())))();
  var LinkedMapOfRenderBoxL$_CupertinoTextSelectionToolbarItemsSlotL = () => (LinkedMapOfRenderBoxL$_CupertinoTextSelectionToolbarItemsSlotL = dart.constFn(_js_helper.LinkedMap$(RenderBoxL(), _CupertinoTextSelectionToolbarItemsSlotL())))();
  var RenderObjectLToNullN = () => (RenderObjectLToNullN = dart.constFn(dart.fnType(core.Null, [RenderObjectL()])))();
  var BoxHitTestResultL = () => (BoxHitTestResultL = dart.constFn(dart.legacy(box.BoxHitTestResult)))();
  var BoxHitTestResultLAndOffsetLToboolL = () => (BoxHitTestResultLAndOffsetLToboolL = dart.constFn(dart.fnType(boolL(), [BoxHitTestResultL(), OffsetL()])))();
  var PipelineOwnerL = () => (PipelineOwnerL = dart.constFn(dart.legacy(object.PipelineOwner)))();
  var RenderBoxLAnd_CupertinoTextSelectionToolbarItemsSlotLToNullN = () => (RenderBoxLAnd_CupertinoTextSelectionToolbarItemsSlotLToNullN = dart.constFn(dart.fnType(core.Null, [RenderBoxL(), _CupertinoTextSelectionToolbarItemsSlotL()])))();
  var DiagnosticsNodeL = () => (DiagnosticsNodeL = dart.constFn(dart.legacy(diagnostics.DiagnosticsNode)))();
  var JSArrayOfDiagnosticsNodeL = () => (JSArrayOfDiagnosticsNodeL = dart.constFn(_interceptors.JSArray$(DiagnosticsNodeL())))();
  const CT = Object.create(null);
  var L0 = "package:flutter/src/cupertino/text_selection.dart";
  var L1 = "file:///C:/flutter/packages/flutter/lib/src/cupertino/text_selection.dart";
  dart.defineLazy(CT, {
    get C3() {
      return C3 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 29,
        [_Location_line]: 153,
        [_Location_file]: null
      });
    },
    get C4() {
      return C4 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 41,
        [_Location_line]: 153,
        [_Location_file]: null
      });
    },
    get C2() {
      return C2 = dart.constList([C3 || CT.C3, C4 || CT.C4], _LocationL());
    },
    get C1() {
      return C1 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C2 || CT.C2,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 153,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/cupertino/text_selection.dart"
      });
    },
    get C0() {
      return C0 = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget__location]: C1 || CT.C1,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 0,
        [SizedBox_width]: 0
      });
    },
    get C7() {
      return C7 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 18,
        [_Location_line]: 162,
        [_Location_file]: null
      });
    },
    get C6() {
      return C6 = dart.constList([C7 || CT.C7], _LocationL());
    },
    get C5() {
      return C5 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C6 || CT.C6,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 162,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/cupertino/text_selection.dart"
      });
    },
    get C10() {
      return C10 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 11,
        [_Location_line]: 174,
        [_Location_file]: null
      });
    },
    get C11() {
      return C11 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "overflow",
        [_Location_column]: 11,
        [_Location_line]: 175,
        [_Location_file]: null
      });
    },
    get C12() {
      return C12 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 11,
        [_Location_line]: 176,
        [_Location_file]: null
      });
    },
    get C9() {
      return C9 = dart.constList([C10 || CT.C10, C11 || CT.C11, C12 || CT.C12], _LocationL());
    },
    get C8() {
      return C8 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C9 || CT.C9,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 173,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/cupertino/text_selection.dart"
      });
    },
    get C15() {
      return C15 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 173,
        [_Location_file]: null
      });
    },
    get C16() {
      return C16 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "borderRadius",
        [_Location_column]: 9,
        [_Location_line]: 178,
        [_Location_file]: null
      });
    },
    get C17() {
      return C17 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 9,
        [_Location_line]: 179,
        [_Location_file]: null
      });
    },
    get C18() {
      return C18 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "minSize",
        [_Location_column]: 9,
        [_Location_line]: 180,
        [_Location_file]: null
      });
    },
    get C19() {
      return C19 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPressed",
        [_Location_column]: 9,
        [_Location_line]: 181,
        [_Location_file]: null
      });
    },
    get C20() {
      return C20 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 9,
        [_Location_line]: 182,
        [_Location_file]: null
      });
    },
    get C21() {
      return C21 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pressedOpacity",
        [_Location_column]: 9,
        [_Location_line]: 183,
        [_Location_file]: null
      });
    },
    get C14() {
      return C14 = dart.constList([C15 || CT.C15, C16 || CT.C16, C17 || CT.C17, C18 || CT.C18, C19 || CT.C19, C20 || CT.C20, C21 || CT.C21], _LocationL());
    },
    get C13() {
      return C13 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C14 || CT.C14,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 172,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/cupertino/text_selection.dart"
      });
    },
    get C24() {
      return C24 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isArrowPointingDown",
        [_Location_column]: 9,
        [_Location_line]: 206,
        [_Location_file]: null
      });
    },
    get C25() {
      return C25 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 9,
        [_Location_line]: 207,
        [_Location_file]: null
      });
    },
    get C23() {
      return C23 = dart.constList([C24 || CT.C24, C25 || CT.C25], _LocationL());
    },
    get C22() {
      return C22 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C23 || CT.C23,
        [_Location_name]: null,
        [_Location_column]: 37,
        [_Location_line]: 205,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/cupertino/text_selection.dart"
      });
    },
    get C28() {
      return C28 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "barTopY",
        [_Location_column]: 7,
        [_Location_line]: 202,
        [_Location_file]: null
      });
    },
    get C29() {
      return C29 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "arrowTipX",
        [_Location_column]: 7,
        [_Location_line]: 203,
        [_Location_file]: null
      });
    },
    get C30() {
      return C30 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isArrowPointingDown",
        [_Location_column]: 7,
        [_Location_line]: 204,
        [_Location_file]: null
      });
    },
    get C31() {
      return C31 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 205,
        [_Location_file]: null
      });
    },
    get C27() {
      return C27 = dart.constList([C28 || CT.C28, C29 || CT.C29, C30 || CT.C30, C31 || CT.C31], _LocationL());
    },
    get C26() {
      return C26 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C27 || CT.C27,
        [_Location_name]: null,
        [_Location_column]: 42,
        [_Location_line]: 201,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/cupertino/text_selection.dart"
      });
    },
    get C32() {
      return C32 = dart.const({
        __proto__: box.BoxConstraints.prototype,
        [BoxConstraints_maxHeight]: 43,
        [BoxConstraints_minHeight]: 43,
        [BoxConstraints_maxWidth]: 1 / 0,
        [BoxConstraints_minWidth]: 0
      });
    },
    get C33() {
      return C33 = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 8,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 8
      });
    },
    get C34() {
      return C34 = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 0,
        [OffsetBase__dx]: 0
      });
    },
    get C35() {
      return C35 = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 10,
        [OffsetBase__dx]: 10
      });
    },
    get C36() {
      return C36 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 0
      });
    },
    get C37() {
      return C37 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294902015.0
      });
    },
    get C38() {
      return C38 = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 6,
        [OffsetBase__dx]: 6
      });
    },
    get C39() {
      return C39 = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 10.5,
        [OffsetBase__dx]: 5
      });
    },
    get C42() {
      return C42 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "arrowTipX",
        [_Location_column]: 7,
        [_Location_line]: 491,
        [_Location_file]: null
      });
    },
    get C43() {
      return C43 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "barTopY",
        [_Location_column]: 7,
        [_Location_line]: 492,
        [_Location_file]: null
      });
    },
    get C44() {
      return C44 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipboardStatus",
        [_Location_column]: 7,
        [_Location_line]: 493,
        [_Location_file]: null
      });
    },
    get C45() {
      return C45 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "handleCut",
        [_Location_column]: 7,
        [_Location_line]: 494,
        [_Location_file]: null
      });
    },
    get C46() {
      return C46 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "handleCopy",
        [_Location_column]: 7,
        [_Location_line]: 495,
        [_Location_file]: null
      });
    },
    get C47() {
      return C47 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "handlePaste",
        [_Location_column]: 7,
        [_Location_line]: 496,
        [_Location_file]: null
      });
    },
    get C48() {
      return C48 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "handleSelectAll",
        [_Location_column]: 7,
        [_Location_line]: 497,
        [_Location_file]: null
      });
    },
    get C49() {
      return C49 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isArrowPointingDown",
        [_Location_column]: 7,
        [_Location_line]: 498,
        [_Location_file]: null
      });
    },
    get C41() {
      return C41 = dart.constList([C42 || CT.C42, C43 || CT.C43, C44 || CT.C44, C45 || CT.C45, C46 || CT.C46, C47 || CT.C47, C48 || CT.C48, C49 || CT.C49], _LocationL());
    },
    get C40() {
      return C40 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C41 || CT.C41,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 490,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/cupertino/text_selection.dart"
      });
    },
    get C52() {
      return C52 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "painter",
        [_Location_column]: 9,
        [_Location_line]: 512,
        [_Location_file]: null
      });
    },
    get C51() {
      return C51 = dart.constList([C52 || CT.C52], _LocationL());
    },
    get C50() {
      return C50 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C51 || CT.C51,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 511,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/cupertino/text_selection.dart"
      });
    },
    get C55() {
      return C55 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "size",
        [_Location_column]: 7,
        [_Location_line]: 510,
        [_Location_file]: null
      });
    },
    get C56() {
      return C56 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 511,
        [_Location_file]: null
      });
    },
    get C54() {
      return C54 = dart.constList([C55 || CT.C55, C56 || CT.C56], _LocationL());
    },
    get C53() {
      return C53 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C54 || CT.C54,
        [_Location_name]: null,
        [_Location_column]: 36,
        [_Location_line]: 509,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/cupertino/text_selection.dart"
      });
    },
    get C57() {
      return C57 = dart.const({
        __proto__: text_selection.TextSelectionHandleType.prototype,
        [_name]: "TextSelectionHandleType.left",
        index: 0
      });
    },
    get C60() {
      return C60 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "transform",
        [_Location_column]: 11,
        [_Location_line]: 525,
        [_Location_file]: null
      });
    },
    get C61() {
      return C61 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 529,
        [_Location_file]: null
      });
    },
    get C59() {
      return C59 = dart.constList([C60 || CT.C60, C61 || CT.C61], _LocationL());
    },
    get C58() {
      return C58 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C59 || CT.C59,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 524,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/cupertino/text_selection.dart"
      });
    },
    get C62() {
      return C62 = dart.const({
        __proto__: text_selection.TextSelectionHandleType.prototype,
        [_name]: "TextSelectionHandleType.right",
        index: 1
      });
    },
    get C65() {
      return C65 = dart.constList([], _LocationL());
    },
    get C64() {
      return C64 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C65 || CT.C65,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 533,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/cupertino/text_selection.dart"
      });
    },
    get C63() {
      return C63 = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget__location]: C64 || CT.C64,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: null,
        [SizedBox_width]: null
      });
    },
    get C66() {
      return C66 = dart.const({
        __proto__: text_selection.TextSelectionHandleType.prototype,
        [_name]: "TextSelectionHandleType.collapsed",
        index: 2
      });
    },
    get C67() {
      return C67 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 150000
      });
    },
    get C69() {
      return C69 = dart.const({
        __proto__: box_border.BoxShape.prototype,
        [_name$]: "BoxShape.rectangle",
        index: 0
      });
    },
    get C70() {
      return C70 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4286611584.0
      });
    },
    get C68() {
      return C68 = dart.const({
        __proto__: box_decoration.BoxDecoration.prototype,
        [BoxDecoration_shape]: C69 || CT.C69,
        [BoxDecoration_backgroundBlendMode]: null,
        [BoxDecoration_gradient]: null,
        [BoxDecoration_boxShadow]: null,
        [BoxDecoration_borderRadius]: null,
        [BoxDecoration_border]: null,
        [BoxDecoration_image]: null,
        [BoxDecoration_color]: C70 || CT.C70
      });
    },
    get C74() {
      return C74 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 31,
        [_Location_line]: 667,
        [_Location_file]: null
      });
    },
    get C75() {
      return C75 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 36,
        [_Location_line]: 667,
        [_Location_file]: null
      });
    },
    get C73() {
      return C73 = dart.constList([C74 || CT.C74, C75 || CT.C75], _LocationL());
    },
    get C72() {
      return C72 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C73 || CT.C73,
        [_Location_name]: null,
        [_Location_column]: 26,
        [_Location_line]: 667,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/cupertino/text_selection.dart"
      });
    },
    get C77() {
      return C77 = dart.const({
        __proto__: ui.FontWeight.prototype,
        [FontWeight_index]: 3
      });
    },
    get C78() {
      return C78 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294967295.0
      });
    },
    get C76() {
      return C76 = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: -0.15,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C77 || CT.C77,
        [TextStyle_fontSize]: 14,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C78 || CT.C78,
        [TextStyle_inherit]: false
      });
    },
    get C71() {
      return C71 = dart.const({
        __proto__: text$.Text.prototype,
        [Widget__location]: C72 || CT.C72,
        [Widget_key]: null,
        [Text__applyTextScaleFactorToWidgetSpan]: true,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C76 || CT.C76,
        [Text_textSpan]: null,
        [Text_data]: "◀"
      });
    },
    get C81() {
      return C81 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "borderRadius",
        [_Location_column]: 13,
        [_Location_line]: 661,
        [_Location_file]: null
      });
    },
    get C82() {
      return C82 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 13,
        [_Location_line]: 662,
        [_Location_file]: null
      });
    },
    get C83() {
      return C83 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "minSize",
        [_Location_column]: 13,
        [_Location_line]: 663,
        [_Location_file]: null
      });
    },
    get C84() {
      return C84 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPressed",
        [_Location_column]: 13,
        [_Location_line]: 664,
        [_Location_file]: null
      });
    },
    get C85() {
      return C85 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 13,
        [_Location_line]: 665,
        [_Location_file]: null
      });
    },
    get C86() {
      return C86 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pressedOpacity",
        [_Location_column]: 13,
        [_Location_line]: 666,
        [_Location_file]: null
      });
    },
    get C87() {
      return C87 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 667,
        [_Location_file]: null
      });
    },
    get C80() {
      return C80 = dart.constList([C81 || CT.C81, C82 || CT.C82, C83 || CT.C83, C84 || CT.C84, C85 || CT.C85, C86 || CT.C86, C87 || CT.C87], _LocationL());
    },
    get C79() {
      return C79 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C80 || CT.C80,
        [_Location_name]: null,
        [_Location_column]: 23,
        [_Location_line]: 660,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/cupertino/text_selection.dart"
      });
    },
    get C91() {
      return C91 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 31,
        [_Location_line]: 677,
        [_Location_file]: null
      });
    },
    get C92() {
      return C92 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 36,
        [_Location_line]: 677,
        [_Location_file]: null
      });
    },
    get C90() {
      return C90 = dart.constList([C91 || CT.C91, C92 || CT.C92], _LocationL());
    },
    get C89() {
      return C89 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C90 || CT.C90,
        [_Location_name]: null,
        [_Location_column]: 26,
        [_Location_line]: 677,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/cupertino/text_selection.dart"
      });
    },
    get C88() {
      return C88 = dart.const({
        __proto__: text$.Text.prototype,
        [Widget__location]: C89 || CT.C89,
        [Widget_key]: null,
        [Text__applyTextScaleFactorToWidgetSpan]: true,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C76 || CT.C76,
        [Text_textSpan]: null,
        [Text_data]: "▶"
      });
    },
    get C95() {
      return C95 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "borderRadius",
        [_Location_column]: 13,
        [_Location_line]: 671,
        [_Location_file]: null
      });
    },
    get C96() {
      return C96 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 13,
        [_Location_line]: 672,
        [_Location_file]: null
      });
    },
    get C97() {
      return C97 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "minSize",
        [_Location_column]: 13,
        [_Location_line]: 673,
        [_Location_file]: null
      });
    },
    get C98() {
      return C98 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPressed",
        [_Location_column]: 13,
        [_Location_line]: 674,
        [_Location_file]: null
      });
    },
    get C99() {
      return C99 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 13,
        [_Location_line]: 675,
        [_Location_file]: null
      });
    },
    get C100() {
      return C100 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pressedOpacity",
        [_Location_column]: 13,
        [_Location_line]: 676,
        [_Location_file]: null
      });
    },
    get C101() {
      return C101 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 677,
        [_Location_file]: null
      });
    },
    get C94() {
      return C94 = dart.constList([C95 || CT.C95, C96 || CT.C96, C97 || CT.C97, C98 || CT.C98, C99 || CT.C99, C100 || CT.C100, C101 || CT.C101], _LocationL());
    },
    get C93() {
      return C93 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C94 || CT.C94,
        [_Location_name]: null,
        [_Location_column]: 23,
        [_Location_line]: 670,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/cupertino/text_selection.dart"
      });
    },
    get C105() {
      return C105 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 31,
        [_Location_line]: 687,
        [_Location_file]: null
      });
    },
    get C106() {
      return C106 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 36,
        [_Location_line]: 687,
        [_Location_file]: null
      });
    },
    get C104() {
      return C104 = dart.constList([C105 || CT.C105, C106 || CT.C106], _LocationL());
    },
    get C103() {
      return C103 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C104 || CT.C104,
        [_Location_name]: null,
        [_Location_column]: 26,
        [_Location_line]: 687,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/cupertino/text_selection.dart"
      });
    },
    get C109() {
      return C109 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4285887861.0
      });
    },
    get C110() {
      return C110 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4288256409.0
      });
    },
    get C108() {
      return C108 = dart.const({
        __proto__: colors.CupertinoDynamicColor.prototype,
        [Color_value]: 0,
        [CupertinoDynamicColor_darkHighContrastElevatedColor]: C109 || CT.C109,
        [CupertinoDynamicColor_highContrastElevatedColor]: C110 || CT.C110,
        [CupertinoDynamicColor_darkElevatedColor]: C109 || CT.C109,
        [CupertinoDynamicColor_elevatedColor]: C110 || CT.C110,
        [CupertinoDynamicColor_darkHighContrastColor]: C109 || CT.C109,
        [CupertinoDynamicColor_highContrastColor]: C110 || CT.C110,
        [CupertinoDynamicColor_darkColor]: C109 || CT.C109,
        [CupertinoDynamicColor_color]: C110 || CT.C110,
        [CupertinoDynamicColor__debugResolveContext]: null,
        [CupertinoDynamicColor__debugLabel]: "inactiveGray",
        [CupertinoDynamicColor__effectiveColor]: C110 || CT.C110
      });
    },
    get C107() {
      return C107 = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: -0.15,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C77 || CT.C77,
        [TextStyle_fontSize]: 14,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C108 || CT.C108,
        [TextStyle_inherit]: false
      });
    },
    get C102() {
      return C102 = dart.const({
        __proto__: text$.Text.prototype,
        [Widget__location]: C103 || CT.C103,
        [Widget_key]: null,
        [Text__applyTextScaleFactorToWidgetSpan]: true,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C107 || CT.C107,
        [Text_textSpan]: null,
        [Text_data]: "▶"
      });
    },
    get C113() {
      return C113 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "borderRadius",
        [_Location_column]: 13,
        [_Location_line]: 680,
        [_Location_file]: null
      });
    },
    get C114() {
      return C114 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 13,
        [_Location_line]: 681,
        [_Location_file]: null
      });
    },
    get C115() {
      return C115 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "disabledColor",
        [_Location_column]: 13,
        [_Location_line]: 682,
        [_Location_file]: null
      });
    },
    get C116() {
      return C116 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "minSize",
        [_Location_column]: 13,
        [_Location_line]: 683,
        [_Location_file]: null
      });
    },
    get C117() {
      return C117 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPressed",
        [_Location_column]: 13,
        [_Location_line]: 684,
        [_Location_file]: null
      });
    },
    get C118() {
      return C118 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 13,
        [_Location_line]: 685,
        [_Location_file]: null
      });
    },
    get C119() {
      return C119 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pressedOpacity",
        [_Location_column]: 13,
        [_Location_line]: 686,
        [_Location_file]: null
      });
    },
    get C120() {
      return C120 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 687,
        [_Location_file]: null
      });
    },
    get C112() {
      return C112 = dart.constList([C113 || CT.C113, C114 || CT.C114, C115 || CT.C115, C116 || CT.C116, C117 || CT.C117, C118 || CT.C118, C119 || CT.C119, C120 || CT.C120], _LocationL());
    },
    get C111() {
      return C111 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C112 || CT.C112,
        [_Location_name]: null,
        [_Location_column]: 31,
        [_Location_line]: 679,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/cupertino/text_selection.dart"
      });
    },
    get C123() {
      return C123 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "page",
        [_Location_column]: 11,
        [_Location_line]: 659,
        [_Location_file]: null
      });
    },
    get C124() {
      return C124 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backButton",
        [_Location_column]: 11,
        [_Location_line]: 660,
        [_Location_file]: null
      });
    },
    get C125() {
      return C125 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "dividerWidth",
        [_Location_column]: 11,
        [_Location_line]: 669,
        [_Location_file]: null
      });
    },
    get C126() {
      return C126 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "nextButton",
        [_Location_column]: 11,
        [_Location_line]: 670,
        [_Location_file]: null
      });
    },
    get C127() {
      return C127 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "nextButtonDisabled",
        [_Location_column]: 11,
        [_Location_line]: 679,
        [_Location_file]: null
      });
    },
    get C128() {
      return C128 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 11,
        [_Location_line]: 689,
        [_Location_file]: null
      });
    },
    get C122() {
      return C122 = dart.constList([C123 || CT.C123, C124 || CT.C124, C125 || CT.C125, C126 || CT.C126, C127 || CT.C127, C128 || CT.C128], _LocationL());
    },
    get C121() {
      return C121 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C122 || CT.C122,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 658,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/cupertino/text_selection.dart"
      });
    },
    get C131() {
      return C131 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 9,
        [_Location_line]: 657,
        [_Location_file]: null
      });
    },
    get C132() {
      return C132 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 658,
        [_Location_file]: null
      });
    },
    get C130() {
      return C130 = dart.constList([C131 || CT.C131, C132 || CT.C132], _LocationL());
    },
    get C129() {
      return C129 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C130 || CT.C130,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 656,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/cupertino/text_selection.dart"
      });
    },
    get C135() {
      return C135 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "decoration",
        [_Location_column]: 7,
        [_Location_line]: 655,
        [_Location_file]: null
      });
    },
    get C136() {
      return C136 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 656,
        [_Location_file]: null
      });
    },
    get C134() {
      return C134 = dart.constList([C135 || CT.C135, C136 || CT.C136], _LocationL());
    },
    get C133() {
      return C133 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C134 || CT.C134,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 654,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/cupertino/text_selection.dart"
      });
    },
    get C137() {
      return C137 = dart.const({
        __proto__: text_selection$._CupertinoTextSelectionToolbarItemsSlot.prototype,
        [_name$0]: "_CupertinoTextSelectionToolbarItemsSlot.backButton",
        index: 0
      });
    },
    get C138() {
      return C138 = dart.const({
        __proto__: text_selection$._CupertinoTextSelectionToolbarItemsSlot.prototype,
        [_name$0]: "_CupertinoTextSelectionToolbarItemsSlot.nextButton",
        index: 1
      });
    },
    get C139() {
      return C139 = dart.const({
        __proto__: text_selection$._CupertinoTextSelectionToolbarItemsSlot.prototype,
        [_name$0]: "_CupertinoTextSelectionToolbarItemsSlot.nextButtonDisabled",
        index: 2
      });
    },
    get C140() {
      return C140 = dart.constList([C137 || CT.C137, C138 || CT.C138, C139 || CT.C139], _CupertinoTextSelectionToolbarItemsSlotL());
    },
    get C141() {
      return C141 = dart.const({
        __proto__: ui.Size.prototype,
        [OffsetBase__dy]: 7,
        [OffsetBase__dx]: 14
      });
    },
    get C142() {
      return C142 = dart.const({
        __proto__: ui.Radius.prototype,
        [Radius_y]: 8,
        [Radius_x]: 8
      });
    },
    get C143() {
      return C143 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 3944751136.0
      });
    },
    get C144() {
      return C144 = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 10,
        [EdgeInsets_right]: 18,
        [EdgeInsets_top]: 10,
        [EdgeInsets_left]: 18
      });
    }
  }, false);
  var arrowTipX$ = dart.privateName(text_selection$, "_CupertinoTextSelectionToolbarWrapper.arrowTipX");
  var barTopY$ = dart.privateName(text_selection$, "_CupertinoTextSelectionToolbarWrapper.barTopY");
  var clipboardStatus$ = dart.privateName(text_selection$, "_CupertinoTextSelectionToolbarWrapper.clipboardStatus");
  var handleCut$ = dart.privateName(text_selection$, "_CupertinoTextSelectionToolbarWrapper.handleCut");
  var handleCopy$ = dart.privateName(text_selection$, "_CupertinoTextSelectionToolbarWrapper.handleCopy");
  var handlePaste$ = dart.privateName(text_selection$, "_CupertinoTextSelectionToolbarWrapper.handlePaste");
  var handleSelectAll$ = dart.privateName(text_selection$, "_CupertinoTextSelectionToolbarWrapper.handleSelectAll");
  var isArrowPointingDown$ = dart.privateName(text_selection$, "_CupertinoTextSelectionToolbarWrapper.isArrowPointingDown");
  text_selection$._CupertinoTextSelectionToolbarWrapper = class _CupertinoTextSelectionToolbarWrapper extends framework.StatefulWidget {
    get arrowTipX() {
      return this[arrowTipX$];
    }
    set arrowTipX(value) {
      super.arrowTipX = value;
    }
    get barTopY() {
      return this[barTopY$];
    }
    set barTopY(value) {
      super.barTopY = value;
    }
    get clipboardStatus() {
      return this[clipboardStatus$];
    }
    set clipboardStatus(value) {
      super.clipboardStatus = value;
    }
    get handleCut() {
      return this[handleCut$];
    }
    set handleCut(value) {
      super.handleCut = value;
    }
    get handleCopy() {
      return this[handleCopy$];
    }
    set handleCopy(value) {
      super.handleCopy = value;
    }
    get handlePaste() {
      return this[handlePaste$];
    }
    set handlePaste(value) {
      super.handlePaste = value;
    }
    get handleSelectAll() {
      return this[handleSelectAll$];
    }
    set handleSelectAll(value) {
      super.handleSelectAll = value;
    }
    get isArrowPointingDown() {
      return this[isArrowPointingDown$];
    }
    set isArrowPointingDown(value) {
      super.isArrowPointingDown = value;
    }
    createState() {
      return new text_selection$._CupertinoTextSelectionToolbarWrapperState.new();
    }
  };
  (text_selection$._CupertinoTextSelectionToolbarWrapper.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let arrowTipX = opts && 'arrowTipX' in opts ? opts.arrowTipX : null;
    let barTopY = opts && 'barTopY' in opts ? opts.barTopY : null;
    let clipboardStatus = opts && 'clipboardStatus' in opts ? opts.clipboardStatus : null;
    let handleCut = opts && 'handleCut' in opts ? opts.handleCut : null;
    let handleCopy = opts && 'handleCopy' in opts ? opts.handleCopy : null;
    let handlePaste = opts && 'handlePaste' in opts ? opts.handlePaste : null;
    let handleSelectAll = opts && 'handleSelectAll' in opts ? opts.handleSelectAll : null;
    let isArrowPointingDown = opts && 'isArrowPointingDown' in opts ? opts.isArrowPointingDown : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[arrowTipX$] = arrowTipX;
    this[barTopY$] = barTopY;
    this[clipboardStatus$] = clipboardStatus;
    this[handleCut$] = handleCut;
    this[handleCopy$] = handleCopy;
    this[handlePaste$] = handlePaste;
    this[handleSelectAll$] = handleSelectAll;
    this[isArrowPointingDown$] = isArrowPointingDown;
    text_selection$._CupertinoTextSelectionToolbarWrapper.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = text_selection$._CupertinoTextSelectionToolbarWrapper.prototype;
  dart.addTypeTests(text_selection$._CupertinoTextSelectionToolbarWrapper);
  dart.addTypeCaches(text_selection$._CupertinoTextSelectionToolbarWrapper);
  dart.setMethodSignature(text_selection$._CupertinoTextSelectionToolbarWrapper, () => ({
    __proto__: dart.getMethods(text_selection$._CupertinoTextSelectionToolbarWrapper.__proto__),
    createState: dart.fnType(dart.legacy(text_selection$._CupertinoTextSelectionToolbarWrapperState), [])
  }));
  dart.setLibraryUri(text_selection$._CupertinoTextSelectionToolbarWrapper, L0);
  dart.setFieldSignature(text_selection$._CupertinoTextSelectionToolbarWrapper, () => ({
    __proto__: dart.getFields(text_selection$._CupertinoTextSelectionToolbarWrapper.__proto__),
    arrowTipX: dart.finalFieldType(dart.legacy(core.double)),
    barTopY: dart.finalFieldType(dart.legacy(core.double)),
    clipboardStatus: dart.finalFieldType(dart.legacy(text_selection.ClipboardStatusNotifier)),
    handleCut: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, []))),
    handleCopy: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, []))),
    handlePaste: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, []))),
    handleSelectAll: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, []))),
    isArrowPointingDown: dart.finalFieldType(dart.legacy(core.bool))
  }));
  var _clipboardStatus = dart.privateName(text_selection$, "_clipboardStatus");
  var _onChangedClipboardStatus = dart.privateName(text_selection$, "_onChangedClipboardStatus");
  var _Location_parameterLocations = dart.privateName(widget_inspector, "_Location.parameterLocations");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  var C3;
  var C4;
  var C2;
  var C1;
  var Widget__location = dart.privateName(framework, "Widget._location");
  var Widget_key = dart.privateName(framework, "Widget.key");
  var SingleChildRenderObjectWidget_child = dart.privateName(framework, "SingleChildRenderObjectWidget.child");
  var SizedBox_height = dart.privateName(basic, "SizedBox.height");
  var SizedBox_width = dart.privateName(basic, "SizedBox.width");
  var C0;
  var C7;
  var C6;
  var C5;
  var C10;
  var C11;
  var C12;
  var C9;
  var C8;
  var C15;
  var C16;
  var C17;
  var C18;
  var C19;
  var C20;
  var C21;
  var C14;
  var C13;
  var C24;
  var C25;
  var C23;
  var C22;
  var C28;
  var C29;
  var C30;
  var C31;
  var C27;
  var C26;
  text_selection$._CupertinoTextSelectionToolbarWrapperState = class _CupertinoTextSelectionToolbarWrapperState extends framework.State$(dart.legacy(text_selection$._CupertinoTextSelectionToolbarWrapper)) {
    [_onChangedClipboardStatus]() {
      this.setState(dart.fn(() => {
      }, VoidToNullN()));
    }
    initState() {
      let t0;
      super.initState();
      this[_clipboardStatus] = (t0 = this.widget.clipboardStatus, t0 == null ? new text_selection.ClipboardStatusNotifier.new() : t0);
      this[_clipboardStatus].addListener(dart.bind(this, _onChangedClipboardStatus));
      this[_clipboardStatus].update();
    }
    didUpdateWidget(oldWidget) {
      _CupertinoTextSelectionToolbarWrapperL().as(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (oldWidget.clipboardStatus == null && this.widget.clipboardStatus != null) {
        this[_clipboardStatus].removeListener(dart.bind(this, _onChangedClipboardStatus));
        this[_clipboardStatus].dispose();
        this[_clipboardStatus] = this.widget.clipboardStatus;
      } else if (oldWidget.clipboardStatus != null) {
        if (this.widget.clipboardStatus == null) {
          this[_clipboardStatus] = new text_selection.ClipboardStatusNotifier.new();
          this[_clipboardStatus].addListener(dart.bind(this, _onChangedClipboardStatus));
          oldWidget.clipboardStatus.removeListener(dart.bind(this, _onChangedClipboardStatus));
        } else if (!dart.equals(this.widget.clipboardStatus, oldWidget.clipboardStatus)) {
          this[_clipboardStatus] = this.widget.clipboardStatus;
          this[_clipboardStatus].addListener(dart.bind(this, _onChangedClipboardStatus));
          oldWidget.clipboardStatus.removeListener(dart.bind(this, _onChangedClipboardStatus));
        }
      }
      if (this.widget.handlePaste != null) {
        this[_clipboardStatus].update();
      }
    }
    dispose() {
      super.dispose();
      if (!dart.test(this[_clipboardStatus].disposed)) {
        this[_clipboardStatus].removeListener(dart.bind(this, _onChangedClipboardStatus));
        if (this.widget.clipboardStatus == null) {
          this[_clipboardStatus].dispose();
        }
      }
    }
    build(context) {
      if (this.widget.handlePaste != null && this[_clipboardStatus].value == text_selection.ClipboardStatus.unknown) {
        return C0 || CT.C0;
      }
      let items = JSArrayOfWidgetL().of([]);
      let localizations = localizations$.CupertinoLocalizations.of(context);
      let arrowPadding = dart.test(this.widget.isArrowPointingDown) ? new edge_insets.EdgeInsets.only({bottom: text_selection$._kToolbarArrowSize.height}) : new edge_insets.EdgeInsets.only({top: text_selection$._kToolbarArrowSize.height});
      let onePhysicalPixelVerticalDivider = new basic.SizedBox.new({width: 1.0 / dart.notNull(media_query.MediaQuery.of(context).devicePixelRatio), $creationLocationd_0dea112b090073317d4: C5 || CT.C5});
      function addToolbarButton(text, onPressed) {
        if (dart.test(items[$isNotEmpty])) {
          items[$add](onePhysicalPixelVerticalDivider);
        }
        items[$add](new button.CupertinoButton.new({child: new text$.Text.new(text, {overflow: paragraph.TextOverflow.ellipsis, style: text_selection$._kToolbarButtonFontStyle, $creationLocationd_0dea112b090073317d4: C8 || CT.C8}), borderRadius: null, color: text_selection$._kToolbarBackgroundColor, minSize: 43, onPressed: onPressed, padding: text_selection$._kToolbarButtonPadding.add(arrowPadding), pressedOpacity: 0.7, $creationLocationd_0dea112b090073317d4: C13 || CT.C13}));
      }
      dart.fn(addToolbarButton, StringLAndFnTovoid());
      if (this.widget.handleCut != null) {
        addToolbarButton(localizations.cutButtonLabel, this.widget.handleCut);
      }
      if (this.widget.handleCopy != null) {
        addToolbarButton(localizations.copyButtonLabel, this.widget.handleCopy);
      }
      if (this.widget.handlePaste != null && this[_clipboardStatus].value == text_selection.ClipboardStatus.pasteable) {
        addToolbarButton(localizations.pasteButtonLabel, this.widget.handlePaste);
      }
      if (this.widget.handleSelectAll != null) {
        addToolbarButton(localizations.selectAllButtonLabel, this.widget.handleSelectAll);
      }
      return new text_selection$.CupertinoTextSelectionToolbar.__({barTopY: this.widget.barTopY, arrowTipX: this.widget.arrowTipX, isArrowPointingDown: this.widget.isArrowPointingDown, child: dart.test(items[$isEmpty]) ? null : new text_selection$._CupertinoTextSelectionToolbarContent.new({isArrowPointingDown: this.widget.isArrowPointingDown, children: items, $creationLocationd_0dea112b090073317d4: C22 || CT.C22}), $creationLocationd_0dea112b090073317d4: C26 || CT.C26});
    }
  };
  (text_selection$._CupertinoTextSelectionToolbarWrapperState.new = function() {
    this[_clipboardStatus] = null;
    text_selection$._CupertinoTextSelectionToolbarWrapperState.__proto__.new.call(this);
    ;
  }).prototype = text_selection$._CupertinoTextSelectionToolbarWrapperState.prototype;
  dart.addTypeTests(text_selection$._CupertinoTextSelectionToolbarWrapperState);
  dart.addTypeCaches(text_selection$._CupertinoTextSelectionToolbarWrapperState);
  dart.setMethodSignature(text_selection$._CupertinoTextSelectionToolbarWrapperState, () => ({
    __proto__: dart.getMethods(text_selection$._CupertinoTextSelectionToolbarWrapperState.__proto__),
    [_onChangedClipboardStatus]: dart.fnType(dart.void, []),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(text_selection$._CupertinoTextSelectionToolbarWrapperState, L0);
  dart.setFieldSignature(text_selection$._CupertinoTextSelectionToolbarWrapperState, () => ({
    __proto__: dart.getFields(text_selection$._CupertinoTextSelectionToolbarWrapperState.__proto__),
    [_clipboardStatus]: dart.fieldType(dart.legacy(text_selection.ClipboardStatusNotifier))
  }));
  var _barTopY$ = dart.privateName(text_selection$, "_barTopY");
  var _arrowTipX$ = dart.privateName(text_selection$, "_arrowTipX");
  var _isArrowPointingDown$ = dart.privateName(text_selection$, "_isArrowPointingDown");
  var _barTopY = dart.privateName(text_selection$, "CupertinoTextSelectionToolbar._barTopY");
  var _arrowTipX = dart.privateName(text_selection$, "CupertinoTextSelectionToolbar._arrowTipX");
  var _isArrowPointingDown = dart.privateName(text_selection$, "CupertinoTextSelectionToolbar._isArrowPointingDown");
  text_selection$.CupertinoTextSelectionToolbar = class CupertinoTextSelectionToolbar extends framework.SingleChildRenderObjectWidget {
    get [_barTopY$]() {
      return this[_barTopY];
    }
    set [_barTopY$](value) {
      super[_barTopY$] = value;
    }
    get [_arrowTipX$]() {
      return this[_arrowTipX];
    }
    set [_arrowTipX$](value) {
      super[_arrowTipX$] = value;
    }
    get [_isArrowPointingDown$]() {
      return this[_isArrowPointingDown];
    }
    set [_isArrowPointingDown$](value) {
      super[_isArrowPointingDown$] = value;
    }
    createRenderObject(context) {
      return new text_selection$._ToolbarRenderBox.new(this[_barTopY$], this[_arrowTipX$], this[_isArrowPointingDown$], null);
    }
    updateRenderObject(context, renderObject) {
      let t0;
      _ToolbarRenderBoxL().as(renderObject);
      t0 = renderObject;
      (() => {
        t0.barTopY = this[_barTopY$];
        t0.arrowTipX = this[_arrowTipX$];
        t0.isArrowPointingDown = this[_isArrowPointingDown$];
        return t0;
      })();
    }
  };
  (text_selection$.CupertinoTextSelectionToolbar.__ = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let barTopY = opts && 'barTopY' in opts ? opts.barTopY : null;
    let arrowTipX = opts && 'arrowTipX' in opts ? opts.arrowTipX : null;
    let isArrowPointingDown = opts && 'isArrowPointingDown' in opts ? opts.isArrowPointingDown : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[_barTopY] = barTopY;
    this[_arrowTipX] = arrowTipX;
    this[_isArrowPointingDown] = isArrowPointingDown;
    text_selection$.CupertinoTextSelectionToolbar.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = text_selection$.CupertinoTextSelectionToolbar.prototype;
  dart.addTypeTests(text_selection$.CupertinoTextSelectionToolbar);
  dart.addTypeCaches(text_selection$.CupertinoTextSelectionToolbar);
  dart.setMethodSignature(text_selection$.CupertinoTextSelectionToolbar, () => ({
    __proto__: dart.getMethods(text_selection$.CupertinoTextSelectionToolbar.__proto__),
    createRenderObject: dart.fnType(dart.legacy(text_selection$._ToolbarRenderBox), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(text_selection$.CupertinoTextSelectionToolbar, L0);
  dart.setFieldSignature(text_selection$.CupertinoTextSelectionToolbar, () => ({
    __proto__: dart.getFields(text_selection$.CupertinoTextSelectionToolbar.__proto__),
    [_barTopY$]: dart.finalFieldType(dart.legacy(core.double)),
    [_arrowTipX$]: dart.finalFieldType(dart.legacy(core.double)),
    [_isArrowPointingDown$]: dart.finalFieldType(dart.legacy(core.bool))
  }));
  text_selection$._ToolbarParentData = class _ToolbarParentData extends box.BoxParentData {
    toString() {
      return "offset=" + dart.str(this.offset) + ", arrowXOffsetFromCenter=" + dart.str(this.arrowXOffsetFromCenter);
    }
  };
  (text_selection$._ToolbarParentData.new = function() {
    this.arrowXOffsetFromCenter = null;
    text_selection$._ToolbarParentData.__proto__.new.call(this);
    ;
  }).prototype = text_selection$._ToolbarParentData.prototype;
  dart.addTypeTests(text_selection$._ToolbarParentData);
  dart.addTypeCaches(text_selection$._ToolbarParentData);
  dart.setLibraryUri(text_selection$._ToolbarParentData, L0);
  dart.setFieldSignature(text_selection$._ToolbarParentData, () => ({
    __proto__: dart.getFields(text_selection$._ToolbarParentData.__proto__),
    arrowXOffsetFromCenter: dart.fieldType(dart.legacy(core.double))
  }));
  dart.defineExtensionMethods(text_selection$._ToolbarParentData, ['toString']);
  var BoxConstraints_maxHeight = dart.privateName(box, "BoxConstraints.maxHeight");
  var BoxConstraints_minHeight = dart.privateName(box, "BoxConstraints.minHeight");
  var BoxConstraints_maxWidth = dart.privateName(box, "BoxConstraints.maxWidth");
  var BoxConstraints_minWidth = dart.privateName(box, "BoxConstraints.minWidth");
  var C32;
  var _debugPaint = dart.privateName(text_selection$, "_debugPaint");
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  var C33;
  var _clipPath = dart.privateName(text_selection$, "_clipPath");
  var OffsetBase__dy = dart.privateName(ui, "OffsetBase._dy");
  var OffsetBase__dx = dart.privateName(ui, "OffsetBase._dx");
  var C34;
  var C35;
  var Color_value = dart.privateName(ui, "Color.value");
  var C36;
  var C37;
  text_selection$._ToolbarRenderBox = class _ToolbarRenderBox extends shifted_box.RenderShiftedBox {
    get isRepaintBoundary() {
      return true;
    }
    set barTopY(value) {
      if (this[_barTopY$] == value) {
        return;
      }
      this[_barTopY$] = value;
      this.markNeedsLayout();
      this.markNeedsSemanticsUpdate();
    }
    set arrowTipX(value) {
      if (this[_arrowTipX$] == value) {
        return;
      }
      this[_arrowTipX$] = value;
      this.markNeedsLayout();
      this.markNeedsSemanticsUpdate();
    }
    set isArrowPointingDown(value) {
      if (dart.equals(this[_isArrowPointingDown$], value)) {
        return;
      }
      this[_isArrowPointingDown$] = value;
      this.markNeedsLayout();
      this.markNeedsSemanticsUpdate();
    }
    setupParentData(child) {
      RenderObjectL().as(child);
      if (!_ToolbarParentDataL().is(child.parentData)) {
        child.parentData = new text_selection$._ToolbarParentData.new();
      }
    }
    performLayout() {
      let constraints = this.constraints;
      this.size = constraints.biggest;
      if (this.child == null) {
        return;
      }
      let enforcedConstraint = constraints.deflate(C33 || CT.C33).loosen();
      this.child.layout(this.heightConstraint.enforce(enforcedConstraint), {parentUsesSize: true});
      let childParentData = _ToolbarParentDataL().as(this.child.parentData);
      let lowerBound = dart.notNull(this.child.size.width) / 2 + 8;
      let upperBound = dart.notNull(this.size.width) - dart.notNull(this.child.size.width) / 2 - 8;
      let adjustedCenterX = this[_arrowTipX$][$clamp](lowerBound, upperBound);
      childParentData.offset = new ui.Offset.new(adjustedCenterX - dart.notNull(this.child.size.width) / 2, this[_barTopY$]);
      childParentData.arrowXOffsetFromCenter = dart.notNull(this[_arrowTipX$]) - adjustedCenterX;
    }
    [_clipPath]() {
      let t0, t0$;
      let childParentData = _ToolbarParentDataL().as(this.child.parentData);
      let rrect = (t0 = ui.Path.new(), (() => {
        t0.addRRect(new ui.RRect.fromRectAndRadius(new ui.Offset.new(0.0, dart.test(this[_isArrowPointingDown$]) ? 0.0 : text_selection$._kToolbarArrowSize.height)['&'](new ui.Size.new(this.child.size.width, dart.notNull(this.child.size.height) - dart.notNull(text_selection$._kToolbarArrowSize.height))), text_selection$._kToolbarBorderRadius));
        return t0;
      })());
      let arrowTipX = dart.notNull(this.child.size.width) / 2 + dart.notNull(childParentData.arrowXOffsetFromCenter);
      let arrowBottomY = dart.test(this[_isArrowPointingDown$]) ? dart.notNull(this.child.size.height) - dart.notNull(text_selection$._kToolbarArrowSize.height) : text_selection$._kToolbarArrowSize.height;
      let arrowTipY = dart.test(this[_isArrowPointingDown$]) ? this.child.size.height : 0.0;
      let arrow = (t0$ = ui.Path.new(), (() => {
        t0$.moveTo(arrowTipX, arrowTipY);
        t0$.lineTo(arrowTipX - dart.notNull(text_selection$._kToolbarArrowSize.width) / 2, arrowBottomY);
        t0$.lineTo(arrowTipX + dart.notNull(text_selection$._kToolbarArrowSize.width) / 2, arrowBottomY);
        t0$.close();
        return t0$;
      })());
      return ui.Path.combine(ui.PathOperation.union, rrect, arrow);
    }
    paint(context, offset) {
      if (this.child == null) {
        return;
      }
      let childParentData = _ToolbarParentDataL().as(this.child.parentData);
      context.pushClipPath(this.needsCompositing, offset['+'](childParentData.offset), ui.Offset.zero['&'](this.child.size), this[_clipPath](), dart.fn((innerContext, innerOffset) => innerContext.paintChild(this.child, innerOffset), PaintingContextLAndOffsetLTovoid()));
    }
    debugPaintSize(context, offset) {
      if (!dart.test(dart.fn(() => {
        let t0;
        if (this.child == null) {
          return true;
        }
        this[_debugPaint] == null ? this[_debugPaint] = (t0 = ui.Paint.new(), (() => {
          t0.shader = ui.Gradient.linear(C34 || CT.C34, C35 || CT.C35, JSArrayOfColorL().of([C36 || CT.C36, C37 || CT.C37, C37 || CT.C37, C36 || CT.C36]), JSArrayOfdoubleL().of([0.25, 0.25, 0.75, 0.75]), ui.TileMode.repeated);
          t0.strokeWidth = 2.0;
          t0.style = ui.PaintingStyle.stroke;
          return t0;
        })()) : null;
        let childParentData = _ToolbarParentDataL().as(this.child.parentData);
        context.canvas.drawPath(this[_clipPath]().shift(offset['+'](childParentData.offset)), this[_debugPaint]);
        return true;
      }, VoidToboolL())())) dart.assertFailed(null, L1, 389, 12, "() {\r\n      if (child == null) {\r\n        return true;\r\n      }\r\n\r\n      _debugPaint ??= Paint()\r\n      ..shader = ui.Gradient.linear(\r\n        const Offset(0.0, 0.0),\r\n        const Offset(10.0, 10.0),\r\n        <Color>[const Color(0x00000000), const Color(0xFFFF00FF), const Color(0xFFFF00FF), const Color(0x00000000)],\r\n        <double>[0.25, 0.25, 0.75, 0.75],\r\n        TileMode.repeated,\r\n      )\r\n      ..strokeWidth = 2.0\r\n      ..style = PaintingStyle.stroke;\r\n\r\n      final _ToolbarParentData childParentData = child.parentData as _ToolbarParentData;\r\n      context.canvas.drawPath(_clipPath().shift(offset + childParentData.offset), _debugPaint);\r\n      return true;\r\n    }()");
    }
  };
  (text_selection$._ToolbarRenderBox.new = function(_barTopY, _arrowTipX, _isArrowPointingDown, child) {
    this.heightConstraint = C32 || CT.C32;
    this[_debugPaint] = null;
    this[_barTopY$] = _barTopY;
    this[_arrowTipX$] = _arrowTipX;
    this[_isArrowPointingDown$] = _isArrowPointingDown;
    text_selection$._ToolbarRenderBox.__proto__.new.call(this, child);
    ;
  }).prototype = text_selection$._ToolbarRenderBox.prototype;
  dart.addTypeTests(text_selection$._ToolbarRenderBox);
  dart.addTypeCaches(text_selection$._ToolbarRenderBox);
  dart.setMethodSignature(text_selection$._ToolbarRenderBox, () => ({
    __proto__: dart.getMethods(text_selection$._ToolbarRenderBox.__proto__),
    [_clipPath]: dart.fnType(dart.legacy(ui.Path), [])
  }));
  dart.setSetterSignature(text_selection$._ToolbarRenderBox, () => ({
    __proto__: dart.getSetters(text_selection$._ToolbarRenderBox.__proto__),
    barTopY: dart.legacy(core.double),
    arrowTipX: dart.legacy(core.double),
    isArrowPointingDown: dart.legacy(core.bool)
  }));
  dart.setLibraryUri(text_selection$._ToolbarRenderBox, L0);
  dart.setFieldSignature(text_selection$._ToolbarRenderBox, () => ({
    __proto__: dart.getFields(text_selection$._ToolbarRenderBox.__proto__),
    [_barTopY$]: dart.fieldType(dart.legacy(core.double)),
    [_arrowTipX$]: dart.fieldType(dart.legacy(core.double)),
    [_isArrowPointingDown$]: dart.fieldType(dart.legacy(core.bool)),
    heightConstraint: dart.finalFieldType(dart.legacy(box.BoxConstraints)),
    [_debugPaint]: dart.fieldType(dart.legacy(ui.Paint))
  }));
  var C38;
  var C39;
  var color$ = dart.privateName(text_selection$, "_TextSelectionHandlePainter.color");
  text_selection$._TextSelectionHandlePainter = class _TextSelectionHandlePainter extends custom_paint.CustomPainter {
    get color() {
      return this[color$];
    }
    set color(value) {
      super.color = value;
    }
    paint(canvas, size) {
      let t0, t0$;
      let paint = (t0 = ui.Paint.new(), (() => {
        t0.color = this.color;
        return t0;
      })());
      let circle = new ui.Rect.fromCircle({center: C38 || CT.C38, radius: 6});
      let line = new ui.Rect.fromPoints(C39 || CT.C39, new ui.Offset.new(6 + 1, size.height));
      let path = (t0$ = ui.Path.new(), (() => {
        t0$.addOval(circle);
        t0$.addRect(line);
        return t0$;
      })());
      canvas.drawPath(path, paint);
    }
    shouldRepaint(oldPainter) {
      _TextSelectionHandlePainterL().as(oldPainter);
      return !dart.equals(this.color, oldPainter.color);
    }
  };
  (text_selection$._TextSelectionHandlePainter.new = function(color) {
    this[color$] = color;
    text_selection$._TextSelectionHandlePainter.__proto__.new.call(this);
    ;
  }).prototype = text_selection$._TextSelectionHandlePainter.prototype;
  dart.addTypeTests(text_selection$._TextSelectionHandlePainter);
  dart.addTypeCaches(text_selection$._TextSelectionHandlePainter);
  dart.setMethodSignature(text_selection$._TextSelectionHandlePainter, () => ({
    __proto__: dart.getMethods(text_selection$._TextSelectionHandlePainter.__proto__),
    paint: dart.fnType(dart.void, [dart.legacy(ui.Canvas), dart.legacy(ui.Size)]),
    shouldRepaint: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)])
  }));
  dart.setLibraryUri(text_selection$._TextSelectionHandlePainter, L0);
  dart.setFieldSignature(text_selection$._TextSelectionHandlePainter, () => ({
    __proto__: dart.getFields(text_selection$._TextSelectionHandlePainter.__proto__),
    color: dart.finalFieldType(dart.legacy(ui.Color))
  }));
  var C42;
  var C43;
  var C44;
  var C45;
  var C46;
  var C47;
  var C48;
  var C49;
  var C41;
  var C40;
  var C52;
  var C51;
  var C50;
  var C55;
  var C56;
  var C54;
  var C53;
  var _name = dart.privateName(text_selection, "_name");
  var C57;
  var C60;
  var C61;
  var C59;
  var C58;
  var C62;
  var C65;
  var C64;
  var C63;
  var C66;
  text_selection$._CupertinoTextSelectionControls = class _CupertinoTextSelectionControls extends text_selection.TextSelectionControls {
    getHandleSize(textLineHeight) {
      return new ui.Size.new(6 * 2, dart.notNull(textLineHeight) + 6 * 2 - 1.5);
    }
    buildToolbar(context, globalEditableRegion, textLineHeight, position, endpoints, delegate, clipboardStatus) {
      if (!dart.test(debug.debugCheckHasMediaQuery(context))) dart.assertFailed(null, L1, 465, 12, "debugCheckHasMediaQuery(context)");
      let mediaQuery = media_query.MediaQuery.of(context);
      let toolbarHeightNeeded = dart.notNull(mediaQuery.padding.top) + 8 + 43 + 8;
      let availableHeight = dart.notNull(globalEditableRegion.top) + dart.notNull(endpoints[$first].point.dy) - dart.notNull(textLineHeight);
      let isArrowPointingDown = toolbarHeightNeeded <= availableHeight;
      let arrowTipX = (dart.notNull(position.dx) + dart.notNull(globalEditableRegion.left))[$clamp](26 + dart.notNull(mediaQuery.padding.left), dart.notNull(mediaQuery.size.width) - dart.notNull(mediaQuery.padding.right) - 26);
      let localBarTopY = isArrowPointingDown ? dart.notNull(endpoints[$first].point.dy) - dart.notNull(textLineHeight) - 8 - 43 : dart.notNull(endpoints[$last].point.dy) + 8;
      return new text_selection$._CupertinoTextSelectionToolbarWrapper.new({arrowTipX: arrowTipX, barTopY: localBarTopY + dart.notNull(globalEditableRegion.top), clipboardStatus: clipboardStatus, handleCut: dart.test(this.canCut(delegate)) ? dart.fn(() => this.handleCut(delegate), VoidTovoid()) : null, handleCopy: dart.test(this.canCopy(delegate)) ? dart.fn(() => this.handleCopy(delegate, clipboardStatus), VoidTovoid()) : null, handlePaste: dart.test(this.canPaste(delegate)) ? dart.fn(() => this.handlePaste(delegate), VoidToFutureLOfvoid()) : null, handleSelectAll: dart.test(this.canSelectAll(delegate)) ? dart.fn(() => this.handleSelectAll(delegate), VoidTovoid()) : null, isArrowPointingDown: isArrowPointingDown, $creationLocationd_0dea112b090073317d4: C40 || CT.C40});
    }
    buildHandle(context, type, textLineHeight) {
      let t0;
      let desiredSize = this.getHandleSize(textLineHeight);
      let handle = new basic.SizedBox.fromSize({size: desiredSize, child: new basic.CustomPaint.new({painter: new text_selection$._TextSelectionHandlePainter.new(theme.CupertinoTheme.of(context).primaryColor), $creationLocationd_0dea112b090073317d4: C50 || CT.C50}), $creationLocationd_0dea112b090073317d4: C53 || CT.C53});
      switch (type) {
        case C57 || CT.C57:
        {
          return handle;
        }
        case C62 || CT.C62:
        {
          return new basic.Transform.new({transform: (t0 = vector_math_64.Matrix4.identity(), (() => {
              t0.translate(dart.notNull(desiredSize.width) / 2, dart.notNull(desiredSize.height) / 2);
              t0.rotateZ(3.141592653589793);
              t0.translate(-dart.notNull(desiredSize.width) / 2, -dart.notNull(desiredSize.height) / 2);
              return t0;
            })()), child: handle, $creationLocationd_0dea112b090073317d4: C58 || CT.C58});
        }
        case C66 || CT.C66:
        {
          return C63 || CT.C63;
        }
      }
      if (!(type != null)) dart.assertFailed(null, L1, 535, 12, "type != null");
      return null;
    }
    getHandleAnchor(type, textLineHeight) {
      let handleSize = this.getHandleSize(textLineHeight);
      switch (type) {
        case C57 || CT.C57:
        {
          return new ui.Offset.new(dart.notNull(handleSize.width) / 2, handleSize.height);
        }
        case C62 || CT.C62:
        {
          return new ui.Offset.new(dart.notNull(handleSize.width) / 2, dart.notNull(handleSize.height) - 2 * 6 + 1.5);
        }
        default:
        {
          return new ui.Offset.new(dart.notNull(handleSize.width) / 2, dart.notNull(textLineHeight) + (dart.notNull(handleSize.height) - dart.notNull(textLineHeight)) / 2);
        }
      }
    }
  };
  (text_selection$._CupertinoTextSelectionControls.new = function() {
    ;
  }).prototype = text_selection$._CupertinoTextSelectionControls.prototype;
  dart.addTypeTests(text_selection$._CupertinoTextSelectionControls);
  dart.addTypeCaches(text_selection$._CupertinoTextSelectionControls);
  dart.setMethodSignature(text_selection$._CupertinoTextSelectionControls, () => ({
    __proto__: dart.getMethods(text_selection$._CupertinoTextSelectionControls.__proto__),
    getHandleSize: dart.fnType(dart.legacy(ui.Size), [dart.legacy(core.double)]),
    buildToolbar: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext), dart.legacy(ui.Rect), dart.legacy(core.double), dart.legacy(ui.Offset), dart.legacy(core.List$(dart.legacy(editable.TextSelectionPoint))), dart.legacy(text_input.TextSelectionDelegate), dart.legacy(text_selection.ClipboardStatusNotifier)]),
    buildHandle: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext), dart.legacy(text_selection.TextSelectionHandleType), dart.legacy(core.double)]),
    getHandleAnchor: dart.fnType(dart.legacy(ui.Offset), [dart.legacy(text_selection.TextSelectionHandleType), dart.legacy(core.double)])
  }));
  dart.setLibraryUri(text_selection$._CupertinoTextSelectionControls, L0);
  var children$ = dart.privateName(text_selection$, "_CupertinoTextSelectionToolbarContent.children");
  var isArrowPointingDown$0 = dart.privateName(text_selection$, "_CupertinoTextSelectionToolbarContent.isArrowPointingDown");
  text_selection$._CupertinoTextSelectionToolbarContent = class _CupertinoTextSelectionToolbarContent extends framework.StatefulWidget {
    get children() {
      return this[children$];
    }
    set children(value) {
      super.children = value;
    }
    get isArrowPointingDown() {
      return this[isArrowPointingDown$0];
    }
    set isArrowPointingDown(value) {
      super.isArrowPointingDown = value;
    }
    createState() {
      return new text_selection$._CupertinoTextSelectionToolbarContentState.new();
    }
  };
  (text_selection$._CupertinoTextSelectionToolbarContent.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let children = opts && 'children' in opts ? opts.children : null;
    let isArrowPointingDown = opts && 'isArrowPointingDown' in opts ? opts.isArrowPointingDown : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[children$] = children;
    this[isArrowPointingDown$0] = isArrowPointingDown;
    if (!(children != null)) dart.assertFailed(null, L1, 576, 15, "children != null");
    if (!(dart.notNull(children[$length]) > 0)) dart.assertFailed(null, L1, 578, 15, "children.length > 0");
    text_selection$._CupertinoTextSelectionToolbarContent.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = text_selection$._CupertinoTextSelectionToolbarContent.prototype;
  dart.addTypeTests(text_selection$._CupertinoTextSelectionToolbarContent);
  dart.addTypeCaches(text_selection$._CupertinoTextSelectionToolbarContent);
  dart.setMethodSignature(text_selection$._CupertinoTextSelectionToolbarContent, () => ({
    __proto__: dart.getMethods(text_selection$._CupertinoTextSelectionToolbarContent.__proto__),
    createState: dart.fnType(dart.legacy(text_selection$._CupertinoTextSelectionToolbarContentState), [])
  }));
  dart.setLibraryUri(text_selection$._CupertinoTextSelectionToolbarContent, L0);
  dart.setFieldSignature(text_selection$._CupertinoTextSelectionToolbarContent, () => ({
    __proto__: dart.getFields(text_selection$._CupertinoTextSelectionToolbarContent.__proto__),
    children: dart.finalFieldType(dart.legacy(core.List$(dart.legacy(framework.Widget)))),
    isArrowPointingDown: dart.finalFieldType(dart.legacy(core.bool))
  }));
  var _controller = dart.privateName(text_selection$, "_controller");
  var _page = dart.privateName(text_selection$, "_page");
  var _nextPage = dart.privateName(text_selection$, "_nextPage");
  var _statusListener = dart.privateName(text_selection$, "_statusListener");
  var _handleNextPage = dart.privateName(text_selection$, "_handleNextPage");
  var _handlePreviousPage = dart.privateName(text_selection$, "_handlePreviousPage");
  var Duration__duration = dart.privateName(core, "Duration._duration");
  var C67;
  var _name$ = dart.privateName(box_border, "_name");
  var C69;
  var BoxDecoration_shape = dart.privateName(box_decoration, "BoxDecoration.shape");
  var BoxDecoration_backgroundBlendMode = dart.privateName(box_decoration, "BoxDecoration.backgroundBlendMode");
  var BoxDecoration_gradient = dart.privateName(box_decoration, "BoxDecoration.gradient");
  var BoxDecoration_boxShadow = dart.privateName(box_decoration, "BoxDecoration.boxShadow");
  var BoxDecoration_borderRadius = dart.privateName(box_decoration, "BoxDecoration.borderRadius");
  var BoxDecoration_border = dart.privateName(box_decoration, "BoxDecoration.border");
  var BoxDecoration_image = dart.privateName(box_decoration, "BoxDecoration.image");
  var C70;
  var BoxDecoration_color = dart.privateName(box_decoration, "BoxDecoration.color");
  var C68;
  var C74;
  var C75;
  var C73;
  var C72;
  var Text__applyTextScaleFactorToWidgetSpan = dart.privateName(text$, "Text._applyTextScaleFactorToWidgetSpan");
  var Text_textHeightBehavior = dart.privateName(text$, "Text.textHeightBehavior");
  var Text_textWidthBasis = dart.privateName(text$, "Text.textWidthBasis");
  var Text_semanticsLabel = dart.privateName(text$, "Text.semanticsLabel");
  var Text_maxLines = dart.privateName(text$, "Text.maxLines");
  var Text_textScaleFactor = dart.privateName(text$, "Text.textScaleFactor");
  var Text_overflow = dart.privateName(text$, "Text.overflow");
  var Text_softWrap = dart.privateName(text$, "Text.softWrap");
  var Text_locale = dart.privateName(text$, "Text.locale");
  var Text_textDirection = dart.privateName(text$, "Text.textDirection");
  var Text_textAlign = dart.privateName(text$, "Text.textAlign");
  var Text_strutStyle = dart.privateName(text$, "Text.strutStyle");
  var TextStyle_fontFeatures = dart.privateName(text_style, "TextStyle.fontFeatures");
  var TextStyle_shadows = dart.privateName(text_style, "TextStyle.shadows");
  var TextStyle_debugLabel = dart.privateName(text_style, "TextStyle.debugLabel");
  var TextStyle_decorationThickness = dart.privateName(text_style, "TextStyle.decorationThickness");
  var TextStyle_decorationStyle = dart.privateName(text_style, "TextStyle.decorationStyle");
  var TextStyle_decorationColor = dart.privateName(text_style, "TextStyle.decorationColor");
  var TextStyle_decoration = dart.privateName(text_style, "TextStyle.decoration");
  var TextStyle_background = dart.privateName(text_style, "TextStyle.background");
  var TextStyle_foreground = dart.privateName(text_style, "TextStyle.foreground");
  var TextStyle_locale = dart.privateName(text_style, "TextStyle.locale");
  var TextStyle_height = dart.privateName(text_style, "TextStyle.height");
  var TextStyle_textBaseline = dart.privateName(text_style, "TextStyle.textBaseline");
  var TextStyle_wordSpacing = dart.privateName(text_style, "TextStyle.wordSpacing");
  var TextStyle_letterSpacing = dart.privateName(text_style, "TextStyle.letterSpacing");
  var TextStyle_fontStyle = dart.privateName(text_style, "TextStyle.fontStyle");
  var FontWeight_index = dart.privateName(ui, "FontWeight.index");
  var C77;
  var TextStyle_fontWeight = dart.privateName(text_style, "TextStyle.fontWeight");
  var TextStyle_fontSize = dart.privateName(text_style, "TextStyle.fontSize");
  var TextStyle__package = dart.privateName(text_style, "TextStyle._package");
  var TextStyle__fontFamilyFallback = dart.privateName(text_style, "TextStyle._fontFamilyFallback");
  var TextStyle_fontFamily = dart.privateName(text_style, "TextStyle.fontFamily");
  var TextStyle_backgroundColor = dart.privateName(text_style, "TextStyle.backgroundColor");
  var C78;
  var TextStyle_color = dart.privateName(text_style, "TextStyle.color");
  var TextStyle_inherit = dart.privateName(text_style, "TextStyle.inherit");
  var C76;
  var Text_style = dart.privateName(text$, "Text.style");
  var Text_textSpan = dart.privateName(text$, "Text.textSpan");
  var Text_data = dart.privateName(text$, "Text.data");
  var C71;
  var C81;
  var C82;
  var C83;
  var C84;
  var C85;
  var C86;
  var C87;
  var C80;
  var C79;
  var C91;
  var C92;
  var C90;
  var C89;
  var C88;
  var C95;
  var C96;
  var C97;
  var C98;
  var C99;
  var C100;
  var C101;
  var C94;
  var C93;
  var C105;
  var C106;
  var C104;
  var C103;
  var C109;
  var CupertinoDynamicColor_darkHighContrastElevatedColor = dart.privateName(colors, "CupertinoDynamicColor.darkHighContrastElevatedColor");
  var C110;
  var CupertinoDynamicColor_highContrastElevatedColor = dart.privateName(colors, "CupertinoDynamicColor.highContrastElevatedColor");
  var CupertinoDynamicColor_darkElevatedColor = dart.privateName(colors, "CupertinoDynamicColor.darkElevatedColor");
  var CupertinoDynamicColor_elevatedColor = dart.privateName(colors, "CupertinoDynamicColor.elevatedColor");
  var CupertinoDynamicColor_darkHighContrastColor = dart.privateName(colors, "CupertinoDynamicColor.darkHighContrastColor");
  var CupertinoDynamicColor_highContrastColor = dart.privateName(colors, "CupertinoDynamicColor.highContrastColor");
  var CupertinoDynamicColor_darkColor = dart.privateName(colors, "CupertinoDynamicColor.darkColor");
  var CupertinoDynamicColor_color = dart.privateName(colors, "CupertinoDynamicColor.color");
  var CupertinoDynamicColor__debugResolveContext = dart.privateName(colors, "CupertinoDynamicColor._debugResolveContext");
  var CupertinoDynamicColor__debugLabel = dart.privateName(colors, "CupertinoDynamicColor._debugLabel");
  var CupertinoDynamicColor__effectiveColor = dart.privateName(colors, "CupertinoDynamicColor._effectiveColor");
  var C108;
  var C107;
  var C102;
  var C113;
  var C114;
  var C115;
  var C116;
  var C117;
  var C118;
  var C119;
  var C120;
  var C112;
  var C111;
  var C123;
  var C124;
  var C125;
  var C126;
  var C127;
  var C128;
  var C122;
  var C121;
  var C131;
  var C132;
  var C130;
  var C129;
  var C135;
  var C136;
  var C134;
  var C133;
  const State_TickerProviderStateMixin$36 = class State_TickerProviderStateMixin extends framework.State$(dart.legacy(text_selection$._CupertinoTextSelectionToolbarContent)) {};
  (State_TickerProviderStateMixin$36.new = function() {
    ticker_provider.TickerProviderStateMixin$(dart.legacy(text_selection$._CupertinoTextSelectionToolbarContent))[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36, ticker_provider.TickerProviderStateMixin$(dart.legacy(text_selection$._CupertinoTextSelectionToolbarContent)));
  text_selection$._CupertinoTextSelectionToolbarContentState = class _CupertinoTextSelectionToolbarContentState extends State_TickerProviderStateMixin$36 {
    [_handleNextPage]() {
      this[_controller].reverse();
      this[_controller].addStatusListener(dart.bind(this, _statusListener));
      this[_nextPage] = dart.notNull(this[_page]) + 1;
    }
    [_handlePreviousPage]() {
      this[_controller].reverse();
      this[_controller].addStatusListener(dart.bind(this, _statusListener));
      this[_nextPage] = dart.notNull(this[_page]) - 1;
    }
    [_statusListener](status) {
      if (status != animation.AnimationStatus.dismissed) {
        return;
      }
      this.setState(dart.fn(() => {
        this[_page] = this[_nextPage];
        this[_nextPage] = null;
      }, VoidToNullN()));
      this[_controller].forward();
      this[_controller].removeStatusListener(dart.bind(this, _statusListener));
    }
    initState() {
      super.initState();
      this[_controller] = new animation_controller.AnimationController.new({value: 1.0, vsync: this, duration: C67 || CT.C67});
    }
    didUpdateWidget(oldWidget) {
      _CupertinoTextSelectionToolbarContentL().as(oldWidget);
      if (!dart.equals(this.widget.children, oldWidget.children)) {
        this[_page] = 0;
        this[_nextPage] = null;
        this[_controller].forward();
        this[_controller].removeStatusListener(dart.bind(this, _statusListener));
      }
      super.didUpdateWidget(oldWidget);
    }
    dispose() {
      this[_controller].dispose();
      super.dispose();
    }
    build(context) {
      let arrowPadding = dart.test(this.widget.isArrowPointingDown) ? new edge_insets.EdgeInsets.only({bottom: text_selection$._kToolbarArrowSize.height}) : new edge_insets.EdgeInsets.only({top: text_selection$._kToolbarArrowSize.height});
      return new container.DecoratedBox.new({decoration: C68 || CT.C68, child: new transitions.FadeTransition.new({opacity: this[_controller], child: new text_selection$._CupertinoTextSelectionToolbarItems.new({page: this[_page], backButton: new button.CupertinoButton.new({borderRadius: null, color: text_selection$._kToolbarBackgroundColor, minSize: 43, onPressed: dart.bind(this, _handlePreviousPage), padding: arrowPadding, pressedOpacity: 0.7, child: C71 || CT.C71, $creationLocationd_0dea112b090073317d4: C79 || CT.C79}), dividerWidth: 1.0 / dart.notNull(media_query.MediaQuery.of(context).devicePixelRatio), nextButton: new button.CupertinoButton.new({borderRadius: null, color: text_selection$._kToolbarBackgroundColor, minSize: 43, onPressed: dart.bind(this, _handleNextPage), padding: arrowPadding, pressedOpacity: 0.7, child: C88 || CT.C88, $creationLocationd_0dea112b090073317d4: C93 || CT.C93}), nextButtonDisabled: new button.CupertinoButton.new({borderRadius: null, color: text_selection$._kToolbarBackgroundColor, disabledColor: text_selection$._kToolbarBackgroundColor, minSize: 43, onPressed: null, padding: arrowPadding, pressedOpacity: 1.0, child: C102 || CT.C102, $creationLocationd_0dea112b090073317d4: C111 || CT.C111}), children: this.widget.children, $creationLocationd_0dea112b090073317d4: C121 || CT.C121}), $creationLocationd_0dea112b090073317d4: C129 || CT.C129}), $creationLocationd_0dea112b090073317d4: C133 || CT.C133});
    }
  };
  (text_selection$._CupertinoTextSelectionToolbarContentState.new = function() {
    this[_controller] = null;
    this[_page] = 0;
    this[_nextPage] = null;
    text_selection$._CupertinoTextSelectionToolbarContentState.__proto__.new.call(this);
    ;
  }).prototype = text_selection$._CupertinoTextSelectionToolbarContentState.prototype;
  dart.addTypeTests(text_selection$._CupertinoTextSelectionToolbarContentState);
  dart.addTypeCaches(text_selection$._CupertinoTextSelectionToolbarContentState);
  dart.setMethodSignature(text_selection$._CupertinoTextSelectionToolbarContentState, () => ({
    __proto__: dart.getMethods(text_selection$._CupertinoTextSelectionToolbarContentState.__proto__),
    [_handleNextPage]: dart.fnType(dart.void, []),
    [_handlePreviousPage]: dart.fnType(dart.void, []),
    [_statusListener]: dart.fnType(dart.void, [dart.legacy(animation.AnimationStatus)]),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(text_selection$._CupertinoTextSelectionToolbarContentState, L0);
  dart.setFieldSignature(text_selection$._CupertinoTextSelectionToolbarContentState, () => ({
    __proto__: dart.getFields(text_selection$._CupertinoTextSelectionToolbarContentState.__proto__),
    [_controller]: dart.fieldType(dart.legacy(animation_controller.AnimationController)),
    [_page]: dart.fieldType(dart.legacy(core.int)),
    [_nextPage]: dart.fieldType(dart.legacy(core.int))
  }));
  text_selection$._CupertinoTextSelectionToolbarItems = class _CupertinoTextSelectionToolbarItems extends framework.RenderObjectWidget {
    createRenderObject(context) {
      return new text_selection$._CupertinoTextSelectionToolbarItemsRenderBox.new({dividerWidth: this.dividerWidth, page: this.page});
    }
    updateRenderObject(context, renderObject) {
      let t0;
      _CupertinoTextSelectionToolbarItemsRenderBoxL().as(renderObject);
      t0 = renderObject;
      (() => {
        t0.page = this.page;
        t0.dividerWidth = this.dividerWidth;
        return t0;
      })();
    }
    createElement() {
      return new text_selection$._CupertinoTextSelectionToolbarItemsElement.new(this);
    }
  };
  (text_selection$._CupertinoTextSelectionToolbarItems.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let page = opts && 'page' in opts ? opts.page : null;
    let children = opts && 'children' in opts ? opts.children : null;
    let backButton = opts && 'backButton' in opts ? opts.backButton : null;
    let dividerWidth = opts && 'dividerWidth' in opts ? opts.dividerWidth : null;
    let nextButton = opts && 'nextButton' in opts ? opts.nextButton : null;
    let nextButtonDisabled = opts && 'nextButtonDisabled' in opts ? opts.nextButtonDisabled : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this.page = page;
    this.children = children;
    this.backButton = backButton;
    this.dividerWidth = dividerWidth;
    this.nextButton = nextButton;
    this.nextButtonDisabled = nextButtonDisabled;
    if (!(children != null)) dart.assertFailed(null, L1, 708, 15, "children != null");
    if (!dart.test(children[$isNotEmpty])) dart.assertFailed(null, L1, 709, 15, "children.isNotEmpty");
    if (!(backButton != null)) dart.assertFailed(null, L1, 710, 15, "backButton != null");
    if (!(dividerWidth != null)) dart.assertFailed(null, L1, 711, 15, "dividerWidth != null");
    if (!(nextButton != null)) dart.assertFailed(null, L1, 712, 15, "nextButton != null");
    if (!(nextButtonDisabled != null)) dart.assertFailed(null, L1, 713, 15, "nextButtonDisabled != null");
    if (!(page != null)) dart.assertFailed(null, L1, 714, 15, "page != null");
    text_selection$._CupertinoTextSelectionToolbarItems.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = text_selection$._CupertinoTextSelectionToolbarItems.prototype;
  dart.addTypeTests(text_selection$._CupertinoTextSelectionToolbarItems);
  dart.addTypeCaches(text_selection$._CupertinoTextSelectionToolbarItems);
  dart.setMethodSignature(text_selection$._CupertinoTextSelectionToolbarItems, () => ({
    __proto__: dart.getMethods(text_selection$._CupertinoTextSelectionToolbarItems.__proto__),
    createRenderObject: dart.fnType(dart.legacy(text_selection$._CupertinoTextSelectionToolbarItemsRenderBox), [dart.legacy(framework.BuildContext)]),
    createElement: dart.fnType(dart.legacy(text_selection$._CupertinoTextSelectionToolbarItemsElement), [])
  }));
  dart.setLibraryUri(text_selection$._CupertinoTextSelectionToolbarItems, L0);
  dart.setFieldSignature(text_selection$._CupertinoTextSelectionToolbarItems, () => ({
    __proto__: dart.getFields(text_selection$._CupertinoTextSelectionToolbarItems.__proto__),
    backButton: dart.finalFieldType(dart.legacy(framework.Widget)),
    children: dart.finalFieldType(dart.legacy(core.List$(dart.legacy(framework.Widget)))),
    dividerWidth: dart.finalFieldType(dart.legacy(core.double)),
    nextButton: dart.finalFieldType(dart.legacy(framework.Widget)),
    nextButtonDisabled: dart.finalFieldType(dart.legacy(framework.Widget)),
    page: dart.finalFieldType(dart.legacy(core.int))
  }));
  var _children = dart.privateName(text_selection$, "_children");
  var _forgottenChildren = dart.privateName(text_selection$, "_forgottenChildren");
  var _name$0 = dart.privateName(text_selection$, "_name");
  var C137;
  var C138;
  var C139;
  var _updateRenderObject = dart.privateName(text_selection$, "_updateRenderObject");
  var _mountChild = dart.privateName(text_selection$, "_mountChild");
  text_selection$._CupertinoTextSelectionToolbarItemsElement = class _CupertinoTextSelectionToolbarItemsElement extends framework.RenderObjectElement {
    get widget() {
      return _CupertinoTextSelectionToolbarItemsL().as(super.widget);
    }
    get renderObject() {
      return _CupertinoTextSelectionToolbarItemsRenderBoxL().as(super.renderObject);
    }
    [_updateRenderObject](child, slot) {
      switch (slot) {
        case C137 || CT.C137:
        {
          this.renderObject.backButton = child;
          break;
        }
        case C138 || CT.C138:
        {
          this.renderObject.nextButton = child;
          break;
        }
        case C139 || CT.C139:
        {
          this.renderObject.nextButtonDisabled = child;
          break;
        }
      }
    }
    insertChildRenderObject(child, slot) {
      let t0, t0$;
      RenderObjectL().as(child);
      if (_CupertinoTextSelectionToolbarItemsSlotL().is(slot)) {
        if (!RenderBoxL().is(child)) dart.assertFailed(null, L1, 780, 14, "child is RenderBox");
        if (!_CupertinoTextSelectionToolbarItemsSlotL().is(slot)) dart.assertFailed(null, L1, 781, 14, "slot is _CupertinoTextSelectionToolbarItemsSlot");
        this[_updateRenderObject](RenderBoxL().as(child), slot);
        if (!dart.test(this.renderObject.childToSlot[$containsKey](child))) dart.assertFailed(null, L1, 783, 14, "renderObject.childToSlot.containsKey(child)");
        if (!dart.test(this.renderObject.slotToChild[$containsKey](slot))) dart.assertFailed(null, L1, 784, 14, "renderObject.slotToChild.containsKey(slot)");
        return;
      }
      if (IndexedSlotL().is(slot)) {
        if (!dart.test(this.renderObject.debugValidateChild(child))) dart.assertFailed(null, L1, 788, 14, "renderObject.debugValidateChild(child)");
        this.renderObject.insert(RenderBoxL().as(child), {after: RenderBoxL().as((t0$ = (t0 = slot, t0 == null ? null : t0.value), t0$ == null ? null : dart.dload(t0$, 'renderObject')))});
        return;
      }
      if (!false) dart.assertFailed("slot must be _CupertinoTextSelectionToolbarItemsSlot or IndexedSlot", L1, 792, 12, "false");
    }
    moveChildRenderObject(child, slot) {
      let t0, t0$;
      RenderObjectL().as(child);
      IndexedSlotLOfElementL().as(slot);
      if (!dart.equals(child.parent, this.renderObject)) dart.assertFailed(null, L1, 798, 12, "child.parent == renderObject");
      this.renderObject.move(RenderBoxL().as(child), {after: RenderBoxL().as((t0$ = (t0 = slot, t0 == null ? null : t0.value), t0$ == null ? null : t0$.renderObject))});
    }
    static _shouldPaint(child) {
      return ToolbarItemsParentDataL().as(child.renderObject.parentData).shouldPaint;
    }
    removeChildRenderObject(child) {
      RenderObjectL().as(child);
      if (dart.test(this.renderObject.childToSlot[$containsKey](child))) {
        if (!RenderBoxL().is(child)) dart.assertFailed(null, L1, 810, 14, "child is RenderBox");
        if (!dart.test(this.renderObject.childToSlot[$containsKey](child))) dart.assertFailed(null, L1, 811, 14, "renderObject.childToSlot.containsKey(child)");
        this[_updateRenderObject](null, this.renderObject.childToSlot[$_get](child));
        if (!!dart.test(this.renderObject.childToSlot[$containsKey](child))) dart.assertFailed(null, L1, 813, 14, "!renderObject.childToSlot.containsKey(child)");
        if (!!dart.test(this.renderObject.slotToChild[$containsKey](this.slot))) dart.assertFailed(null, L1, 814, 14, "!renderObject.slotToChild.containsKey(slot)");
        return;
      }
      if (!dart.equals(child.parent, this.renderObject)) dart.assertFailed(null, L1, 819, 12, "child.parent == renderObject");
      this.renderObject.remove(RenderBoxL().as(child));
    }
    visitChildren(visitor) {
      this.slotToChild[$values][$forEach](visitor);
      for (let child of this[_children]) {
        if (!dart.test(this[_forgottenChildren].contains(child))) visitor(child);
      }
    }
    forgetChild(child) {
      if (!(dart.test(this.slotToChild[$values][$contains](child)) || dart.test(this[_children][$contains](child)))) dart.assertFailed(null, L1, 834, 12, "slotToChild.values.contains(child) || _children.contains(child)");
      if (!!dart.test(this[_forgottenChildren].contains(child))) dart.assertFailed(null, L1, 835, 12, "!_forgottenChildren.contains(child)");
      if (dart.test(this.childToSlot[$containsKey](child))) {
        let slot = this.childToSlot[$_get](child);
        this.childToSlot[$remove](child);
        this.slotToChild[$remove](slot);
      } else {
        this[_forgottenChildren].add(child);
      }
      super.forgetChild(child);
    }
    [_mountChild](widget, slot) {
      let oldChild = this.slotToChild[$_get](slot);
      let newChild = this.updateChild(oldChild, widget, slot);
      if (oldChild != null) {
        this.slotToChild[$remove](slot);
        this.childToSlot[$remove](oldChild);
      }
      if (newChild != null) {
        this.slotToChild[$_set](slot, newChild);
        this.childToSlot[$_set](newChild, slot);
      }
    }
    mount(parent, newSlot) {
      super.mount(parent, newSlot);
      this[_mountChild](this.widget.backButton, text_selection$._CupertinoTextSelectionToolbarItemsSlot.backButton);
      this[_mountChild](this.widget.nextButton, text_selection$._CupertinoTextSelectionToolbarItemsSlot.nextButton);
      this[_mountChild](this.widget.nextButtonDisabled, text_selection$._CupertinoTextSelectionToolbarItemsSlot.nextButtonDisabled);
      this[_children] = ListOfElementL().new(this.widget.children[$length]);
      let previousChild = null;
      for (let i = 0; i < dart.notNull(this[_children][$length]); i = i + 1) {
        let newChild = this.inflateWidget(this.widget.children[$_get](i), new (IndexedSlotOfElementL()).new(i, previousChild));
        this[_children][$_set](i, newChild);
        previousChild = newChild;
      }
    }
    debugVisitOnstageChildren(visitor) {
      this.childToSlot[$forEach](dart.fn((child, _) => {
        if (!dart.test(text_selection$._CupertinoTextSelectionToolbarItemsElement._shouldPaint(child)) || dart.test(this[_forgottenChildren].contains(child))) {
          return;
        }
        visitor(child);
      }, ElementLAnd_CupertinoTextSelectionToolbarItemsSlotLToNullN()));
      this[_children][$where](dart.fn(child => !dart.test(this[_forgottenChildren].contains(child)) && dart.test(text_selection$._CupertinoTextSelectionToolbarItemsElement._shouldPaint(child)), ElementLToboolL()))[$forEach](visitor);
    }
    update(newWidget) {
      _CupertinoTextSelectionToolbarItemsL().as(newWidget);
      super.update(newWidget);
      if (!dart.equals(this.widget, newWidget)) dart.assertFailed(null, L1, 897, 12, "widget == newWidget");
      this[_mountChild](this.widget.backButton, text_selection$._CupertinoTextSelectionToolbarItemsSlot.backButton);
      this[_mountChild](this.widget.nextButton, text_selection$._CupertinoTextSelectionToolbarItemsSlot.nextButton);
      this[_mountChild](this.widget.nextButtonDisabled, text_selection$._CupertinoTextSelectionToolbarItemsSlot.nextButtonDisabled);
      this[_children] = this.updateChildren(this[_children], this.widget.children, {forgottenChildren: this[_forgottenChildren]});
      this[_forgottenChildren].clear();
    }
  };
  (text_selection$._CupertinoTextSelectionToolbarItemsElement.new = function(widget) {
    this[_children] = null;
    this.slotToChild = new (LinkedMapOf_CupertinoTextSelectionToolbarItemsSlotL$ElementL()).new();
    this.childToSlot = new (LinkedMapOfElementL$_CupertinoTextSelectionToolbarItemsSlotL()).new();
    this[_forgottenChildren] = new (_HashSetOfElementL()).new();
    text_selection$._CupertinoTextSelectionToolbarItemsElement.__proto__.new.call(this, widget);
    ;
  }).prototype = text_selection$._CupertinoTextSelectionToolbarItemsElement.prototype;
  dart.addTypeTests(text_selection$._CupertinoTextSelectionToolbarItemsElement);
  dart.addTypeCaches(text_selection$._CupertinoTextSelectionToolbarItemsElement);
  dart.setMethodSignature(text_selection$._CupertinoTextSelectionToolbarItemsElement, () => ({
    __proto__: dart.getMethods(text_selection$._CupertinoTextSelectionToolbarItemsElement.__proto__),
    [_updateRenderObject]: dart.fnType(dart.void, [dart.legacy(box.RenderBox), dart.legacy(text_selection$._CupertinoTextSelectionToolbarItemsSlot)]),
    insertChildRenderObject: dart.fnType(dart.void, [dart.legacy(core.Object), dart.legacy(core.Object)]),
    moveChildRenderObject: dart.fnType(dart.void, [dart.legacy(core.Object), dart.legacy(core.Object)]),
    removeChildRenderObject: dart.fnType(dart.void, [dart.legacy(core.Object)]),
    [_mountChild]: dart.fnType(dart.void, [dart.legacy(framework.Widget), dart.legacy(text_selection$._CupertinoTextSelectionToolbarItemsSlot)])
  }));
  dart.setGetterSignature(text_selection$._CupertinoTextSelectionToolbarItemsElement, () => ({
    __proto__: dart.getGetters(text_selection$._CupertinoTextSelectionToolbarItemsElement.__proto__),
    widget: dart.legacy(text_selection$._CupertinoTextSelectionToolbarItems),
    renderObject: dart.legacy(text_selection$._CupertinoTextSelectionToolbarItemsRenderBox)
  }));
  dart.setLibraryUri(text_selection$._CupertinoTextSelectionToolbarItemsElement, L0);
  dart.setFieldSignature(text_selection$._CupertinoTextSelectionToolbarItemsElement, () => ({
    __proto__: dart.getFields(text_selection$._CupertinoTextSelectionToolbarItemsElement.__proto__),
    [_children]: dart.fieldType(dart.legacy(core.List$(dart.legacy(framework.Element)))),
    slotToChild: dart.finalFieldType(dart.legacy(core.Map$(dart.legacy(text_selection$._CupertinoTextSelectionToolbarItemsSlot), dart.legacy(framework.Element)))),
    childToSlot: dart.finalFieldType(dart.legacy(core.Map$(dart.legacy(framework.Element), dart.legacy(text_selection$._CupertinoTextSelectionToolbarItemsSlot)))),
    [_forgottenChildren]: dart.finalFieldType(dart.legacy(core.Set$(dart.legacy(framework.Element))))
  }));
  var _backButton = dart.privateName(text_selection$, "_backButton");
  var _nextButton = dart.privateName(text_selection$, "_nextButton");
  var _nextButtonDisabled = dart.privateName(text_selection$, "_nextButtonDisabled");
  var _dividerWidth = dart.privateName(text_selection$, "_dividerWidth");
  var _updateChild = dart.privateName(text_selection$, "_updateChild");
  const RenderBox_ContainerRenderObjectMixin$36 = class RenderBox_ContainerRenderObjectMixin extends box.RenderBox {};
  (RenderBox_ContainerRenderObjectMixin$36.new = function() {
    object.ContainerRenderObjectMixin$(dart.legacy(box.RenderBox), dart.legacy(text_selection.ToolbarItemsParentData))[dart.mixinNew].call(this);
    RenderBox_ContainerRenderObjectMixin$36.__proto__.new.call(this);
  }).prototype = RenderBox_ContainerRenderObjectMixin$36.prototype;
  dart.applyMixin(RenderBox_ContainerRenderObjectMixin$36, object.ContainerRenderObjectMixin$(dart.legacy(box.RenderBox), dart.legacy(text_selection.ToolbarItemsParentData)));
  const RenderBox_RenderBoxContainerDefaultsMixin$36 = class RenderBox_RenderBoxContainerDefaultsMixin extends RenderBox_ContainerRenderObjectMixin$36 {};
  (RenderBox_RenderBoxContainerDefaultsMixin$36.new = function() {
    RenderBox_RenderBoxContainerDefaultsMixin$36.__proto__.new.call(this);
  }).prototype = RenderBox_RenderBoxContainerDefaultsMixin$36.prototype;
  dart.applyMixin(RenderBox_RenderBoxContainerDefaultsMixin$36, box.RenderBoxContainerDefaultsMixin$(dart.legacy(box.RenderBox), dart.legacy(text_selection.ToolbarItemsParentData)));
  text_selection$._CupertinoTextSelectionToolbarItemsRenderBox = class _CupertinoTextSelectionToolbarItemsRenderBox extends RenderBox_RenderBoxContainerDefaultsMixin$36 {
    [_updateChild](oldChild, newChild, slot) {
      if (oldChild != null) {
        this.dropChild(oldChild);
        this.childToSlot[$remove](oldChild);
        this.slotToChild[$remove](slot);
      }
      if (newChild != null) {
        this.childToSlot[$_set](newChild, slot);
        this.slotToChild[$_set](slot, newChild);
        this.adoptChild(newChild);
      }
      return newChild;
    }
    get page() {
      return this[_page];
    }
    set page(value) {
      if (value == this[_page]) {
        return;
      }
      this[_page] = value;
      this.markNeedsLayout();
    }
    get dividerWidth() {
      return this[_dividerWidth];
    }
    set dividerWidth(value) {
      if (value == this[_dividerWidth]) {
        return;
      }
      this[_dividerWidth] = value;
      this.markNeedsLayout();
    }
    get backButton() {
      return this[_backButton];
    }
    set backButton(value) {
      this[_backButton] = this[_updateChild](this[_backButton], value, text_selection$._CupertinoTextSelectionToolbarItemsSlot.backButton);
    }
    get nextButton() {
      return this[_nextButton];
    }
    set nextButton(value) {
      this[_nextButton] = this[_updateChild](this[_nextButton], value, text_selection$._CupertinoTextSelectionToolbarItemsSlot.nextButton);
    }
    get nextButtonDisabled() {
      return this[_nextButtonDisabled];
    }
    set nextButtonDisabled(value) {
      this[_nextButtonDisabled] = this[_updateChild](this[_nextButtonDisabled], value, text_selection$._CupertinoTextSelectionToolbarItemsSlot.nextButtonDisabled);
    }
    performLayout() {
      if (this.firstChild == null) {
        this.performResize();
        return;
      }
      this[_backButton].layout(this.constraints.loosen(), {parentUsesSize: true});
      this[_nextButton].layout(this.constraints.loosen(), {parentUsesSize: true});
      this[_nextButtonDisabled].layout(this.constraints.loosen(), {parentUsesSize: true});
      let subsequentPageButtonsWidth = dart.notNull(this[_backButton].size.width) + dart.notNull(this[_nextButton].size.width);
      let currentButtonPosition = 0.0;
      let toolbarWidth = null;
      let firstPageWidth = null;
      let currentPage = 0;
      let i = -1;
      this.visitChildren(dart.fn(renderObjectChild => {
        i = i + 1;
        let child = RenderBoxL().as(renderObjectChild);
        let childParentData = ToolbarItemsParentDataL().as(child.parentData);
        childParentData.shouldPaint = false;
        if (dart.test(this.childToSlot[$containsKey](child)) || currentPage > dart.notNull(this[_page])) {
          return;
        }
        let paginationButtonsWidth = 0.0;
        if (currentPage === 0) {
          paginationButtonsWidth = i === dart.notNull(this.childCount) - 1 ? 0.0 : this[_nextButton].size.width;
        } else {
          paginationButtonsWidth = subsequentPageButtonsWidth;
        }
        child.layout(new box.BoxConstraints.loose(new ui.Size.new(dart.notNull(currentPage === 0 ? this.constraints.maxWidth : firstPageWidth) - dart.notNull(paginationButtonsWidth), this.constraints.maxHeight)), {parentUsesSize: true});
        let currentWidth = currentButtonPosition + dart.notNull(paginationButtonsWidth) + dart.notNull(child.size.width);
        if (currentWidth > dart.notNull(this.constraints.maxWidth)) {
          currentPage = currentPage + 1;
          currentButtonPosition = dart.notNull(this[_backButton].size.width) + dart.notNull(this.dividerWidth);
          paginationButtonsWidth = dart.notNull(this[_backButton].size.width) + dart.notNull(this[_nextButton].size.width);
          child.layout(new box.BoxConstraints.loose(new ui.Size.new(dart.notNull(firstPageWidth) - dart.notNull(paginationButtonsWidth), this.constraints.maxHeight)), {parentUsesSize: true});
        }
        childParentData.offset = new ui.Offset.new(currentButtonPosition, 0.0);
        currentButtonPosition = currentButtonPosition + (dart.notNull(child.size.width) + dart.notNull(this.dividerWidth));
        childParentData.shouldPaint = currentPage === this.page;
        if (currentPage === 0) {
          firstPageWidth = currentButtonPosition + dart.notNull(this[_nextButton].size.width);
        }
        if (currentPage === this.page) {
          toolbarWidth = currentButtonPosition;
        }
      }, RenderObjectLToNullN()));
      if (!(dart.notNull(this.page) <= currentPage)) dart.assertFailed(null, L1, 1054, 12, "page <= currentPage");
      if (currentPage > 0) {
        let nextButtonParentData = ToolbarItemsParentDataL().as(this[_nextButton].parentData);
        let nextButtonDisabledParentData = ToolbarItemsParentDataL().as(this[_nextButtonDisabled].parentData);
        let backButtonParentData = ToolbarItemsParentDataL().as(this[_backButton].parentData);
        if (this.page === currentPage) {
          nextButtonDisabledParentData.offset = new ui.Offset.new(toolbarWidth, 0.0);
          nextButtonDisabledParentData.shouldPaint = true;
          toolbarWidth = dart.notNull(toolbarWidth) + dart.notNull(this.nextButtonDisabled.size.width);
        } else {
          nextButtonParentData.offset = new ui.Offset.new(toolbarWidth, 0.0);
          nextButtonParentData.shouldPaint = true;
          toolbarWidth = dart.notNull(toolbarWidth) + dart.notNull(this.nextButton.size.width);
        }
        if (dart.notNull(this.page) > 0) {
          backButtonParentData.offset = ui.Offset.zero;
          backButtonParentData.shouldPaint = true;
        }
      } else {
        toolbarWidth = dart.notNull(toolbarWidth) - dart.notNull(this.dividerWidth);
      }
      this.size = this.constraints.constrain(new ui.Size.new(toolbarWidth, 43));
    }
    paint(context, offset) {
      this.visitChildren(dart.fn(renderObjectChild => {
        let child = RenderBoxL().as(renderObjectChild);
        let childParentData = ToolbarItemsParentDataL().as(child.parentData);
        if (dart.test(childParentData.shouldPaint)) {
          let childOffset = childParentData.offset['+'](offset);
          context.paintChild(child, childOffset);
        }
      }, RenderObjectLToNullN()));
    }
    setupParentData(child) {
      RenderBoxL().as(child);
      if (!ToolbarItemsParentDataL().is(child.parentData)) {
        child.parentData = new text_selection.ToolbarItemsParentData.new();
      }
    }
    static hitTestChild(child, result, opts) {
      let position = opts && 'position' in opts ? opts.position : null;
      if (child == null) {
        return false;
      }
      let childParentData = ToolbarItemsParentDataL().as(child.parentData);
      return result.addWithPaintOffset({offset: childParentData.offset, position: position, hitTest: dart.fn((result, transformed) => {
          if (!dart.equals(transformed, position['-'](childParentData.offset))) dart.assertFailed(null, L1, 1121, 16, "transformed == position - childParentData.offset");
          return child.hitTest(result, {position: transformed});
        }, BoxHitTestResultLAndOffsetLToboolL())});
    }
    hitTestChildren(result, opts) {
      let position = opts && 'position' in opts ? opts.position : null;
      let child = this.lastChild;
      while (child != null) {
        let childParentData = ToolbarItemsParentDataL().as(child.parentData);
        if (!dart.test(childParentData.shouldPaint)) {
          child = childParentData.previousSibling;
          continue;
        }
        if (dart.test(text_selection$._CupertinoTextSelectionToolbarItemsRenderBox.hitTestChild(child, result, {position: position}))) {
          return true;
        }
        child = childParentData.previousSibling;
      }
      if (dart.test(text_selection$._CupertinoTextSelectionToolbarItemsRenderBox.hitTestChild(this.backButton, result, {position: position}))) {
        return true;
      }
      if (dart.test(text_selection$._CupertinoTextSelectionToolbarItemsRenderBox.hitTestChild(this.nextButton, result, {position: position}))) {
        return true;
      }
      if (dart.test(text_selection$._CupertinoTextSelectionToolbarItemsRenderBox.hitTestChild(this.nextButtonDisabled, result, {position: position}))) {
        return true;
      }
      return false;
    }
    attach(owner) {
      PipelineOwnerL().as(owner);
      super.attach(owner);
      this.childToSlot[$forEach](dart.fn((child, _) => {
        child.attach(owner);
      }, RenderBoxLAnd_CupertinoTextSelectionToolbarItemsSlotLToNullN()));
    }
    detach() {
      super.detach();
      this.childToSlot[$forEach](dart.fn((child, _) => {
        child.detach();
      }, RenderBoxLAnd_CupertinoTextSelectionToolbarItemsSlotLToNullN()));
    }
    redepthChildren() {
      this.visitChildren(dart.fn(renderObjectChild => {
        let child = RenderBoxL().as(renderObjectChild);
        this.redepthChild(child);
      }, RenderObjectLToNullN()));
    }
    visitChildren(visitor) {
      if (this[_backButton] != null) {
        visitor(this[_backButton]);
      }
      if (this[_nextButton] != null) {
        visitor(this[_nextButton]);
      }
      if (this[_nextButtonDisabled] != null) {
        visitor(this[_nextButtonDisabled]);
      }
      super.visitChildren(visitor);
    }
    visitChildrenForSemantics(visitor) {
      this.visitChildren(dart.fn(renderObjectChild => {
        let child = RenderBoxL().as(renderObjectChild);
        let childParentData = ToolbarItemsParentDataL().as(child.parentData);
        if (dart.test(childParentData.shouldPaint)) {
          visitor(renderObjectChild);
        }
      }, RenderObjectLToNullN()));
    }
    debugDescribeChildren() {
      let value = JSArrayOfDiagnosticsNodeL().of([]);
      this.visitChildren(dart.fn(renderObjectChild => {
        if (renderObjectChild == null) {
          return;
        }
        let child = RenderBoxL().as(renderObjectChild);
        if (dart.equals(child, this.backButton)) {
          value[$add](child.toDiagnosticsNode({name: "back button"}));
        } else if (dart.equals(child, this.nextButton)) {
          value[$add](child.toDiagnosticsNode({name: "next button"}));
        } else if (dart.equals(child, this.nextButtonDisabled)) {
          value[$add](child.toDiagnosticsNode({name: "next button disabled"}));
        } else {
          value[$add](child.toDiagnosticsNode({name: "menu item"}));
        }
      }, RenderObjectLToNullN()));
      return value;
    }
  };
  (text_selection$._CupertinoTextSelectionToolbarItemsRenderBox.new = function(opts) {
    let dividerWidth = opts && 'dividerWidth' in opts ? opts.dividerWidth : null;
    let page = opts && 'page' in opts ? opts.page : null;
    this.slotToChild = new (LinkedMapOf_CupertinoTextSelectionToolbarItemsSlotL$RenderBoxL()).new();
    this.childToSlot = new (LinkedMapOfRenderBoxL$_CupertinoTextSelectionToolbarItemsSlotL()).new();
    this[_backButton] = null;
    this[_nextButton] = null;
    this[_nextButtonDisabled] = null;
    if (!(dividerWidth != null)) dart.assertFailed(null, L1, 915, 15, "dividerWidth != null");
    if (!(page != null)) dart.assertFailed(null, L1, 916, 15, "page != null");
    this[_dividerWidth] = dividerWidth;
    this[_page] = page;
    text_selection$._CupertinoTextSelectionToolbarItemsRenderBox.__proto__.new.call(this);
    ;
  }).prototype = text_selection$._CupertinoTextSelectionToolbarItemsRenderBox.prototype;
  dart.addTypeTests(text_selection$._CupertinoTextSelectionToolbarItemsRenderBox);
  dart.addTypeCaches(text_selection$._CupertinoTextSelectionToolbarItemsRenderBox);
  dart.setMethodSignature(text_selection$._CupertinoTextSelectionToolbarItemsRenderBox, () => ({
    __proto__: dart.getMethods(text_selection$._CupertinoTextSelectionToolbarItemsRenderBox.__proto__),
    [_updateChild]: dart.fnType(dart.legacy(box.RenderBox), [dart.legacy(box.RenderBox), dart.legacy(box.RenderBox), dart.legacy(text_selection$._CupertinoTextSelectionToolbarItemsSlot)])
  }));
  dart.setGetterSignature(text_selection$._CupertinoTextSelectionToolbarItemsRenderBox, () => ({
    __proto__: dart.getGetters(text_selection$._CupertinoTextSelectionToolbarItemsRenderBox.__proto__),
    page: dart.legacy(core.int),
    dividerWidth: dart.legacy(core.double),
    backButton: dart.legacy(box.RenderBox),
    nextButton: dart.legacy(box.RenderBox),
    nextButtonDisabled: dart.legacy(box.RenderBox)
  }));
  dart.setSetterSignature(text_selection$._CupertinoTextSelectionToolbarItemsRenderBox, () => ({
    __proto__: dart.getSetters(text_selection$._CupertinoTextSelectionToolbarItemsRenderBox.__proto__),
    page: dart.legacy(core.int),
    dividerWidth: dart.legacy(core.double),
    backButton: dart.legacy(box.RenderBox),
    nextButton: dart.legacy(box.RenderBox),
    nextButtonDisabled: dart.legacy(box.RenderBox)
  }));
  dart.setLibraryUri(text_selection$._CupertinoTextSelectionToolbarItemsRenderBox, L0);
  dart.setFieldSignature(text_selection$._CupertinoTextSelectionToolbarItemsRenderBox, () => ({
    __proto__: dart.getFields(text_selection$._CupertinoTextSelectionToolbarItemsRenderBox.__proto__),
    slotToChild: dart.finalFieldType(dart.legacy(core.Map$(dart.legacy(text_selection$._CupertinoTextSelectionToolbarItemsSlot), dart.legacy(box.RenderBox)))),
    childToSlot: dart.finalFieldType(dart.legacy(core.Map$(dart.legacy(box.RenderBox), dart.legacy(text_selection$._CupertinoTextSelectionToolbarItemsSlot)))),
    [_page]: dart.fieldType(dart.legacy(core.int)),
    [_dividerWidth]: dart.fieldType(dart.legacy(core.double)),
    [_backButton]: dart.fieldType(dart.legacy(box.RenderBox)),
    [_nextButton]: dart.fieldType(dart.legacy(box.RenderBox)),
    [_nextButtonDisabled]: dart.fieldType(dart.legacy(box.RenderBox))
  }));
  var C140;
  text_selection$._CupertinoTextSelectionToolbarItemsSlot = class _CupertinoTextSelectionToolbarItemsSlot extends core.Object {
    toString() {
      return this[_name$0];
    }
  };
  (text_selection$._CupertinoTextSelectionToolbarItemsSlot.new = function(index, _name) {
    this.index = index;
    this[_name$0] = _name;
    ;
  }).prototype = text_selection$._CupertinoTextSelectionToolbarItemsSlot.prototype;
  dart.addTypeTests(text_selection$._CupertinoTextSelectionToolbarItemsSlot);
  dart.addTypeCaches(text_selection$._CupertinoTextSelectionToolbarItemsSlot);
  dart.setMethodSignature(text_selection$._CupertinoTextSelectionToolbarItemsSlot, () => ({
    __proto__: dart.getMethods(text_selection$._CupertinoTextSelectionToolbarItemsSlot.__proto__),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setLibraryUri(text_selection$._CupertinoTextSelectionToolbarItemsSlot, L0);
  dart.setFieldSignature(text_selection$._CupertinoTextSelectionToolbarItemsSlot, () => ({
    __proto__: dart.getFields(text_selection$._CupertinoTextSelectionToolbarItemsSlot.__proto__),
    index: dart.finalFieldType(dart.legacy(core.int)),
    [_name$0]: dart.finalFieldType(dart.legacy(core.String))
  }));
  dart.defineExtensionMethods(text_selection$._CupertinoTextSelectionToolbarItemsSlot, ['toString']);
  text_selection$._CupertinoTextSelectionToolbarItemsSlot.backButton = C137 || CT.C137;
  text_selection$._CupertinoTextSelectionToolbarItemsSlot.nextButton = C138 || CT.C138;
  text_selection$._CupertinoTextSelectionToolbarItemsSlot.nextButtonDisabled = C139 || CT.C139;
  text_selection$._CupertinoTextSelectionToolbarItemsSlot.values = C140 || CT.C140;
  var C141;
  var Radius_y = dart.privateName(ui, "Radius.y");
  var Radius_x = dart.privateName(ui, "Radius.x");
  var C142;
  var C143;
  var C144;
  dart.defineLazy(text_selection$, {
    /*text_selection$._kSelectionHandleOverlap*/get _kSelectionHandleOverlap() {
      return 1.5;
    },
    /*text_selection$._kSelectionHandleRadius*/get _kSelectionHandleRadius() {
      return 6;
    },
    /*text_selection$._kToolbarScreenPadding*/get _kToolbarScreenPadding() {
      return 8;
    },
    /*text_selection$._kArrowScreenPadding*/get _kArrowScreenPadding() {
      return 26;
    },
    /*text_selection$._kToolbarContentDistance*/get _kToolbarContentDistance() {
      return 8;
    },
    /*text_selection$._kToolbarHeight*/get _kToolbarHeight() {
      return 43;
    },
    /*text_selection$._kToolbarArrowSize*/get _kToolbarArrowSize() {
      return C141 || CT.C141;
    },
    /*text_selection$._kToolbarBorderRadius*/get _kToolbarBorderRadius() {
      return C142 || CT.C142;
    },
    /*text_selection$._kToolbarBackgroundColor*/get _kToolbarBackgroundColor() {
      return C143 || CT.C143;
    },
    /*text_selection$._kToolbarDividerColor*/get _kToolbarDividerColor() {
      return C70 || CT.C70;
    },
    /*text_selection$._kToolbarButtonFontStyle*/get _kToolbarButtonFontStyle() {
      return C76 || CT.C76;
    },
    /*text_selection$._kToolbarButtonDisabledFontStyle*/get _kToolbarButtonDisabledFontStyle() {
      return C107 || CT.C107;
    },
    /*text_selection$._kToolbarButtonPadding*/get _kToolbarButtonPadding() {
      return C144 || CT.C144;
    },
    /*text_selection$.cupertinoTextSelectionControls*/get cupertinoTextSelectionControls() {
      return new text_selection$._CupertinoTextSelectionControls.new();
    }
  }, true);
  dart.trackLibraries("packages/flutter/src/cupertino/text_selection.dart", {
    "package:flutter/src/cupertino/text_selection.dart": text_selection$
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["text_selection.dart"],"names":[],"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","file":"../../../../../../packages/flutter/src/cupertino/text_selection.dart.lib.js"}');
  // Exports:
  return {
    src__cupertino__text_selection: text_selection$
  };
}));

//# sourceMappingURL=text_selection.dart.lib.js.map
